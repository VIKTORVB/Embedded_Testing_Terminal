

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 11 18:03:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=3
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=3
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=3
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1
   113                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=3
   118                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=3
   123                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=3
   124                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=3
   125                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=3
   126                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text114,global,reloc=2,class=CODE,delta=1
   129                           	psect	text115,global,reloc=2,class=CODE,delta=1
   130                           	psect	text116,global,reloc=2,class=CODE,delta=1
   131                           	psect	text117,global,reloc=2,class=CODE,delta=1
   132                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=3
   133                           	psect	text119,global,reloc=2,class=CODE,delta=1
   134                           	psect	text120,global,reloc=2,class=CODE,delta=1
   135                           	psect	text121,global,reloc=2,class=CODE,delta=1
   136                           	psect	text122,global,reloc=2,class=CODE,delta=1
   137                           	psect	text123,global,reloc=2,class=CODE,delta=1
   138                           	psect	text124,global,reloc=2,class=CODE,delta=1
   139                           	psect	text125,global,reloc=2,class=CODE,delta=1
   140                           	psect	text126,global,reloc=2,class=CODE,delta=1
   141                           	psect	text127,global,reloc=2,class=CODE,delta=1
   142                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   143                           	psect	text128,global,reloc=2,class=CODE,delta=1
   144                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   145                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   146                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   147  0000                     
   148                           ; Version 2.20
   149                           ; Generated 05/05/2020 GMT
   150                           ; 
   151                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   152                           ; All rights reserved.
   153                           ; 
   154                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   155                           ; 
   156                           ; Redistribution and use in source and binary forms, with or without modification, are
   157                           ; permitted provided that the following conditions are met:
   158                           ; 
   159                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   160                           ;        conditions and the following disclaimer.
   161                           ; 
   162                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   163                           ;        of conditions and the following disclaimer in the documentation and/or other
   164                           ;        materials provided with the distribution.
   165                           ; 
   166                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   167                           ;        software without specific prior written permission.
   168                           ; 
   169                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   170                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   171                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   172                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   173                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   174                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   175                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   176                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   177                           ; 
   178                           ; 
   179                           ; Code-generator required, PIC18F47K42 Definitions
   180                           ; 
   181                           ; SFR Addresses
   182  0000                     
   183 ;; Function _SPI1_WriteBlock is unused but had its address taken
   184  0000                     
   185 ;; Function _SPI1_ReadBlock is unused but had its address taken
   186  0000                     
   187 ;; Function _SPI1_WriteByte is unused but had its address taken
   188  0000                     
   189 ;; Function _SPI1_ReadByte is unused but had its address taken
   190  0000                     
   191                           	psect	idataBANK1
   192  01A734                     __pidataBANK1:
   193                           	callstack 0
   194                           
   195                           ;initializer for _mediaInformation
   196  01A734  00                 	db	0
   197  01A735  0200               	dw	512
   198  01A737  00                 	db	0
   199  01A738  0000               	dw	0
   200  01A73A  0000               	dw	0
   201  01A73C  00                 	db	0
   202                           
   203                           ;initializer for _baudRate
   204  01A73D  0683               	dw	1667
   205  01A73F  0000               	dw	0
   206                           
   207                           ;initializer for Save_Data@F16661
   208  01A741  0D                 	db	13
   209  01A742  0A                 	db	10
   210  01A743  00                 	db	0
   211                           
   212                           ;initializer for _menu_select
   213  01A744  0001               	dw	1
   214                           
   215                           ;initializer for _menu_page
   216  01A746  0001               	dw	1
   217                           
   218                           	psect	mediumconst
   219  00FBDC                     __pmediumconst:
   220                           	callstack 0
   221  00FBDC  00                 	db	0
   222  00FBDD                     _Character_map:
   223                           	callstack 0
   224  00FBDD  00                 	db	0
   225  00FBDE  00                 	db	0
   226  00FBDF  00                 	db	0
   227  00FBE0  00                 	db	0
   228  00FBE1  00                 	db	0
   229  00FBE2  00                 	db	0
   230  00FBE3  00                 	db	0
   231  00FBE4  2F                 	db	47
   232  00FBE5  00                 	db	0
   233  00FBE6  00                 	db	0
   234  00FBE7  00                 	db	0
   235  00FBE8  07                 	db	7
   236  00FBE9  00                 	db	0
   237  00FBEA  07                 	db	7
   238  00FBEB  00                 	db	0
   239  00FBEC  14                 	db	20
   240  00FBED  7F                 	db	127
   241  00FBEE  14                 	db	20
   242  00FBEF  7F                 	db	127
   243  00FBF0  14                 	db	20
   244  00FBF1  24                 	db	36
   245  00FBF2  2A                 	db	42
   246  00FBF3  7F                 	db	127
   247  00FBF4  2A                 	db	42
   248  00FBF5  12                 	db	18
   249  00FBF6  23                 	db	35
   250  00FBF7  13                 	db	19
   251  00FBF8  08                 	db	8
   252  00FBF9  64                 	db	100
   253  00FBFA  62                 	db	98
   254  00FBFB  36                 	db	54
   255  00FBFC  49                 	db	73
   256  00FBFD  55                 	db	85
   257  00FBFE  22                 	db	34
   258  00FBFF  50                 	db	80
   259  00FC00  00                 	db	0
   260  00FC01  05                 	db	5
   261  00FC02  03                 	db	3
   262  00FC03  00                 	db	0
   263  00FC04  00                 	db	0
   264  00FC05  00                 	db	0
   265  00FC06  1C                 	db	28
   266  00FC07  22                 	db	34
   267  00FC08  41                 	db	65
   268  00FC09  00                 	db	0
   269  00FC0A  00                 	db	0
   270  00FC0B  41                 	db	65
   271  00FC0C  22                 	db	34
   272  00FC0D  1C                 	db	28
   273  00FC0E  00                 	db	0
   274  00FC0F  14                 	db	20
   275  00FC10  08                 	db	8
   276  00FC11  3E                 	db	62
   277  00FC12  08                 	db	8
   278  00FC13  14                 	db	20
   279  00FC14  08                 	db	8
   280  00FC15  08                 	db	8
   281  00FC16  3E                 	db	62
   282  00FC17  08                 	db	8
   283  00FC18  08                 	db	8
   284  00FC19  00                 	db	0
   285  00FC1A  00                 	db	0
   286  00FC1B  A0                 	db	160
   287  00FC1C  60                 	db	96
   288  00FC1D  00                 	db	0
   289  00FC1E  08                 	db	8
   290  00FC1F  08                 	db	8
   291  00FC20  08                 	db	8
   292  00FC21  08                 	db	8
   293  00FC22  08                 	db	8
   294  00FC23  00                 	db	0
   295  00FC24  60                 	db	96
   296  00FC25  60                 	db	96
   297  00FC26  00                 	db	0
   298  00FC27  00                 	db	0
   299  00FC28  20                 	db	32
   300  00FC29  10                 	db	16
   301  00FC2A  08                 	db	8
   302  00FC2B  04                 	db	4
   303  00FC2C  02                 	db	2
   304  00FC2D  3E                 	db	62
   305  00FC2E  51                 	db	81
   306  00FC2F  49                 	db	73
   307  00FC30  45                 	db	69
   308  00FC31  3E                 	db	62
   309  00FC32  00                 	db	0
   310  00FC33  42                 	db	66
   311  00FC34  7F                 	db	127
   312  00FC35  40                 	db	64
   313  00FC36  00                 	db	0
   314  00FC37  42                 	db	66
   315  00FC38  61                 	db	97
   316  00FC39  51                 	db	81
   317  00FC3A  49                 	db	73
   318  00FC3B  46                 	db	70
   319  00FC3C  21                 	db	33
   320  00FC3D  41                 	db	65
   321  00FC3E  45                 	db	69
   322  00FC3F  4B                 	db	75
   323  00FC40  31                 	db	49
   324  00FC41  18                 	db	24
   325  00FC42  14                 	db	20
   326  00FC43  12                 	db	18
   327  00FC44  7F                 	db	127
   328  00FC45  10                 	db	16
   329  00FC46  27                 	db	39
   330  00FC47  45                 	db	69
   331  00FC48  45                 	db	69
   332  00FC49  45                 	db	69
   333  00FC4A  39                 	db	57
   334  00FC4B  3C                 	db	60
   335  00FC4C  4A                 	db	74
   336  00FC4D  49                 	db	73
   337  00FC4E  49                 	db	73
   338  00FC4F  30                 	db	48
   339  00FC50  01                 	db	1
   340  00FC51  71                 	db	113
   341  00FC52  09                 	db	9
   342  00FC53  05                 	db	5
   343  00FC54  03                 	db	3
   344  00FC55  36                 	db	54
   345  00FC56  49                 	db	73
   346  00FC57  49                 	db	73
   347  00FC58  49                 	db	73
   348  00FC59  36                 	db	54
   349  00FC5A  06                 	db	6
   350  00FC5B  49                 	db	73
   351  00FC5C  49                 	db	73
   352  00FC5D  29                 	db	41
   353  00FC5E  1E                 	db	30
   354  00FC5F  00                 	db	0
   355  00FC60  36                 	db	54
   356  00FC61  36                 	db	54
   357  00FC62  00                 	db	0
   358  00FC63  00                 	db	0
   359  00FC64  00                 	db	0
   360  00FC65  56                 	db	86
   361  00FC66  36                 	db	54
   362  00FC67  00                 	db	0
   363  00FC68  00                 	db	0
   364  00FC69  08                 	db	8
   365  00FC6A  14                 	db	20
   366  00FC6B  22                 	db	34
   367  00FC6C  41                 	db	65
   368  00FC6D  00                 	db	0
   369  00FC6E  14                 	db	20
   370  00FC6F  14                 	db	20
   371  00FC70  14                 	db	20
   372  00FC71  14                 	db	20
   373  00FC72  14                 	db	20
   374  00FC73  00                 	db	0
   375  00FC74  41                 	db	65
   376  00FC75  22                 	db	34
   377  00FC76  14                 	db	20
   378  00FC77  08                 	db	8
   379  00FC78  02                 	db	2
   380  00FC79  01                 	db	1
   381  00FC7A  51                 	db	81
   382  00FC7B  09                 	db	9
   383  00FC7C  06                 	db	6
   384  00FC7D  32                 	db	50
   385  00FC7E  49                 	db	73
   386  00FC7F  59                 	db	89
   387  00FC80  51                 	db	81
   388  00FC81  3E                 	db	62
   389  00FC82  7C                 	db	124
   390  00FC83  12                 	db	18
   391  00FC84  11                 	db	17
   392  00FC85  12                 	db	18
   393  00FC86  7C                 	db	124
   394  00FC87  7F                 	db	127
   395  00FC88  49                 	db	73
   396  00FC89  49                 	db	73
   397  00FC8A  49                 	db	73
   398  00FC8B  36                 	db	54
   399  00FC8C  3E                 	db	62
   400  00FC8D  41                 	db	65
   401  00FC8E  41                 	db	65
   402  00FC8F  41                 	db	65
   403  00FC90  22                 	db	34
   404  00FC91  7F                 	db	127
   405  00FC92  41                 	db	65
   406  00FC93  41                 	db	65
   407  00FC94  22                 	db	34
   408  00FC95  1C                 	db	28
   409  00FC96  7F                 	db	127
   410  00FC97  49                 	db	73
   411  00FC98  49                 	db	73
   412  00FC99  49                 	db	73
   413  00FC9A  41                 	db	65
   414  00FC9B  7F                 	db	127
   415  00FC9C  09                 	db	9
   416  00FC9D  09                 	db	9
   417  00FC9E  09                 	db	9
   418  00FC9F  01                 	db	1
   419  00FCA0  3E                 	db	62
   420  00FCA1  41                 	db	65
   421  00FCA2  49                 	db	73
   422  00FCA3  49                 	db	73
   423  00FCA4  7A                 	db	122
   424  00FCA5  7F                 	db	127
   425  00FCA6  08                 	db	8
   426  00FCA7  08                 	db	8
   427  00FCA8  08                 	db	8
   428  00FCA9  7F                 	db	127
   429  00FCAA  00                 	db	0
   430  00FCAB  41                 	db	65
   431  00FCAC  7F                 	db	127
   432  00FCAD  41                 	db	65
   433  00FCAE  00                 	db	0
   434  00FCAF  20                 	db	32
   435  00FCB0  40                 	db	64
   436  00FCB1  41                 	db	65
   437  00FCB2  3F                 	db	63
   438  00FCB3  01                 	db	1
   439  00FCB4  7F                 	db	127
   440  00FCB5  08                 	db	8
   441  00FCB6  14                 	db	20
   442  00FCB7  22                 	db	34
   443  00FCB8  41                 	db	65
   444  00FCB9  7F                 	db	127
   445  00FCBA  40                 	db	64
   446  00FCBB  40                 	db	64
   447  00FCBC  40                 	db	64
   448  00FCBD  40                 	db	64
   449  00FCBE  7F                 	db	127
   450  00FCBF  02                 	db	2
   451  00FCC0  0C                 	db	12
   452  00FCC1  02                 	db	2
   453  00FCC2  7F                 	db	127
   454  00FCC3  7F                 	db	127
   455  00FCC4  04                 	db	4
   456  00FCC5  08                 	db	8
   457  00FCC6  10                 	db	16
   458  00FCC7  7F                 	db	127
   459  00FCC8  3E                 	db	62
   460  00FCC9  41                 	db	65
   461  00FCCA  41                 	db	65
   462  00FCCB  41                 	db	65
   463  00FCCC  3E                 	db	62
   464  00FCCD  7F                 	db	127
   465  00FCCE  09                 	db	9
   466  00FCCF  09                 	db	9
   467  00FCD0  09                 	db	9
   468  00FCD1  06                 	db	6
   469  00FCD2  3E                 	db	62
   470  00FCD3  41                 	db	65
   471  00FCD4  51                 	db	81
   472  00FCD5  21                 	db	33
   473  00FCD6  5E                 	db	94
   474  00FCD7  7F                 	db	127
   475  00FCD8  09                 	db	9
   476  00FCD9  19                 	db	25
   477  00FCDA  29                 	db	41
   478  00FCDB  46                 	db	70
   479  00FCDC  46                 	db	70
   480  00FCDD  49                 	db	73
   481  00FCDE  49                 	db	73
   482  00FCDF  49                 	db	73
   483  00FCE0  31                 	db	49
   484  00FCE1  01                 	db	1
   485  00FCE2  01                 	db	1
   486  00FCE3  7F                 	db	127
   487  00FCE4  01                 	db	1
   488  00FCE5  01                 	db	1
   489  00FCE6  3F                 	db	63
   490  00FCE7  40                 	db	64
   491  00FCE8  40                 	db	64
   492  00FCE9  40                 	db	64
   493  00FCEA  3F                 	db	63
   494  00FCEB  1F                 	db	31
   495  00FCEC  20                 	db	32
   496  00FCED  40                 	db	64
   497  00FCEE  20                 	db	32
   498  00FCEF  1F                 	db	31
   499  00FCF0  3F                 	db	63
   500  00FCF1  40                 	db	64
   501  00FCF2  38                 	db	56
   502  00FCF3  40                 	db	64
   503  00FCF4  3F                 	db	63
   504  00FCF5  63                 	db	99
   505  00FCF6  14                 	db	20
   506  00FCF7  08                 	db	8
   507  00FCF8  14                 	db	20
   508  00FCF9  63                 	db	99
   509  00FCFA  07                 	db	7
   510  00FCFB  08                 	db	8
   511  00FCFC  70                 	db	112
   512  00FCFD  08                 	db	8
   513  00FCFE  07                 	db	7
   514  00FCFF  61                 	db	97
   515  00FD00  51                 	db	81
   516  00FD01  49                 	db	73
   517  00FD02  45                 	db	69
   518  00FD03  43                 	db	67
   519  00FD04  00                 	db	0
   520  00FD05  7F                 	db	127
   521  00FD06  41                 	db	65
   522  00FD07  41                 	db	65
   523  00FD08  00                 	db	0
   524  00FD09  55                 	db	85
   525  00FD0A  AA                 	db	170
   526  00FD0B  55                 	db	85
   527  00FD0C  AA                 	db	170
   528  00FD0D  55                 	db	85
   529  00FD0E  00                 	db	0
   530  00FD0F  41                 	db	65
   531  00FD10  41                 	db	65
   532  00FD11  7F                 	db	127
   533  00FD12  00                 	db	0
   534  00FD13  04                 	db	4
   535  00FD14  02                 	db	2
   536  00FD15  01                 	db	1
   537  00FD16  02                 	db	2
   538  00FD17  04                 	db	4
   539  00FD18  40                 	db	64
   540  00FD19  40                 	db	64
   541  00FD1A  40                 	db	64
   542  00FD1B  40                 	db	64
   543  00FD1C  40                 	db	64
   544  00FD1D  00                 	db	0
   545  00FD1E  03                 	db	3
   546  00FD1F  05                 	db	5
   547  00FD20  00                 	db	0
   548  00FD21  00                 	db	0
   549  00FD22  20                 	db	32
   550  00FD23  54                 	db	84
   551  00FD24  54                 	db	84
   552  00FD25  54                 	db	84
   553  00FD26  78                 	db	120
   554  00FD27  7F                 	db	127
   555  00FD28  48                 	db	72
   556  00FD29  44                 	db	68
   557  00FD2A  44                 	db	68
   558  00FD2B  38                 	db	56
   559  00FD2C  38                 	db	56
   560  00FD2D  44                 	db	68
   561  00FD2E  44                 	db	68
   562  00FD2F  44                 	db	68
   563  00FD30  20                 	db	32
   564  00FD31  38                 	db	56
   565  00FD32  44                 	db	68
   566  00FD33  44                 	db	68
   567  00FD34  48                 	db	72
   568  00FD35  7F                 	db	127
   569  00FD36  38                 	db	56
   570  00FD37  54                 	db	84
   571  00FD38  54                 	db	84
   572  00FD39  54                 	db	84
   573  00FD3A  18                 	db	24
   574  00FD3B  08                 	db	8
   575  00FD3C  7E                 	db	126
   576  00FD3D  09                 	db	9
   577  00FD3E  01                 	db	1
   578  00FD3F  02                 	db	2
   579  00FD40  18                 	db	24
   580  00FD41  A4                 	db	164
   581  00FD42  A4                 	db	164
   582  00FD43  A4                 	db	164
   583  00FD44  7C                 	db	124
   584  00FD45  7F                 	db	127
   585  00FD46  08                 	db	8
   586  00FD47  04                 	db	4
   587  00FD48  04                 	db	4
   588  00FD49  78                 	db	120
   589  00FD4A  00                 	db	0
   590  00FD4B  44                 	db	68
   591  00FD4C  7D                 	db	125
   592  00FD4D  40                 	db	64
   593  00FD4E  00                 	db	0
   594  00FD4F  40                 	db	64
   595  00FD50  80                 	db	128
   596  00FD51  84                 	db	132
   597  00FD52  7D                 	db	125
   598  00FD53  00                 	db	0
   599  00FD54  7F                 	db	127
   600  00FD55  10                 	db	16
   601  00FD56  28                 	db	40
   602  00FD57  44                 	db	68
   603  00FD58  00                 	db	0
   604  00FD59  00                 	db	0
   605  00FD5A  41                 	db	65
   606  00FD5B  7F                 	db	127
   607  00FD5C  40                 	db	64
   608  00FD5D  00                 	db	0
   609  00FD5E  7C                 	db	124
   610  00FD5F  04                 	db	4
   611  00FD60  18                 	db	24
   612  00FD61  04                 	db	4
   613  00FD62  78                 	db	120
   614  00FD63  7C                 	db	124
   615  00FD64  08                 	db	8
   616  00FD65  04                 	db	4
   617  00FD66  04                 	db	4
   618  00FD67  78                 	db	120
   619  00FD68  38                 	db	56
   620  00FD69  44                 	db	68
   621  00FD6A  44                 	db	68
   622  00FD6B  44                 	db	68
   623  00FD6C  38                 	db	56
   624  00FD6D  FC                 	db	252
   625  00FD6E  24                 	db	36
   626  00FD6F  24                 	db	36
   627  00FD70  24                 	db	36
   628  00FD71  18                 	db	24
   629  00FD72  18                 	db	24
   630  00FD73  24                 	db	36
   631  00FD74  24                 	db	36
   632  00FD75  18                 	db	24
   633  00FD76  FC                 	db	252
   634  00FD77  7C                 	db	124
   635  00FD78  08                 	db	8
   636  00FD79  04                 	db	4
   637  00FD7A  04                 	db	4
   638  00FD7B  08                 	db	8
   639  00FD7C  48                 	db	72
   640  00FD7D  54                 	db	84
   641  00FD7E  54                 	db	84
   642  00FD7F  54                 	db	84
   643  00FD80  20                 	db	32
   644  00FD81  04                 	db	4
   645  00FD82  3F                 	db	63
   646  00FD83  44                 	db	68
   647  00FD84  40                 	db	64
   648  00FD85  20                 	db	32
   649  00FD86  3C                 	db	60
   650  00FD87  40                 	db	64
   651  00FD88  40                 	db	64
   652  00FD89  20                 	db	32
   653  00FD8A  7C                 	db	124
   654  00FD8B  1C                 	db	28
   655  00FD8C  20                 	db	32
   656  00FD8D  40                 	db	64
   657  00FD8E  20                 	db	32
   658  00FD8F  1C                 	db	28
   659  00FD90  3C                 	db	60
   660  00FD91  40                 	db	64
   661  00FD92  30                 	db	48
   662  00FD93  40                 	db	64
   663  00FD94  3C                 	db	60
   664  00FD95  44                 	db	68
   665  00FD96  28                 	db	40
   666  00FD97  10                 	db	16
   667  00FD98  28                 	db	40
   668  00FD99  44                 	db	68
   669  00FD9A  1C                 	db	28
   670  00FD9B  A0                 	db	160
   671  00FD9C  A0                 	db	160
   672  00FD9D  A0                 	db	160
   673  00FD9E  7C                 	db	124
   674  00FD9F  44                 	db	68
   675  00FDA0  64                 	db	100
   676  00FDA1  54                 	db	84
   677  00FDA2  4C                 	db	76
   678  00FDA3  44                 	db	68
   679  00FDA4  00                 	db	0
   680  00FDA5  10                 	db	16
   681  00FDA6  7C                 	db	124
   682  00FDA7  82                 	db	130
   683  00FDA8  00                 	db	0
   684  00FDA9  00                 	db	0
   685  00FDAA  00                 	db	0
   686  00FDAB  FF                 	db	255
   687  00FDAC  00                 	db	0
   688  00FDAD  00                 	db	0
   689  00FDAE  00                 	db	0
   690  00FDAF  82                 	db	130
   691  00FDB0  7C                 	db	124
   692  00FDB1  10                 	db	16
   693  00FDB2  00                 	db	0
   694  00FDB3  00                 	db	0
   695  00FDB4  06                 	db	6
   696  00FDB5  09                 	db	9
   697  00FDB6  09                 	db	9
   698  00FDB7  06                 	db	6
   699  00FDB8                     __end_of_Character_map:
   700                           	callstack 0
   701  00FDB8                     _ExCvt:
   702                           	callstack 0
   703  00FDB8  80                 	db	128
   704  00FDB9  9A                 	db	154
   705  00FDBA  45                 	db	69
   706  00FDBB  41                 	db	65
   707  00FDBC  8E                 	db	142
   708  00FDBD  41                 	db	65
   709  00FDBE  8F                 	db	143
   710  00FDBF  80                 	db	128
   711  00FDC0  45                 	db	69
   712  00FDC1  45                 	db	69
   713  00FDC2  45                 	db	69
   714  00FDC3  49                 	db	73
   715  00FDC4  49                 	db	73
   716  00FDC5  49                 	db	73
   717  00FDC6  8E                 	db	142
   718  00FDC7  8F                 	db	143
   719  00FDC8  90                 	db	144
   720  00FDC9  92                 	db	146
   721  00FDCA  92                 	db	146
   722  00FDCB  4F                 	db	79
   723  00FDCC  99                 	db	153
   724  00FDCD  4F                 	db	79
   725  00FDCE  55                 	db	85
   726  00FDCF  55                 	db	85
   727  00FDD0  59                 	db	89
   728  00FDD1  99                 	db	153
   729  00FDD2  9A                 	db	154
   730  00FDD3  9B                 	db	155
   731  00FDD4  9C                 	db	156
   732  00FDD5  9D                 	db	157
   733  00FDD6  9E                 	db	158
   734  00FDD7  9F                 	db	159
   735  00FDD8  41                 	db	65
   736  00FDD9  49                 	db	73
   737  00FDDA  4F                 	db	79
   738  00FDDB  55                 	db	85
   739  00FDDC  A5                 	db	165
   740  00FDDD  A5                 	db	165
   741  00FDDE  A6                 	db	166
   742  00FDDF  A7                 	db	167
   743  00FDE0  A8                 	db	168
   744  00FDE1  A9                 	db	169
   745  00FDE2  AA                 	db	170
   746  00FDE3  AB                 	db	171
   747  00FDE4  AC                 	db	172
   748  00FDE5  AD                 	db	173
   749  00FDE6  AE                 	db	174
   750  00FDE7  AF                 	db	175
   751  00FDE8  B0                 	db	176
   752  00FDE9  B1                 	db	177
   753  00FDEA  B2                 	db	178
   754  00FDEB  B3                 	db	179
   755  00FDEC  B4                 	db	180
   756  00FDED  B5                 	db	181
   757  00FDEE  B6                 	db	182
   758  00FDEF  B7                 	db	183
   759  00FDF0  B8                 	db	184
   760  00FDF1  B9                 	db	185
   761  00FDF2  BA                 	db	186
   762  00FDF3  BB                 	db	187
   763  00FDF4  BC                 	db	188
   764  00FDF5  BD                 	db	189
   765  00FDF6  BE                 	db	190
   766  00FDF7  BF                 	db	191
   767  00FDF8  C0                 	db	192
   768  00FDF9  C1                 	db	193
   769  00FDFA  C2                 	db	194
   770  00FDFB  C3                 	db	195
   771  00FDFC  C4                 	db	196
   772  00FDFD  C5                 	db	197
   773  00FDFE  C6                 	db	198
   774  00FDFF  C7                 	db	199
   775  00FE00  C8                 	db	200
   776  00FE01  C9                 	db	201
   777  00FE02  CA                 	db	202
   778  00FE03  CB                 	db	203
   779  00FE04  CC                 	db	204
   780  00FE05  CD                 	db	205
   781  00FE06  CE                 	db	206
   782  00FE07  CF                 	db	207
   783  00FE08  D0                 	db	208
   784  00FE09  D1                 	db	209
   785  00FE0A  D2                 	db	210
   786  00FE0B  D3                 	db	211
   787  00FE0C  D4                 	db	212
   788  00FE0D  D5                 	db	213
   789  00FE0E  D6                 	db	214
   790  00FE0F  D7                 	db	215
   791  00FE10  D8                 	db	216
   792  00FE11  D9                 	db	217
   793  00FE12  DA                 	db	218
   794  00FE13  DB                 	db	219
   795  00FE14  DC                 	db	220
   796  00FE15  DD                 	db	221
   797  00FE16  DE                 	db	222
   798  00FE17  DF                 	db	223
   799  00FE18  E0                 	db	224
   800  00FE19  E1                 	db	225
   801  00FE1A  E2                 	db	226
   802  00FE1B  E3                 	db	227
   803  00FE1C  E4                 	db	228
   804  00FE1D  E5                 	db	229
   805  00FE1E  E6                 	db	230
   806  00FE1F  E7                 	db	231
   807  00FE20  E8                 	db	232
   808  00FE21  E9                 	db	233
   809  00FE22  EA                 	db	234
   810  00FE23  EB                 	db	235
   811  00FE24  EC                 	db	236
   812  00FE25  ED                 	db	237
   813  00FE26  EE                 	db	238
   814  00FE27  EF                 	db	239
   815  00FE28  F0                 	db	240
   816  00FE29  F1                 	db	241
   817  00FE2A  F2                 	db	242
   818  00FE2B  F3                 	db	243
   819  00FE2C  F4                 	db	244
   820  00FE2D  F5                 	db	245
   821  00FE2E  F6                 	db	246
   822  00FE2F  F7                 	db	247
   823  00FE30  F8                 	db	248
   824  00FE31  F9                 	db	249
   825  00FE32  FA                 	db	250
   826  00FE33  FB                 	db	251
   827  00FE34  FC                 	db	252
   828  00FE35  FD                 	db	253
   829  00FE36  FE                 	db	254
   830  00FE37  FF                 	db	255
   831  00FE38                     __end_of_ExCvt:
   832                           	callstack 0
   833  00FE38                     _sdmmc_cmdtable:
   834                           	callstack 0
   835  00FE38  00                 	db	0
   836  00FE39  95                 	db	149
   837  00FE3A  00                 	db	0
   838  00FE3B  00                 	db	0
   839  00FE3C  01                 	db	1
   840  00FE3D  F9                 	db	249
   841  00FE3E  00                 	db	0
   842  00FE3F  00                 	db	0
   843  00FE40  08                 	db	8
   844  00FE41  87                 	db	135
   845  00FE42  04                 	db	4
   846  00FE43  00                 	db	0
   847  00FE44  09                 	db	9
   848  00FE45  AF                 	db	175
   849  00FE46  00                 	db	0
   850  00FE47  01                 	db	1
   851  00FE48  0A                 	db	10
   852  00FE49  1B                 	db	27
   853  00FE4A  00                 	db	0
   854  00FE4B  01                 	db	1
   855  00FE4C  0C                 	db	12
   856  00FE4D  C3                 	db	195
   857  00FE4E  01                 	db	1
   858  00FE4F  00                 	db	0
   859  00FE50  0D                 	db	13
   860  00FE51  AF                 	db	175
   861  00FE52  02                 	db	2
   862  00FE53  00                 	db	0
   863  00FE54  10                 	db	16
   864  00FE55  FF                 	db	255
   865  00FE56  00                 	db	0
   866  00FE57  00                 	db	0
   867  00FE58  11                 	db	17
   868  00FE59  FF                 	db	255
   869  00FE5A  00                 	db	0
   870  00FE5B  01                 	db	1
   871  00FE5C  12                 	db	18
   872  00FE5D  FF                 	db	255
   873  00FE5E  00                 	db	0
   874  00FE5F  01                 	db	1
   875  00FE60  18                 	db	24
   876  00FE61  FF                 	db	255
   877  00FE62  00                 	db	0
   878  00FE63  01                 	db	1
   879  00FE64  19                 	db	25
   880  00FE65  FF                 	db	255
   881  00FE66  00                 	db	0
   882  00FE67  01                 	db	1
   883  00FE68  20                 	db	32
   884  00FE69  FF                 	db	255
   885  00FE6A  00                 	db	0
   886  00FE6B  00                 	db	0
   887  00FE6C  21                 	db	33
   888  00FE6D  FF                 	db	255
   889  00FE6E  00                 	db	0
   890  00FE6F  00                 	db	0
   891  00FE70  26                 	db	38
   892  00FE71  DF                 	db	223
   893  00FE72  01                 	db	1
   894  00FE73  00                 	db	0
   895  00FE74  37                 	db	55
   896  00FE75  73                 	db	115
   897  00FE76  00                 	db	0
   898  00FE77  00                 	db	0
   899  00FE78  3A                 	db	58
   900  00FE79  25                 	db	37
   901  00FE7A  04                 	db	4
   902  00FE7B  00                 	db	0
   903  00FE7C  3B                 	db	59
   904  00FE7D  25                 	db	37
   905  00FE7E  00                 	db	0
   906  00FE7F  00                 	db	0
   907  00FE80  29                 	db	41
   908  00FE81  FF                 	db	255
   909  00FE82  04                 	db	4
   910  00FE83  00                 	db	0
   911  00FE84  17                 	db	23
   912  00FE85  FF                 	db	255
   913  00FE86  00                 	db	0
   914  00FE87  00                 	db	0
   915  00FE88                     __end_of_sdmmc_cmdtable:
   916                           	callstack 0
   917  00FE88                     _spiMaster:
   918                           	callstack 0
   919  00FE88  C2                 	db	low _SPI1_Close
   920  00FE89  A7                 	db	high _SPI1_Close
   921  00FE8A  01                 	db	low (_SPI1_Close shr (0+16))
   922  00FE8B  B2                 	db	low _SDFAST_open
   923  00FE8C  A7                 	db	high _SDFAST_open
   924  00FE8D  01                 	db	low (_SDFAST_open shr (0+16))
   925  00FE8E  52                 	db	low _SPI1_ExchangeByte
   926  00FE8F  A6                 	db	high _SPI1_ExchangeByte
   927  00FE90  01                 	db	low (_SPI1_ExchangeByte shr (0+16))
   928  00FE91  FE                 	db	low _SPI1_ExchangeBlock
   929  00FE92  9E                 	db	high _SPI1_ExchangeBlock
   930  00FE93  01                 	db	low (_SPI1_ExchangeBlock shr (0+16))
   931  00FE94  00                 	db	0
   932  00FE95  00                 	db	0
   933  00FE96  00                 	db	0
   934  00FE97  00                 	db	0
   935  00FE98  00                 	db	0
   936  00FE99  00                 	db	0
   937  00FE9A  00                 	db	0
   938  00FE9B  00                 	db	0
   939  00FE9C  00                 	db	0
   940  00FE9D  00                 	db	0
   941  00FE9E  00                 	db	0
   942  00FE9F  00                 	db	0
   943  00FEA0  00                 	db	0
   944  00FEA1  00                 	db	0
   945  00FEA2  00                 	db	0
   946  00FEA3  00                 	db	0
   947  00FEA4  00                 	db	0
   948  00FEA5  00                 	db	0
   949  00FEA6  C2                 	db	low _SPI1_Close
   950  00FEA7  A7                 	db	high _SPI1_Close
   951  00FEA8  01                 	db	low (_SPI1_Close shr (0+16))
   952  00FEA9  BA                 	db	low _SDSLOW_open
   953  00FEAA  A7                 	db	high _SDSLOW_open
   954  00FEAB  01                 	db	low (_SDSLOW_open shr (0+16))
   955  00FEAC  52                 	db	low _SPI1_ExchangeByte
   956  00FEAD  A6                 	db	high _SPI1_ExchangeByte
   957  00FEAE  01                 	db	low (_SPI1_ExchangeByte shr (0+16))
   958  00FEAF  FE                 	db	low _SPI1_ExchangeBlock
   959  00FEB0  9E                 	db	high _SPI1_ExchangeBlock
   960  00FEB1  01                 	db	low (_SPI1_ExchangeBlock shr (0+16))
   961  00FEB2  00                 	db	0
   962  00FEB3  00                 	db	0
   963  00FEB4  00                 	db	0
   964  00FEB5  00                 	db	0
   965  00FEB6  00                 	db	0
   966  00FEB7  00                 	db	0
   967  00FEB8  00                 	db	0
   968  00FEB9  00                 	db	0
   969  00FEBA  00                 	db	0
   970  00FEBB  00                 	db	0
   971  00FEBC  00                 	db	0
   972  00FEBD  00                 	db	0
   973  00FEBE  00                 	db	0
   974  00FEBF  00                 	db	0
   975  00FEC0  00                 	db	0
   976  00FEC1  00                 	db	0
   977  00FEC2  00                 	db	0
   978  00FEC3  00                 	db	0
   979  00FEC4                     __end_of_spiMaster:
   980                           	callstack 0
   981  00FEC4                     _spi1_configuration:
   982                           	callstack 0
   983  00FEC4  02                 	db	2
   984  00FEC5  20                 	db	32
   985  00FEC6  00                 	db	0
   986  00FEC7  4F                 	db	79
   987  00FEC8  00                 	db	0
   988  00FEC9  02                 	db	2
   989  00FECA  20                 	db	32
   990  00FECB  00                 	db	0
   991  00FECC  4F                 	db	79
   992  00FECD  00                 	db	0
   993  00FECE  02                 	db	2
   994  00FECF  20                 	db	32
   995  00FED0  00                 	db	0
   996  00FED1  03                 	db	3
   997  00FED2  00                 	db	0
   998  00FED3                     __end_of_spi1_configuration:
   999                           	callstack 0
  1000  00FED3                     _Command_map:
  1001                           	callstack 0
  1002  00FED3  00                 	db	0
  1003  00FED4  01                 	db	1
  1004  00FED5  02                 	db	2
  1005  00FED6  03                 	db	3
  1006  00FED7  04                 	db	4
  1007  00FED8  05                 	db	5
  1008  00FED9  06                 	db	6
  1009  00FEDA  07                 	db	7
  1010  00FEDB  08                 	db	8
  1011  00FEDC  09                 	db	9
  1012  00FEDD                     __end_of_Command_map:
  1013                           	callstack 0
  1014  0000                     _PIR3bits	set	14755
  1015  0000                     _PIR2bits	set	14754
  1016  0000                     _OSCTUNE	set	14814
  1017  0000                     _OSCFRQ	set	14815
  1018  0000                     _OSCEN	set	14813
  1019  0000                     _OSCCON3	set	14811
  1020  0000                     _OSCCON1	set	14809
  1021  0000                     _SPI1SDIPPS	set	15071
  1022  0000                     _U1RXPPS	set	15077
  1023  0000                     _RC5PPS	set	14869
  1024  0000                     _RC3PPS	set	14867
  1025  0000                     _SPI1SCKPPS	set	15070
  1026  0000                     _INLVLE	set	14980
  1027  0000                     _INLVLD	set	14964
  1028  0000                     _INLVLC	set	14948
  1029  0000                     _INLVLB	set	14932
  1030  0000                     _INLVLA	set	14916
  1031  0000                     _SLRCONE	set	14979
  1032  0000                     _SLRCOND	set	14963
  1033  0000                     _SLRCONC	set	14947
  1034  0000                     _SLRCONB	set	14931
  1035  0000                     _SLRCONA	set	14915
  1036  0000                     _ODCOND	set	14962
  1037  0000                     _ODCONC	set	14946
  1038  0000                     _ODCONB	set	14930
  1039  0000                     _ODCONA	set	14914
  1040  0000                     _ODCONE	set	14978
  1041  0000                     _RD1I2C	set	14971
  1042  0000                     _RD0I2C	set	14970
  1043  0000                     _RC4I2C	set	14955
  1044  0000                     _RC3I2C	set	14954
  1045  0000                     _RB2I2C	set	14939
  1046  0000                     _RB1I2C	set	14938
  1047  0000                     _WPUC	set	14945
  1048  0000                     _WPUA	set	14913
  1049  0000                     _WPUB	set	14929
  1050  0000                     _WPUE	set	14977
  1051  0000                     _WPUD	set	14961
  1052  0000                     _ANSELA	set	14912
  1053  0000                     _ANSELE	set	14976
  1054  0000                     _ANSELB	set	14928
  1055  0000                     _ANSELC	set	14944
  1056  0000                     _ANSELD	set	14960
  1057  0000                     _U1RXB	set	15848
  1058  0000                     _U1BRGH	set	15862
  1059  0000                     _U1BRGL	set	15861
  1060  0000                     _U1CON1	set	15859
  1061  0000                     _U1CON0	set	15858
  1062  0000                     _SPI1RXB	set	15632
  1063  0000                     _SPI1TXB	set	15633
  1064  0000                     _SPI1TCNTL	set	15634
  1065  0000                     _SPI1CON0bits	set	15636
  1066  0000                     _SPI1BAUD	set	15641
  1067  0000                     _SPI1CLK	set	15644
  1068  0000                     _SPI1CON2	set	15638
  1069  0000                     _SPI1CON1	set	15637
  1070  0000                     _SPI1CON0	set	15636
  1071  0000                     _PORTBbits	set	16331
  1072  0000                     _PORTD	set	16333
  1073  0000                     _PORTAbits	set	16330
  1074  0000                     _TRISCbits	set	16324
  1075  0000                     _TRISD	set	16325
  1076  0000                     _TRISC	set	16324
  1077  0000                     _TRISB	set	16323
  1078  0000                     _TRISA	set	16322
  1079  0000                     _TRISE	set	16326
  1080  0000                     _LATC	set	16316
  1081  0000                     _LATB	set	16315
  1082  0000                     _LATA	set	16314
  1083  0000                     _LATD	set	16317
  1084  0000                     _LATE	set	16318
  1085  0000                     _LATAbits	set	16314
  1086  00FEDD                     STR_1:
  1087  00FEDD  22                 	db	34
  1088  00FEDE  2A                 	db	42
  1089  00FEDF  2B                 	db	43
  1090  00FEE0  2C                 	db	44
  1091  00FEE1  3A                 	db	58	;':'
  1092  00FEE2  3B                 	db	59	;';'
  1093  00FEE3  3C                 	db	60	;'<'
  1094  00FEE4  3D                 	db	61	;'='
  1095  00FEE5  3E                 	db	62	;'>'
  1096  00FEE6  3F                 	db	63	;'?'
  1097  00FEE7  5B                 	db	91	;'['
  1098  00FEE8  5D                 	db	93	;']'
  1099  00FEE9  7C                 	db	124
  1100  00FEEA  7F                 	db	127
  1101  00FEEB  00                 	db	0
  1102  00FEEC                     STR_59:
  1103  00FEEC  44                 	db	68	;'D'
  1104  00FEED  65                 	db	101	;'e'
  1105  00FEEE  63                 	db	99	;'c'
  1106  00FEEF  69                 	db	105	;'i'
  1107  00FEF0  6D                 	db	109	;'m'
  1108  00FEF1  61                 	db	97	;'a'
  1109  00FEF2  6C                 	db	108	;'l'
  1110  00FEF3  20                 	db	32
  1111  00FEF4  52                 	db	82	;'R'
  1112  00FEF5  61                 	db	97	;'a'
  1113  00FEF6  6E                 	db	110	;'n'
  1114  00FEF7  67                 	db	103	;'g'
  1115  00FEF8  65                 	db	101	;'e'
  1116  00FEF9  00                 	db	0
  1117  00FEFA                     STR_23:
  1118  00FEFA  20                 	db	32
  1119  00FEFB  20                 	db	32
  1120  00FEFC  20                 	db	32
  1121  00FEFD  20                 	db	32
  1122  00FEFE  20                 	db	32
  1123  00FEFF  20                 	db	32
  1124  00FF00  20                 	db	32
  1125  00FF01  20                 	db	32
  1126  00FF02  20                 	db	32
  1127  00FF03  20                 	db	32
  1128  00FF04  20                 	db	32
  1129  00FF05  20                 	db	32
  1130  00FF06  00                 	db	0
  1131  00FF07                     STR_16:
  1132  00FF07  54                 	db	84	;'T'
  1133  00FF08  72                 	db	114	;'r'
  1134  00FF09  61                 	db	97	;'a'
  1135  00FF0A  6E                 	db	110	;'n'
  1136  00FF0B  73                 	db	115	;'s'
  1137  00FF0C  6D                 	db	109	;'m'
  1138  00FF0D  69                 	db	105	;'i'
  1139  00FF0E  73                 	db	115	;'s'
  1140  00FF0F  73                 	db	115	;'s'
  1141  00FF10  69                 	db	105	;'i'
  1142  00FF11  6F                 	db	111	;'o'
  1143  00FF12  6E                 	db	110	;'n'
  1144  00FF13  00                 	db	0
  1145  00FF14                     STR_73:
  1146  00FF14  55                 	db	85	;'U'
  1147  00FF15  20                 	db	32
  1148  00FF16  63                 	db	99	;'c'
  1149  00FF17  68                 	db	104	;'h'
  1150  00FF18  61                 	db	97	;'a'
  1151  00FF19  72                 	db	114	;'r'
  1152  00FF1A  61                 	db	97	;'a'
  1153  00FF1B  63                 	db	99	;'c'
  1154  00FF1C  74                 	db	116	;'t'
  1155  00FF1D  65                 	db	101	;'e'
  1156  00FF1E  72                 	db	114	;'r'
  1157  00FF1F  73                 	db	115	;'s'
  1158  00FF20  00                 	db	0
  1159  00FF21                     STR_70:
  1160  00FF21  50                 	db	80	;'P'
  1161  00FF22  6C                 	db	108	;'l'
  1162  00FF23  65                 	db	101	;'e'
  1163  00FF24  61                 	db	97	;'a'
  1164  00FF25  73                 	db	115	;'s'
  1165  00FF26  65                 	db	101	;'e'
  1166  00FF27  20                 	db	32
  1167  00FF28  73                 	db	115	;'s'
  1168  00FF29  65                 	db	101	;'e'
  1169  00FF2A  6E                 	db	110	;'n'
  1170  00FF2B  64                 	db	100	;'d'
  1171  00FF2C  00                 	db	0
  1172  00FF2D                     STR_72:
  1173  00FF2D  43                 	db	67	;'C'
  1174  00FF2E  6F                 	db	111	;'o'
  1175  00FF2F  6E                 	db	110	;'n'
  1176  00FF30  73                 	db	115	;'s'
  1177  00FF31  65                 	db	101	;'e'
  1178  00FF32  63                 	db	99	;'c'
  1179  00FF33  75                 	db	117	;'u'
  1180  00FF34  74                 	db	116	;'t'
  1181  00FF35  69                 	db	105	;'i'
  1182  00FF36  76                 	db	118	;'v'
  1183  00FF37  65                 	db	101	;'e'
  1184  00FF38  00                 	db	0
  1185  00FF39                     STR_58:
  1186  00FF39  45                 	db	69	;'E'
  1187  00FF3A  72                 	db	114	;'r'
  1188  00FF3B  72                 	db	114	;'r'
  1189  00FF3C  6F                 	db	111	;'o'
  1190  00FF3D  72                 	db	114	;'r'
  1191  00FF3E  20                 	db	32
  1192  00FF3F  43                 	db	67	;'C'
  1193  00FF40  68                 	db	104	;'h'
  1194  00FF41  65                 	db	101	;'e'
  1195  00FF42  63                 	db	99	;'c'
  1196  00FF43  6B                 	db	107	;'k'
  1197  00FF44  00                 	db	0
  1198  00FF45                     STR_68:
  1199  00FF45  53                 	db	83	;'S'
  1200  00FF46  44                 	db	68	;'D'
  1201  00FF47  20                 	db	32
  1202  00FF48  4C                 	db	76	;'L'
  1203  00FF49  6F                 	db	111	;'o'
  1204  00FF4A  67                 	db	103	;'g'
  1205  00FF4B  67                 	db	103	;'g'
  1206  00FF4C  69                 	db	105	;'i'
  1207  00FF4D  6E                 	db	110	;'n'
  1208  00FF4E  67                 	db	103	;'g'
  1209  00FF4F  00                 	db	0
  1210  00FF50                     STR_67:
  1211  00FF50  43                 	db	67	;'C'
  1212  00FF51  6F                 	db	111	;'o'
  1213  00FF52  6E                 	db	110	;'n'
  1214  00FF53  74                 	db	116	;'t'
  1215  00FF54  69                 	db	105	;'i'
  1216  00FF55  6E                 	db	110	;'n'
  1217  00FF56  75                 	db	117	;'u'
  1218  00FF57  6F                 	db	111	;'o'
  1219  00FF58  75                 	db	117	;'u'
  1220  00FF59  73                 	db	115	;'s'
  1221  00FF5A  00                 	db	0
  1222  00FF5B                     STR_31:
  1223  00FF5B  41                 	db	65	;'A'
  1224  00FF5C  75                 	db	117	;'u'
  1225  00FF5D  74                 	db	116	;'t'
  1226  00FF5E  6F                 	db	111	;'o'
  1227  00FF5F  6D                 	db	109	;'m'
  1228  00FF60  61                 	db	97	;'a'
  1229  00FF61  74                 	db	116	;'t'
  1230  00FF62  69                 	db	105	;'i'
  1231  00FF63  63                 	db	99	;'c'
  1232  00FF64  00                 	db	0
  1233  00FF65                     STR_27:
  1234  00FF65  42                 	db	66	;'B'
  1235  00FF66  61                 	db	97	;'a'
  1236  00FF67  75                 	db	117	;'u'
  1237  00FF68  64                 	db	100	;'d'
  1238  00FF69  20                 	db	32
  1239  00FF6A  72                 	db	114	;'r'
  1240  00FF6B  61                 	db	97	;'a'
  1241  00FF6C  74                 	db	116	;'t'
  1242  00FF6D  65                 	db	101	;'e'
  1243  00FF6E  00                 	db	0
  1244  00FF6F                     STR_74:
  1245  00FF6F  43                 	db	67	;'C'
  1246  00FF70  6F                 	db	111	;'o'
  1247  00FF71  6D                 	db	109	;'m'
  1248  00FF72  70                 	db	112	;'p'
  1249  00FF73  6C                 	db	108	;'l'
  1250  00FF74  65                 	db	101	;'e'
  1251  00FF75  74                 	db	116	;'t'
  1252  00FF76  65                 	db	101	;'e'
  1253  00FF77  00                 	db	0
  1254  00FF78                     STR_12:
  1255  00FF78  53                 	db	83	;'S'
  1256  00FF79  65                 	db	101	;'e'
  1257  00FF7A  74                 	db	116	;'t'
  1258  00FF7B  74                 	db	116	;'t'
  1259  00FF7C  69                 	db	105	;'i'
  1260  00FF7D  6E                 	db	110	;'n'
  1261  00FF7E  67                 	db	103	;'g'
  1262  00FF7F  73                 	db	115	;'s'
  1263  00FF80  00                 	db	0
  1264  00FF81                     STR_8:
  1265  00FF81  4C                 	db	76	;'L'
  1266  00FF82  4F                 	db	79	;'O'
  1267  00FF83  47                 	db	71	;'G'
  1268  00FF84  2E                 	db	46
  1269  00FF85  54                 	db	84	;'T'
  1270  00FF86  58                 	db	88	;'X'
  1271  00FF87  54                 	db	84	;'T'
  1272  00FF88  00                 	db	0
  1273  00FF89  43                 	db	67	;'C'
  1274  00FF8A  6F                 	db	111	;'o'
  1275  00FF8B  6D                 	db	109	;'m'
  1276  00FF8C  6D                 	db	109	;'m'
  1277  00FF8D  61                 	db	97	;'a'
  1278  00FF8E  6E                 	db	110	;'n'
  1279  00FF8F  64                 	db	100	;'d'
  1280  00FF90  00                 	db	0
  1281  00FF91                     STR_49:
  1282  00FF91  4D                 	db	77	;'M'
  1283  00FF92  69                 	db	105	;'i'
  1284  00FF93  6E                 	db	110	;'n'
  1285  00FF94  69                 	db	105	;'i'
  1286  00FF95  6D                 	db	109	;'m'
  1287  00FF96  75                 	db	117	;'u'
  1288  00FF97  6D                 	db	109	;'m'
  1289  00FF98  00                 	db	0
  1290  00FF99                     STR_46:
  1291  00FF99  4D                 	db	77	;'M'
  1292  00FF9A  61                 	db	97	;'a'
  1293  00FF9B  78                 	db	120	;'x'
  1294  00FF9C  69                 	db	105	;'i'
  1295  00FF9D  6D                 	db	109	;'m'
  1296  00FF9E  75                 	db	117	;'u'
  1297  00FF9F  6D                 	db	109	;'m'
  1298  00FFA0  00                 	db	0
  1299  00FFA1  57                 	db	87	;'W'
  1300  00FFA2  69                 	db	105	;'i'
  1301  00FFA3  74                 	db	116	;'t'
  1302  00FFA4  68                 	db	104	;'h'
  1303  00FFA5  20                 	db	32
  1304  00FFA6  61                 	db	97	;'a'
  1305  00FFA7  00                 	db	0
  1306  00FFA8  50                 	db	80	;'P'
  1307  00FFA9  6C                 	db	108	;'l'
  1308  00FFAA  65                 	db	101	;'e'
  1309  00FFAB  61                 	db	97	;'a'
  1310  00FFAC  73                 	db	115	;'s'
  1311  00FFAD  65                 	db	101	;'e'
  1312  00FFAE  00                 	db	0
  1313  00FFAF                     STR_62:
  1314  00FFAF  4C                 	db	76	;'L'
  1315  00FFB0  65                 	db	101	;'e'
  1316  00FFB1  6E                 	db	110	;'n'
  1317  00FFB2  67                 	db	103	;'g'
  1318  00FFB3  74                 	db	116	;'t'
  1319  00FFB4  68                 	db	104	;'h'
  1320  00FFB5  00                 	db	0
  1321  00FFB6                     STR_19:
  1322  00FFB6  53                 	db	83	;'S'
  1323  00FFB7  79                 	db	121	;'y'
  1324  00FFB8  73                 	db	115	;'s'
  1325  00FFB9  74                 	db	116	;'t'
  1326  00FFBA  65                 	db	101	;'e'
  1327  00FFBB  6D                 	db	109	;'m'
  1328  00FFBC  00                 	db	0
  1329  00FFBD                     STR_32:
  1330  00FFBD  43                 	db	67	;'C'
  1331  00FFBE  75                 	db	117	;'u'
  1332  00FFBF  73                 	db	115	;'s'
  1333  00FFC0  74                 	db	116	;'t'
  1334  00FFC1  6F                 	db	111	;'o'
  1335  00FFC2  6D                 	db	109	;'m'
  1336  00FFC3  00                 	db	0
  1337  00FFC4                     STR_71:
  1338  00FFC4  54                 	db	84	;'T'
  1339  00FFC5  68                 	db	104	;'h'
  1340  00FFC6  72                 	db	114	;'r'
  1341  00FFC7  65                 	db	101	;'e'
  1342  00FFC8  65                 	db	101	;'e'
  1343  00FFC9  00                 	db	0
  1344  00FFCA                     STR_13:
  1345  00FFCA  45                 	db	69	;'E'
  1346  00FFCB  72                 	db	114	;'r'
  1347  00FFCC  72                 	db	114	;'r'
  1348  00FFCD  6F                 	db	111	;'o'
  1349  00FFCE  72                 	db	114	;'r'
  1350  00FFCF  00                 	db	0
  1351  00FFD0                     STR_11:
  1352  00FFD0  53                 	db	83	;'S'
  1353  00FFD1  74                 	db	116	;'t'
  1354  00FFD2  61                 	db	97	;'a'
  1355  00FFD3  72                 	db	114	;'r'
  1356  00FFD4  74                 	db	116	;'t'
  1357  00FFD5  00                 	db	0
  1358  00FFD6                     STR_5:
  1359  00FFD6  46                 	db	70	;'F'
  1360  00FFD7  41                 	db	65	;'A'
  1361  00FFD8  54                 	db	84	;'T'
  1362  00FFD9  33                 	db	51	;'3'
  1363  00FFDA  32                 	db	50	;'2'
  1364  00FFDB  00                 	db	0
  1365  00FFDC                     STR_21:
  1366  00FFDC  55                 	db	85	;'U'
  1367  00FFDD  41                 	db	65	;'A'
  1368  00FFDE  52                 	db	82	;'R'
  1369  00FFDF  54                 	db	84	;'T'
  1370  00FFE0  00                 	db	0
  1371  00FFE1                     STR_29:
  1372  00FFE1  42                 	db	66	;'B'
  1373  00FFE2  61                 	db	97	;'a'
  1374  00FFE3  75                 	db	117	;'u'
  1375  00FFE4  64                 	db	100	;'d'
  1376  00FFE5  00                 	db	0
  1377  00FFE6                     STR_44:
  1378  00FFE6  52                 	db	82	;'R'
  1379  00FFE7  61                 	db	97	;'a'
  1380  00FFE8  74                 	db	116	;'t'
  1381  00FFE9  65                 	db	101	;'e'
  1382  00FFEA  00                 	db	0
  1383  00FFEB                     STR_10:
  1384  00FFEB  4D                 	db	77	;'M'
  1385  00FFEC  61                 	db	97	;'a'
  1386  00FFED  69                 	db	105	;'i'
  1387  00FFEE  6E                 	db	110	;'n'
  1388  00FFEF  00                 	db	0
  1389  00FFF0                     STR_9:
  1390  00FFF0  4D                 	db	77	;'M'
  1391  00FFF1  65                 	db	101	;'e'
  1392  00FFF2  6E                 	db	110	;'n'
  1393  00FFF3  75                 	db	117	;'u'
  1394  00FFF4  00                 	db	0
  1395  00FFF5                     STR_3:
  1396  00FFF5  46                 	db	70	;'F'
  1397  00FFF6  41                 	db	65	;'A'
  1398  00FFF7  54                 	db	84	;'T'
  1399  00FFF8  00                 	db	0
  1400  00FFF9                     STR_7:
  1401  00FFF9  30                 	db	48	;'0'
  1402  00FFFA  3A                 	db	58	;':'
  1403  00FFFB  00                 	db	0
  1404  00FFFC                     STR_28:
  1405  00FFFC  25                 	db	37
  1406  00FFFD  64                 	db	100	;'d'
  1407  00FFFE  00                 	db	0
  1408  00FFFF  00                 	db	0	; dummy byte at the end
  1409  0000                     
  1410                           ; #config settings
  1411                           
  1412                           	psect	cinit
  1413  01A322                     __pcinit:
  1414                           	callstack 0
  1415  01A322                     start_initialization:
  1416                           	callstack 0
  1417  01A322                     __initialization:
  1418                           	callstack 0
  1419                           
  1420                           ; Initialize objects allocated to BANK1 (20 bytes)
  1421                           ; load TBLPTR registers with __pidataBANK1
  1422  01A322  0E34               	movlw	low __pidataBANK1
  1423  01A324  6EF6               	movwf	tblptrl,c
  1424  01A326  0EA7               	movlw	high __pidataBANK1
  1425  01A328  6EF7               	movwf	tblptrh,c
  1426  01A32A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1427  01A32C  6EF8               	movwf	tblptru,c
  1428  01A32E  EE00  F1D3         	lfsr	0,__pdataBANK1
  1429  01A332  EE10 F014          	lfsr	1,20
  1430  01A336                     copy_data0:
  1431  01A336  0009               	tblrd		*+
  1432  01A338  006F FFD7 FFEE     	movff	tablat,postinc0
  1433  01A33E  50E5               	movf	postdec1,w,c
  1434  01A340  50E1               	movf	fsr1l,w,c
  1435  01A342  E1F9               	bnz	copy_data0
  1436                           
  1437                           ; Clear objects allocated to BIGRAM (1109 bytes)
  1438  01A344  EE06  F3AB         	lfsr	0,__pbssBIGRAM
  1439  01A348  EE11 F055          	lfsr	1,1109
  1440  01A34C                     clear_0:
  1441  01A34C  6AEE               	clrf	postinc0,c
  1442  01A34E  50E5               	movf	postdec1,w,c
  1443  01A350  50E1               	movf	fsr1l,w,c
  1444  01A352  E1FC               	bnz	clear_0
  1445  01A354  50E2               	movf	fsr1h,w,c
  1446  01A356  E1FA               	bnz	clear_0
  1447                           
  1448                           ; Clear objects allocated to BANK1 (130 bytes)
  1449  01A358  EE00  F100         	lfsr	0,__pbssBANK1
  1450  01A35C  0E82               	movlw	130
  1451  01A35E                     clear_1:
  1452  01A35E  6AEE               	clrf	postinc0,c
  1453  01A360  06E8               	decf	wreg,f,c
  1454  01A362  E1FD               	bnz	clear_1
  1455  01A364                     end_of_initialization:
  1456                           	callstack 0
  1457  01A364                     __end_of__initialization:
  1458                           	callstack 0
  1459  01A364  0100               	movlb	0
  1460  01A366  EFA4  F0D3         	goto	_main	;jump to C main() function
  1461                           
  1462                           	psect	bssBANK1
  1463  000100                     __pbssBANK1:
  1464                           	callstack 0
  1465  000100                     _ioInfo:
  1466                           	callstack 0
  1467  000100                     	ds	13
  1468  00010D                     _errorMin:
  1469                           	callstack 0
  1470  00010D                     	ds	4
  1471  000111                     _errorMax:
  1472                           	callstack 0
  1473  000111                     	ds	4
  1474  000115                     _length:
  1475                           	callstack 0
  1476  000115                     	ds	4
  1477  000119                     SD_SPI_AsyncWriteTasks@WriteTimeout:
  1478                           	callstack 0
  1479  000119                     	ds	4
  1480  00011D                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
  1481                           	callstack 0
  1482  00011D                     	ds	4
  1483  000121                     _nout:
  1484                           	callstack 0
  1485  000121                     	ds	2
  1486  000123                     _width:
  1487                           	callstack 0
  1488  000123                     	ds	2
  1489  000125                     _prec:
  1490                           	callstack 0
  1491  000125                     	ds	2
  1492  000127                     _flags:
  1493                           	callstack 0
  1494  000127                     	ds	2
  1495  000129                     _autoBaud:
  1496                           	callstack 0
  1497  000129                     	ds	2
  1498  00012B                     _errorCheck:
  1499                           	callstack 0
  1500  00012B                     	ds	2
  1501  00012D                     _ContinuousTransmission:
  1502                           	callstack 0
  1503  00012D                     	ds	2
  1504  00012F                     _SDlog:
  1505                           	callstack 0
  1506  00012F                     	ds	2
  1507  000131                     _commStart:
  1508                           	callstack 0
  1509  000131                     	ds	2
  1510  000133                     SD_SPI_AsyncWriteTasks@blockCounter:
  1511                           	callstack 0
  1512  000133                     	ds	2
  1513  000135                     SD_SPI_AsyncReadTasks@blockCounter:
  1514                           	callstack 0
  1515  000135                     	ds	2
  1516  000137                     _Fsid:
  1517                           	callstack 0
  1518  000137                     	ds	2
  1519  000139                     _FatFs:
  1520                           	callstack 0
  1521  000139                     	ds	2
  1522  00013B                     SD_SPI_AsyncWriteTasks@command:
  1523                           	callstack 0
  1524  00013B                     	ds	1
  1525  00013C                     SD_SPI_AsyncWriteTasks@data_byte:
  1526                           	callstack 0
  1527  00013C                     	ds	1
  1528  00013D                     SD_SPI_AsyncReadTasks@SingleBlockRead:
  1529                           	callstack 0
  1530  00013D                     	ds	1
  1531  00013E                     _CurrVol:
  1532                           	callstack 0
  1533  00013E                     	ds	1
  1534  00013F                     _dbuf:
  1535                           	callstack 0
  1536  00013F                     	ds	32
  1537  00015F                     _messageStr:
  1538                           	callstack 0
  1539  00015F                     	ds	12
  1540  00016B                     _savedMessage:
  1541                           	callstack 0
  1542  00016B                     	ds	12
  1543  000177                     _numberDisplayed:
  1544                           	callstack 0
  1545  000177                     	ds	7
  1546  00017E                     _baudRateSelect:
  1547                           	callstack 0
  1548  00017E                     	ds	4
  1549                           
  1550                           	psect	dataBANK1
  1551  0001D3                     __pdataBANK1:
  1552                           	callstack 0
  1553  0001D3                     _mediaInformation:
  1554                           	callstack 0
  1555  0001D3                     	ds	9
  1556  0001DC                     _baudRate:
  1557                           	callstack 0
  1558  0001DC                     	ds	4
  1559  0001E0                     Save_Data@F16661:
  1560                           	callstack 0
  1561  0001E0                     	ds	3
  1562  0001E3                     _menu_select:
  1563                           	callstack 0
  1564  0001E3                     	ds	2
  1565  0001E5                     _menu_page:
  1566                           	callstack 0
  1567  0001E5                     	ds	2
  1568                           
  1569                           	psect	bssBIGRAM
  1570  001BAB                     __pbssBIGRAM:
  1571                           	callstack 0
  1572  001BAB                     _drive:
  1573                           	callstack 0
  1574  001BAB                     	ds	563
  1575  001DDE                     _file:
  1576                           	callstack 0
  1577  001DDE                     	ds	546
  1578                           
  1579                           	psect	cstackBANK1
  1580  000182                     __pcstackBANK1:
  1581                           	callstack 0
  1582  000182                     f_open@dw:
  1583                           	callstack 0
  1584                           
  1585                           ; 4 bytes @ 0x0
  1586  000182                     	ds	4
  1587  000186                     f_open@sc:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x4
  1591  000186                     	ds	6
  1592  00018C                     f_open@bcs:
  1593                           	callstack 0
  1594                           
  1595                           ; 4 bytes @ 0xA
  1596  00018C                     	ds	4
  1597  000190                     f_open@cl:
  1598                           	callstack 0
  1599                           
  1600                           ; 4 bytes @ 0xE
  1601  000190                     	ds	4
  1602  000194                     f_open@ofs:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x12
  1606  000194                     	ds	4
  1607  000198                     f_open@clst:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x16
  1611  000198                     	ds	4
  1612  00019C                     f_open@fs:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x1A
  1616  00019C                     	ds	2
  1617  00019E                     f_open@res:
  1618                           	callstack 0
  1619                           
  1620                           ; 1 bytes @ 0x1C
  1621  00019E                     	ds	1
  1622  00019F                     f_open@dj:
  1623                           	callstack 0
  1624                           
  1625                           ; 40 bytes @ 0x1D
  1626  00019F                     	ds	40
  1627  0001C7                     UART_Message@i:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x45
  1631  0001C7                     	ds	2
  1632  0001C9                     UART_Message@message:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x47
  1636  0001C9                     	ds	1
  1637  0001CA                     ??_UART_Command_Mapper:
  1638                           
  1639                           ; 1 bytes @ 0x48
  1640  0001CA                     	ds	2
  1641  0001CC                     UART_Check_Command@message:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x4A
  1645  0001CC                     	ds	1
  1646  0001CD                     UART_Check_Command@i:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x4B
  1650  0001CD                     	ds	2
  1651  0001CF                     ??_Menu_Logic:
  1652                           
  1653                           ; 1 bytes @ 0x4D
  1654  0001CF                     	ds	2
  1655  0001D1                     ??_Cursor_Position:
  1656                           
  1657                           ; 1 bytes @ 0x4F
  1658  0001D1                     	ds	2
  1659                           
  1660                           	psect	cstackBANK0
  1661  000060                     __pcstackBANK0:
  1662                           	callstack 0
  1663  000060                     ??_sync_window:
  1664                           
  1665                           ; 1 bytes @ 0x0
  1666  000060                     	ds	2
  1667  000062                     sprintf@ap:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x2
  1671  000062                     	ds	2
  1672  000064                     sprintf@f:
  1673                           	callstack 0
  1674                           
  1675                           ; 6 bytes @ 0x4
  1676  000064                     	ds	6
  1677  00006A                     ?_Toggle_Select:
  1678                           	callstack 0
  1679  00006A                     Baud_Rate_Settings@autoBaudChar:
  1680                           	callstack 0
  1681  00006A                     Error_Settings@errorcheckChar:
  1682                           	callstack 0
  1683  00006A                     Transmission_Settings@ContinuousChar:
  1684                           	callstack 0
  1685  00006A                     Toggle_Select@number:
  1686                           	callstack 0
  1687  00006A                     Number_Update@number:
  1688                           	callstack 0
  1689                           
  1690                           ; 4 bytes @ 0xA
  1691  00006A                     	ds	1
  1692  00006B                     Transmission_Settings@SDloggingChar:
  1693                           	callstack 0
  1694                           
  1695                           ; 1 bytes @ 0xB
  1696  00006B                     	ds	1
  1697  00006C                     Toggle_Select@line:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0xC
  1701  00006C                     	ds	1
  1702  00006D                     ??_Toggle_Select:
  1703                           
  1704                           ; 1 bytes @ 0xD
  1705  00006D                     	ds	1
  1706  00006E                     ?_Number_Select:
  1707                           	callstack 0
  1708  00006E                     Number_Select@number:
  1709                           	callstack 0
  1710                           
  1711                           ; 4 bytes @ 0xE
  1712  00006E                     	ds	1
  1713  00006F                     Toggle_Select@Char:
  1714                           	callstack 0
  1715                           
  1716                           ; 1 bytes @ 0xF
  1717  00006F                     	ds	1
  1718  000070                     ??_sync_fs:
  1719  000070                     move_window@fs:
  1720                           	callstack 0
  1721  000070                     dir_clear@fs:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x10
  1725  000070                     	ds	2
  1726  000072                     move_window@sector:
  1727                           	callstack 0
  1728  000072                     dir_clear@clst:
  1729                           	callstack 0
  1730  000072                     Number_Select@max:
  1731                           	callstack 0
  1732                           
  1733                           ; 4 bytes @ 0x12
  1734  000072                     	ds	4
  1735  000076                     ??_Number_Select:
  1736  000076                     ?_get_fat:
  1737                           	callstack 0
  1738  000076                     get_fat@obj:
  1739                           	callstack 0
  1740  000076                     put_fat@fs:
  1741                           	callstack 0
  1742  000076                     dir_clear@ibuf:
  1743                           	callstack 0
  1744  000076                     check_fs@fs:
  1745                           	callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x16
  1748  000076                     	ds	2
  1749  000078                     f_sync@fp:
  1750                           	callstack 0
  1751  000078                     Number_Select@longPress:
  1752                           	callstack 0
  1753  000078                     get_fat@clst:
  1754                           	callstack 0
  1755  000078                     put_fat@clst:
  1756                           	callstack 0
  1757  000078                     dir_clear@sect:
  1758                           	callstack 0
  1759  000078                     check_fs@sect:
  1760                           	callstack 0
  1761                           
  1762                           ; 4 bytes @ 0x18
  1763  000078                     	ds	2
  1764  00007A                     _Baud_rate_Change$3996:
  1765                           	callstack 0
  1766                           
  1767                           ; 4 bytes @ 0x1A
  1768  00007A                     	ds	2
  1769  00007C                     ??_get_fat:
  1770  00007C                     dir_clear@szb:
  1771                           	callstack 0
  1772  00007C                     put_fat@val:
  1773                           	callstack 0
  1774                           
  1775                           ; 4 bytes @ 0x1C
  1776  00007C                     	ds	1
  1777  00007D                     find_volume@path:
  1778                           	callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x1D
  1781  00007D                     	ds	1
  1782  00007E                     f_sync@res:
  1783                           	callstack 0
  1784  00007E                     dir_clear@n:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x1E
  1788  00007E                     	ds	1
  1789  00007F                     find_volume@rfs:
  1790                           	callstack 0
  1791  00007F                     f_sync@dir:
  1792                           	callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x1F
  1795  00007F                     	ds	1
  1796  000080                     ??_put_fat:
  1797                           
  1798                           ; 1 bytes @ 0x20
  1799  000080                     	ds	1
  1800  000081                     find_volume@mode:
  1801                           	callstack 0
  1802  000081                     f_sync@fs:
  1803                           	callstack 0
  1804                           
  1805                           ; 2 bytes @ 0x21
  1806  000081                     	ds	1
  1807  000082                     ??_find_volume:
  1808                           
  1809                           ; 1 bytes @ 0x22
  1810  000082                     	ds	1
  1811  000083                     f_close@fp:
  1812                           	callstack 0
  1813                           
  1814                           ; 2 bytes @ 0x23
  1815  000083                     	ds	2
  1816  000085                     _get_fat$427:
  1817                           	callstack 0
  1818  000085                     f_close@fs:
  1819                           	callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x25
  1822  000085                     	ds	2
  1823  000087                     f_close@res:
  1824                           	callstack 0
  1825  000087                     get_fat@val:
  1826                           	callstack 0
  1827                           
  1828                           ; 4 bytes @ 0x27
  1829  000087                     	ds	3
  1830  00008A                     find_volume@br:
  1831                           	callstack 0
  1832                           
  1833                           ; 16 bytes @ 0x2A
  1834  00008A                     	ds	1
  1835  00008B                     get_fat@wc:
  1836                           	callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x2B
  1839  00008B                     	ds	2
  1840  00008D                     get_fat@bc:
  1841                           	callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x2D
  1844  00008D                     	ds	1
  1845  00008E                     _put_fat$456:
  1846                           	callstack 0
  1847                           
  1848                           ; 2 bytes @ 0x2E
  1849  00008E                     	ds	1
  1850  00008F                     get_fat@fs:
  1851                           	callstack 0
  1852                           
  1853                           ; 2 bytes @ 0x2F
  1854  00008F                     	ds	1
  1855  000090                     _put_fat$457:
  1856                           	callstack 0
  1857                           
  1858                           ; 2 bytes @ 0x30
  1859  000090                     	ds	1
  1860  000091                     dir_sdi@dp:
  1861                           	callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x31
  1864  000091                     	ds	1
  1865  000092                     put_fat@p:
  1866                           	callstack 0
  1867                           
  1868                           ; 2 bytes @ 0x32
  1869  000092                     	ds	1
  1870  000093                     dir_sdi@ofs:
  1871                           	callstack 0
  1872                           
  1873                           ; 4 bytes @ 0x33
  1874  000093                     	ds	1
  1875  000094                     put_fat@bc:
  1876                           	callstack 0
  1877                           
  1878                           ; 2 bytes @ 0x34
  1879  000094                     	ds	2
  1880  000096                     put_fat@res:
  1881                           	callstack 0
  1882                           
  1883                           ; 1 bytes @ 0x36
  1884  000096                     	ds	1
  1885  000097                     ??_dir_sdi:
  1886  000097                     ?_create_chain:
  1887                           	callstack 0
  1888  000097                     remove_chain@obj:
  1889                           	callstack 0
  1890  000097                     create_chain@obj:
  1891                           	callstack 0
  1892                           
  1893                           ; 2 bytes @ 0x37
  1894  000097                     	ds	2
  1895  000099                     remove_chain@clst:
  1896                           	callstack 0
  1897  000099                     create_chain@clst:
  1898                           	callstack 0
  1899                           
  1900                           ; 4 bytes @ 0x39
  1901  000099                     	ds	1
  1902  00009A                     _find_volume$947:
  1903                           	callstack 0
  1904                           
  1905                           ; 4 bytes @ 0x3A
  1906  00009A                     	ds	3
  1907  00009D                     ??_create_chain:
  1908  00009D                     remove_chain@pclst:
  1909                           	callstack 0
  1910                           
  1911                           ; 4 bytes @ 0x3D
  1912  00009D                     	ds	1
  1913  00009E                     _find_volume$948:
  1914                           	callstack 0
  1915                           
  1916                           ; 2 bytes @ 0x3E
  1917  00009E                     	ds	2
  1918  0000A0                     find_volume@szbfat:
  1919                           	callstack 0
  1920                           
  1921                           ; 4 bytes @ 0x40
  1922  0000A0                     	ds	1
  1923  0000A1                     ??_remove_chain:
  1924                           
  1925                           ; 1 bytes @ 0x41
  1926  0000A1                     	ds	3
  1927  0000A4                     find_volume@pt:
  1928                           	callstack 0
  1929                           
  1930                           ; 2 bytes @ 0x44
  1931  0000A4                     	ds	1
  1932  0000A5                     create_chain@res:
  1933                           	callstack 0
  1934  0000A5                     dir_sdi@csz:
  1935                           	callstack 0
  1936                           
  1937                           ; 4 bytes @ 0x45
  1938  0000A5                     	ds	1
  1939  0000A6                     create_chain@scl:
  1940                           	callstack 0
  1941  0000A6                     find_volume@sysect:
  1942                           	callstack 0
  1943                           
  1944                           ; 4 bytes @ 0x46
  1945  0000A6                     	ds	3
  1946  0000A9                     remove_chain@nxt:
  1947                           	callstack 0
  1948  0000A9                     dir_sdi@clst:
  1949                           	callstack 0
  1950                           
  1951                           ; 4 bytes @ 0x49
  1952  0000A9                     	ds	1
  1953  0000AA                     find_volume@vol:
  1954                           	callstack 0
  1955  0000AA                     create_chain@ncl:
  1956                           	callstack 0
  1957                           
  1958                           ; 4 bytes @ 0x4A
  1959  0000AA                     	ds	2
  1960  0000AC                     find_volume@nrsv:
  1961                           	callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x4C
  1964  0000AC                     	ds	1
  1965  0000AD                     remove_chain@res:
  1966                           	callstack 0
  1967  0000AD                     dir_sdi@fs:
  1968                           	callstack 0
  1969                           
  1970                           ; 2 bytes @ 0x4D
  1971  0000AD                     	ds	1
  1972  0000AE                     remove_chain@fs:
  1973                           	callstack 0
  1974  0000AE                     create_chain@fs:
  1975                           	callstack 0
  1976  0000AE                     find_volume@tsect:
  1977                           	callstack 0
  1978                           
  1979                           ; 4 bytes @ 0x4E
  1980  0000AE                     	ds	2
  1981  0000B0                     create_chain@cs:
  1982                           	callstack 0
  1983                           
  1984                           ; 4 bytes @ 0x50
  1985  0000B0                     	ds	2
  1986  0000B2                     find_volume@stat:
  1987                           	callstack 0
  1988                           
  1989                           ; 1 bytes @ 0x52
  1990  0000B2                     	ds	1
  1991  0000B3                     find_volume@nclst:
  1992                           	callstack 0
  1993                           
  1994                           ; 4 bytes @ 0x53
  1995  0000B3                     	ds	1
  1996  0000B4                     dir_next@dp:
  1997                           	callstack 0
  1998  0000B4                     f_write@fp:
  1999                           	callstack 0
  2000                           
  2001                           ; 2 bytes @ 0x54
  2002  0000B4                     	ds	2
  2003  0000B6                     dir_next@stretch:
  2004                           	callstack 0
  2005  0000B6                     f_write@buff:
  2006                           	callstack 0
  2007                           
  2008                           ; 2 bytes @ 0x56
  2009  0000B6                     	ds	1
  2010  0000B7                     find_volume@fasize:
  2011                           	callstack 0
  2012                           
  2013                           ; 4 bytes @ 0x57
  2014  0000B7                     	ds	1
  2015  0000B8                     ??_dir_next:
  2016  0000B8                     f_write@btw:
  2017                           	callstack 0
  2018                           
  2019                           ; 2 bytes @ 0x58
  2020  0000B8                     	ds	2
  2021  0000BA                     f_write@bw:
  2022                           	callstack 0
  2023                           
  2024                           ; 2 bytes @ 0x5A
  2025  0000BA                     	ds	1
  2026  0000BB                     find_volume@bsect:
  2027                           	callstack 0
  2028                           
  2029                           ; 4 bytes @ 0x5B
  2030  0000BB                     	ds	1
  2031  0000BC                     ??_f_write:
  2032                           
  2033                           ; 1 bytes @ 0x5C
  2034  0000BC                     	ds	3
  2035  0000BF                     find_volume@i:
  2036                           	callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x5F
  2039  0000BF                     	ds	2
  2040  0000C1                     find_volume@fmt:
  2041                           	callstack 0
  2042                           
  2043                           ; 1 bytes @ 0x61
  2044  0000C1                     	ds	1
  2045  0000C2                     find_volume@fs:
  2046                           	callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x62
  2049  0000C2                     	ds	2
  2050  0000C4                     f_mount@fs:
  2051                           	callstack 0
  2052                           
  2053                           ; 2 bytes @ 0x64
  2054  0000C4                     	ds	2
  2055  0000C6                     f_mount@path:
  2056                           	callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x66
  2059  0000C6                     	ds	2
  2060  0000C8                     f_mount@opt:
  2061                           	callstack 0
  2062  0000C8                     dir_next@ofs:
  2063                           	callstack 0
  2064  0000C8                     _f_write$1263:
  2065                           	callstack 0
  2066                           
  2067                           ; 4 bytes @ 0x68
  2068  0000C8                     	ds	1
  2069  0000C9                     f_mount@res:
  2070                           	callstack 0
  2071                           
  2072                           ; 1 bytes @ 0x69
  2073  0000C9                     	ds	1
  2074  0000CA                     f_mount@rp:
  2075                           	callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x6A
  2078  0000CA                     	ds	2
  2079  0000CC                     f_write@res:
  2080                           	callstack 0
  2081  0000CC                     dir_next@fs:
  2082                           	callstack 0
  2083  0000CC                     f_mount@cfs:
  2084                           	callstack 0
  2085                           
  2086                           ; 2 bytes @ 0x6C
  2087  0000CC                     	ds	1
  2088  0000CD                     f_write@wbuff:
  2089                           	callstack 0
  2090                           
  2091                           ; 2 bytes @ 0x6D
  2092  0000CD                     	ds	1
  2093  0000CE                     f_mount@vol:
  2094                           	callstack 0
  2095  0000CE                     dir_next@clst:
  2096                           	callstack 0
  2097                           
  2098                           ; 4 bytes @ 0x6E
  2099  0000CE                     	ds	1
  2100  0000CF                     f_write@csect:
  2101                           	callstack 0
  2102                           
  2103                           ; 2 bytes @ 0x6F
  2104  0000CF                     	ds	2
  2105  0000D1                     f_write@cc:
  2106                           	callstack 0
  2107                           
  2108                           ; 2 bytes @ 0x71
  2109  0000D1                     	ds	1
  2110  0000D2                     dir_alloc@dp:
  2111                           	callstack 0
  2112  0000D2                     dir_find@dp:
  2113                           	callstack 0
  2114                           
  2115                           ; 2 bytes @ 0x72
  2116  0000D2                     	ds	1
  2117  0000D3                     f_write@sect:
  2118                           	callstack 0
  2119                           
  2120                           ; 4 bytes @ 0x73
  2121  0000D3                     	ds	1
  2122  0000D4                     ??_dir_find:
  2123  0000D4                     dir_alloc@nent:
  2124                           	callstack 0
  2125                           
  2126                           ; 2 bytes @ 0x74
  2127  0000D4                     	ds	2
  2128  0000D6                     ??_dir_alloc:
  2129  0000D6                     dir_find@fs:
  2130                           	callstack 0
  2131                           
  2132                           ; 2 bytes @ 0x76
  2133  0000D6                     	ds	1
  2134  0000D7                     f_write@clst:
  2135                           	callstack 0
  2136                           
  2137                           ; 4 bytes @ 0x77
  2138  0000D7                     	ds	1
  2139  0000D8                     dir_find@c:
  2140                           	callstack 0
  2141                           
  2142                           ; 1 bytes @ 0x78
  2143  0000D8                     	ds	1
  2144  0000D9                     dir_find@res:
  2145                           	callstack 0
  2146  0000D9                     dir_alloc@fs:
  2147                           	callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x79
  2150  0000D9                     	ds	1
  2151  0000DA                     follow_path@dp:
  2152                           	callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x7A
  2155  0000DA                     	ds	1
  2156  0000DB                     dir_alloc@n:
  2157                           	callstack 0
  2158  0000DB                     f_write@wcnt:
  2159                           	callstack 0
  2160                           
  2161                           ; 2 bytes @ 0x7B
  2162  0000DB                     	ds	1
  2163  0000DC                     follow_path@path:
  2164                           	callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x7C
  2167  0000DC                     	ds	1
  2168  0000DD                     dir_alloc@res:
  2169                           	callstack 0
  2170  0000DD                     f_write@fs:
  2171                           	callstack 0
  2172                           
  2173                           ; 2 bytes @ 0x7D
  2174  0000DD                     	ds	1
  2175  0000DE                     ??_follow_path:
  2176  0000DE                     dir_register@dp:
  2177                           	callstack 0
  2178                           
  2179                           ; 2 bytes @ 0x7E
  2180  0000DE                     	ds	2
  2181  0000E0                     dir_register@fs:
  2182                           	callstack 0
  2183                           
  2184                           ; 2 bytes @ 0x80
  2185  0000E0                     	ds	2
  2186  0000E2                     dir_register@res:
  2187                           	callstack 0
  2188                           
  2189                           ; 1 bytes @ 0x82
  2190  0000E2                     	ds	2
  2191  0000E4                     follow_path@fs:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x84
  2195  0000E4                     	ds	2
  2196  0000E6                     follow_path@ns:
  2197                           	callstack 0
  2198                           
  2199                           ; 1 bytes @ 0x86
  2200  0000E6                     	ds	1
  2201  0000E7                     follow_path@res:
  2202                           	callstack 0
  2203                           
  2204                           ; 1 bytes @ 0x87
  2205  0000E7                     	ds	1
  2206  0000E8                     f_open@fp:
  2207                           	callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x88
  2210  0000E8                     	ds	2
  2211  0000EA                     f_open@path:
  2212                           	callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x8A
  2215  0000EA                     	ds	2
  2216  0000EC                     f_open@mode:
  2217                           	callstack 0
  2218                           
  2219                           ; 1 bytes @ 0x8C
  2220  0000EC                     	ds	1
  2221  0000ED                     ??_f_open:
  2222                           
  2223                           ; 1 bytes @ 0x8D
  2224  0000ED                     	ds	8
  2225  0000F5                     Save_Data@newLine:
  2226                           	callstack 0
  2227                           
  2228                           ; 3 bytes @ 0x95
  2229  0000F5                     	ds	3
  2230  0000F8                     Save_Data@actualLength:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0x98
  2234  0000F8                     	ds	2
  2235  0000FA                     ??_UART_Message:
  2236                           
  2237                           ; 1 bytes @ 0x9A
  2238  0000FA                     	ds	5
  2239  0000FF                     UART_Command_Mapper@message:
  2240                           	callstack 0
  2241  0000FF                     UART_Print@line:
  2242                           	callstack 0
  2243                           
  2244                           ; 1 bytes @ 0x9F
  2245  0000FF                     	ds	1
  2246                           
  2247                           	psect	cstackCOMRAM
  2248  000001                     __pcstackCOMRAM:
  2249                           	callstack 0
  2250  000001                     ??_SPI1_Open:
  2251  000001                     ??_disk_status:
  2252  000001                     ??_UART_Message_Lenght:
  2253  000001                     ?_strlen:
  2254                           	callstack 0
  2255  000001                     ?_isspace:
  2256                           	callstack 0
  2257  000001                     ?_isdigit:
  2258                           	callstack 0
  2259  000001                     ?_ld_word:
  2260                           	callstack 0
  2261  000001                     ?_mem_cmp:
  2262                           	callstack 0
  2263  000001                     ?_chk_chr:
  2264                           	callstack 0
  2265  000001                     ?_dbc_1st:
  2266                           	callstack 0
  2267  000001                     ?_dbc_2nd:
  2268                           	callstack 0
  2269  000001                     ?_get_ldnumber:
  2270                           	callstack 0
  2271  000001                     ?___wmul:
  2272                           	callstack 0
  2273  000001                     ?_ld_dword:
  2274                           	callstack 0
  2275  000001                     ?___lmul:
  2276                           	callstack 0
  2277  000001                     ?___lldiv:
  2278                           	callstack 0
  2279  000001                     ?___aldiv:
  2280                           	callstack 0
  2281  000001                     ?___aodiv:
  2282                           	callstack 0
  2283  000001                     ?___aomod:
  2284                           	callstack 0
  2285  000001                     disk_ioctl@cmd:
  2286                           	callstack 0
  2287  000001                     SPI1_ExchangeByte@data:
  2288                           	callstack 0
  2289  000001                     Command_Write@cmd:
  2290                           	callstack 0
  2291  000001                     Data_Write@dat:
  2292                           	callstack 0
  2293  000001                     UART_Check_Comm_Start@message:
  2294                           	callstack 0
  2295  000001                     ld_word@ptr:
  2296                           	callstack 0
  2297  000001                     ld_dword@ptr:
  2298                           	callstack 0
  2299  000001                     st_word@ptr:
  2300                           	callstack 0
  2301  000001                     st_dword@ptr:
  2302                           	callstack 0
  2303  000001                     mem_cpy@dst:
  2304                           	callstack 0
  2305  000001                     mem_set@dst:
  2306                           	callstack 0
  2307  000001                     mem_cmp@dst:
  2308                           	callstack 0
  2309  000001                     chk_chr@str:
  2310                           	callstack 0
  2311  000001                     get_ldnumber@path:
  2312                           	callstack 0
  2313  000001                     SPI1_ExchangeBlock@block:
  2314                           	callstack 0
  2315  000001                     Select_Page@select:
  2316                           	callstack 0
  2317  000001                     ___wmul@multiplier:
  2318                           	callstack 0
  2319  000001                     isdigit@c:
  2320                           	callstack 0
  2321  000001                     isspace@c:
  2322                           	callstack 0
  2323  000001                     memcpy@d1:
  2324                           	callstack 0
  2325  000001                     memset@dest:
  2326                           	callstack 0
  2327  000001                     fputc@c:
  2328                           	callstack 0
  2329  000001                     strcpy@dest:
  2330                           	callstack 0
  2331  000001                     strlen@s:
  2332                           	callstack 0
  2333  000001                     UART1_Initialize@baudRate:
  2334                           	callstack 0
  2335  000001                     ___lmul@multiplier:
  2336                           	callstack 0
  2337  000001                     ___lldiv@dividend:
  2338                           	callstack 0
  2339  000001                     ___aldiv@dividend:
  2340                           	callstack 0
  2341  000001                     ___aodiv@dividend:
  2342                           	callstack 0
  2343  000001                     ___aomod@dividend:
  2344                           	callstack 0
  2345                           
  2346                           ; 8 bytes @ 0x0
  2347  000001                     	ds	1
  2348  000002                     ??_Display_Character:
  2349  000002                     SPI1_Open@spi1UniqueConfiguration:
  2350                           	callstack 0
  2351  000002                     UART_Line@line:
  2352                           	callstack 0
  2353  000002                     UART_Cursor@position:
  2354                           	callstack 0
  2355  000002                     disk_ioctl@buff:
  2356                           	callstack 0
  2357  000002                     SD_SPI_DelayMilliseconds@timeout:
  2358                           	callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x1
  2361  000002                     	ds	1
  2362  000003                     ??_isspace:
  2363  000003                     ??_isdigit:
  2364  000003                     ??_ld_word:
  2365  000003                     ??_get_ldnumber:
  2366  000003                     ??_UART_Page:
  2367  000003                     dbc_1st@c:
  2368                           	callstack 0
  2369  000003                     dbc_2nd@c:
  2370                           	callstack 0
  2371  000003                     disk_status@pdrv:
  2372                           	callstack 0
  2373  000003                     GLCD_Clear@cursor:
  2374                           	callstack 0
  2375  000003                     st_word@val:
  2376                           	callstack 0
  2377  000003                     mem_cpy@src:
  2378                           	callstack 0
  2379  000003                     mem_set@val:
  2380                           	callstack 0
  2381  000003                     mem_cmp@src:
  2382                           	callstack 0
  2383  000003                     chk_chr@chr:
  2384                           	callstack 0
  2385  000003                     SPI1_ExchangeBlock@blockSize:
  2386                           	callstack 0
  2387  000003                     ___wmul@multiplicand:
  2388                           	callstack 0
  2389  000003                     memcpy@s1:
  2390                           	callstack 0
  2391  000003                     memset@c:
  2392                           	callstack 0
  2393  000003                     fputc@fp:
  2394                           	callstack 0
  2395  000003                     strcpy@src:
  2396                           	callstack 0
  2397  000003                     strlen@a:
  2398                           	callstack 0
  2399  000003                     st_dword@val:
  2400                           	callstack 0
  2401                           
  2402                           ; 4 bytes @ 0x2
  2403  000003                     	ds	1
  2404  000004                     ??_disk_ioctl:
  2405  000004                     disk_status@stat:
  2406                           	callstack 0
  2407  000004                     SD_SPI_DelayMilliseconds@milliseconds:
  2408                           	callstack 0
  2409  000004                     Display_Character@dat:
  2410                           	callstack 0
  2411  000004                     GLCD_Clear@line:
  2412                           	callstack 0
  2413  000004                     UART_Page@page:
  2414                           	callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x3
  2417  000004                     	ds	1
  2418  000005                     ??_fputc:
  2419  000005                     ??_ld_dword:
  2420  000005                     ??_chk_chr:
  2421  000005                     Display_Character@ASCII:
  2422                           	callstack 0
  2423  000005                     mem_cpy@cnt:
  2424                           	callstack 0
  2425  000005                     mem_set@cnt:
  2426                           	callstack 0
  2427  000005                     mem_cmp@cnt:
  2428                           	callstack 0
  2429  000005                     st_clust@fs:
  2430                           	callstack 0
  2431  000005                     validate@obj:
  2432                           	callstack 0
  2433  000005                     SPI1_ExchangeBlock@data:
  2434                           	callstack 0
  2435  000005                     UART1_Initialize@autoBaud:
  2436                           	callstack 0
  2437  000005                     ___wmul@product:
  2438                           	callstack 0
  2439  000005                     memcpy@n:
  2440                           	callstack 0
  2441  000005                     memset@n:
  2442                           	callstack 0
  2443  000005                     strcpy@s:
  2444                           	callstack 0
  2445  000005                     ___lmul@multiplicand:
  2446                           	callstack 0
  2447  000005                     ___lldiv@divisor:
  2448                           	callstack 0
  2449  000005                     ___aldiv@divisor:
  2450                           	callstack 0
  2451                           
  2452                           ; 4 bytes @ 0x4
  2453  000005                     	ds	1
  2454  000006                     disk_ioctl@pdrv:
  2455                           	callstack 0
  2456  000006                     ld_word@rv:
  2457                           	callstack 0
  2458  000006                     Display_Character@i:
  2459                           	callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000006                     	ds	1
  2463  000007                     ??_memset:
  2464  000007                     ??_mem_cmp:
  2465  000007                     ?_Auto_Boud_Setup:
  2466                           	callstack 0
  2467  000007                     _isspace$3420:
  2468                           	callstack 0
  2469  000007                     mem_cpy@d:
  2470                           	callstack 0
  2471  000007                     mem_set@d:
  2472                           	callstack 0
  2473  000007                     st_clust@dir:
  2474                           	callstack 0
  2475  000007                     get_ldnumber@i:
  2476                           	callstack 0
  2477  000007                     validate@rfs:
  2478                           	callstack 0
  2479  000007                     memcpy@d:
  2480                           	callstack 0
  2481  000007                     strcpy@d:
  2482                           	callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x6
  2485  000007                     	ds	1
  2486  000008                     ??_Cursor_drawing:
  2487  000008                     ?_atoi:
  2488                           	callstack 0
  2489  000008                     ?_ld_clust:
  2490                           	callstack 0
  2491  000008                     ld_clust@fs:
  2492                           	callstack 0
  2493  000008                     Display_Message@message:
  2494                           	callstack 0
  2495  000008                     atoi@s:
  2496                           	callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x7
  2499  000008                     	ds	1
  2500  000009                     ??_validate:
  2501  000009                     Auto_Boud_Setup@syncChar:
  2502                           	callstack 0
  2503  000009                     ___aldiv@counter:
  2504                           	callstack 0
  2505  000009                     mem_cpy@s:
  2506                           	callstack 0
  2507  000009                     mem_cmp@d:
  2508                           	callstack 0
  2509  000009                     create_name@dp:
  2510                           	callstack 0
  2511  000009                     get_ldnumber@tt:
  2512                           	callstack 0
  2513  000009                     memcpy@s:
  2514                           	callstack 0
  2515  000009                     memset@k:
  2516                           	callstack 0
  2517  000009                     st_clust@cl:
  2518                           	callstack 0
  2519  000009                     ___lmul@product:
  2520                           	callstack 0
  2521  000009                     ___lldiv@quotient:
  2522                           	callstack 0
  2523  000009                     ___aodiv@divisor:
  2524                           	callstack 0
  2525  000009                     ___aomod@divisor:
  2526                           	callstack 0
  2527                           
  2528                           ; 8 bytes @ 0x8
  2529  000009                     	ds	1
  2530  00000A                     ??_atoi:
  2531  00000A                     ??_Display_Message:
  2532  00000A                     ___aldiv@sign:
  2533                           	callstack 0
  2534  00000A                     ld_clust@dir:
  2535                           	callstack 0
  2536  00000A                     Auto_Boud_Setup@i:
  2537                           	callstack 0
  2538  00000A                     fputs@s:
  2539                           	callstack 0
  2540  00000A                     ld_dword@rv:
  2541                           	callstack 0
  2542                           
  2543                           ; 4 bytes @ 0x9
  2544  00000A                     	ds	1
  2545  00000B                     get_ldnumber@tc:
  2546                           	callstack 0
  2547  00000B                     memcpy@tmp:
  2548                           	callstack 0
  2549  00000B                     mem_cmp@s:
  2550                           	callstack 0
  2551  00000B                     create_name@path:
  2552                           	callstack 0
  2553  00000B                     memset@s:
  2554                           	callstack 0
  2555  00000B                     ___aldiv@quotient:
  2556                           	callstack 0
  2557                           
  2558                           ; 4 bytes @ 0xA
  2559  00000B                     	ds	1
  2560  00000C                     ??_ld_clust:
  2561  00000C                     ?_SD_SendCmd:
  2562                           	callstack 0
  2563  00000C                     Display_Message@data:
  2564                           	callstack 0
  2565  00000C                     get_ldnumber@vol:
  2566                           	callstack 0
  2567  00000C                     fputs@fp:
  2568                           	callstack 0
  2569  00000C                     SD_SendCmd@address:
  2570                           	callstack 0
  2571                           
  2572                           ; 4 bytes @ 0xB
  2573  00000C                     	ds	1
  2574  00000D                     ??_create_name:
  2575  00000D                     ?_clst2sect:
  2576                           	callstack 0
  2577  00000D                     ___lldiv@counter:
  2578                           	callstack 0
  2579  00000D                     mem_cmp@r:
  2580                           	callstack 0
  2581  00000D                     clst2sect@fs:
  2582                           	callstack 0
  2583  00000D                     _validate$979:
  2584                           	callstack 0
  2585  00000D                     Display_Message@i:
  2586                           	callstack 0
  2587                           
  2588                           ; 2 bytes @ 0xC
  2589  00000D                     	ds	1
  2590  00000E                     fputs@c:
  2591                           	callstack 0
  2592  00000E                     get_ldnumber@tp:
  2593                           	callstack 0
  2594  00000E                     atoi@neg:
  2595                           	callstack 0
  2596                           
  2597                           ; 2 bytes @ 0xD
  2598  00000E                     	ds	1
  2599  00000F                     validate@res:
  2600                           	callstack 0
  2601  00000F                     fputs@i:
  2602                           	callstack 0
  2603  00000F                     clst2sect@clst:
  2604                           	callstack 0
  2605                           
  2606                           ; 4 bytes @ 0xE
  2607  00000F                     	ds	1
  2608  000010                     _atoi$3402:
  2609                           	callstack 0
  2610  000010                     ld_clust@cl:
  2611                           	callstack 0
  2612                           
  2613                           ; 4 bytes @ 0xF
  2614  000010                     	ds	1
  2615  000011                     ?_pad:
  2616                           	callstack 0
  2617  000011                     ___aodiv@counter:
  2618                           	callstack 0
  2619  000011                     ___aomod@counter:
  2620                           	callstack 0
  2621  000011                     _create_name$811:
  2622                           	callstack 0
  2623  000011                     pad@fp:
  2624                           	callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x10
  2627  000011                     	ds	1
  2628  000012                     ___aodiv@sign:
  2629                           	callstack 0
  2630  000012                     ___aomod@sign:
  2631                           	callstack 0
  2632  000012                     _atoi$3404:
  2633                           	callstack 0
  2634  000012                     SD_SendCmd@longTimeout:
  2635                           	callstack 0
  2636                           
  2637                           ; 4 bytes @ 0x11
  2638  000012                     	ds	1
  2639  000013                     ??_clst2sect:
  2640  000013                     ?_abs:
  2641                           	callstack 0
  2642  000013                     _create_name$816:
  2643                           	callstack 0
  2644  000013                     pad@buf:
  2645                           	callstack 0
  2646  000013                     abs@a:
  2647                           	callstack 0
  2648  000013                     ___aodiv@quotient:
  2649                           	callstack 0
  2650                           
  2651                           ; 8 bytes @ 0x12
  2652  000013                     	ds	1
  2653  000014                     _atoi$3403:
  2654                           	callstack 0
  2655                           
  2656                           ; 1 bytes @ 0x13
  2657  000014                     	ds	1
  2658  000015                     ??_abs:
  2659  000015                     create_name@d:
  2660                           	callstack 0
  2661  000015                     atoi@n:
  2662                           	callstack 0
  2663  000015                     pad@p:
  2664                           	callstack 0
  2665                           
  2666                           ; 2 bytes @ 0x14
  2667  000015                     	ds	1
  2668  000016                     create_name@ni:
  2669                           	callstack 0
  2670  000016                     SD_SendCmd@address_bytes:
  2671                           	callstack 0
  2672                           
  2673                           ; 4 bytes @ 0x15
  2674  000016                     	ds	1
  2675  000017                     ??_Error_Check:
  2676  000017                     ??_pad:
  2677                           
  2678                           ; 1 bytes @ 0x16
  2679  000017                     	ds	1
  2680  000018                     create_name@p:
  2681                           	callstack 0
  2682  000018                     pad@i:
  2683                           	callstack 0
  2684                           
  2685                           ; 2 bytes @ 0x17
  2686  000018                     	ds	2
  2687  00001A                     create_name@i:
  2688                           	callstack 0
  2689  00001A                     SD_SendCmd@timeout:
  2690                           	callstack 0
  2691  00001A                     pad@w:
  2692                           	callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x19
  2695  00001A                     	ds	2
  2696  00001C                     ?_dtoa:
  2697                           	callstack 0
  2698  00001C                     SD_SendCmd@cmd:
  2699                           	callstack 0
  2700  00001C                     create_name@sfn:
  2701                           	callstack 0
  2702  00001C                     Error_Check@messageInt:
  2703                           	callstack 0
  2704  00001C                     dtoa@fp:
  2705                           	callstack 0
  2706                           
  2707                           ; 2 bytes @ 0x1B
  2708  00001C                     	ds	1
  2709  00001D                     SD_SendCmd@response:
  2710                           	callstack 0
  2711                           
  2712                           ; 5 bytes @ 0x1C
  2713  00001D                     	ds	1
  2714  00001E                     create_name@si:
  2715                           	callstack 0
  2716  00001E                     dtoa@d:
  2717                           	callstack 0
  2718                           
  2719                           ; 8 bytes @ 0x1D
  2720  00001E                     	ds	2
  2721  000020                     create_name@c:
  2722                           	callstack 0
  2723                           
  2724                           ; 1 bytes @ 0x1F
  2725  000020                     	ds	2
  2726  000022                     ??_SD_SPI_MediaInitialize:
  2727  000022                     SD_SPI_AsyncReadTasks@info:
  2728                           	callstack 0
  2729  000022                     SD_SPI_AsyncWriteTasks@info:
  2730                           	callstack 0
  2731                           
  2732                           ; 2 bytes @ 0x21
  2733  000022                     	ds	2
  2734  000024                     ??_SD_SPI_AsyncReadTasks:
  2735  000024                     ??_SD_SPI_AsyncWriteTasks:
  2736                           
  2737                           ; 1 bytes @ 0x23
  2738  000024                     	ds	2
  2739  000026                     ??_dtoa:
  2740                           
  2741                           ; 1 bytes @ 0x25
  2742  000026                     	ds	2
  2743  000028                     SD_SPI_AsyncReadTasks@response:
  2744                           	callstack 0
  2745  000028                     SD_SPI_AsyncWriteTasks@response:
  2746                           	callstack 0
  2747                           
  2748                           ; 5 bytes @ 0x27
  2749  000028                     	ds	5
  2750  00002D                     SD_SPI_AsyncReadTasks@bData:
  2751                           	callstack 0
  2752  00002D                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  2753                           	callstack 0
  2754  00002D                     SD_SPI_MediaInitialize@CSDResponse:
  2755                           	callstack 0
  2756                           
  2757                           ; 20 bytes @ 0x2C
  2758  00002D                     	ds	1
  2759  00002E                     _dtoa$3507:
  2760                           	callstack 0
  2761  00002E                     SD_SPI_SectorRead@sector_address:
  2762                           	callstack 0
  2763                           
  2764                           ; 4 bytes @ 0x2D
  2765  00002E                     	ds	2
  2766  000030                     dtoa@p:
  2767                           	callstack 0
  2768                           
  2769                           ; 2 bytes @ 0x2F
  2770  000030                     	ds	1
  2771  000031                     SD_SPI_SectorWrite@sector_address:
  2772                           	callstack 0
  2773                           
  2774                           ; 4 bytes @ 0x30
  2775  000031                     	ds	1
  2776  000032                     SD_SPI_SectorRead@buffer:
  2777                           	callstack 0
  2778  000032                     dtoa@w:
  2779                           	callstack 0
  2780                           
  2781                           ; 2 bytes @ 0x31
  2782  000032                     	ds	2
  2783  000034                     SD_SPI_SectorRead@sector_count:
  2784                           	callstack 0
  2785  000034                     dtoa@s:
  2786                           	callstack 0
  2787                           
  2788                           ; 2 bytes @ 0x33
  2789  000034                     	ds	1
  2790  000035                     SD_SPI_SectorWrite@buffer:
  2791                           	callstack 0
  2792                           
  2793                           ; 2 bytes @ 0x34
  2794  000035                     	ds	1
  2795  000036                     ??_SD_SPI_SectorRead:
  2796  000036                     dtoa@n:
  2797                           	callstack 0
  2798                           
  2799                           ; 8 bytes @ 0x35
  2800  000036                     	ds	1
  2801  000037                     SD_SPI_SectorWrite@sector_count:
  2802                           	callstack 0
  2803                           
  2804                           ; 2 bytes @ 0x36
  2805  000037                     	ds	1
  2806  000038                     SD_SPI_SectorRead@result:
  2807                           	callstack 0
  2808                           
  2809                           ; 1 bytes @ 0x37
  2810  000038                     	ds	1
  2811  000039                     ??_SD_SPI_SectorWrite:
  2812  000039                     SD_SPI_SectorRead@status:
  2813                           	callstack 0
  2814                           
  2815                           ; 1 bytes @ 0x38
  2816  000039                     	ds	1
  2817  00003A                     SD_SPI_SectorRead@i:
  2818                           	callstack 0
  2819                           
  2820                           ; 2 bytes @ 0x39
  2821  00003A                     	ds	1
  2822  00003B                     SD_SPI_SectorWrite@result:
  2823                           	callstack 0
  2824                           
  2825                           ; 1 bytes @ 0x3A
  2826  00003B                     	ds	1
  2827  00003C                     SD_SPI_SectorWrite@status:
  2828                           	callstack 0
  2829  00003C                     SD_SPI_SectorRead@info:
  2830                           	callstack 0
  2831                           
  2832                           ; 13 bytes @ 0x3B
  2833  00003C                     	ds	1
  2834  00003D                     SD_SPI_SectorWrite@i:
  2835                           	callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x3C
  2838  00003D                     	ds	1
  2839  00003E                     dtoa@i:
  2840                           	callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x3D
  2843  00003E                     	ds	1
  2844  00003F                     SD_SPI_SectorWrite@info:
  2845                           	callstack 0
  2846                           
  2847                           ; 13 bytes @ 0x3E
  2848  00003F                     	ds	1
  2849  000040                     ?_vfpfcnvrt:
  2850                           	callstack 0
  2851  000040                     vfpfcnvrt@fp:
  2852                           	callstack 0
  2853                           
  2854                           ; 2 bytes @ 0x3F
  2855  000040                     	ds	1
  2856  000041                     _SD_SPI_MediaInitialize$3995:
  2857                           	callstack 0
  2858                           
  2859                           ; 4 bytes @ 0x40
  2860  000041                     	ds	1
  2861  000042                     vfpfcnvrt@fmt:
  2862                           	callstack 0
  2863                           
  2864                           ; 2 bytes @ 0x41
  2865  000042                     	ds	2
  2866  000044                     vfpfcnvrt@ap:
  2867                           	callstack 0
  2868                           
  2869                           ; 2 bytes @ 0x43
  2870  000044                     	ds	1
  2871  000045                     SD_SPI_MediaInitialize@c_size_mult:
  2872                           	callstack 0
  2873                           
  2874                           ; 1 bytes @ 0x44
  2875  000045                     	ds	1
  2876  000046                     ??_vfpfcnvrt:
  2877  000046                     SD_SPI_MediaInitialize@index:
  2878                           	callstack 0
  2879                           
  2880                           ; 1 bytes @ 0x45
  2881  000046                     	ds	1
  2882  000047                     SD_SPI_MediaInitialize@block_len:
  2883                           	callstack 0
  2884                           
  2885                           ; 1 bytes @ 0x46
  2886  000047                     	ds	1
  2887  000048                     SD_SPI_MediaInitialize@count:
  2888                           	callstack 0
  2889  000048                     vfpfcnvrt@ll:
  2890                           	callstack 0
  2891                           
  2892                           ; 8 bytes @ 0x47
  2893  000048                     	ds	1
  2894  000049                     disk_read@buff:
  2895                           	callstack 0
  2896  000049                     SD_SPI_MediaInitialize@c_size:
  2897                           	callstack 0
  2898                           
  2899                           ; 4 bytes @ 0x48
  2900  000049                     	ds	2
  2901  00004B                     disk_read@sector:
  2902                           	callstack 0
  2903                           
  2904                           ; 4 bytes @ 0x4A
  2905  00004B                     	ds	1
  2906  00004C                     disk_write@buff:
  2907                           	callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x4B
  2910  00004C                     	ds	1
  2911  00004D                     SD_SPI_MediaInitialize@response:
  2912                           	callstack 0
  2913                           
  2914                           ; 5 bytes @ 0x4C
  2915  00004D                     	ds	1
  2916  00004E                     disk_write@sector:
  2917                           	callstack 0
  2918                           
  2919                           ; 4 bytes @ 0x4D
  2920  00004E                     	ds	1
  2921  00004F                     disk_read@count:
  2922                           	callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x4E
  2925  00004F                     	ds	1
  2926  000050                     ?_vfprintf:
  2927                           	callstack 0
  2928  000050                     vfprintf@fp:
  2929                           	callstack 0
  2930                           
  2931                           ; 2 bytes @ 0x4F
  2932  000050                     	ds	1
  2933  000051                     ??_disk_read:
  2934                           
  2935                           ; 1 bytes @ 0x50
  2936  000051                     	ds	1
  2937  000052                     disk_write@count:
  2938                           	callstack 0
  2939  000052                     SD_SPI_MediaInitialize@timeout:
  2940                           	callstack 0
  2941  000052                     vfprintf@fmt:
  2942                           	callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x51
  2945  000052                     	ds	1
  2946  000053                     disk_read@pdrv:
  2947                           	callstack 0
  2948                           
  2949                           ; 1 bytes @ 0x52
  2950  000053                     	ds	1
  2951  000054                     ??_disk_write:
  2952  000054                     ??_disk_initialize:
  2953  000054                     disk_read@res:
  2954                           	callstack 0
  2955  000054                     vfprintf@ap:
  2956                           	callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x53
  2959  000054                     	ds	2
  2960  000056                     disk_initialize@pdrv:
  2961                           	callstack 0
  2962  000056                     disk_write@pdrv:
  2963                           	callstack 0
  2964  000056                     vfprintf@cfmt:
  2965                           	callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x55
  2968  000056                     	ds	1
  2969  000057                     disk_initialize@stat:
  2970                           	callstack 0
  2971  000057                     disk_write@res:
  2972                           	callstack 0
  2973                           
  2974                           ; 1 bytes @ 0x56
  2975  000057                     	ds	1
  2976  000058                     ?_sprintf:
  2977                           	callstack 0
  2978  000058                     sync_window@fs:
  2979                           	callstack 0
  2980  000058                     sprintf@s:
  2981                           	callstack 0
  2982                           
  2983                           ; 2 bytes @ 0x57
  2984  000058                     	ds	2
  2985  00005A                     sync_window@res:
  2986                           	callstack 0
  2987  00005A                     sprintf@fmt:
  2988                           	callstack 0
  2989                           
  2990                           ; 2 bytes @ 0x59
  2991  00005A                     	ds	1
  2992  00005B                     sync_fs@fs:
  2993                           	callstack 0
  2994                           
  2995                           ; 2 bytes @ 0x5A
  2996  00005B                     	ds	2
  2997  00005D                     sync_fs@res:
  2998                           	callstack 0
  2999                           
  3000                           ; 1 bytes @ 0x5C
  3001  00005D                     	ds	2
  3002  00005F                     move_window@res:
  3003                           	callstack 0
  3004                           
  3005                           ; 1 bytes @ 0x5E
  3006  00005F                     	ds	1
  3007  000060                     
  3008                           ; 1 bytes @ 0x5F
  3009 ;;
  3010 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3011 ;;
  3012 ;; *************** function _main *****************
  3013 ;; Defined at:
  3014 ;;		line 864 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels required when called:   22
  3034 ;; This function calls:
  3035 ;;		_GLCD_Clear
  3036 ;;		_GLCD_Initialise
  3037 ;;		_Menu
  3038 ;;		_SYSTEM_Initialize
  3039 ;; This function is called by:
  3040 ;;		Startup code after reset
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text0
  3045  01A748                     __ptext0:
  3046                           	callstack 0
  3047  01A748                     _main:
  3048                           	callstack 9
  3049  01A748                     
  3050                           ;main.c: 865:     SYSTEM_Initialize();
  3051  01A748  ECC8  F0D3         	call	_SYSTEM_Initialize	;wreg free
  3052  01A74C                     
  3053                           ;main.c: 866:     GLCD_Initialise();
  3054  01A74C  EC6F  F0D0         	call	_GLCD_Initialise	;wreg free
  3055  01A750                     
  3056                           ;main.c: 867:     GLCD_Clear();
  3057  01A750  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  3058  01A754                     
  3059                           ;main.c: 868:     Menu();
  3060  01A754  ECE3  F0CA         	call	_Menu	;wreg free
  3061  01A758  EFFE  F0FF         	goto	start
  3062  01A75C                     __end_of_main:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _SYSTEM_Initialize *****************
  3066 ;; Defined at:
  3067 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    1
  3088 ;; This function calls:
  3089 ;;		_OSCILLATOR_Initialize
  3090 ;;		_PIN_MANAGER_Initialize
  3091 ;;		_SPI1_Initialize
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text1
  3098  01A790                     __ptext1:
  3099                           	callstack 0
  3100  01A790                     _SYSTEM_Initialize:
  3101                           	callstack 29
  3102  01A790                     
  3103                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  3104  01A790  EC54  F0C9         	call	_PIN_MANAGER_Initialize	;wreg free
  3105                           
  3106                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  3107  01A794  EC77  F0D3         	call	_OSCILLATOR_Initialize	;wreg free
  3108                           
  3109                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  3110  01A798  EC5D  F0D3         	call	_SPI1_Initialize	;wreg free
  3111  01A79C  0012               	return		;funcret
  3112  01A79E                     __end_of_SYSTEM_Initialize:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _SPI1_Initialize *****************
  3116 ;; Defined at:
  3117 ;;		line 66 in file "mcc_generated_files/spi1.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_SYSTEM_Initialize
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text2
  3145  01A6BA                     __ptext2:
  3146                           	callstack 0
  3147  01A6BA                     _SPI1_Initialize:
  3148                           	callstack 29
  3149  01A6BA                     
  3150                           ;mcc_generated_files/spi1.c: 69:     SPI1CON0 = 0x02;
  3151  01A6BA  0E02               	movlw	2
  3152  01A6BC  013D               	movlb	61	; () banked
  3153  01A6BE  6F14               	movwf	20,b	;volatile
  3154                           
  3155                           ;mcc_generated_files/spi1.c: 71:     SPI1CON1 = 0x20;
  3156  01A6C0  0E20               	movlw	32
  3157  01A6C2  6F15               	movwf	21,b	;volatile
  3158                           
  3159                           ;mcc_generated_files/spi1.c: 73:     SPI1CON2 = 0x00;
  3160  01A6C4  0E00               	movlw	0
  3161  01A6C6  6F16               	movwf	22,b	;volatile
  3162                           
  3163                           ;mcc_generated_files/spi1.c: 75:     SPI1CLK = 0x00;
  3164  01A6C8  0E00               	movlw	0
  3165  01A6CA  6F1C               	movwf	28,b	;volatile
  3166                           
  3167                           ;mcc_generated_files/spi1.c: 77:     SPI1BAUD = 0x03;
  3168  01A6CC  0E03               	movlw	3
  3169  01A6CE  6F19               	movwf	25,b	;volatile
  3170  01A6D0                     
  3171                           ; BSR set to: 61
  3172                           ;mcc_generated_files/spi1.c: 78:     TRISCbits.TRISC3 = 0;
  3173  01A6D0  96C4               	bcf	196,3,c	;volatile
  3174  01A6D2                     
  3175                           ; BSR set to: 61
  3176  01A6D2  0012               	return		;funcret
  3177  01A6D4                     __end_of_SPI1_Initialize:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function _PIN_MANAGER_Initialize *****************
  3181 ;; Defined at:
  3182 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_SYSTEM_Initialize
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text3
  3210  0192A8                     __ptext3:
  3211                           	callstack 0
  3212  0192A8                     _PIN_MANAGER_Initialize:
  3213                           	callstack 29
  3214  0192A8                     
  3215                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3216  0192A8  0E00               	movlw	0
  3217  0192AA  6EBE               	movwf	190,c	;volatile
  3218                           
  3219                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3220  0192AC  0E00               	movlw	0
  3221  0192AE  6EBD               	movwf	189,c	;volatile
  3222                           
  3223                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3224  0192B0  0E00               	movlw	0
  3225  0192B2  6EBA               	movwf	186,c	;volatile
  3226                           
  3227                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3228  0192B4  0E00               	movlw	0
  3229  0192B6  6EBB               	movwf	187,c	;volatile
  3230                           
  3231                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3232  0192B8  0E00               	movlw	0
  3233  0192BA  6EBC               	movwf	188,c	;volatile
  3234                           
  3235                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3236  0192BC  0E07               	movlw	7
  3237  0192BE  6EC6               	movwf	198,c	;volatile
  3238                           
  3239                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  3240  0192C0  0EC0               	movlw	192
  3241  0192C2  6EC2               	movwf	194,c	;volatile
  3242  0192C4                     
  3243                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3244  0192C4  68C3               	setf	195,c	;volatile
  3245                           
  3246                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xD1;
  3247  0192C6  0ED1               	movlw	209
  3248  0192C8  6EC4               	movwf	196,c	;volatile
  3249                           
  3250                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  3251  0192CA  0E00               	movlw	0
  3252  0192CC  6EC5               	movwf	197,c	;volatile
  3253                           
  3254                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  3255  0192CE  0E00               	movlw	0
  3256  0192D0  013A               	movlb	58	; () banked
  3257  0192D2  6F70               	movwf	112,b	;volatile
  3258                           
  3259                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  3260  0192D4  0E00               	movlw	0
  3261  0192D6  6F60               	movwf	96,b	;volatile
  3262                           
  3263                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  3264  0192D8  0E00               	movlw	0
  3265  0192DA  6F50               	movwf	80,b	;volatile
  3266                           
  3267                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
  3268  0192DC  0E00               	movlw	0
  3269  0192DE  6F80               	movwf	128,b	;volatile
  3270                           
  3271                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  3272  0192E0  0E00               	movlw	0
  3273  0192E2  6F40               	movwf	64,b	;volatile
  3274                           
  3275                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3276  0192E4  0E00               	movlw	0
  3277  0192E6  6F71               	movwf	113,b	;volatile
  3278                           
  3279                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3280  0192E8  0E00               	movlw	0
  3281  0192EA  6F81               	movwf	129,b	;volatile
  3282                           
  3283                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3284  0192EC  0E00               	movlw	0
  3285  0192EE  6F51               	movwf	81,b	;volatile
  3286                           
  3287                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3288  0192F0  0E00               	movlw	0
  3289  0192F2  6F41               	movwf	65,b	;volatile
  3290                           
  3291                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3292  0192F4  0E00               	movlw	0
  3293  0192F6  6F61               	movwf	97,b	;volatile
  3294                           
  3295                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  3296  0192F8  0E00               	movlw	0
  3297  0192FA  6F5A               	movwf	90,b	;volatile
  3298                           
  3299                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  3300  0192FC  0E00               	movlw	0
  3301  0192FE  6F5B               	movwf	91,b	;volatile
  3302                           
  3303                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  3304  019300  0E00               	movlw	0
  3305  019302  6F6A               	movwf	106,b	;volatile
  3306                           
  3307                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  3308  019304  0E00               	movlw	0
  3309  019306  6F6B               	movwf	107,b	;volatile
  3310                           
  3311                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  3312  019308  0E00               	movlw	0
  3313  01930A  6F7A               	movwf	122,b	;volatile
  3314                           
  3315                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  3316  01930C  0E00               	movlw	0
  3317  01930E  6F7B               	movwf	123,b	;volatile
  3318                           
  3319                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  3320  019310  0E00               	movlw	0
  3321  019312  6F82               	movwf	130,b	;volatile
  3322                           
  3323                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  3324  019314  0E00               	movlw	0
  3325  019316  6F42               	movwf	66,b	;volatile
  3326                           
  3327                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  3328  019318  0E00               	movlw	0
  3329  01931A  6F52               	movwf	82,b	;volatile
  3330                           
  3331                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  3332  01931C  0E00               	movlw	0
  3333  01931E  6F62               	movwf	98,b	;volatile
  3334                           
  3335                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  3336  019320  0E00               	movlw	0
  3337  019322  6F72               	movwf	114,b	;volatile
  3338  019324                     
  3339                           ; BSR set to: 58
  3340                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  3341  019324  6943               	setf	67,b	;volatile
  3342  019326                     
  3343                           ; BSR set to: 58
  3344                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  3345  019326  6953               	setf	83,b	;volatile
  3346  019328                     
  3347                           ; BSR set to: 58
  3348                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  3349  019328  6963               	setf	99,b	;volatile
  3350  01932A                     
  3351                           ; BSR set to: 58
  3352                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  3353  01932A  6973               	setf	115,b	;volatile
  3354                           
  3355                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  3356  01932C  0E07               	movlw	7
  3357  01932E  6F83               	movwf	131,b	;volatile
  3358  019330                     
  3359                           ; BSR set to: 58
  3360                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  3361  019330  6944               	setf	68,b	;volatile
  3362  019332                     
  3363                           ; BSR set to: 58
  3364                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  3365  019332  6954               	setf	84,b	;volatile
  3366  019334                     
  3367                           ; BSR set to: 58
  3368                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  3369  019334  6964               	setf	100,b	;volatile
  3370  019336                     
  3371                           ; BSR set to: 58
  3372                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  3373  019336  6974               	setf	116,b	;volatile
  3374                           
  3375                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  3376  019338  0E0F               	movlw	15
  3377  01933A  6F84               	movwf	132,b	;volatile
  3378                           
  3379                           ;mcc_generated_files/pin_manager.c: 130:     SPI1SCKPPS = 0x13;
  3380  01933C  0E13               	movlw	19
  3381  01933E  6FDE               	movwf	222,b	;volatile
  3382                           
  3383                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  3384  019340  0E1E               	movlw	30
  3385  019342  6F13               	movwf	19,b	;volatile
  3386                           
  3387                           ;mcc_generated_files/pin_manager.c: 132:     RC5PPS = 0x1F;
  3388  019344  0E1F               	movlw	31
  3389  019346  6F15               	movwf	21,b	;volatile
  3390                           
  3391                           ;mcc_generated_files/pin_manager.c: 133:     U1RXPPS = 0x17;
  3392  019348  0E17               	movlw	23
  3393  01934A  6FE5               	movwf	229,b	;volatile
  3394                           
  3395                           ;mcc_generated_files/pin_manager.c: 134:     SPI1SDIPPS = 0x14;
  3396  01934C  0E14               	movlw	20
  3397  01934E  6FDF               	movwf	223,b	;volatile
  3398  019350                     
  3399                           ; BSR set to: 58
  3400  019350  0012               	return		;funcret
  3401  019352                     __end_of_PIN_MANAGER_Initialize:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _OSCILLATOR_Initialize *****************
  3405 ;; Defined at:
  3406 ;;		line 57 in file "mcc_generated_files/mcc.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3424 ;;Total ram usage:        0 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_SYSTEM_Initialize
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text4
  3434  01A6EE                     __ptext4:
  3435                           	callstack 0
  3436  01A6EE                     _OSCILLATOR_Initialize:
  3437                           	callstack 29
  3438  01A6EE                     
  3439                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x60;
  3440  01A6EE  0E60               	movlw	96
  3441  01A6F0  0139               	movlb	57	; () banked
  3442  01A6F2  6FD9               	movwf	217,b	;volatile
  3443                           
  3444                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  3445  01A6F4  0E00               	movlw	0
  3446  01A6F6  6FDB               	movwf	219,b	;volatile
  3447                           
  3448                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  3449  01A6F8  0E00               	movlw	0
  3450  01A6FA  6FDD               	movwf	221,b	;volatile
  3451                           
  3452                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x08;
  3453  01A6FC  0E08               	movlw	8
  3454  01A6FE  6FDF               	movwf	223,b	;volatile
  3455                           
  3456                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  3457  01A700  0E00               	movlw	0
  3458  01A702  6FDE               	movwf	222,b	;volatile
  3459  01A704                     
  3460                           ; BSR set to: 57
  3461  01A704  0012               	return		;funcret
  3462  01A706                     __end_of_OSCILLATOR_Initialize:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _Menu *****************
  3466 ;; Defined at:
  3467 ;;		line 23 in file "main.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:   21
  3488 ;; This function calls:
  3489 ;;		_Command_Write
  3490 ;;		_Cursor_Position
  3491 ;;		_Display_Message
  3492 ;;		_GLCD_Clear
  3493 ;;		_Select_Page
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text5
  3500  0195C6                     __ptext5:
  3501                           	callstack 0
  3502  0195C6                     _Menu:
  3503                           	callstack 9
  3504  0195C6                     
  3505                           ;main.c: 25:     GLCD_Clear();
  3506  0195C6  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  3507  0195CA                     l1266:
  3508                           
  3509                           ;main.c: 27:         Select_Page(1);
  3510  0195CA  0E00               	movlw	0
  3511  0195CC  6E02               	movwf	(Select_Page@select+1)^0,c
  3512  0195CE  0E01               	movlw	1
  3513  0195D0  6E01               	movwf	Select_Page@select^0,c
  3514  0195D2  EC3F  F0D2         	call	_Select_Page	;wreg free
  3515  0195D6                     
  3516                           ;main.c: 28:         Command_Write(0xb8);
  3517  0195D6  0EB8               	movlw	184
  3518  0195D8  EC4C  F0D3         	call	_Command_Write
  3519  0195DC                     
  3520                           ;main.c: 29:         Command_Write(0b01000000);
  3521  0195DC  0E40               	movlw	64
  3522  0195DE  EC4C  F0D3         	call	_Command_Write
  3523  0195E2                     
  3524                           ;main.c: 30:         Display_Message("Menu");
  3525  0195E2  0EF0               	movlw	low STR_9
  3526  0195E4  6E08               	movwf	Display_Message@message^0,c
  3527  0195E6  0EFF               	movlw	high STR_9
  3528  0195E8  6E09               	movwf	(Display_Message@message+1)^0,c
  3529  0195EA  EC74  F0CE         	call	_Display_Message	;wreg free
  3530  0195EE                     
  3531                           ;main.c: 33:         Select_Page(0);
  3532  0195EE  0E00               	movlw	0
  3533  0195F0  6E02               	movwf	(Select_Page@select+1)^0,c
  3534  0195F2  0E00               	movlw	0
  3535  0195F4  6E01               	movwf	Select_Page@select^0,c
  3536  0195F6  EC3F  F0D2         	call	_Select_Page	;wreg free
  3537  0195FA                     
  3538                           ;main.c: 34:         Command_Write(0b10111000);
  3539  0195FA  0EB8               	movlw	184
  3540  0195FC  EC4C  F0D3         	call	_Command_Write
  3541  019600                     
  3542                           ;main.c: 35:         Command_Write(0b01101000);
  3543  019600  0E68               	movlw	104
  3544  019602  EC4C  F0D3         	call	_Command_Write
  3545                           
  3546                           ;main.c: 36:         Display_Message("Main");
  3547  019606  0EEB               	movlw	low STR_10
  3548  019608  6E08               	movwf	Display_Message@message^0,c
  3549  01960A  0EFF               	movlw	high STR_10
  3550  01960C  6E09               	movwf	(Display_Message@message+1)^0,c
  3551  01960E  EC74  F0CE         	call	_Display_Message	;wreg free
  3552  019612                     
  3553                           ;main.c: 39:         Select_Page(0);
  3554  019612  0E00               	movlw	0
  3555  019614  6E02               	movwf	(Select_Page@select+1)^0,c
  3556  019616  0E00               	movlw	0
  3557  019618  6E01               	movwf	Select_Page@select^0,c
  3558  01961A  EC3F  F0D2         	call	_Select_Page	;wreg free
  3559  01961E                     
  3560                           ;main.c: 40:         Command_Write(0b10111010);
  3561  01961E  0EBA               	movlw	186
  3562  019620  EC4C  F0D3         	call	_Command_Write
  3563  019624                     
  3564                           ;main.c: 41:         Command_Write(0b01000000);
  3565  019624  0E40               	movlw	64
  3566  019626  EC4C  F0D3         	call	_Command_Write
  3567  01962A                     
  3568                           ;main.c: 42:         Display_Message("Start");
  3569  01962A  0ED0               	movlw	low STR_11
  3570  01962C  6E08               	movwf	Display_Message@message^0,c
  3571  01962E  0EFF               	movlw	high STR_11
  3572  019630  6E09               	movwf	(Display_Message@message+1)^0,c
  3573  019632  EC74  F0CE         	call	_Display_Message	;wreg free
  3574  019636                     
  3575                           ;main.c: 45:         Command_Write(0b10111100);
  3576  019636  0EBC               	movlw	188
  3577  019638  EC4C  F0D3         	call	_Command_Write
  3578  01963C                     
  3579                           ;main.c: 46:         Command_Write(0b01000000);
  3580  01963C  0E40               	movlw	64
  3581  01963E  EC4C  F0D3         	call	_Command_Write
  3582  019642                     
  3583                           ;main.c: 47:         Display_Message("Settings");
  3584  019642  0E78               	movlw	low STR_12
  3585  019644  6E08               	movwf	Display_Message@message^0,c
  3586  019646  0EFF               	movlw	high STR_12
  3587  019648  6E09               	movwf	(Display_Message@message+1)^0,c
  3588  01964A  EC74  F0CE         	call	_Display_Message	;wreg free
  3589  01964E                     
  3590                           ;main.c: 49:         Cursor_Position();
  3591  01964E  EC38  F0B3         	call	_Cursor_Position	;wreg free
  3592  019652  EFE5  F0CA         	goto	l1266
  3593  019656  0012               	return		;funcret
  3594  019658                     __end_of_Menu:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _Cursor_Position *****************
  3598 ;; Defined at:
  3599 ;;		line 827 in file "main.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   20
  3620 ;; This function calls:
  3621 ;;		_Cursor_delete
  3622 ;;		_Cursor_drawing
  3623 ;;		_GLCD_Clear
  3624 ;;		_Menu_Logic
  3625 ;;		_f_close
  3626 ;;		_f_mount
  3627 ;; This function is called by:
  3628 ;;		_Menu
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text6
  3633  016670                     __ptext6:
  3634                           	callstack 0
  3635  016670                     _Cursor_Position:
  3636                           	callstack 9
  3637  016670                     
  3638                           ;main.c: 828:     Cursor_drawing();
  3639  016670  EC45  F0CC         	call	_Cursor_drawing	;wreg free
  3640                           
  3641                           ;main.c: 829:     while (PORTBbits.RB0 == 0) {
  3642  016674  EF28  F0B4         	goto	l11321
  3643  016678                     l1485:
  3644                           
  3645                           ;main.c: 830:         if (PORTBbits.RB1 == 1)
  3646  016678  A2CB               	btfss	203,1,c	;volatile
  3647  01667A  EF41  F0B3         	goto	u13501
  3648  01667E  EF43  F0B3         	goto	u13500
  3649  016682                     u13501:
  3650  016682  EF45  F0B3         	goto	l11267
  3651  016686                     u13500:
  3652  016686                     
  3653                           ;main.c: 831:             Menu_Logic();
  3654  016686  ECA9  F09B         	call	_Menu_Logic	;wreg free
  3655  01668A                     l11267:
  3656                           
  3657                           ;main.c: 832:             _delay((unsigned long)((100)*(64000000/4000.0)));
  3658  01668A  0E09               	movlw	9
  3659  01668C  0101               	movlb	1	; () banked
  3660  01668E  6FD2               	movwf	(??_Cursor_Position+1)& (0+255),b
  3661  016690  0E1E               	movlw	30
  3662  016692  6FD1               	movwf	??_Cursor_Position& (0+255),b
  3663  016694  0EE4               	movlw	228
  3664  016696                     u13957:
  3665  016696  2EE8               	decfsz	wreg,f,c
  3666  016698  D7FE               	bra	u13957
  3667  01669A  2FD1               	decfsz	??_Cursor_Position& (0+255),f,b
  3668  01669C  D7FC               	bra	u13957
  3669  01669E  2FD2               	decfsz	(??_Cursor_Position+1)& (0+255),f,b
  3670  0166A0  D7FA               	bra	u13957
  3671  0166A2  F000               	nop	
  3672  0166A4                     
  3673                           ;main.c: 833:         if (PORTBbits.RB3 == 1 && menu_page <= 6 && menu_select < 2) {
  3674  0166A4  A6CB               	btfss	203,3,c	;volatile
  3675  0166A6  EF57  F0B3         	goto	u13511
  3676  0166AA  EF59  F0B3         	goto	u13510
  3677  0166AE                     u13511:
  3678  0166AE  EF89  F0B3         	goto	l11283
  3679  0166B2                     u13510:
  3680  0166B2  0101               	movlb	1	; () banked
  3681  0166B4  BFE6               	btfsc	(_menu_page+1)& (0+255),7,b
  3682  0166B6  EF68  F0B3         	goto	u13520
  3683  0166BA  51E6               	movf	(_menu_page+1)& (0+255),w,b
  3684  0166BC  E107               	bnz	u13521
  3685  0166BE  0E07               	movlw	7
  3686  0166C0  5DE5               	subwf	_menu_page& (0+255),w,b
  3687  0166C2  B0D8               	btfsc	status,0,c
  3688  0166C4  EF66  F0B3         	goto	u13521
  3689  0166C8  EF68  F0B3         	goto	u13520
  3690  0166CC                     u13521:
  3691  0166CC  EF89  F0B3         	goto	l11283
  3692  0166D0                     u13520:
  3693  0166D0                     
  3694                           ; BSR set to: 1
  3695  0166D0  BFE4               	btfsc	(_menu_select+1)& (0+255),7,b
  3696  0166D2  EF76  F0B3         	goto	u13530
  3697  0166D6  51E4               	movf	(_menu_select+1)& (0+255),w,b
  3698  0166D8  E107               	bnz	u13531
  3699  0166DA  0E02               	movlw	2
  3700  0166DC  5DE3               	subwf	_menu_select& (0+255),w,b
  3701  0166DE  B0D8               	btfsc	status,0,c
  3702  0166E0  EF74  F0B3         	goto	u13531
  3703  0166E4  EF76  F0B3         	goto	u13530
  3704  0166E8                     u13531:
  3705  0166E8  EF89  F0B3         	goto	l11283
  3706  0166EC                     u13530:
  3707  0166EC                     
  3708                           ; BSR set to: 1
  3709                           ;main.c: 834:             menu_select++;
  3710  0166EC  4BE3               	infsnz	_menu_select& (0+255),f,b
  3711  0166EE  2BE4               	incf	(_menu_select+1)& (0+255),f,b
  3712  0166F0                     
  3713                           ; BSR set to: 1
  3714                           ;main.c: 835:             Cursor_delete();
  3715  0166F0  EC88  F0CD         	call	_Cursor_delete	;wreg free
  3716  0166F4                     
  3717                           ;main.c: 836:             Cursor_drawing();
  3718  0166F4  EC45  F0CC         	call	_Cursor_drawing	;wreg free
  3719  0166F8                     
  3720                           ;main.c: 837:             _delay((unsigned long)((100)*(64000000/4000.0)));
  3721  0166F8  0E09               	movlw	9
  3722  0166FA  0101               	movlb	1	; () banked
  3723  0166FC  6FD2               	movwf	(??_Cursor_Position+1)& (0+255),b
  3724  0166FE  0E1E               	movlw	30
  3725  016700  6FD1               	movwf	??_Cursor_Position& (0+255),b
  3726  016702  0EE4               	movlw	228
  3727  016704                     u13967:
  3728  016704  2EE8               	decfsz	wreg,f,c
  3729  016706  D7FE               	bra	u13967
  3730  016708  2FD1               	decfsz	??_Cursor_Position& (0+255),f,b
  3731  01670A  D7FC               	bra	u13967
  3732  01670C  2FD2               	decfsz	(??_Cursor_Position+1)& (0+255),f,b
  3733  01670E  D7FA               	bra	u13967
  3734  016710  F000               	nop	
  3735  016712                     l11283:
  3736                           
  3737                           ;main.c: 839:         if (PORTBbits.RB2 == 1 && menu_page <= 6 && menu_select > 1) {
  3738  016712  A4CB               	btfss	203,2,c	;volatile
  3739  016714  EF8E  F0B3         	goto	u13541
  3740  016718  EF90  F0B3         	goto	u13540
  3741  01671C                     u13541:
  3742  01671C  EFC1  F0B3         	goto	l1488
  3743  016720                     u13540:
  3744  016720  0101               	movlb	1	; () banked
  3745  016722  BFE6               	btfsc	(_menu_page+1)& (0+255),7,b
  3746  016724  EF9F  F0B3         	goto	u13550
  3747  016728  51E6               	movf	(_menu_page+1)& (0+255),w,b
  3748  01672A  E107               	bnz	u13551
  3749  01672C  0E07               	movlw	7
  3750  01672E  5DE5               	subwf	_menu_page& (0+255),w,b
  3751  016730  B0D8               	btfsc	status,0,c
  3752  016732  EF9D  F0B3         	goto	u13551
  3753  016736  EF9F  F0B3         	goto	u13550
  3754  01673A                     u13551:
  3755  01673A  EFC1  F0B3         	goto	l1488
  3756  01673E                     u13550:
  3757  01673E                     
  3758                           ; BSR set to: 1
  3759  01673E  BFE4               	btfsc	(_menu_select+1)& (0+255),7,b
  3760  016740  EFAB  F0B3         	goto	u13561
  3761  016744  51E4               	movf	(_menu_select+1)& (0+255),w,b
  3762  016746  E109               	bnz	u13560
  3763  016748  0E02               	movlw	2
  3764  01674A  5DE3               	subwf	_menu_select& (0+255),w,b
  3765  01674C  A0D8               	btfss	status,0,c
  3766  01674E  EFAB  F0B3         	goto	u13561
  3767  016752  EFAD  F0B3         	goto	u13560
  3768  016756                     u13561:
  3769  016756  EFC1  F0B3         	goto	l1488
  3770  01675A                     u13560:
  3771  01675A                     
  3772                           ; BSR set to: 1
  3773                           ;main.c: 840:             menu_select--;
  3774  01675A  07E3               	decf	_menu_select& (0+255),f,b
  3775  01675C  A0D8               	btfss	status,0,c
  3776  01675E  07E4               	decf	(_menu_select+1)& (0+255),f,b
  3777  016760                     
  3778                           ; BSR set to: 1
  3779                           ;main.c: 841:             Cursor_delete();
  3780  016760  EC88  F0CD         	call	_Cursor_delete	;wreg free
  3781  016764                     
  3782                           ;main.c: 842:             Cursor_drawing();
  3783  016764  EC45  F0CC         	call	_Cursor_drawing	;wreg free
  3784  016768                     
  3785                           ;main.c: 843:             _delay((unsigned long)((100)*(64000000/4000.0)));
  3786  016768  0E09               	movlw	9
  3787  01676A  0101               	movlb	1	; () banked
  3788  01676C  6FD2               	movwf	(??_Cursor_Position+1)& (0+255),b
  3789  01676E  0E1E               	movlw	30
  3790  016770  6FD1               	movwf	??_Cursor_Position& (0+255),b
  3791  016772  0EE4               	movlw	228
  3792  016774                     u13977:
  3793  016774  2EE8               	decfsz	wreg,f,c
  3794  016776  D7FE               	bra	u13977
  3795  016778  2FD1               	decfsz	??_Cursor_Position& (0+255),f,b
  3796  01677A  D7FC               	bra	u13977
  3797  01677C  2FD2               	decfsz	(??_Cursor_Position+1)& (0+255),f,b
  3798  01677E  D7FA               	bra	u13977
  3799  016780  F000               	nop	
  3800  016782                     l1488:
  3801                           
  3802                           ;main.c: 845:         if (menu_page == 7 && PORTBbits.RB3 == 1 && menu_select < 3) {
  3803  016782  0E07               	movlw	7
  3804  016784  0101               	movlb	1	; () banked
  3805  016786  19E5               	xorwf	_menu_page& (0+255),w,b
  3806  016788  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  3807  01678A  A4D8               	btfss	status,2,c
  3808  01678C  EFCA  F0B3         	goto	u13571
  3809  016790  EFCC  F0B3         	goto	u13570
  3810  016794                     u13571:
  3811  016794  EFF4  F0B3         	goto	l1489
  3812  016798                     u13570:
  3813  016798                     
  3814                           ; BSR set to: 1
  3815  016798  A6CB               	btfss	203,3,c	;volatile
  3816  01679A  EFD1  F0B3         	goto	u13581
  3817  01679E  EFD3  F0B3         	goto	u13580
  3818  0167A2                     u13581:
  3819  0167A2  EFF4  F0B3         	goto	l1489
  3820  0167A6                     u13580:
  3821  0167A6                     
  3822                           ; BSR set to: 1
  3823  0167A6  BFE4               	btfsc	(_menu_select+1)& (0+255),7,b
  3824  0167A8  EFE1  F0B3         	goto	u13590
  3825  0167AC  51E4               	movf	(_menu_select+1)& (0+255),w,b
  3826  0167AE  E107               	bnz	u13591
  3827  0167B0  0E03               	movlw	3
  3828  0167B2  5DE3               	subwf	_menu_select& (0+255),w,b
  3829  0167B4  B0D8               	btfsc	status,0,c
  3830  0167B6  EFDF  F0B3         	goto	u13591
  3831  0167BA  EFE1  F0B3         	goto	u13590
  3832  0167BE                     u13591:
  3833  0167BE  EFF4  F0B3         	goto	l1489
  3834  0167C2                     u13590:
  3835  0167C2                     
  3836                           ; BSR set to: 1
  3837                           ;main.c: 846:             menu_select++;
  3838  0167C2  4BE3               	infsnz	_menu_select& (0+255),f,b
  3839  0167C4  2BE4               	incf	(_menu_select+1)& (0+255),f,b
  3840  0167C6                     
  3841                           ; BSR set to: 1
  3842                           ;main.c: 847:             Cursor_delete();
  3843  0167C6  EC88  F0CD         	call	_Cursor_delete	;wreg free
  3844  0167CA                     
  3845                           ;main.c: 848:             Cursor_drawing();
  3846  0167CA  EC45  F0CC         	call	_Cursor_drawing	;wreg free
  3847  0167CE                     
  3848                           ;main.c: 849:             _delay((unsigned long)((100)*(64000000/4000.0)));
  3849  0167CE  0E09               	movlw	9
  3850  0167D0  0101               	movlb	1	; () banked
  3851  0167D2  6FD2               	movwf	(??_Cursor_Position+1)& (0+255),b
  3852  0167D4  0E1E               	movlw	30
  3853  0167D6  6FD1               	movwf	??_Cursor_Position& (0+255),b
  3854  0167D8  0EE4               	movlw	228
  3855  0167DA                     u13987:
  3856  0167DA  2EE8               	decfsz	wreg,f,c
  3857  0167DC  D7FE               	bra	u13987
  3858  0167DE  2FD1               	decfsz	??_Cursor_Position& (0+255),f,b
  3859  0167E0  D7FC               	bra	u13987
  3860  0167E2  2FD2               	decfsz	(??_Cursor_Position+1)& (0+255),f,b
  3861  0167E4  D7FA               	bra	u13987
  3862  0167E6  F000               	nop	
  3863  0167E8                     l1489:
  3864                           
  3865                           ;main.c: 851:         if (menu_page == 7 && PORTBbits.RB2 == 1 && menu_select > 1) {
  3866  0167E8  0E07               	movlw	7
  3867  0167EA  0101               	movlb	1	; () banked
  3868  0167EC  19E5               	xorwf	_menu_page& (0+255),w,b
  3869  0167EE  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  3870  0167F0  A4D8               	btfss	status,2,c
  3871  0167F2  EFFD  F0B3         	goto	u13601
  3872  0167F6  EFFF  F0B3         	goto	u13600
  3873  0167FA                     u13601:
  3874  0167FA  EF28  F0B4         	goto	l11321
  3875  0167FE                     u13600:
  3876  0167FE                     
  3877                           ; BSR set to: 1
  3878  0167FE  A4CB               	btfss	203,2,c	;volatile
  3879  016800  EF04  F0B4         	goto	u13611
  3880  016804  EF06  F0B4         	goto	u13610
  3881  016808                     u13611:
  3882  016808  EF28  F0B4         	goto	l11321
  3883  01680C                     u13610:
  3884  01680C                     
  3885                           ; BSR set to: 1
  3886  01680C  BFE4               	btfsc	(_menu_select+1)& (0+255),7,b
  3887  01680E  EF12  F0B4         	goto	u13621
  3888  016812  51E4               	movf	(_menu_select+1)& (0+255),w,b
  3889  016814  E109               	bnz	u13620
  3890  016816  0E02               	movlw	2
  3891  016818  5DE3               	subwf	_menu_select& (0+255),w,b
  3892  01681A  A0D8               	btfss	status,0,c
  3893  01681C  EF12  F0B4         	goto	u13621
  3894  016820  EF14  F0B4         	goto	u13620
  3895  016824                     u13621:
  3896  016824  EF28  F0B4         	goto	l11321
  3897  016828                     u13620:
  3898  016828                     
  3899                           ; BSR set to: 1
  3900                           ;main.c: 852:             menu_select--;
  3901  016828  07E3               	decf	_menu_select& (0+255),f,b
  3902  01682A  A0D8               	btfss	status,0,c
  3903  01682C  07E4               	decf	(_menu_select+1)& (0+255),f,b
  3904  01682E                     
  3905                           ; BSR set to: 1
  3906                           ;main.c: 853:             Cursor_delete();
  3907  01682E  EC88  F0CD         	call	_Cursor_delete	;wreg free
  3908  016832                     
  3909                           ;main.c: 854:             Cursor_drawing();
  3910  016832  EC45  F0CC         	call	_Cursor_drawing	;wreg free
  3911  016836                     
  3912                           ;main.c: 855:             _delay((unsigned long)((100)*(64000000/4000.0)));
  3913  016836  0E09               	movlw	9
  3914  016838  0101               	movlb	1	; () banked
  3915  01683A  6FD2               	movwf	(??_Cursor_Position+1)& (0+255),b
  3916  01683C  0E1E               	movlw	30
  3917  01683E  6FD1               	movwf	??_Cursor_Position& (0+255),b
  3918  016840  0EE4               	movlw	228
  3919  016842                     u13997:
  3920  016842  2EE8               	decfsz	wreg,f,c
  3921  016844  D7FE               	bra	u13997
  3922  016846  2FD1               	decfsz	??_Cursor_Position& (0+255),f,b
  3923  016848  D7FC               	bra	u13997
  3924  01684A  2FD2               	decfsz	(??_Cursor_Position+1)& (0+255),f,b
  3925  01684C  D7FA               	bra	u13997
  3926  01684E  F000               	nop	
  3927  016850                     l11321:
  3928                           
  3929                           ;main.c: 829:     while (PORTBbits.RB0 == 0) {
  3930  016850  A0CB               	btfss	203,0,c	;volatile
  3931  016852  EF2D  F0B4         	goto	u13631
  3932  016856  EF2F  F0B4         	goto	u13630
  3933  01685A                     u13631:
  3934  01685A  EF3C  F0B3         	goto	l1485
  3935  01685E                     u13630:
  3936  01685E                     
  3937                           ;main.c: 858:     GLCD_Clear();
  3938  01685E  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  3939  016862                     
  3940                           ;main.c: 859:     menu_page = 1;
  3941  016862  0E00               	movlw	0
  3942  016864  0101               	movlb	1	; () banked
  3943  016866  6FE6               	movwf	(_menu_page+1)& (0+255),b
  3944  016868  0E01               	movlw	1
  3945  01686A  6FE5               	movwf	_menu_page& (0+255),b
  3946  01686C                     
  3947                           ; BSR set to: 1
  3948                           ;main.c: 860:     f_close(&file);
  3949  01686C  0EDE               	movlw	low _file
  3950  01686E  0100               	movlb	0	; () banked
  3951  016870  6F83               	movwf	f_close@fp& (0+255),b
  3952  016872  0E1D               	movlw	high _file
  3953  016874  6F84               	movwf	(f_close@fp+1)& (0+255),b
  3954  016876  EC13  F0D0         	call	_f_close	;wreg free
  3955  01687A                     
  3956                           ;main.c: 861:         f_mount(0, "0:", 0);
  3957  01687A  0E00               	movlw	0
  3958  01687C  0100               	movlb	0	; () banked
  3959  01687E  6FC4               	movwf	f_mount@fs& (0+255),b
  3960  016880  0E00               	movlw	0
  3961  016882  6FC5               	movwf	(f_mount@fs+1)& (0+255),b
  3962  016884  0EF9               	movlw	low STR_7
  3963  016886  6FC6               	movwf	f_mount@path& (0+255),b
  3964  016888  0EFF               	movlw	high STR_7
  3965  01688A  6FC7               	movwf	(f_mount@path+1)& (0+255),b
  3966  01688C  0E00               	movlw	0
  3967  01688E  6FC8               	movwf	f_mount@opt& (0+255),b
  3968  016890  EC44  F0C2         	call	_f_mount	;wreg free
  3969  016894  0012               	return		;funcret
  3970  016896                     __end_of_Cursor_Position:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _f_close *****************
  3974 ;; Defined at:
  3975 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  fp              2   35[BANK0 ] PTR struct .
  3978 ;;		 -> file(546), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  fs              2   37[BANK0 ] PTR struct .
  3981 ;;		 -> drive(563), NULL(0), 
  3982 ;;  res             1   39[BANK0 ] enum E68
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      enum E68
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3993 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3995 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3996 ;;Total ram usage:        5 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    8
  3999 ;; This function calls:
  4000 ;;		_f_sync
  4001 ;;		_validate
  4002 ;; This function is called by:
  4003 ;;		_Cursor_Position
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text7
  4008  01A026                     __ptext7:
  4009                           	callstack 0
  4010  01A026                     _f_close:
  4011                           	callstack 20
  4012  01A026                     
  4013                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
  4014  01A026  C083  F078         	movff	f_close@fp,f_sync@fp
  4015  01A02A  C084  F079         	movff	f_close@fp+1,f_sync@fp+1
  4016  01A02E  EC0E  F0B1         	call	_f_sync	;wreg free
  4017  01A032  0100               	movlb	0	; () banked
  4018  01A034  6F87               	movwf	f_close@res& (0+255),b
  4019  01A036                     
  4020                           ; BSR set to: 0
  4021                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
  4022  01A036  5187               	movf	f_close@res& (0+255),w,b
  4023  01A038  A4D8               	btfss	status,2,c
  4024  01A03A  EF21  F0D0         	goto	u13031
  4025  01A03E  EF23  F0D0         	goto	u13030
  4026  01A042                     u13031:
  4027  01A042  EF41  F0D0         	goto	l602
  4028  01A046                     u13030:
  4029  01A046                     
  4030                           ; BSR set to: 0
  4031                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
  4032  01A046  C083  F005         	movff	f_close@fp,validate@obj
  4033  01A04A  C084  F006         	movff	f_close@fp+1,validate@obj+1
  4034  01A04E  0E85               	movlw	low f_close@fs
  4035  01A050  6E07               	movwf	validate@rfs^0,c
  4036  01A052  0E00               	movlw	high f_close@fs
  4037  01A054  6E08               	movwf	(validate@rfs+1)^0,c
  4038  01A056  EC36  F0C0         	call	_validate	;wreg free
  4039  01A05A  0100               	movlb	0	; () banked
  4040  01A05C  6F87               	movwf	f_close@res& (0+255),b
  4041  01A05E                     
  4042                           ; BSR set to: 0
  4043                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
  4044  01A05E  5187               	movf	f_close@res& (0+255),w,b
  4045  01A060  A4D8               	btfss	status,2,c
  4046  01A062  EF35  F0D0         	goto	u13041
  4047  01A066  EF37  F0D0         	goto	u13040
  4048  01A06A                     u13041:
  4049  01A06A  EF41  F0D0         	goto	l602
  4050  01A06E                     u13040:
  4051  01A06E                     
  4052                           ; BSR set to: 0
  4053                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
  4054  01A06E  0060  F20F  FFD9   	movff	f_close@fp,fsr2l
  4055  01A074  0060  F213  FFDA   	movff	f_close@fp+1,fsr2h
  4056  01A07A  0E00               	movlw	0
  4057  01A07C  6EDE               	movwf	postinc2,c
  4058  01A07E  0E00               	movlw	0
  4059  01A080  6EDD               	movwf	postdec2,c
  4060  01A082                     l602:
  4061                           
  4062                           ; BSR set to: 0
  4063  01A082  0012               	return		;funcret
  4064  01A084                     __end_of_f_close:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _Menu_Logic *****************
  4068 ;; Defined at:
  4069 ;;		line 689 in file "main.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4086 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4087 ;;Total ram usage:        2 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:   19
  4090 ;; This function calls:
  4091 ;;		_Auto_Boud
  4092 ;;		_Baud_Rate_Settings
  4093 ;;		_Baud_rate_Change
  4094 ;;		_Continous_Transmission_Length
  4095 ;;		_Error_Settings
  4096 ;;		_Error_select_range
  4097 ;;		_Maximum_Error_Select
  4098 ;;		_Minimum_Error_Select
  4099 ;;		_Settings_Menu
  4100 ;;		_Toggle_Select
  4101 ;;		_Transmission_Settings
  4102 ;;		_UART_Settings
  4103 ;;		_UART_Start
  4104 ;; This function is called by:
  4105 ;;		_Cursor_Position
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text8
  4110  013752                     __ptext8:
  4111                           	callstack 0
  4112  013752                     _Menu_Logic:
  4113                           	callstack 9
  4114  013752                     
  4115                           ;main.c: 690:     {;main.c: 692:         if (PORTBbits.RB1 == 1 && menu_page == 1 && men
      +                          u_select == 1) {
  4116  013752  A2CB               	btfss	203,1,c	;volatile
  4117  013754  EFAE  F09B         	goto	u13051
  4118  013758  EFB0  F09B         	goto	u13050
  4119  01375C                     u13051:
  4120  01375C  EFC5  F09B         	goto	l11071
  4121  013760                     u13050:
  4122  013760  0101               	movlb	1	; () banked
  4123  013762  05E5               	decf	_menu_page& (0+255),w,b
  4124  013764  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4125  013766  A4D8               	btfss	status,2,c
  4126  013768  EFB8  F09B         	goto	u13061
  4127  01376C  EFBA  F09B         	goto	u13060
  4128  013770                     u13061:
  4129  013770  EFC5  F09B         	goto	l11071
  4130  013774                     u13060:
  4131  013774                     
  4132                           ; BSR set to: 1
  4133  013774  05E3               	decf	_menu_select& (0+255),w,b
  4134  013776  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4135  013778  A4D8               	btfss	status,2,c
  4136  01377A  EFC1  F09B         	goto	u13071
  4137  01377E  EFC3  F09B         	goto	u13070
  4138  013782                     u13071:
  4139  013782  EFC5  F09B         	goto	l11071
  4140  013786                     u13070:
  4141  013786                     
  4142                           ; BSR set to: 1
  4143                           ;main.c: 693:             UART_Start();
  4144  013786  EC4E  F0CA         	call	_UART_Start	;wreg free
  4145  01378A                     l11071:
  4146                           
  4147                           ;main.c: 695:         if (PORTBbits.RB1 == 1 && menu_page == 1 && menu_select == 2) {
  4148  01378A  A2CB               	btfss	203,1,c	;volatile
  4149  01378C  EFCA  F09B         	goto	u13081
  4150  013790  EFCC  F09B         	goto	u13080
  4151  013794                     u13081:
  4152  013794  EFF3  F09B         	goto	l11083
  4153  013798                     u13080:
  4154  013798  0101               	movlb	1	; () banked
  4155  01379A  05E5               	decf	_menu_page& (0+255),w,b
  4156  01379C  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4157  01379E  A4D8               	btfss	status,2,c
  4158  0137A0  EFD4  F09B         	goto	u13091
  4159  0137A4  EFD6  F09B         	goto	u13090
  4160  0137A8                     u13091:
  4161  0137A8  EFF3  F09B         	goto	l11083
  4162  0137AC                     u13090:
  4163  0137AC                     
  4164                           ; BSR set to: 1
  4165  0137AC  0E02               	movlw	2
  4166  0137AE  19E3               	xorwf	_menu_select& (0+255),w,b
  4167  0137B0  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4168  0137B2  A4D8               	btfss	status,2,c
  4169  0137B4  EFDE  F09B         	goto	u13101
  4170  0137B8  EFE0  F09B         	goto	u13100
  4171  0137BC                     u13101:
  4172  0137BC  EFF3  F09B         	goto	l11083
  4173  0137C0                     u13100:
  4174  0137C0                     
  4175                           ; BSR set to: 1
  4176                           ;main.c: 696:             menu_page = 2;
  4177  0137C0  0E00               	movlw	0
  4178  0137C2  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4179  0137C4  0E02               	movlw	2
  4180  0137C6  6FE5               	movwf	_menu_page& (0+255),b
  4181  0137C8                     
  4182                           ; BSR set to: 1
  4183                           ;main.c: 697:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4184  0137C8  0E09               	movlw	9
  4185  0137CA  0101               	movlb	1	; () banked
  4186  0137CC  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4187  0137CE  0E1E               	movlw	30
  4188  0137D0  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4189  0137D2  0EE4               	movlw	228
  4190  0137D4                     u14007:
  4191  0137D4  2EE8               	decfsz	wreg,f,c
  4192  0137D6  D7FE               	bra	u14007
  4193  0137D8  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4194  0137DA  D7FC               	bra	u14007
  4195  0137DC  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4196  0137DE  D7FA               	bra	u14007
  4197  0137E0  F000               	nop	
  4198  0137E2                     
  4199                           ;main.c: 698:             Settings_Menu();
  4200  0137E2  EC73  F0CB         	call	_Settings_Menu	;wreg free
  4201  0137E6                     l11083:
  4202                           
  4203                           ;main.c: 703:         if (menu_page == 2 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4204  0137E6  0E02               	movlw	2
  4205  0137E8  0101               	movlb	1	; () banked
  4206  0137EA  19E5               	xorwf	_menu_page& (0+255),w,b
  4207  0137EC  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4208  0137EE  A4D8               	btfss	status,2,c
  4209  0137F0  EFFC  F09B         	goto	u13111
  4210  0137F4  EFFE  F09B         	goto	u13110
  4211  0137F8                     u13111:
  4212  0137F8  EF21  F09C         	goto	l11095
  4213  0137FC                     u13110:
  4214  0137FC                     
  4215                           ; BSR set to: 1
  4216  0137FC  05E3               	decf	_menu_select& (0+255),w,b
  4217  0137FE  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4218  013800  A4D8               	btfss	status,2,c
  4219  013802  EF05  F09C         	goto	u13121
  4220  013806  EF07  F09C         	goto	u13120
  4221  01380A                     u13121:
  4222  01380A  EF21  F09C         	goto	l11095
  4223  01380E                     u13120:
  4224  01380E                     
  4225                           ; BSR set to: 1
  4226  01380E  A2CB               	btfss	203,1,c	;volatile
  4227  013810  EF0C  F09C         	goto	u13131
  4228  013814  EF0E  F09C         	goto	u13130
  4229  013818                     u13131:
  4230  013818  EF21  F09C         	goto	l11095
  4231  01381C                     u13130:
  4232  01381C                     
  4233                           ; BSR set to: 1
  4234                           ;main.c: 704:             menu_page = 3;
  4235  01381C  0E00               	movlw	0
  4236  01381E  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4237  013820  0E03               	movlw	3
  4238  013822  6FE5               	movwf	_menu_page& (0+255),b
  4239  013824                     
  4240                           ; BSR set to: 1
  4241                           ;main.c: 705:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4242  013824  0E09               	movlw	9
  4243  013826  0101               	movlb	1	; () banked
  4244  013828  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4245  01382A  0E1E               	movlw	30
  4246  01382C  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4247  01382E  0EE4               	movlw	228
  4248  013830                     u14017:
  4249  013830  2EE8               	decfsz	wreg,f,c
  4250  013832  D7FE               	bra	u14017
  4251  013834  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4252  013836  D7FC               	bra	u14017
  4253  013838  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4254  01383A  D7FA               	bra	u14017
  4255  01383C  F000               	nop	
  4256  01383E                     
  4257                           ;main.c: 706:             UART_Settings();
  4258  01383E  EC2C  F0CB         	call	_UART_Settings	;wreg free
  4259  013842                     l11095:
  4260                           
  4261                           ;main.c: 708:         if (menu_page == 2 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4262  013842  0E02               	movlw	2
  4263  013844  0101               	movlb	1	; () banked
  4264  013846  19E5               	xorwf	_menu_page& (0+255),w,b
  4265  013848  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4266  01384A  A4D8               	btfss	status,2,c
  4267  01384C  EF2A  F09C         	goto	u13141
  4268  013850  EF2C  F09C         	goto	u13140
  4269  013854                     u13141:
  4270  013854  EF50  F09C         	goto	l11107
  4271  013858                     u13140:
  4272  013858                     
  4273                           ; BSR set to: 1
  4274  013858  0E02               	movlw	2
  4275  01385A  19E3               	xorwf	_menu_select& (0+255),w,b
  4276  01385C  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4277  01385E  A4D8               	btfss	status,2,c
  4278  013860  EF34  F09C         	goto	u13151
  4279  013864  EF36  F09C         	goto	u13150
  4280  013868                     u13151:
  4281  013868  EF50  F09C         	goto	l11107
  4282  01386C                     u13150:
  4283  01386C                     
  4284                           ; BSR set to: 1
  4285  01386C  A2CB               	btfss	203,1,c	;volatile
  4286  01386E  EF3B  F09C         	goto	u13161
  4287  013872  EF3D  F09C         	goto	u13160
  4288  013876                     u13161:
  4289  013876  EF50  F09C         	goto	l11107
  4290  01387A                     u13160:
  4291  01387A                     
  4292                           ; BSR set to: 1
  4293                           ;main.c: 709:             menu_page = 4;
  4294  01387A  0E00               	movlw	0
  4295  01387C  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4296  01387E  0E04               	movlw	4
  4297  013880  6FE5               	movwf	_menu_page& (0+255),b
  4298  013882                     
  4299                           ; BSR set to: 1
  4300                           ;main.c: 710:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4301  013882  0E09               	movlw	9
  4302  013884  0101               	movlb	1	; () banked
  4303  013886  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4304  013888  0E1E               	movlw	30
  4305  01388A  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4306  01388C  0EE4               	movlw	228
  4307  01388E                     u14027:
  4308  01388E  2EE8               	decfsz	wreg,f,c
  4309  013890  D7FE               	bra	u14027
  4310  013892  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4311  013894  D7FC               	bra	u14027
  4312  013896  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4313  013898  D7FA               	bra	u14027
  4314  01389A  F000               	nop	
  4315  01389C                     
  4316                           ;main.c: 711:             Error_Settings();
  4317  01389C  EC09  F0C4         	call	_Error_Settings	;wreg free
  4318  0138A0                     l11107:
  4319                           
  4320                           ;main.c: 716:         if (menu_page == 3 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4321  0138A0  0E03               	movlw	3
  4322  0138A2  0101               	movlb	1	; () banked
  4323  0138A4  19E5               	xorwf	_menu_page& (0+255),w,b
  4324  0138A6  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4325  0138A8  A4D8               	btfss	status,2,c
  4326  0138AA  EF59  F09C         	goto	u13171
  4327  0138AE  EF5B  F09C         	goto	u13170
  4328  0138B2                     u13171:
  4329  0138B2  EF7E  F09C         	goto	l11119
  4330  0138B6                     u13170:
  4331  0138B6                     
  4332                           ; BSR set to: 1
  4333  0138B6  05E3               	decf	_menu_select& (0+255),w,b
  4334  0138B8  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4335  0138BA  A4D8               	btfss	status,2,c
  4336  0138BC  EF62  F09C         	goto	u13181
  4337  0138C0  EF64  F09C         	goto	u13180
  4338  0138C4                     u13181:
  4339  0138C4  EF7E  F09C         	goto	l11119
  4340  0138C8                     u13180:
  4341  0138C8                     
  4342                           ; BSR set to: 1
  4343  0138C8  A2CB               	btfss	203,1,c	;volatile
  4344  0138CA  EF69  F09C         	goto	u13191
  4345  0138CE  EF6B  F09C         	goto	u13190
  4346  0138D2                     u13191:
  4347  0138D2  EF7E  F09C         	goto	l11119
  4348  0138D6                     u13190:
  4349  0138D6                     
  4350                           ; BSR set to: 1
  4351                           ;main.c: 717:             menu_page = 7;
  4352  0138D6  0E00               	movlw	0
  4353  0138D8  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4354  0138DA  0E07               	movlw	7
  4355  0138DC  6FE5               	movwf	_menu_page& (0+255),b
  4356  0138DE                     
  4357                           ; BSR set to: 1
  4358                           ;main.c: 718:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4359  0138DE  0E09               	movlw	9
  4360  0138E0  0101               	movlb	1	; () banked
  4361  0138E2  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4362  0138E4  0E1E               	movlw	30
  4363  0138E6  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4364  0138E8  0EE4               	movlw	228
  4365  0138EA                     u14037:
  4366  0138EA  2EE8               	decfsz	wreg,f,c
  4367  0138EC  D7FE               	bra	u14037
  4368  0138EE  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4369  0138F0  D7FC               	bra	u14037
  4370  0138F2  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4371  0138F4  D7FA               	bra	u14037
  4372  0138F6  F000               	nop	
  4373  0138F8                     
  4374                           ;main.c: 719:             Transmission_Settings();
  4375  0138F8  ECBD  F0BD         	call	_Transmission_Settings	;wreg free
  4376  0138FC                     l11119:
  4377                           
  4378                           ;main.c: 721:         if (menu_page == 3 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4379  0138FC  0E03               	movlw	3
  4380  0138FE  0101               	movlb	1	; () banked
  4381  013900  19E5               	xorwf	_menu_page& (0+255),w,b
  4382  013902  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4383  013904  A4D8               	btfss	status,2,c
  4384  013906  EF87  F09C         	goto	u13201
  4385  01390A  EF89  F09C         	goto	u13200
  4386  01390E                     u13201:
  4387  01390E  EFAD  F09C         	goto	l11131
  4388  013912                     u13200:
  4389  013912                     
  4390                           ; BSR set to: 1
  4391  013912  0E02               	movlw	2
  4392  013914  19E3               	xorwf	_menu_select& (0+255),w,b
  4393  013916  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4394  013918  A4D8               	btfss	status,2,c
  4395  01391A  EF91  F09C         	goto	u13211
  4396  01391E  EF93  F09C         	goto	u13210
  4397  013922                     u13211:
  4398  013922  EFAD  F09C         	goto	l11131
  4399  013926                     u13210:
  4400  013926                     
  4401                           ; BSR set to: 1
  4402  013926  A2CB               	btfss	203,1,c	;volatile
  4403  013928  EF98  F09C         	goto	u13221
  4404  01392C  EF9A  F09C         	goto	u13220
  4405  013930                     u13221:
  4406  013930  EFAD  F09C         	goto	l11131
  4407  013934                     u13220:
  4408  013934                     
  4409                           ; BSR set to: 1
  4410                           ;main.c: 722:             menu_page = 6;
  4411  013934  0E00               	movlw	0
  4412  013936  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4413  013938  0E06               	movlw	6
  4414  01393A  6FE5               	movwf	_menu_page& (0+255),b
  4415  01393C                     
  4416                           ; BSR set to: 1
  4417                           ;main.c: 723:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4418  01393C  0E09               	movlw	9
  4419  01393E  0101               	movlb	1	; () banked
  4420  013940  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4421  013942  0E1E               	movlw	30
  4422  013944  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4423  013946  0EE4               	movlw	228
  4424  013948                     u14047:
  4425  013948  2EE8               	decfsz	wreg,f,c
  4426  01394A  D7FE               	bra	u14047
  4427  01394C  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4428  01394E  D7FC               	bra	u14047
  4429  013950  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4430  013952  D7FA               	bra	u14047
  4431  013954  F000               	nop	
  4432  013956                     
  4433                           ;main.c: 724:             Baud_Rate_Settings();
  4434  013956  EC76  F0C4         	call	_Baud_Rate_Settings	;wreg free
  4435  01395A                     l11131:
  4436                           
  4437                           ;main.c: 729:         if (menu_page == 4 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4438  01395A  0E04               	movlw	4
  4439  01395C  0101               	movlb	1	; () banked
  4440  01395E  19E5               	xorwf	_menu_page& (0+255),w,b
  4441  013960  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4442  013962  A4D8               	btfss	status,2,c
  4443  013964  EFB6  F09C         	goto	u13231
  4444  013968  EFB8  F09C         	goto	u13230
  4445  01396C                     u13231:
  4446  01396C  EFE2  F09C         	goto	l11141
  4447  013970                     u13230:
  4448  013970                     
  4449                           ; BSR set to: 1
  4450  013970  05E3               	decf	_menu_select& (0+255),w,b
  4451  013972  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4452  013974  A4D8               	btfss	status,2,c
  4453  013976  EFBF  F09C         	goto	u13241
  4454  01397A  EFC1  F09C         	goto	u13240
  4455  01397E                     u13241:
  4456  01397E  EFE2  F09C         	goto	l11141
  4457  013982                     u13240:
  4458  013982                     
  4459                           ; BSR set to: 1
  4460  013982  A2CB               	btfss	203,1,c	;volatile
  4461  013984  EFC6  F09C         	goto	u13251
  4462  013988  EFC8  F09C         	goto	u13250
  4463  01398C                     u13251:
  4464  01398C  EFE2  F09C         	goto	l11141
  4465  013990                     u13250:
  4466  013990                     
  4467                           ; BSR set to: 1
  4468                           ;main.c: 730:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4469  013990  0E09               	movlw	9
  4470  013992  0101               	movlb	1	; () banked
  4471  013994  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4472  013996  0E1E               	movlw	30
  4473  013998  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4474  01399A  0EE4               	movlw	228
  4475  01399C                     u14057:
  4476  01399C  2EE8               	decfsz	wreg,f,c
  4477  01399E  D7FE               	bra	u14057
  4478  0139A0  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4479  0139A2  D7FC               	bra	u14057
  4480  0139A4  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4481  0139A6  D7FA               	bra	u14057
  4482  0139A8  F000               	nop	
  4483  0139AA                     
  4484                           ;main.c: 731:             errorCheck = Toggle_Select(errorCheck, 2);
  4485  0139AA  C12B  F06A         	movff	_errorCheck,Toggle_Select@number
  4486  0139AE  C12C  F06B         	movff	_errorCheck+1,Toggle_Select@number+1
  4487  0139B2  0E02               	movlw	2
  4488  0139B4  0100               	movlb	0	; () banked
  4489  0139B6  6F6C               	movwf	Toggle_Select@line& (0+255),b
  4490  0139B8  EC9B  F0C3         	call	_Toggle_Select	;wreg free
  4491  0139BC  C06A  F12B         	movff	?_Toggle_Select,_errorCheck
  4492  0139C0  C06B  F12C         	movff	?_Toggle_Select+1,_errorCheck+1
  4493  0139C4                     l11141:
  4494                           
  4495                           ;main.c: 733:         if (menu_page == 4 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4496  0139C4  0E04               	movlw	4
  4497  0139C6  0101               	movlb	1	; () banked
  4498  0139C8  19E5               	xorwf	_menu_page& (0+255),w,b
  4499  0139CA  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4500  0139CC  A4D8               	btfss	status,2,c
  4501  0139CE  EFEB  F09C         	goto	u13261
  4502  0139D2  EFED  F09C         	goto	u13260
  4503  0139D6                     u13261:
  4504  0139D6  EF11  F09D         	goto	l11153
  4505  0139DA                     u13260:
  4506  0139DA                     
  4507                           ; BSR set to: 1
  4508  0139DA  0E02               	movlw	2
  4509  0139DC  19E3               	xorwf	_menu_select& (0+255),w,b
  4510  0139DE  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4511  0139E0  A4D8               	btfss	status,2,c
  4512  0139E2  EFF5  F09C         	goto	u13271
  4513  0139E6  EFF7  F09C         	goto	u13270
  4514  0139EA                     u13271:
  4515  0139EA  EF11  F09D         	goto	l11153
  4516  0139EE                     u13270:
  4517  0139EE                     
  4518                           ; BSR set to: 1
  4519  0139EE  A2CB               	btfss	203,1,c	;volatile
  4520  0139F0  EFFC  F09C         	goto	u13281
  4521  0139F4  EFFE  F09C         	goto	u13280
  4522  0139F8                     u13281:
  4523  0139F8  EF11  F09D         	goto	l11153
  4524  0139FC                     u13280:
  4525  0139FC                     
  4526                           ; BSR set to: 1
  4527                           ;main.c: 734:             menu_page = 5;
  4528  0139FC  0E00               	movlw	0
  4529  0139FE  6FE6               	movwf	(_menu_page+1)& (0+255),b
  4530  013A00  0E05               	movlw	5
  4531  013A02  6FE5               	movwf	_menu_page& (0+255),b
  4532  013A04                     
  4533                           ; BSR set to: 1
  4534                           ;main.c: 735:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4535  013A04  0E09               	movlw	9
  4536  013A06  0101               	movlb	1	; () banked
  4537  013A08  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4538  013A0A  0E1E               	movlw	30
  4539  013A0C  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4540  013A0E  0EE4               	movlw	228
  4541  013A10                     u14067:
  4542  013A10  2EE8               	decfsz	wreg,f,c
  4543  013A12  D7FE               	bra	u14067
  4544  013A14  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4545  013A16  D7FC               	bra	u14067
  4546  013A18  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4547  013A1A  D7FA               	bra	u14067
  4548  013A1C  F000               	nop	
  4549  013A1E                     
  4550                           ;main.c: 736:             Error_select_range();
  4551  013A1E  ECBA  F0CB         	call	_Error_select_range	;wreg free
  4552  013A22                     l11153:
  4553                           
  4554                           ;main.c: 741:         if (menu_page == 5 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4555  013A22  0E05               	movlw	5
  4556  013A24  0101               	movlb	1	; () banked
  4557  013A26  19E5               	xorwf	_menu_page& (0+255),w,b
  4558  013A28  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4559  013A2A  A4D8               	btfss	status,2,c
  4560  013A2C  EF1A  F09D         	goto	u13291
  4561  013A30  EF1C  F09D         	goto	u13290
  4562  013A34                     u13291:
  4563  013A34  EF3B  F09D         	goto	l11163
  4564  013A38                     u13290:
  4565  013A38                     
  4566                           ; BSR set to: 1
  4567  013A38  05E3               	decf	_menu_select& (0+255),w,b
  4568  013A3A  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4569  013A3C  A4D8               	btfss	status,2,c
  4570  013A3E  EF23  F09D         	goto	u13301
  4571  013A42  EF25  F09D         	goto	u13300
  4572  013A46                     u13301:
  4573  013A46  EF3B  F09D         	goto	l11163
  4574  013A4A                     u13300:
  4575  013A4A                     
  4576                           ; BSR set to: 1
  4577  013A4A  A2CB               	btfss	203,1,c	;volatile
  4578  013A4C  EF2A  F09D         	goto	u13311
  4579  013A50  EF2C  F09D         	goto	u13310
  4580  013A54                     u13311:
  4581  013A54  EF3B  F09D         	goto	l11163
  4582  013A58                     u13310:
  4583  013A58                     
  4584                           ; BSR set to: 1
  4585                           ;main.c: 742:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4586  013A58  0E09               	movlw	9
  4587  013A5A  0101               	movlb	1	; () banked
  4588  013A5C  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4589  013A5E  0E1E               	movlw	30
  4590  013A60  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4591  013A62  0EE4               	movlw	228
  4592  013A64                     u14077:
  4593  013A64  2EE8               	decfsz	wreg,f,c
  4594  013A66  D7FE               	bra	u14077
  4595  013A68  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4596  013A6A  D7FC               	bra	u14077
  4597  013A6C  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4598  013A6E  D7FA               	bra	u14077
  4599  013A70  F000               	nop	
  4600  013A72                     
  4601                           ;main.c: 743:             Maximum_Error_Select();
  4602  013A72  EC26  F0C6         	call	_Maximum_Error_Select	;wreg free
  4603  013A76                     l11163:
  4604                           
  4605                           ;main.c: 745:         if (menu_page == 5 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4606  013A76  0E05               	movlw	5
  4607  013A78  0101               	movlb	1	; () banked
  4608  013A7A  19E5               	xorwf	_menu_page& (0+255),w,b
  4609  013A7C  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4610  013A7E  A4D8               	btfss	status,2,c
  4611  013A80  EF44  F09D         	goto	u13321
  4612  013A84  EF46  F09D         	goto	u13320
  4613  013A88                     u13321:
  4614  013A88  EF66  F09D         	goto	l11173
  4615  013A8C                     u13320:
  4616  013A8C                     
  4617                           ; BSR set to: 1
  4618  013A8C  0E02               	movlw	2
  4619  013A8E  19E3               	xorwf	_menu_select& (0+255),w,b
  4620  013A90  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4621  013A92  A4D8               	btfss	status,2,c
  4622  013A94  EF4E  F09D         	goto	u13331
  4623  013A98  EF50  F09D         	goto	u13330
  4624  013A9C                     u13331:
  4625  013A9C  EF66  F09D         	goto	l11173
  4626  013AA0                     u13330:
  4627  013AA0                     
  4628                           ; BSR set to: 1
  4629  013AA0  A2CB               	btfss	203,1,c	;volatile
  4630  013AA2  EF55  F09D         	goto	u13341
  4631  013AA6  EF57  F09D         	goto	u13340
  4632  013AAA                     u13341:
  4633  013AAA  EF66  F09D         	goto	l11173
  4634  013AAE                     u13340:
  4635  013AAE                     
  4636                           ; BSR set to: 1
  4637                           ;main.c: 746:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4638  013AAE  0E09               	movlw	9
  4639  013AB0  0101               	movlb	1	; () banked
  4640  013AB2  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4641  013AB4  0E1E               	movlw	30
  4642  013AB6  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4643  013AB8  0EE4               	movlw	228
  4644  013ABA                     u14087:
  4645  013ABA  2EE8               	decfsz	wreg,f,c
  4646  013ABC  D7FE               	bra	u14087
  4647  013ABE  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4648  013AC0  D7FC               	bra	u14087
  4649  013AC2  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4650  013AC4  D7FA               	bra	u14087
  4651  013AC6  F000               	nop	
  4652  013AC8                     
  4653                           ;main.c: 747:             Minimum_Error_Select();
  4654  013AC8  ECBB  F0C5         	call	_Minimum_Error_Select	;wreg free
  4655  013ACC                     l11173:
  4656                           
  4657                           ;main.c: 752:         if (menu_page == 6 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4658  013ACC  0E06               	movlw	6
  4659  013ACE  0101               	movlb	1	; () banked
  4660  013AD0  19E5               	xorwf	_menu_page& (0+255),w,b
  4661  013AD2  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4662  013AD4  A4D8               	btfss	status,2,c
  4663  013AD6  EF6F  F09D         	goto	u13351
  4664  013ADA  EF71  F09D         	goto	u13350
  4665  013ADE                     u13351:
  4666  013ADE  EF9D  F09D         	goto	l11185
  4667  013AE2                     u13350:
  4668  013AE2                     
  4669                           ; BSR set to: 1
  4670  013AE2  05E3               	decf	_menu_select& (0+255),w,b
  4671  013AE4  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4672  013AE6  A4D8               	btfss	status,2,c
  4673  013AE8  EF78  F09D         	goto	u13361
  4674  013AEC  EF7A  F09D         	goto	u13360
  4675  013AF0                     u13361:
  4676  013AF0  EF9D  F09D         	goto	l11185
  4677  013AF4                     u13360:
  4678  013AF4                     
  4679                           ; BSR set to: 1
  4680  013AF4  A2CB               	btfss	203,1,c	;volatile
  4681  013AF6  EF7F  F09D         	goto	u13371
  4682  013AFA  EF81  F09D         	goto	u13370
  4683  013AFE                     u13371:
  4684  013AFE  EF9D  F09D         	goto	l11185
  4685  013B02                     u13370:
  4686  013B02                     
  4687                           ; BSR set to: 1
  4688                           ;main.c: 753:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4689  013B02  0E09               	movlw	9
  4690  013B04  0101               	movlb	1	; () banked
  4691  013B06  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4692  013B08  0E1E               	movlw	30
  4693  013B0A  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4694  013B0C  0EE4               	movlw	228
  4695  013B0E                     u14097:
  4696  013B0E  2EE8               	decfsz	wreg,f,c
  4697  013B10  D7FE               	bra	u14097
  4698  013B12  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4699  013B14  D7FC               	bra	u14097
  4700  013B16  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4701  013B18  D7FA               	bra	u14097
  4702  013B1A  F000               	nop	
  4703  013B1C                     
  4704                           ;main.c: 754:             autoBaud = Toggle_Select(autoBaud, 2);
  4705  013B1C  C129  F06A         	movff	_autoBaud,Toggle_Select@number
  4706  013B20  C12A  F06B         	movff	_autoBaud+1,Toggle_Select@number+1
  4707  013B24  0E02               	movlw	2
  4708  013B26  0100               	movlb	0	; () banked
  4709  013B28  6F6C               	movwf	Toggle_Select@line& (0+255),b
  4710  013B2A  EC9B  F0C3         	call	_Toggle_Select	;wreg free
  4711  013B2E  C06A  F129         	movff	?_Toggle_Select,_autoBaud
  4712  013B32  C06B  F12A         	movff	?_Toggle_Select+1,_autoBaud+1
  4713  013B36                     
  4714                           ;main.c: 755:             Auto_Boud();
  4715  013B36  EC2C  F0C3         	call	_Auto_Boud	;wreg free
  4716  013B3A                     l11185:
  4717                           
  4718                           ;main.c: 757:         if (menu_page == 6 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4719  013B3A  0E06               	movlw	6
  4720  013B3C  0101               	movlb	1	; () banked
  4721  013B3E  19E5               	xorwf	_menu_page& (0+255),w,b
  4722  013B40  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4723  013B42  A4D8               	btfss	status,2,c
  4724  013B44  EFA6  F09D         	goto	u13381
  4725  013B48  EFA8  F09D         	goto	u13380
  4726  013B4C                     u13381:
  4727  013B4C  EFC8  F09D         	goto	l11195
  4728  013B50                     u13380:
  4729  013B50                     
  4730                           ; BSR set to: 1
  4731  013B50  0E02               	movlw	2
  4732  013B52  19E3               	xorwf	_menu_select& (0+255),w,b
  4733  013B54  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4734  013B56  A4D8               	btfss	status,2,c
  4735  013B58  EFB0  F09D         	goto	u13391
  4736  013B5C  EFB2  F09D         	goto	u13390
  4737  013B60                     u13391:
  4738  013B60  EFC8  F09D         	goto	l11195
  4739  013B64                     u13390:
  4740  013B64                     
  4741                           ; BSR set to: 1
  4742  013B64  A2CB               	btfss	203,1,c	;volatile
  4743  013B66  EFB7  F09D         	goto	u13401
  4744  013B6A  EFB9  F09D         	goto	u13400
  4745  013B6E                     u13401:
  4746  013B6E  EFC8  F09D         	goto	l11195
  4747  013B72                     u13400:
  4748  013B72                     
  4749                           ; BSR set to: 1
  4750                           ;main.c: 758:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4751  013B72  0E09               	movlw	9
  4752  013B74  0101               	movlb	1	; () banked
  4753  013B76  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4754  013B78  0E1E               	movlw	30
  4755  013B7A  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4756  013B7C  0EE4               	movlw	228
  4757  013B7E                     u14107:
  4758  013B7E  2EE8               	decfsz	wreg,f,c
  4759  013B80  D7FE               	bra	u14107
  4760  013B82  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4761  013B84  D7FC               	bra	u14107
  4762  013B86  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4763  013B88  D7FA               	bra	u14107
  4764  013B8A  F000               	nop	
  4765  013B8C                     
  4766                           ;main.c: 759:             Baud_rate_Change();
  4767  013B8C  EC62  F0BE         	call	_Baud_rate_Change	;wreg free
  4768  013B90                     l11195:
  4769                           
  4770                           ;main.c: 764:         if (menu_page == 7 && menu_select == 1 && PORTBbits.RB1 == 1) {
  4771  013B90  0E07               	movlw	7
  4772  013B92  0101               	movlb	1	; () banked
  4773  013B94  19E5               	xorwf	_menu_page& (0+255),w,b
  4774  013B96  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4775  013B98  A4D8               	btfss	status,2,c
  4776  013B9A  EFD1  F09D         	goto	u13411
  4777  013B9E  EFD3  F09D         	goto	u13410
  4778  013BA2                     u13411:
  4779  013BA2  EFFD  F09D         	goto	l11205
  4780  013BA6                     u13410:
  4781  013BA6                     
  4782                           ; BSR set to: 1
  4783  013BA6  05E3               	decf	_menu_select& (0+255),w,b
  4784  013BA8  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4785  013BAA  A4D8               	btfss	status,2,c
  4786  013BAC  EFDA  F09D         	goto	u13421
  4787  013BB0  EFDC  F09D         	goto	u13420
  4788  013BB4                     u13421:
  4789  013BB4  EFFD  F09D         	goto	l11205
  4790  013BB8                     u13420:
  4791  013BB8                     
  4792                           ; BSR set to: 1
  4793  013BB8  A2CB               	btfss	203,1,c	;volatile
  4794  013BBA  EFE1  F09D         	goto	u13431
  4795  013BBE  EFE3  F09D         	goto	u13430
  4796  013BC2                     u13431:
  4797  013BC2  EFFD  F09D         	goto	l11205
  4798  013BC6                     u13430:
  4799  013BC6                     
  4800                           ; BSR set to: 1
  4801                           ;main.c: 765:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4802  013BC6  0E09               	movlw	9
  4803  013BC8  0101               	movlb	1	; () banked
  4804  013BCA  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4805  013BCC  0E1E               	movlw	30
  4806  013BCE  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4807  013BD0  0EE4               	movlw	228
  4808  013BD2                     u14117:
  4809  013BD2  2EE8               	decfsz	wreg,f,c
  4810  013BD4  D7FE               	bra	u14117
  4811  013BD6  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4812  013BD8  D7FC               	bra	u14117
  4813  013BDA  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4814  013BDC  D7FA               	bra	u14117
  4815  013BDE  F000               	nop	
  4816  013BE0                     
  4817                           ;main.c: 766:             ContinuousTransmission = Toggle_Select(ContinuousTransmission,
      +                           2);
  4818  013BE0  C12D  F06A         	movff	_ContinuousTransmission,Toggle_Select@number
  4819  013BE4  C12E  F06B         	movff	_ContinuousTransmission+1,Toggle_Select@number+1
  4820  013BE8  0E02               	movlw	2
  4821  013BEA  0100               	movlb	0	; () banked
  4822  013BEC  6F6C               	movwf	Toggle_Select@line& (0+255),b
  4823  013BEE  EC9B  F0C3         	call	_Toggle_Select	;wreg free
  4824  013BF2  C06A  F12D         	movff	?_Toggle_Select,_ContinuousTransmission
  4825  013BF6  C06B  F12E         	movff	?_Toggle_Select+1,_ContinuousTransmission+1
  4826  013BFA                     l11205:
  4827                           
  4828                           ;main.c: 768:         if (menu_page == 7 && menu_select == 2 && PORTBbits.RB1 == 1) {
  4829  013BFA  0E07               	movlw	7
  4830  013BFC  0101               	movlb	1	; () banked
  4831  013BFE  19E5               	xorwf	_menu_page& (0+255),w,b
  4832  013C00  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4833  013C02  A4D8               	btfss	status,2,c
  4834  013C04  EF06  F09E         	goto	u13441
  4835  013C08  EF08  F09E         	goto	u13440
  4836  013C0C                     u13441:
  4837  013C0C  EF33  F09E         	goto	l11215
  4838  013C10                     u13440:
  4839  013C10                     
  4840                           ; BSR set to: 1
  4841  013C10  0E02               	movlw	2
  4842  013C12  19E3               	xorwf	_menu_select& (0+255),w,b
  4843  013C14  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4844  013C16  A4D8               	btfss	status,2,c
  4845  013C18  EF10  F09E         	goto	u13451
  4846  013C1C  EF12  F09E         	goto	u13450
  4847  013C20                     u13451:
  4848  013C20  EF33  F09E         	goto	l11215
  4849  013C24                     u13450:
  4850  013C24                     
  4851                           ; BSR set to: 1
  4852  013C24  A2CB               	btfss	203,1,c	;volatile
  4853  013C26  EF17  F09E         	goto	u13461
  4854  013C2A  EF19  F09E         	goto	u13460
  4855  013C2E                     u13461:
  4856  013C2E  EF33  F09E         	goto	l11215
  4857  013C32                     u13460:
  4858  013C32                     
  4859                           ; BSR set to: 1
  4860                           ;main.c: 769:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4861  013C32  0E09               	movlw	9
  4862  013C34  0101               	movlb	1	; () banked
  4863  013C36  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4864  013C38  0E1E               	movlw	30
  4865  013C3A  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4866  013C3C  0EE4               	movlw	228
  4867  013C3E                     u14127:
  4868  013C3E  2EE8               	decfsz	wreg,f,c
  4869  013C40  D7FE               	bra	u14127
  4870  013C42  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4871  013C44  D7FC               	bra	u14127
  4872  013C46  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4873  013C48  D7FA               	bra	u14127
  4874  013C4A  F000               	nop	
  4875  013C4C                     
  4876                           ;main.c: 770:             SDlog = Toggle_Select(SDlog, 4);
  4877  013C4C  C12F  F06A         	movff	_SDlog,Toggle_Select@number
  4878  013C50  C130  F06B         	movff	_SDlog+1,Toggle_Select@number+1
  4879  013C54  0E04               	movlw	4
  4880  013C56  0100               	movlb	0	; () banked
  4881  013C58  6F6C               	movwf	Toggle_Select@line& (0+255),b
  4882  013C5A  EC9B  F0C3         	call	_Toggle_Select	;wreg free
  4883  013C5E  C06A  F12F         	movff	?_Toggle_Select,_SDlog
  4884  013C62  C06B  F130         	movff	?_Toggle_Select+1,_SDlog+1
  4885  013C66                     l11215:
  4886                           
  4887                           ;main.c: 772:         if (menu_page == 7 && menu_select == 3 && PORTBbits.RB1 == 1) {
  4888  013C66  0E07               	movlw	7
  4889  013C68  0101               	movlb	1	; () banked
  4890  013C6A  19E5               	xorwf	_menu_page& (0+255),w,b
  4891  013C6C  11E6               	iorwf	(_menu_page+1)& (0+255),w,b
  4892  013C6E  A4D8               	btfss	status,2,c
  4893  013C70  EF3C  F09E         	goto	u13471
  4894  013C74  EF3E  F09E         	goto	u13470
  4895  013C78                     u13471:
  4896  013C78  EF5E  F09E         	goto	l1470
  4897  013C7C                     u13470:
  4898  013C7C                     
  4899                           ; BSR set to: 1
  4900  013C7C  0E03               	movlw	3
  4901  013C7E  19E3               	xorwf	_menu_select& (0+255),w,b
  4902  013C80  11E4               	iorwf	(_menu_select+1)& (0+255),w,b
  4903  013C82  A4D8               	btfss	status,2,c
  4904  013C84  EF46  F09E         	goto	u13481
  4905  013C88  EF48  F09E         	goto	u13480
  4906  013C8C                     u13481:
  4907  013C8C  EF5E  F09E         	goto	l1470
  4908  013C90                     u13480:
  4909  013C90                     
  4910                           ; BSR set to: 1
  4911  013C90  A2CB               	btfss	203,1,c	;volatile
  4912  013C92  EF4D  F09E         	goto	u13491
  4913  013C96  EF4F  F09E         	goto	u13490
  4914  013C9A                     u13491:
  4915  013C9A  EF5E  F09E         	goto	l1470
  4916  013C9E                     u13490:
  4917  013C9E                     
  4918                           ; BSR set to: 1
  4919                           ;main.c: 773:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4920  013C9E  0E09               	movlw	9
  4921  013CA0  0101               	movlb	1	; () banked
  4922  013CA2  6FD0               	movwf	(??_Menu_Logic+1)& (0+255),b
  4923  013CA4  0E1E               	movlw	30
  4924  013CA6  6FCF               	movwf	??_Menu_Logic& (0+255),b
  4925  013CA8  0EE4               	movlw	228
  4926  013CAA                     u14137:
  4927  013CAA  2EE8               	decfsz	wreg,f,c
  4928  013CAC  D7FE               	bra	u14137
  4929  013CAE  2FCF               	decfsz	??_Menu_Logic& (0+255),f,b
  4930  013CB0  D7FC               	bra	u14137
  4931  013CB2  2FD0               	decfsz	(??_Menu_Logic+1)& (0+255),f,b
  4932  013CB4  D7FA               	bra	u14137
  4933  013CB6  F000               	nop	
  4934  013CB8                     
  4935                           ;main.c: 774:             Continous_Transmission_Length();
  4936  013CB8  EC91  F0C6         	call	_Continous_Transmission_Length	;wreg free
  4937  013CBC                     l1470:
  4938  013CBC  0012               	return		;funcret
  4939  013CBE                     __end_of_Menu_Logic:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _UART_Start *****************
  4943 ;; Defined at:
  4944 ;;		line 251 in file "main.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:   18
  4965 ;; This function calls:
  4966 ;;		_GLCD_Clear
  4967 ;;		_UART1_Initialize
  4968 ;;		_UART_Check_Comm_Start
  4969 ;;		_UART_Check_Command
  4970 ;;		_UART_Print
  4971 ;; This function is called by:
  4972 ;;		_Menu_Logic
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text9
  4977  01949C                     __ptext9:
  4978                           	callstack 0
  4979  01949C                     _UART_Start:
  4980                           	callstack 9
  4981  01949C                     
  4982                           ;main.c: 252:     UART1_Initialize(baudRate, autoBaud);
  4983  01949C  C1DC  F001         	movff	_baudRate,UART1_Initialize@baudRate
  4984  0194A0  C1DD  F002         	movff	_baudRate+1,UART1_Initialize@baudRate+1
  4985  0194A4  C1DE  F003         	movff	_baudRate+2,UART1_Initialize@baudRate+2
  4986  0194A8  C1DF  F004         	movff	_baudRate+3,UART1_Initialize@baudRate+3
  4987  0194AC  C129  F005         	movff	_autoBaud,UART1_Initialize@autoBaud
  4988  0194B0  C12A  F006         	movff	_autoBaud+1,UART1_Initialize@autoBaud+1
  4989  0194B4  ECD9  F0D1         	call	_UART1_Initialize	;wreg free
  4990                           
  4991                           ;main.c: 253:     GLCD_Clear();
  4992  0194B8  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  4993                           
  4994                           ;main.c: 255:     while (PORTBbits.RB0 == 0) {
  4995  0194BC  EF91  F0CA         	goto	l10639
  4996  0194C0                     l10625:
  4997                           
  4998                           ;main.c: 256:         if (ContinuousTransmission == 0) {
  4999  0194C0  0101               	movlb	1	; () banked
  5000  0194C2  512D               	movf	_ContinuousTransmission& (0+255),w,b
  5001  0194C4  112E               	iorwf	(_ContinuousTransmission+1)& (0+255),w,b
  5002  0194C6  A4D8               	btfss	status,2,c
  5003  0194C8  EF68  F0CA         	goto	u12901
  5004  0194CC  EF6A  F0CA         	goto	u12900
  5005  0194D0                     u12901:
  5006  0194D0  EF84  F0CA         	goto	l10635
  5007  0194D4                     u12900:
  5008  0194D4                     
  5009                           ; BSR set to: 1
  5010                           ;main.c: 257:             if (commStart == 1) {
  5011  0194D4  0531               	decf	_commStart& (0+255),w,b
  5012  0194D6  1132               	iorwf	(_commStart+1)& (0+255),w,b
  5013  0194D8  A4D8               	btfss	status,2,c
  5014  0194DA  EF71  F0CA         	goto	u12911
  5015  0194DE  EF73  F0CA         	goto	u12910
  5016  0194E2                     u12911:
  5017  0194E2  EF77  F0CA         	goto	l10631
  5018  0194E6                     u12910:
  5019  0194E6                     
  5020                           ; BSR set to: 1
  5021                           ;main.c: 258:                 UART_Check_Command();
  5022  0194E6  EC4D  F0CF         	call	_UART_Check_Command	;wreg free
  5023                           
  5024                           ;main.c: 259:             } else if (commStart == 0) {
  5025  0194EA  EF91  F0CA         	goto	l10639
  5026  0194EE                     l10631:
  5027                           
  5028                           ; BSR set to: 1
  5029  0194EE  5131               	movf	_commStart& (0+255),w,b
  5030  0194F0  1132               	iorwf	(_commStart+1)& (0+255),w,b
  5031  0194F2  A4D8               	btfss	status,2,c
  5032  0194F4  EF7E  F0CA         	goto	u12921
  5033  0194F8  EF80  F0CA         	goto	u12920
  5034  0194FC                     u12921:
  5035  0194FC  EF91  F0CA         	goto	l1362
  5036  019500                     u12920:
  5037  019500                     
  5038                           ; BSR set to: 1
  5039                           ;main.c: 260:                 UART_Check_Comm_Start();
  5040  019500  ECE8  F0D2         	call	_UART_Check_Comm_Start	;wreg free
  5041  019504  EF91  F0CA         	goto	l10639
  5042  019508                     l10635:
  5043                           
  5044                           ; BSR set to: 1
  5045  019508  052D               	decf	_ContinuousTransmission& (0+255),w,b
  5046  01950A  112E               	iorwf	(_ContinuousTransmission+1)& (0+255),w,b
  5047  01950C  A4D8               	btfss	status,2,c
  5048  01950E  EF8B  F0CA         	goto	u12931
  5049  019512  EF8D  F0CA         	goto	u12930
  5050  019516                     u12931:
  5051  019516  EF91  F0CA         	goto	l10639
  5052  01951A                     u12930:
  5053  01951A                     
  5054                           ; BSR set to: 1
  5055                           ;main.c: 263:             UART_Print();
  5056  01951A  EC30  F0C8         	call	_UART_Print	;wreg free
  5057  01951E  EF91  F0CA         	goto	l10639
  5058  019522                     l1362:
  5059  019522                     l10639:
  5060                           
  5061                           ;main.c: 255:     while (PORTBbits.RB0 == 0) {
  5062  019522  A0CB               	btfss	203,0,c	;volatile
  5063  019524  EF96  F0CA         	goto	u12941
  5064  019528  EF98  F0CA         	goto	u12940
  5065  01952C                     u12941:
  5066  01952C  EF60  F0CA         	goto	l10625
  5067  019530                     u12940:
  5068  019530  0012               	return		;funcret
  5069  019532                     __end_of_UART_Start:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _UART_Print *****************
  5073 ;; Defined at:
  5074 ;;		line 210 in file "main.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  line            1  159[BANK0 ] unsigned char 
  5079 ;;  data            1    0        unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:   16
  5096 ;; This function calls:
  5097 ;;		_Command_Write
  5098 ;;		_GLCD_Clear
  5099 ;;		_Select_Page
  5100 ;;		_UART_Message
  5101 ;; This function is called by:
  5102 ;;		_UART_Start
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text10
  5107  019060                     __ptext10:
  5108                           	callstack 0
  5109  019060                     _UART_Print:
  5110                           	callstack 10
  5111  019060                     l10389:
  5112                           
  5113                           ;main.c: 211:     while (PORTBbits.RB0 == 0) {
  5114  019060  EF8B  F0C8         	goto	l1337
  5115  019064                     l10391:
  5116                           
  5117                           ;main.c: 212:         uint8_t line;;main.c: 213:         char data;;main.c: 214:        
      +                           GLCD_Clear();
  5118  019064  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  5119  019068                     
  5120                           ;main.c: 215:         for (line = 0; line < 8; line++)
  5121  019068  0E00               	movlw	0
  5122  01906A  0100               	movlb	0	; () banked
  5123  01906C  6FFF               	movwf	UART_Print@line& (0+255),b
  5124  01906E                     l10399:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;main.c: 216:         {;main.c: 217:             Select_Page(0);
  5128  01906E  0E00               	movlw	0
  5129  019070  6E02               	movwf	(Select_Page@select+1)^0,c
  5130  019072  0E00               	movlw	0
  5131  019074  6E01               	movwf	Select_Page@select^0,c
  5132  019076  EC3F  F0D2         	call	_Select_Page	;wreg free
  5133  01907A                     
  5134                           ;main.c: 218:             Command_Write(0x40);
  5135  01907A  0E40               	movlw	64
  5136  01907C  EC4C  F0D3         	call	_Command_Write
  5137  019080                     
  5138                           ;main.c: 219:             Command_Write(0xB8 + line);
  5139  019080  0100               	movlb	0	; () banked
  5140  019082  51FF               	movf	UART_Print@line& (0+255),w,b
  5141  019084  0FB8               	addlw	184
  5142  019086  EC4C  F0D3         	call	_Command_Write
  5143  01908A                     
  5144                           ;main.c: 220:             UART_Message();
  5145  01908A  EC01  F0CC         	call	_UART_Message	;wreg free
  5146  01908E                     
  5147                           ;main.c: 221:             if (line == 7)
  5148  01908E  0E07               	movlw	7
  5149  019090  0100               	movlb	0	; () banked
  5150  019092  19FF               	xorwf	UART_Print@line& (0+255),w,b
  5151  019094  A4D8               	btfss	status,2,c
  5152  019096  EF4F  F0C8         	goto	u12531
  5153  01909A  EF51  F0C8         	goto	u12530
  5154  01909E                     u12531:
  5155  01909E  EF78  F0C8         	goto	l1341
  5156  0190A2                     u12530:
  5157  0190A2                     
  5158                           ; BSR set to: 0
  5159                           ;main.c: 222:             {;main.c: 223:                 for (line = 0; line < 8; line++
      +                          ) {
  5160  0190A2  0E00               	movlw	0
  5161  0190A4  6FFF               	movwf	UART_Print@line& (0+255),b
  5162  0190A6                     l10415:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;main.c: 224:                     Select_Page(1);
  5166  0190A6  0E00               	movlw	0
  5167  0190A8  6E02               	movwf	(Select_Page@select+1)^0,c
  5168  0190AA  0E01               	movlw	1
  5169  0190AC  6E01               	movwf	Select_Page@select^0,c
  5170  0190AE  EC3F  F0D2         	call	_Select_Page	;wreg free
  5171  0190B2                     
  5172                           ;main.c: 225:                     Command_Write(0x40);
  5173  0190B2  0E40               	movlw	64
  5174  0190B4  EC4C  F0D3         	call	_Command_Write
  5175  0190B8                     
  5176                           ;main.c: 226:                     Command_Write(0xB8 + line);
  5177  0190B8  0100               	movlb	0	; () banked
  5178  0190BA  51FF               	movf	UART_Print@line& (0+255),w,b
  5179  0190BC  0FB8               	addlw	184
  5180  0190BE  EC4C  F0D3         	call	_Command_Write
  5181  0190C2                     
  5182                           ;main.c: 227:                     UART_Message();
  5183  0190C2  EC01  F0CC         	call	_UART_Message	;wreg free
  5184  0190C6                     
  5185                           ;main.c: 228:                     if (PORTBbits.RB0 == 1) {
  5186  0190C6  A0CB               	btfss	203,0,c	;volatile
  5187  0190C8  EF68  F0C8         	goto	u12541
  5188  0190CC  EF6A  F0C8         	goto	u12540
  5189  0190D0                     u12541:
  5190  0190D0  EF6C  F0C8         	goto	l10427
  5191  0190D4                     u12540:
  5192  0190D4  EF81  F0C8         	goto	l10433
  5193  0190D8                     l10427:
  5194                           
  5195                           ;main.c: 231:                 }
  5196  0190D8  0100               	movlb	0	; () banked
  5197  0190DA  2BFF               	incf	UART_Print@line& (0+255),f,b
  5198  0190DC                     
  5199                           ; BSR set to: 0
  5200  0190DC  0E07               	movlw	7
  5201  0190DE  65FF               	cpfsgt	UART_Print@line& (0+255),b
  5202  0190E0  EF74  F0C8         	goto	u12551
  5203  0190E4  EF76  F0C8         	goto	u12550
  5204  0190E8                     u12551:
  5205  0190E8  EF53  F0C8         	goto	l10415
  5206  0190EC                     u12550:
  5207  0190EC  EF81  F0C8         	goto	l10433
  5208  0190F0                     l1341:
  5209                           
  5210                           ; BSR set to: 0
  5211  0190F0  A0CB               	btfss	203,0,c	;volatile
  5212  0190F2  EF7D  F0C8         	goto	u12561
  5213  0190F6  EF7F  F0C8         	goto	u12560
  5214  0190FA                     u12561:
  5215  0190FA  EF81  F0C8         	goto	l10433
  5216  0190FE                     u12560:
  5217  0190FE  EF30  F0C8         	goto	l10389
  5218  019102                     l10433:
  5219                           
  5220                           ;main.c: 236:         }
  5221  019102  0100               	movlb	0	; () banked
  5222  019104  2BFF               	incf	UART_Print@line& (0+255),f,b
  5223  019106                     
  5224                           ; BSR set to: 0
  5225  019106  0E07               	movlw	7
  5226  019108  65FF               	cpfsgt	UART_Print@line& (0+255),b
  5227  01910A  EF89  F0C8         	goto	u12571
  5228  01910E  EF8B  F0C8         	goto	u12570
  5229  019112                     u12571:
  5230  019112  EF37  F0C8         	goto	l10399
  5231  019116                     u12570:
  5232  019116                     l1337:
  5233                           
  5234                           ;main.c: 211:     while (PORTBbits.RB0 == 0) {
  5235  019116  A0CB               	btfss	203,0,c	;volatile
  5236  019118  EF90  F0C8         	goto	u12581
  5237  01911C  EF92  F0C8         	goto	u12580
  5238  019120                     u12581:
  5239  019120  EF32  F0C8         	goto	l10391
  5240  019124                     u12580:
  5241  019124  0012               	return		;funcret
  5242  019126                     __end_of_UART_Print:
  5243                           	callstack 0
  5244                           
  5245 ;; *************** function _UART_Check_Command *****************
  5246 ;; Defined at:
  5247 ;;		line 198 in file "main.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  i               2   75[BANK1 ] int 
  5252 ;;  message         1   74[BANK1 ] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5263 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;Total ram usage:        3 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:   17
  5269 ;; This function calls:
  5270 ;;		_UART1_Read
  5271 ;;		_UART_Command_Mapper
  5272 ;; This function is called by:
  5273 ;;		_UART_Start
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text11
  5278  019E9A                     __ptext11:
  5279                           	callstack 0
  5280  019E9A                     _UART_Check_Command:
  5281                           	callstack 9
  5282  019E9A                     
  5283                           ;main.c: 199:     char message;;main.c: 200:     message = UART1_Read();
  5284  019E9A  EC8F  F0D3         	call	_UART1_Read	;wreg free
  5285  019E9E  0101               	movlb	1	; () banked
  5286  019EA0  6FCC               	movwf	UART_Check_Command@message& (0+255),b
  5287  019EA2                     
  5288                           ; BSR set to: 1
  5289                           ;main.c: 201:     for (int i = 0; i < 8; i++) {
  5290  019EA2  0E00               	movlw	0
  5291  019EA4  6FCE               	movwf	(UART_Check_Command@i+1)& (0+255),b
  5292  019EA6  0E00               	movlw	0
  5293  019EA8  6FCD               	movwf	UART_Check_Command@i& (0+255),b
  5294  019EAA                     l10379:
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;main.c: 202:         if (message == Command_map[i]) {
  5298  019EAA  0ED3               	movlw	low _Command_map
  5299  019EAC  25CD               	addwf	UART_Check_Command@i& (0+255),w,b
  5300  019EAE  6EF6               	movwf	tblptrl,c
  5301  019EB0  0EFE               	movlw	high _Command_map
  5302  019EB2  21CE               	addwfc	(UART_Check_Command@i+1)& (0+255),w,b
  5303  019EB4  6EF7               	movwf	tblptrh,c
  5304  019EB6                     	if	1	;There are 3 active tblptr bytes
  5305  019EB6  6AF8               	clrf	tblptru,c
  5306  019EB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5307  019EBA  22F8               	addwfc	tblptru,f,c
  5308  019EBC                     	endif
  5309  019EBC  0008               	tblrd		*
  5310  019EBE  50F5               	movf	tablat,w,c
  5311  019EC0  19CC               	xorwf	UART_Check_Command@message& (0+255),w,b
  5312  019EC2  A4D8               	btfss	status,2,c
  5313  019EC4  EF66  F0CF         	goto	u12511
  5314  019EC8  EF68  F0CF         	goto	u12510
  5315  019ECC                     u12511:
  5316  019ECC  EF6D  F0CF         	goto	l1333
  5317  019ED0                     u12510:
  5318  019ED0                     
  5319                           ; BSR set to: 1
  5320                           ;main.c: 203:             UART_Command_Mapper(message);
  5321  019ED0  51CC               	movf	UART_Check_Command@message& (0+255),w,b
  5322  019ED2  ECCC  F0C7         	call	_UART_Command_Mapper
  5323                           
  5324                           ;main.c: 204:         } else if (i == 9) {
  5325  019ED6  EF6D  F0CF         	goto	l10385
  5326  019EDA                     l1333:
  5327  019EDA                     l10385:
  5328                           
  5329                           ;main.c: 207:     }
  5330  019EDA  0101               	movlb	1	; () banked
  5331  019EDC  4BCD               	infsnz	UART_Check_Command@i& (0+255),f,b
  5332  019EDE  2BCE               	incf	(UART_Check_Command@i+1)& (0+255),f,b
  5333  019EE0                     
  5334                           ; BSR set to: 1
  5335  019EE0  BFCE               	btfsc	(UART_Check_Command@i+1)& (0+255),7,b
  5336  019EE2  EF7C  F0CF         	goto	u12521
  5337  019EE6  51CE               	movf	(UART_Check_Command@i+1)& (0+255),w,b
  5338  019EE8  E109               	bnz	u12520
  5339  019EEA  0E08               	movlw	8
  5340  019EEC  5DCD               	subwf	UART_Check_Command@i& (0+255),w,b
  5341  019EEE  A0D8               	btfss	status,0,c
  5342  019EF0  EF7C  F0CF         	goto	u12521
  5343  019EF4  EF7E  F0CF         	goto	u12520
  5344  019EF8                     u12521:
  5345  019EF8  EF55  F0CF         	goto	l10379
  5346  019EFC                     u12520:
  5347  019EFC                     
  5348                           ; BSR set to: 1
  5349  019EFC  0012               	return		;funcret
  5350  019EFE                     __end_of_UART_Check_Command:
  5351                           	callstack 0
  5352                           
  5353 ;; *************** function _UART_Command_Mapper *****************
  5354 ;; Defined at:
  5355 ;;		line 172 in file "main.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  message         1    wreg     unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  message         1  159[BANK0 ] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5371 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5372 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5373 ;;Total ram usage:        3 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:   16
  5376 ;; This function calls:
  5377 ;;		_GLCD_Clear
  5378 ;;		_UART_Clear_Line
  5379 ;;		_UART_Cursor
  5380 ;;		_UART_Line
  5381 ;;		_UART_Message
  5382 ;;		_UART_Message_Lenght
  5383 ;;		_UART_Page
  5384 ;; This function is called by:
  5385 ;;		_UART_Check_Command
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text12
  5390  018F98                     __ptext12:
  5391                           	callstack 0
  5392  018F98                     _UART_Command_Mapper:
  5393                           	callstack 9
  5394                           
  5395                           ; BSR set to: 1
  5396                           ;incstack = 0
  5397                           ;UART_Command_Mapper@message stored from wreg
  5398  018F98  0100               	movlb	0	; () banked
  5399  018F9A  6FFF               	movwf	UART_Command_Mapper@message& (0+255),b
  5400  018F9C                     
  5401                           ;main.c: 172: void UART_Command_Mapper(char message);main.c: 173: {;main.c: 174:     swi
      +                          tch (message) {
  5402  018F9C  EFF8  F0C7         	goto	l10295
  5403  018FA0                     l10275:
  5404                           
  5405                           ; BSR set to: 1
  5406  018FA0  EC6A  F0D3         	call	_UART_Page	;wreg free
  5407                           
  5408                           ;main.c: 176:             break;
  5409  018FA4  EF2F  F0C8         	goto	l1326
  5410  018FA8                     l10277:
  5411                           
  5412                           ; BSR set to: 1
  5413  018FA8  ECB8  F0D3         	call	_UART_Line	;wreg free
  5414                           
  5415                           ;main.c: 178:             break;
  5416  018FAC  EF2F  F0C8         	goto	l1326
  5417  018FB0                     l10279:
  5418                           
  5419                           ; BSR set to: 1
  5420  018FB0  ECC0  F0D3         	call	_UART_Cursor	;wreg free
  5421                           
  5422                           ;main.c: 180:             break;
  5423  018FB4  EF2F  F0C8         	goto	l1326
  5424  018FB8                     l10281:
  5425                           
  5426                           ; BSR set to: 1
  5427  018FB8  ECAE  F0D3         	call	_UART_Message_Lenght	;wreg free
  5428                           
  5429                           ;main.c: 182:             break;
  5430  018FBC  EF2F  F0C8         	goto	l1326
  5431  018FC0                     l10283:
  5432                           
  5433                           ; BSR set to: 1
  5434  018FC0  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
  5435                           
  5436                           ;main.c: 184:             break;
  5437  018FC4  EF2F  F0C8         	goto	l1326
  5438  018FC8                     l10285:
  5439                           
  5440                           ; BSR set to: 1
  5441  018FC8  EC16  F0D3         	call	_UART_Clear_Line	;wreg free
  5442                           
  5443                           ;main.c: 186:             break;
  5444  018FCC  EF2F  F0C8         	goto	l1326
  5445  018FD0                     l10287:
  5446                           
  5447                           ; BSR set to: 1
  5448  018FD0  EC01  F0CC         	call	_UART_Message	;wreg free
  5449                           
  5450                           ;main.c: 188:             break;
  5451  018FD4  EF2F  F0C8         	goto	l1326
  5452  018FD8                     l10289:
  5453                           
  5454                           ; BSR set to: 1
  5455  018FD8  0E00               	movlw	0
  5456  018FDA  6F30               	movwf	(_SDlog+1)& (0+255),b
  5457  018FDC  0E01               	movlw	1
  5458  018FDE  6F2F               	movwf	_SDlog& (0+255),b
  5459                           
  5460                           ;main.c: 192:             break;
  5461  018FE0  EF2F  F0C8         	goto	l1326
  5462  018FE4                     l10291:
  5463                           
  5464                           ; BSR set to: 1
  5465  018FE4  0E00               	movlw	0
  5466  018FE6  6F30               	movwf	(_SDlog+1)& (0+255),b
  5467  018FE8  0E00               	movlw	0
  5468  018FEA  6F2F               	movwf	_SDlog& (0+255),b
  5469                           
  5470                           ;main.c: 194:             break;
  5471  018FEC  EF2F  F0C8         	goto	l1326
  5472  018FF0                     l10295:
  5473  018FF0  0100               	movlb	0	; () banked
  5474  018FF2  51FF               	movf	UART_Command_Mapper@message& (0+255),w,b
  5475  018FF4  0101               	movlb	1	; () banked
  5476  018FF6  6FCA               	movwf	??_UART_Command_Mapper& (0+255),b
  5477  018FF8  6BCB               	clrf	(??_UART_Command_Mapper+1)& (0+255),b
  5478                           
  5479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5480                           ; Switch size 1, requested type "simple"
  5481                           ; Number of cases is 1, Range of values is 0 to 0
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte            4     3 (average)
  5485                           ;	Chosen strategy is simple_byte
  5486  018FFA  51CB               	movf	(??_UART_Command_Mapper+1)& (0+255),w,b
  5487  018FFC  0A00               	xorlw	0	; case 0
  5488  018FFE  B4D8               	btfsc	status,2,c
  5489  019000  EF04  F0C8         	goto	l11857
  5490  019004  EF2F  F0C8         	goto	l1326
  5491  019008                     l11857:
  5492                           
  5493                           ; BSR set to: 1
  5494                           ; Switch size 1, requested type "simple"
  5495                           ; Number of cases is 10, Range of values is 0 to 9
  5496                           ; switch strategies available:
  5497                           ; Name         Instructions Cycles
  5498                           ; simple_byte           31    16 (average)
  5499                           ;	Chosen strategy is simple_byte
  5500  019008  51CA               	movf	??_UART_Command_Mapper& (0+255),w,b
  5501  01900A  0A00               	xorlw	0	; case 0
  5502  01900C  B4D8               	btfsc	status,2,c
  5503  01900E  EFD0  F0C7         	goto	l10275
  5504  019012  0A01               	xorlw	1	; case 1
  5505  019014  B4D8               	btfsc	status,2,c
  5506  019016  EFD4  F0C7         	goto	l10277
  5507  01901A  0A03               	xorlw	3	; case 2
  5508  01901C  B4D8               	btfsc	status,2,c
  5509  01901E  EFD8  F0C7         	goto	l10279
  5510  019022  0A01               	xorlw	1	; case 3
  5511  019024  B4D8               	btfsc	status,2,c
  5512  019026  EFDC  F0C7         	goto	l10281
  5513  01902A  0A07               	xorlw	7	; case 4
  5514  01902C  B4D8               	btfsc	status,2,c
  5515  01902E  EFE0  F0C7         	goto	l10283
  5516  019032  0A01               	xorlw	1	; case 5
  5517  019034  B4D8               	btfsc	status,2,c
  5518  019036  EFE4  F0C7         	goto	l10285
  5519  01903A  0A03               	xorlw	3	; case 6
  5520  01903C  B4D8               	btfsc	status,2,c
  5521  01903E  EFE8  F0C7         	goto	l10287
  5522  019042  0A01               	xorlw	1	; case 7
  5523  019044  B4D8               	btfsc	status,2,c
  5524  019046  EF2F  F0C8         	goto	l1326
  5525  01904A  0A0F               	xorlw	15	; case 8
  5526  01904C  B4D8               	btfsc	status,2,c
  5527  01904E  EFEC  F0C7         	goto	l10289
  5528  019052  0A01               	xorlw	1	; case 9
  5529  019054  B4D8               	btfsc	status,2,c
  5530  019056  EFF2  F0C7         	goto	l10291
  5531  01905A  EF2F  F0C8         	goto	l1326
  5532  01905E                     l1326:
  5533  01905E  0012               	return		;funcret
  5534  019060                     __end_of_UART_Command_Mapper:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function _UART_Page *****************
  5538 ;; Defined at:
  5539 ;;		line 154 in file "main.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  page            2    3[COMRAM] int 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;Total ram usage:        3 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    1
  5560 ;; This function calls:
  5561 ;;		_Select_Page
  5562 ;;		_UART1_Read
  5563 ;; This function is called by:
  5564 ;;		_UART_Command_Mapper
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text13
  5569  01A6D4                     __ptext13:
  5570                           	callstack 0
  5571  01A6D4                     _UART_Page:
  5572                           	callstack 23
  5573  01A6D4                     
  5574                           ;main.c: 156:     int page;;main.c: 157:     page = UART1_Read();
  5575  01A6D4  EC8F  F0D3         	call	_UART1_Read	;wreg free
  5576  01A6D8  6E03               	movwf	??_UART_Page^0,c
  5577  01A6DA  5003               	movf	??_UART_Page^0,w,c
  5578  01A6DC  6E04               	movwf	UART_Page@page^0,c
  5579  01A6DE  6A05               	clrf	(UART_Page@page+1)^0,c
  5580                           
  5581                           ;main.c: 158:     Select_Page(page);
  5582  01A6E0  C004  F001         	movff	UART_Page@page,Select_Page@select
  5583  01A6E4  C005  F002         	movff	UART_Page@page+1,Select_Page@select+1
  5584  01A6E8  EC3F  F0D2         	call	_Select_Page	;wreg free
  5585  01A6EC  0012               	return		;funcret
  5586  01A6EE                     __end_of_UART_Page:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _UART_Message_Lenght *****************
  5590 ;; Defined at:
  5591 ;;		line 161 in file "main.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5609 ;;Total ram usage:        1 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    1
  5612 ;; This function calls:
  5613 ;;		_UART1_Read
  5614 ;; This function is called by:
  5615 ;;		_UART_Command_Mapper
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text14
  5620  01A75C                     __ptext14:
  5621                           	callstack 0
  5622  01A75C                     _UART_Message_Lenght:
  5623                           	callstack 23
  5624  01A75C                     
  5625                           ;main.c: 163:     length = UART1_Read();
  5626  01A75C  EC8F  F0D3         	call	_UART1_Read	;wreg free
  5627  01A760  6E01               	movwf	??_UART_Message_Lenght^0,c
  5628  01A762  5001               	movf	??_UART_Message_Lenght^0,w,c
  5629  01A764  0101               	movlb	1	; () banked
  5630  01A766  6F15               	movwf	_length& (0+255),b
  5631  01A768  6B16               	clrf	(_length+1)& (0+255),b
  5632  01A76A  6B17               	clrf	(_length+2)& (0+255),b
  5633  01A76C  6B18               	clrf	(_length+3)& (0+255),b
  5634  01A76E                     
  5635                           ; BSR set to: 1
  5636  01A76E  0012               	return		;funcret
  5637  01A770                     __end_of_UART_Message_Lenght:
  5638                           	callstack 0
  5639                           
  5640 ;; *************** function _UART_Message *****************
  5641 ;; Defined at:
  5642 ;;		line 128 in file "main.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  i               2   69[BANK1 ] int 
  5647 ;;  message         1   71[BANK1 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5659 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5660 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5661 ;;Total ram usage:        8 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:   15
  5664 ;; This function calls:
  5665 ;;		_Display_Character
  5666 ;;		_Error_Check
  5667 ;;		_Logging_Check
  5668 ;;		_UART1_Read
  5669 ;; This function is called by:
  5670 ;;		_UART_Command_Mapper
  5671 ;;		_UART_Print
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text15
  5676  019802                     __ptext15:
  5677                           	callstack 0
  5678  019802                     _UART_Message:
  5679                           	callstack 10
  5680  019802                     
  5681                           ;main.c: 129:     char message;;main.c: 131:     for (int i = 0; i < length; i++) {
  5682  019802  0E00               	movlw	0
  5683  019804  0101               	movlb	1	; () banked
  5684  019806  6FC8               	movwf	(UART_Message@i+1)& (0+255),b
  5685  019808  0E00               	movlw	0
  5686  01980A  6FC7               	movwf	UART_Message@i& (0+255),b
  5687  01980C  EF1B  F0CC         	goto	l10225
  5688  019810                     l10217:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;main.c: 132:         message = UART1_Read();
  5692  019810  EC8F  F0D3         	call	_UART1_Read	;wreg free
  5693  019814  0101               	movlb	1	; () banked
  5694  019816  6FC9               	movwf	UART_Message@message& (0+255),b
  5695  019818                     
  5696                           ; BSR set to: 1
  5697                           ;main.c: 133:         messageStr[i] = message;
  5698  019818  0E5F               	movlw	low _messageStr
  5699  01981A  25C7               	addwf	UART_Message@i& (0+255),w,b
  5700  01981C  6ED9               	movwf	fsr2l,c
  5701  01981E  0E01               	movlw	high _messageStr
  5702  019820  21C8               	addwfc	(UART_Message@i+1)& (0+255),w,b
  5703  019822  6EDA               	movwf	fsr2h,c
  5704  019824  0060  F727  FFDF   	movff	UART_Message@message,indf2
  5705  01982A                     
  5706                           ; BSR set to: 1
  5707                           ;main.c: 134:         Display_Character(message);
  5708  01982A  51C9               	movf	UART_Message@message& (0+255),w,b
  5709  01982C  ECAD  F0CE         	call	_Display_Character
  5710  019830                     
  5711                           ;main.c: 135:     }
  5712  019830  0101               	movlb	1	; () banked
  5713  019832  4BC7               	infsnz	UART_Message@i& (0+255),f,b
  5714  019834  2BC8               	incf	(UART_Message@i+1)& (0+255),f,b
  5715  019836                     l10225:
  5716                           
  5717                           ; BSR set to: 1
  5718  019836  C1C7  F0FA         	movff	UART_Message@i,??_UART_Message
  5719  01983A  C1C8  F0FB         	movff	UART_Message@i+1,??_UART_Message+1
  5720  01983E  0E00               	movlw	0
  5721  019840  0100               	movlb	0	; () banked
  5722  019842  BFFB               	btfsc	(??_UART_Message+1)& (0+255),7,b
  5723  019844  0EFF               	movlw	255
  5724  019846  6FFC               	movwf	(??_UART_Message+2)& (0+255),b
  5725  019848  6FFD               	movwf	(??_UART_Message+3)& (0+255),b
  5726  01984A  0101               	movlb	1	; () banked
  5727  01984C  5115               	movf	_length& (0+255),w,b
  5728  01984E  0100               	movlb	0	; () banked
  5729  019850  5DFA               	subwf	??_UART_Message& (0+255),w,b
  5730  019852  0101               	movlb	1	; () banked
  5731  019854  5116               	movf	(_length+1)& (0+255),w,b
  5732  019856  0100               	movlb	0	; () banked
  5733  019858  59FB               	subwfb	(??_UART_Message+1)& (0+255),w,b
  5734  01985A  0101               	movlb	1	; () banked
  5735  01985C  5117               	movf	(_length+2)& (0+255),w,b
  5736  01985E  0100               	movlb	0	; () banked
  5737  019860  59FC               	subwfb	(??_UART_Message+2)& (0+255),w,b
  5738  019862  51FD               	movf	(??_UART_Message+3)& (0+255),w,b
  5739  019864  0A80               	xorlw	128
  5740  019866  6FFE               	movwf	(??_UART_Message+4)& (0+255),b
  5741  019868  0101               	movlb	1	; () banked
  5742  01986A  5118               	movf	(_length+3)& (0+255),w,b
  5743  01986C  0A80               	xorlw	128
  5744  01986E  0100               	movlb	0	; () banked
  5745  019870  59FE               	subwfb	(??_UART_Message+4)& (0+255),w,b
  5746  019872  A0D8               	btfss	status,0,c
  5747  019874  EF3E  F0CC         	goto	u12421
  5748  019878  EF40  F0CC         	goto	u12420
  5749  01987C                     u12421:
  5750  01987C  EF08  F0CC         	goto	l10217
  5751  019880                     u12420:
  5752  019880                     
  5753                           ; BSR set to: 0
  5754                           ;main.c: 136:     Error_Check();
  5755  019880  EC66  F0C7         	call	_Error_Check	;wreg free
  5756  019884                     
  5757                           ;main.c: 137:     Logging_Check();
  5758  019884  EC6C  F0D1         	call	_Logging_Check	;wreg free
  5759  019888  0012               	return		;funcret
  5760  01988A                     __end_of_UART_Message:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function _Logging_Check *****************
  5764 ;; Defined at:
  5765 ;;		line 120 in file "main.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:   14
  5786 ;; This function calls:
  5787 ;;		_Save_Data
  5788 ;;		_memset
  5789 ;;		_strcpy
  5790 ;; This function is called by:
  5791 ;;		_UART_Message
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text16
  5796  01A2D8                     __ptext16:
  5797                           	callstack 0
  5798  01A2D8                     _Logging_Check:
  5799                           	callstack 10
  5800  01A2D8                     
  5801                           ;main.c: 121:     if (SDlog == 1) {
  5802  01A2D8  0101               	movlb	1	; () banked
  5803  01A2DA  052F               	decf	_SDlog& (0+255),w,b
  5804  01A2DC  1130               	iorwf	(_SDlog+1)& (0+255),w,b
  5805  01A2DE  A4D8               	btfss	status,2,c
  5806  01A2E0  EF74  F0D1         	goto	u12371
  5807  01A2E4  EF76  F0D1         	goto	u12370
  5808  01A2E8                     u12371:
  5809  01A2E8  EF90  F0D1         	goto	l1290
  5810  01A2EC                     u12370:
  5811  01A2EC                     
  5812                           ; BSR set to: 1
  5813                           ;main.c: 122:         strcpy(savedMessage, messageStr);
  5814  01A2EC  0E6B               	movlw	low _savedMessage
  5815  01A2EE  6E01               	movwf	strcpy@dest^0,c
  5816  01A2F0  0E01               	movlw	high _savedMessage
  5817  01A2F2  6E02               	movwf	(strcpy@dest+1)^0,c
  5818  01A2F4  0E5F               	movlw	low _messageStr
  5819  01A2F6  6E03               	movwf	strcpy@src^0,c
  5820  01A2F8  0E01               	movlw	high _messageStr
  5821  01A2FA  6E04               	movwf	(strcpy@src+1)^0,c
  5822  01A2FC  ECB5  F0D1         	call	_strcpy	;wreg free
  5823  01A300                     
  5824                           ;main.c: 123:         Save_Data();
  5825  01A300  ECCC  F0C1         	call	_Save_Data	;wreg free
  5826  01A304                     
  5827                           ;main.c: 124:         memset(messageStr, 0, sizeof messageStr);
  5828  01A304  0E5F               	movlw	low _messageStr
  5829  01A306  6E01               	movwf	memset@dest^0,c
  5830  01A308  0E01               	movlw	high _messageStr
  5831  01A30A  6E02               	movwf	(memset@dest+1)^0,c
  5832  01A30C  0E00               	movlw	0
  5833  01A30E  6E04               	movwf	(memset@c+1)^0,c
  5834  01A310  0E00               	movlw	0
  5835  01A312  6E03               	movwf	memset@c^0,c
  5836  01A314  0E00               	movlw	0
  5837  01A316  6E06               	movwf	(memset@n+1)^0,c
  5838  01A318  0E0C               	movlw	12
  5839  01A31A  6E05               	movwf	memset@n^0,c
  5840  01A31C  ECB0  F0B8         	call	_memset	;wreg free
  5841  01A320                     l1290:
  5842  01A320  0012               	return		;funcret
  5843  01A322                     __end_of_Logging_Check:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _strcpy *****************
  5847 ;; Defined at:
  5848 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5851 ;;		 -> savedMessage(12), 
  5852 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5853 ;;		 -> messageStr(12), 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  d               2    6[COMRAM] PTR unsigned char 
  5856 ;;		 -> savedMessage(12), 
  5857 ;;  s               2    4[COMRAM] PTR const unsigned char 
  5858 ;;		 -> messageStr(12), 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[COMRAM] PTR unsigned char 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_Logging_Check
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text17
  5882  01A36A                     __ptext17:
  5883                           	callstack 0
  5884  01A36A                     _strcpy:
  5885                           	callstack 23
  5886  01A36A  C003  F005         	movff	strcpy@src,strcpy@s
  5887  01A36E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  5888  01A372  C001  F007         	movff	strcpy@dest,strcpy@d
  5889  01A376  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  5890  01A37A                     l10063:
  5891  01A37A  0060  F017  FFD9   	movff	strcpy@s,fsr2l
  5892  01A380  0060  F01B  FFDA   	movff	strcpy@s+1,fsr2h
  5893  01A386  4A05               	infsnz	strcpy@s^0,f,c
  5894  01A388  2A06               	incf	(strcpy@s+1)^0,f,c
  5895  01A38A  0060  F01F  FFE1   	movff	strcpy@d,fsr1l
  5896  01A390  0060  F023  FFE2   	movff	strcpy@d+1,fsr1h
  5897  01A396  4A07               	infsnz	strcpy@d^0,f,c
  5898  01A398  2A08               	incf	(strcpy@d+1)^0,f,c
  5899  01A39A  006F FF7F FFE7     	movff	indf2,indf1
  5900  01A3A0  50E7               	movf	indf1,w,c
  5901  01A3A2  A4D8               	btfss	status,2,c
  5902  01A3A4  EFD6  F0D1         	goto	u12241
  5903  01A3A8  EFD8  F0D1         	goto	u12240
  5904  01A3AC                     u12241:
  5905  01A3AC  EFBD  F0D1         	goto	l10063
  5906  01A3B0                     u12240:
  5907  01A3B0  0012               	return		;funcret
  5908  01A3B2                     __end_of_strcpy:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _Save_Data *****************
  5912 ;; Defined at:
  5913 ;;		line 6 in file "main.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  newLine         3  149[BANK0 ] unsigned char [3]
  5918 ;;  actualLength    2  152[BANK0 ] unsigned int 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5929 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5931 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5932 ;;Total ram usage:        5 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:   13
  5935 ;; This function calls:
  5936 ;;		_SD_SPI_IsMediaPresent
  5937 ;;		_f_mount
  5938 ;;		_f_open
  5939 ;;		_f_sync
  5940 ;;		_f_write
  5941 ;;		_memset
  5942 ;; This function is called by:
  5943 ;;		_Logging_Check
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text18
  5948  018398                     __ptext18:
  5949                           	callstack 0
  5950  018398                     _Save_Data:
  5951                           	callstack 10
  5952  018398                     
  5953                           ;main.c: 7:     UINT actualLength;;main.c: 8:     char newLine[] = "\r\n";
  5954  018398  C1E0  F0F5         	movff	Save_Data@F16661,Save_Data@newLine
  5955  01839C  C1E1  F0F6         	movff	Save_Data@F16661+1,Save_Data@newLine+1
  5956  0183A0  C1E2  F0F7         	movff	Save_Data@F16661+2,Save_Data@newLine+2
  5957  0183A4                     
  5958                           ;main.c: 9:     if (SD_SPI_IsMediaPresent() == 0) {
  5959  0183A4  ECE6  F0D3         	call	_SD_SPI_IsMediaPresent	;wreg free
  5960  0183A8  0900               	iorlw	0
  5961  0183AA  A4D8               	btfss	status,2,c
  5962  0183AC  EFDA  F0C1         	goto	u12141
  5963  0183B0  EFDC  F0C1         	goto	u12140
  5964  0183B4                     u12141:
  5965  0183B4  EFDE  F0C1         	goto	l10011
  5966  0183B8                     u12140:
  5967  0183B8  EF43  F0C2         	goto	l1261
  5968  0183BC                     l10011:
  5969                           
  5970                           ;main.c: 12:     if (f_mount(&drive, "0:", 1) == FR_OK) {
  5971  0183BC  0EAB               	movlw	low _drive
  5972  0183BE  0100               	movlb	0	; () banked
  5973  0183C0  6FC4               	movwf	f_mount@fs& (0+255),b
  5974  0183C2  0E1B               	movlw	high _drive
  5975  0183C4  6FC5               	movwf	(f_mount@fs+1)& (0+255),b
  5976  0183C6  0EF9               	movlw	low STR_7
  5977  0183C8  6FC6               	movwf	f_mount@path& (0+255),b
  5978  0183CA  0EFF               	movlw	high STR_7
  5979  0183CC  6FC7               	movwf	(f_mount@path+1)& (0+255),b
  5980  0183CE  0E01               	movlw	1
  5981  0183D0  6FC8               	movwf	f_mount@opt& (0+255),b
  5982  0183D2  EC44  F0C2         	call	_f_mount	;wreg free
  5983  0183D6  0900               	iorlw	0
  5984  0183D8  A4D8               	btfss	status,2,c
  5985  0183DA  EFF1  F0C1         	goto	u12151
  5986  0183DE  EFF3  F0C1         	goto	u12150
  5987  0183E2                     u12151:
  5988  0183E2  EF43  F0C2         	goto	l1261
  5989  0183E6                     u12150:
  5990  0183E6                     
  5991                           ;main.c: 13:         if (f_open(&file, "LOG.TXT", 0x30 | 0x02) == FR_OK) {
  5992  0183E6  0EDE               	movlw	low _file
  5993  0183E8  0100               	movlb	0	; () banked
  5994  0183EA  6FE8               	movwf	f_open@fp& (0+255),b
  5995  0183EC  0E1D               	movlw	high _file
  5996  0183EE  6FE9               	movwf	(f_open@fp+1)& (0+255),b
  5997  0183F0  0E81               	movlw	low STR_8
  5998  0183F2  6FEA               	movwf	f_open@path& (0+255),b
  5999  0183F4  0EFF               	movlw	high STR_8
  6000  0183F6  6FEB               	movwf	(f_open@path+1)& (0+255),b
  6001  0183F8  0E32               	movlw	50
  6002  0183FA  6FEC               	movwf	f_open@mode& (0+255),b
  6003  0183FC  ECC6  F08A         	call	_f_open	;wreg free
  6004  018400  0900               	iorlw	0
  6005  018402  A4D8               	btfss	status,2,c
  6006  018404  EF06  F0C2         	goto	u12161
  6007  018408  EF08  F0C2         	goto	u12160
  6008  01840C                     u12161:
  6009  01840C  EF43  F0C2         	goto	l1261
  6010  018410                     u12160:
  6011  018410                     
  6012                           ;main.c: 14:             f_write(&file, savedMessage, sizeof (savedMessage) - 1, &actual
      +                          Length);
  6013  018410  0EDE               	movlw	low _file
  6014  018412  0100               	movlb	0	; () banked
  6015  018414  6FB4               	movwf	f_write@fp& (0+255),b
  6016  018416  0E1D               	movlw	high _file
  6017  018418  6FB5               	movwf	(f_write@fp+1)& (0+255),b
  6018  01841A  0E6B               	movlw	low _savedMessage
  6019  01841C  6FB6               	movwf	f_write@buff& (0+255),b
  6020  01841E  0E01               	movlw	high _savedMessage
  6021  018420  6FB7               	movwf	(f_write@buff+1)& (0+255),b
  6022  018422  0E00               	movlw	0
  6023  018424  6FB9               	movwf	(f_write@btw+1)& (0+255),b
  6024  018426  0E0B               	movlw	11
  6025  018428  6FB8               	movwf	f_write@btw& (0+255),b
  6026  01842A  0EF8               	movlw	low Save_Data@actualLength
  6027  01842C  6FBA               	movwf	f_write@bw& (0+255),b
  6028  01842E  0E00               	movlw	high Save_Data@actualLength
  6029  018430  6FBB               	movwf	(f_write@bw+1)& (0+255),b
  6030  018432  ECA7  F086         	call	_f_write	;wreg free
  6031                           
  6032                           ;main.c: 15:             f_write(&file, newLine, sizeof (newLine) - 1, &actualLength);
  6033  018436  0EDE               	movlw	low _file
  6034  018438  0100               	movlb	0	; () banked
  6035  01843A  6FB4               	movwf	f_write@fp& (0+255),b
  6036  01843C  0E1D               	movlw	high _file
  6037  01843E  6FB5               	movwf	(f_write@fp+1)& (0+255),b
  6038  018440  0EF5               	movlw	low Save_Data@newLine
  6039  018442  6FB6               	movwf	f_write@buff& (0+255),b
  6040  018444  0E00               	movlw	high Save_Data@newLine
  6041  018446  6FB7               	movwf	(f_write@buff+1)& (0+255),b
  6042  018448  0E00               	movlw	0
  6043  01844A  6FB9               	movwf	(f_write@btw+1)& (0+255),b
  6044  01844C  0E02               	movlw	2
  6045  01844E  6FB8               	movwf	f_write@btw& (0+255),b
  6046  018450  0EF8               	movlw	low Save_Data@actualLength
  6047  018452  6FBA               	movwf	f_write@bw& (0+255),b
  6048  018454  0E00               	movlw	high Save_Data@actualLength
  6049  018456  6FBB               	movwf	(f_write@bw+1)& (0+255),b
  6050  018458  ECA7  F086         	call	_f_write	;wreg free
  6051                           
  6052                           ;main.c: 16:             f_sync(&file);
  6053  01845C  0EDE               	movlw	low _file
  6054  01845E  0100               	movlb	0	; () banked
  6055  018460  6F78               	movwf	f_sync@fp& (0+255),b
  6056  018462  0E1D               	movlw	high _file
  6057  018464  6F79               	movwf	(f_sync@fp+1)& (0+255),b
  6058  018466  EC0E  F0B1         	call	_f_sync	;wreg free
  6059  01846A                     
  6060                           ;main.c: 17:             memset(savedMessage, 0, sizeof savedMessage);
  6061  01846A  0E6B               	movlw	low _savedMessage
  6062  01846C  6E01               	movwf	memset@dest^0,c
  6063  01846E  0E01               	movlw	high _savedMessage
  6064  018470  6E02               	movwf	(memset@dest+1)^0,c
  6065  018472  0E00               	movlw	0
  6066  018474  6E04               	movwf	(memset@c+1)^0,c
  6067  018476  0E00               	movlw	0
  6068  018478  6E03               	movwf	memset@c^0,c
  6069  01847A  0E00               	movlw	0
  6070  01847C  6E06               	movwf	(memset@n+1)^0,c
  6071  01847E  0E0C               	movlw	12
  6072  018480  6E05               	movwf	memset@n^0,c
  6073  018482  ECB0  F0B8         	call	_memset	;wreg free
  6074  018486                     l1261:
  6075  018486  0012               	return		;funcret
  6076  018488                     __end_of_Save_Data:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _f_write *****************
  6080 ;; Defined at:
  6081 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  fp              2   84[BANK0 ] PTR struct .
  6084 ;;		 -> file(546), 
  6085 ;;  buff            2   86[BANK0 ] PTR const void 
  6086 ;;		 -> savedMessage(12), Save_Data@newLine(3), 
  6087 ;;  btw             2   88[BANK0 ] unsigned int 
  6088 ;;  bw              2   90[BANK0 ] PTR unsigned int 
  6089 ;;		 -> Save_Data@actualLength(2), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  clst            4  119[BANK0 ] unsigned long 
  6092 ;;  sect            4  115[BANK0 ] unsigned long 
  6093 ;;  fs              2  125[BANK0 ] PTR struct .
  6094 ;;		 -> drive(563), NULL(0), 
  6095 ;;  wcnt            2  123[BANK0 ] unsigned int 
  6096 ;;  cc              2  113[BANK0 ] unsigned int 
  6097 ;;  csect           2  111[BANK0 ] unsigned int 
  6098 ;;  wbuff           2  109[BANK0 ] PTR const unsigned char 
  6099 ;;		 -> savedMessage(12), Save_Data@newLine(3), 
  6100 ;;  res             1  108[BANK0 ] enum E68
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      enum E68
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6110 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Totals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;Total ram usage:       43 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    9
  6117 ;; This function calls:
  6118 ;;		_clst2sect
  6119 ;;		_create_chain
  6120 ;;		_disk_read
  6121 ;;		_disk_write
  6122 ;;		_mem_cpy
  6123 ;;		_validate
  6124 ;; This function is called by:
  6125 ;;		_Save_Data
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text19
  6130  010D4E                     __ptext19:
  6131                           	callstack 0
  6132  010D4E                     _f_write:
  6133                           	callstack 13
  6134  010D4E                     
  6135                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  6136  010D4E  C0B6  F0CD         	movff	f_write@buff,f_write@wbuff
  6137  010D52  C0B7  F0CE         	movff	f_write@buff+1,f_write@wbuff+1
  6138  010D56                     
  6139                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  6140  010D56  0060  F2EB  FFD9   	movff	f_write@bw,fsr2l
  6141  010D5C  0060  F2EF  FFDA   	movff	f_write@bw+1,fsr2h
  6142  010D62  0E00               	movlw	0
  6143  010D64  6EDE               	movwf	postinc2,c
  6144  010D66  0E00               	movlw	0
  6145  010D68  6EDD               	movwf	postdec2,c
  6146  010D6A                     
  6147                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  6148  010D6A  C0B4  F005         	movff	f_write@fp,validate@obj
  6149  010D6E  C0B5  F006         	movff	f_write@fp+1,validate@obj+1
  6150  010D72  0EDD               	movlw	low f_write@fs
  6151  010D74  6E07               	movwf	validate@rfs^0,c
  6152  010D76  0E00               	movlw	high f_write@fs
  6153  010D78  6E08               	movwf	(validate@rfs+1)^0,c
  6154  010D7A  EC36  F0C0         	call	_validate	;wreg free
  6155  010D7E  0100               	movlb	0	; () banked
  6156  010D80  6FCC               	movwf	f_write@res& (0+255),b
  6157  010D82                     
  6158                           ; BSR set to: 0
  6159                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  6160  010D82  51CC               	movf	f_write@res& (0+255),w,b
  6161  010D84  A4D8               	btfss	status,2,c
  6162  010D86  EFC7  F086         	goto	u11621
  6163  010D8A  EFC9  F086         	goto	u11620
  6164  010D8E                     u11621:
  6165  010D8E  EFC5  F08A         	goto	l560
  6166  010D92                     u11620:
  6167  010D92                     
  6168                           ; BSR set to: 0
  6169  010D92  EE20 F00F          	lfsr	2,15
  6170  010D96  51B4               	movf	f_write@fp& (0+255),w,b
  6171  010D98  26D9               	addwf	fsr2l,f,c
  6172  010D9A  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6173  010D9C  22DA               	addwfc	fsr2h,f,c
  6174  010D9E  50DF               	movf	indf2,w,c
  6175  010DA0  6FCC               	movwf	f_write@res& (0+255),b
  6176  010DA2  51CC               	movf	f_write@res& (0+255),w,b
  6177  010DA4  B4D8               	btfsc	status,2,c
  6178  010DA6  EFD7  F086         	goto	u11631
  6179  010DAA  EFD9  F086         	goto	u11630
  6180  010DAE                     u11631:
  6181  010DAE  EFDB  F086         	goto	l9731
  6182  010DB2                     u11630:
  6183  010DB2  EFC5  F08A         	goto	l560
  6184  010DB6                     l9731:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  6188  010DB6  EE20 F00E          	lfsr	2,14
  6189  010DBA  51B4               	movf	f_write@fp& (0+255),w,b
  6190  010DBC  26D9               	addwf	fsr2l,f,c
  6191  010DBE  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6192  010DC0  22DA               	addwfc	fsr2h,f,c
  6193  010DC2  B2DF               	btfsc	indf2,1,c
  6194  010DC4  EFE6  F086         	goto	u11641
  6195  010DC8  EFE8  F086         	goto	u11640
  6196  010DCC                     u11641:
  6197  010DCC  EFEA  F086         	goto	l9737
  6198  010DD0                     u11640:
  6199  010DD0  EFC5  F08A         	goto	l560
  6200  010DD4                     l9737:
  6201                           
  6202                           ; BSR set to: 0
  6203  010DD4  EE20 F010          	lfsr	2,16
  6204  010DD8  51B4               	movf	f_write@fp& (0+255),w,b
  6205  010DDA  26D9               	addwf	fsr2l,f,c
  6206  010DDC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6207  010DDE  22DA               	addwfc	fsr2h,f,c
  6208  010DE0  EE10 F010          	lfsr	1,16
  6209  010DE4  51B4               	movf	f_write@fp& (0+255),w,b
  6210  010DE6  26E1               	addwf	fsr1l,f,c
  6211  010DE8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6212  010DEA  22E2               	addwfc	fsr1h,f,c
  6213  010DEC  006F FF98  F0C0    	movff	postinc1,??_f_write+4
  6214  010DF2  006F FF98  F0C1    	movff	postinc1,??_f_write+5
  6215  010DF8  006F FF98  F0C2    	movff	postinc1,??_f_write+6
  6216  010DFE  006F FF98  F0C3    	movff	postinc1,??_f_write+7
  6217  010E04  51B8               	movf	f_write@btw& (0+255),w,b
  6218  010E06  25C0               	addwf	(??_f_write+4)& (0+255),w,b
  6219  010E08  6FC4               	movwf	(??_f_write+8)& (0+255),b
  6220  010E0A  51B9               	movf	(f_write@btw+1)& (0+255),w,b
  6221  010E0C  21C1               	addwfc	(??_f_write+5)& (0+255),w,b
  6222  010E0E  6FC5               	movwf	(??_f_write+9)& (0+255),b
  6223  010E10  0E00               	movlw	0
  6224  010E12  21C2               	addwfc	(??_f_write+6)& (0+255),w,b
  6225  010E14  6FC6               	movwf	(??_f_write+10)& (0+255),b
  6226  010E16  0E00               	movlw	0
  6227  010E18  21C3               	addwfc	(??_f_write+7)& (0+255),w,b
  6228  010E1A  6FC7               	movwf	(??_f_write+11)& (0+255),b
  6229  010E1C  50DE               	movf	postinc2,w,c
  6230  010E1E  5DC4               	subwf	(??_f_write+8)& (0+255),w,b
  6231  010E20  50DE               	movf	postinc2,w,c
  6232  010E22  59C5               	subwfb	(??_f_write+9)& (0+255),w,b
  6233  010E24  50DE               	movf	postinc2,w,c
  6234  010E26  59C6               	subwfb	(??_f_write+10)& (0+255),w,b
  6235  010E28  50DE               	movf	postinc2,w,c
  6236  010E2A  59C7               	subwfb	(??_f_write+11)& (0+255),w,b
  6237  010E2C  B0D8               	btfsc	status,0,c
  6238  010E2E  EF1B  F087         	goto	u11651
  6239  010E32  EF1D  F087         	goto	u11650
  6240  010E36                     u11651:
  6241  010E36  EFB4  F08A         	goto	l9845
  6242  010E3A                     u11650:
  6243  010E3A                     
  6244                           ; BSR set to: 0
  6245                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  6246  010E3A  EE20 F010          	lfsr	2,16
  6247  010E3E  51B4               	movf	f_write@fp& (0+255),w,b
  6248  010E40  26D9               	addwf	fsr2l,f,c
  6249  010E42  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6250  010E44  22DA               	addwfc	fsr2h,f,c
  6251  010E46  006F FF78  F0BC    	movff	postinc2,??_f_write
  6252  010E4C  006F FF74  F0BD    	movff	postdec2,??_f_write+1
  6253  010E52  1DBC               	comf	??_f_write& (0+255),w,b
  6254  010E54  6FB8               	movwf	f_write@btw& (0+255),b
  6255  010E56  1DBD               	comf	(??_f_write+1)& (0+255),w,b
  6256  010E58  6FB9               	movwf	(f_write@btw+1)& (0+255),b
  6257  010E5A  EFB4  F08A         	goto	l9845
  6258  010E5E                     l9741:
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  6262  010E5E  EE20 F010          	lfsr	2,16
  6263  010E62  51B4               	movf	f_write@fp& (0+255),w,b
  6264  010E64  26D9               	addwf	fsr2l,f,c
  6265  010E66  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6266  010E68  22DA               	addwfc	fsr2h,f,c
  6267  010E6A  0EFF               	movlw	255
  6268  010E6C  14DE               	andwf	postinc2,w,c
  6269  010E6E  6FBC               	movwf	??_f_write& (0+255),b
  6270  010E70  0E01               	movlw	1
  6271  010E72  14DE               	andwf	postinc2,w,c
  6272  010E74  6FBD               	movwf	(??_f_write+1)& (0+255),b
  6273  010E76  0E00               	movlw	0
  6274  010E78  14DE               	andwf	postinc2,w,c
  6275  010E7A  6FBE               	movwf	(??_f_write+2)& (0+255),b
  6276  010E7C  0E00               	movlw	0
  6277  010E7E  14DE               	andwf	postinc2,w,c
  6278  010E80  6FBF               	movwf	(??_f_write+3)& (0+255),b
  6279  010E82  51BC               	movf	??_f_write& (0+255),w,b
  6280  010E84  11BD               	iorwf	(??_f_write+1)& (0+255),w,b
  6281  010E86  11BE               	iorwf	(??_f_write+2)& (0+255),w,b
  6282  010E88  11BF               	iorwf	(??_f_write+3)& (0+255),w,b
  6283  010E8A  A4D8               	btfss	status,2,c
  6284  010E8C  EF4A  F087         	goto	u11661
  6285  010E90  EF4C  F087         	goto	u11660
  6286  010E94                     u11661:
  6287  010E94  EFE2  F089         	goto	l567
  6288  010E98                     u11660:
  6289  010E98                     
  6290                           ; BSR set to: 0
  6291                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  6292  010E98  EE20 F010          	lfsr	2,16
  6293  010E9C  51B4               	movf	f_write@fp& (0+255),w,b
  6294  010E9E  26D9               	addwf	fsr2l,f,c
  6295  010EA0  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6296  010EA2  22DA               	addwfc	fsr2h,f,c
  6297  010EA4  006F FF78  F0BC    	movff	postinc2,??_f_write
  6298  010EAA  006F FF78  F0BD    	movff	postinc2,??_f_write+1
  6299  010EB0  006F FF78  F0BE    	movff	postinc2,??_f_write+2
  6300  010EB6  006F FF78  F0BF    	movff	postinc2,??_f_write+3
  6301  010EBC  0E0A               	movlw	10
  6302  010EBE  EF66  F087         	goto	u11670
  6303  010EC2                     u11675:
  6304  010EC2  90D8               	bcf	status,0,c
  6305  010EC4  33BF               	rrcf	(??_f_write+3)& (0+255),f,b
  6306  010EC6  33BE               	rrcf	(??_f_write+2)& (0+255),f,b
  6307  010EC8  33BD               	rrcf	(??_f_write+1)& (0+255),f,b
  6308  010ECA  33BC               	rrcf	??_f_write& (0+255),f,b
  6309  010ECC                     u11670:
  6310  010ECC  2EE8               	decfsz	wreg,f,c
  6311  010ECE  EF61  F087         	goto	u11675
  6312  010ED2  0EFF               	movlw	255
  6313  010ED4  6FC0               	movwf	(??_f_write+4)& (0+255),b
  6314  010ED6  0EFF               	movlw	255
  6315  010ED8  6FC1               	movwf	(??_f_write+5)& (0+255),b
  6316  010EDA  EE20 F009          	lfsr	2,9
  6317  010EDE  51DD               	movf	f_write@fs& (0+255),w,b
  6318  010EE0  26D9               	addwf	fsr2l,f,c
  6319  010EE2  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6320  010EE4  22DA               	addwfc	fsr2h,f,c
  6321  010EE6  006F FF78  F0C2    	movff	postinc2,??_f_write+6
  6322  010EEC  006F FF74  F0C3    	movff	postdec2,??_f_write+7
  6323  010EF2  51C0               	movf	(??_f_write+4)& (0+255),w,b
  6324  010EF4  27C2               	addwf	(??_f_write+6)& (0+255),f,b
  6325  010EF6  51C1               	movf	(??_f_write+5)& (0+255),w,b
  6326  010EF8  23C3               	addwfc	(??_f_write+7)& (0+255),f,b
  6327  010EFA  51BC               	movf	??_f_write& (0+255),w,b
  6328  010EFC  15C2               	andwf	(??_f_write+6)& (0+255),w,b
  6329  010EFE  6FCF               	movwf	f_write@csect& (0+255),b
  6330  010F00  51BD               	movf	(??_f_write+1)& (0+255),w,b
  6331  010F02  15C3               	andwf	(??_f_write+7)& (0+255),w,b
  6332  010F04  6FD0               	movwf	(f_write@csect+1)& (0+255),b
  6333  010F06                     
  6334                           ; BSR set to: 0
  6335                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  6336  010F06  51CF               	movf	f_write@csect& (0+255),w,b
  6337  010F08  11D0               	iorwf	(f_write@csect+1)& (0+255),w,b
  6338  010F0A  A4D8               	btfss	status,2,c
  6339  010F0C  EF8A  F087         	goto	u11681
  6340  010F10  EF8C  F087         	goto	u11680
  6341  010F14                     u11681:
  6342  010F14  EF62  F088         	goto	l568
  6343  010F18                     u11680:
  6344  010F18                     
  6345                           ; BSR set to: 0
  6346                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  6347  010F18  EE20 F010          	lfsr	2,16
  6348  010F1C  51B4               	movf	f_write@fp& (0+255),w,b
  6349  010F1E  26D9               	addwf	fsr2l,f,c
  6350  010F20  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6351  010F22  22DA               	addwfc	fsr2h,f,c
  6352  010F24  50DE               	movf	postinc2,w,c
  6353  010F26  10DE               	iorwf	postinc2,w,c
  6354  010F28  10DE               	iorwf	postinc2,w,c
  6355  010F2A  10DE               	iorwf	postinc2,w,c
  6356  010F2C  A4D8               	btfss	status,2,c
  6357  010F2E  EF9B  F087         	goto	u11691
  6358  010F32  EF9D  F087         	goto	u11690
  6359  010F36                     u11691:
  6360  010F36  EFD2  F087         	goto	l9755
  6361  010F3A                     u11690:
  6362  010F3A                     
  6363                           ; BSR set to: 0
  6364                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  6365  010F3A  EE20 F006          	lfsr	2,6
  6366  010F3E  51B4               	movf	f_write@fp& (0+255),w,b
  6367  010F40  26D9               	addwf	fsr2l,f,c
  6368  010F42  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6369  010F44  22DA               	addwfc	fsr2h,f,c
  6370  010F46  006F FF78  F0D7    	movff	postinc2,f_write@clst
  6371  010F4C  006F FF78  F0D8    	movff	postinc2,f_write@clst+1
  6372  010F52  006F FF78  F0D9    	movff	postinc2,f_write@clst+2
  6373  010F58  006F FF78  F0DA    	movff	postinc2,f_write@clst+3
  6374  010F5E                     
  6375                           ; BSR set to: 0
  6376                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  6377  010F5E  51D7               	movf	f_write@clst& (0+255),w,b
  6378  010F60  11D8               	iorwf	(f_write@clst+1)& (0+255),w,b
  6379  010F62  11D9               	iorwf	(f_write@clst+2)& (0+255),w,b
  6380  010F64  11DA               	iorwf	(f_write@clst+3)& (0+255),w,b
  6381  010F66  A4D8               	btfss	status,2,c
  6382  010F68  EFB8  F087         	goto	u11701
  6383  010F6C  EFBA  F087         	goto	u11700
  6384  010F70                     u11701:
  6385  010F70  EFF2  F087         	goto	l9757
  6386  010F74                     u11700:
  6387  010F74                     
  6388                           ; BSR set to: 0
  6389                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  6390  010F74  C0B4  F097         	movff	f_write@fp,create_chain@obj
  6391  010F78  C0B5  F098         	movff	f_write@fp+1,create_chain@obj+1
  6392  010F7C  0E00               	movlw	0
  6393  010F7E  6F99               	movwf	create_chain@clst& (0+255),b
  6394  010F80  0E00               	movlw	0
  6395  010F82  6F9A               	movwf	(create_chain@clst+1)& (0+255),b
  6396  010F84  0E00               	movlw	0
  6397  010F86  6F9B               	movwf	(create_chain@clst+2)& (0+255),b
  6398  010F88  0E00               	movlw	0
  6399  010F8A  6F9C               	movwf	(create_chain@clst+3)& (0+255),b
  6400  010F8C  EC09  F096         	call	_create_chain	;wreg free
  6401  010F90  C097  F0D7         	movff	?_create_chain,f_write@clst
  6402  010F94  C098  F0D8         	movff	?_create_chain+1,f_write@clst+1
  6403  010F98  C099  F0D9         	movff	?_create_chain+2,f_write@clst+2
  6404  010F9C  C09A  F0DA         	movff	?_create_chain+3,f_write@clst+3
  6405  010FA0  EFF2  F087         	goto	l9757
  6406  010FA4                     l9755:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  6410  010FA4  C0B4  F097         	movff	f_write@fp,create_chain@obj
  6411  010FA8  C0B5  F098         	movff	f_write@fp+1,create_chain@obj+1
  6412  010FAC  EE20 F014          	lfsr	2,20
  6413  010FB0  51B4               	movf	f_write@fp& (0+255),w,b
  6414  010FB2  26D9               	addwf	fsr2l,f,c
  6415  010FB4  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6416  010FB6  22DA               	addwfc	fsr2h,f,c
  6417  010FB8  006F FF78  F099    	movff	postinc2,create_chain@clst
  6418  010FBE  006F FF78  F09A    	movff	postinc2,create_chain@clst+1
  6419  010FC4  006F FF78  F09B    	movff	postinc2,create_chain@clst+2
  6420  010FCA  006F FF78  F09C    	movff	postinc2,create_chain@clst+3
  6421  010FD0  EC09  F096         	call	_create_chain	;wreg free
  6422  010FD4  C097  F0D7         	movff	?_create_chain,f_write@clst
  6423  010FD8  C098  F0D8         	movff	?_create_chain+1,f_write@clst+1
  6424  010FDC  C099  F0D9         	movff	?_create_chain+2,f_write@clst+2
  6425  010FE0  C09A  F0DA         	movff	?_create_chain+3,f_write@clst+3
  6426  010FE4                     l9757:
  6427                           
  6428                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  6429  010FE4  0100               	movlb	0	; () banked
  6430  010FE6  51D7               	movf	f_write@clst& (0+255),w,b
  6431  010FE8  11D8               	iorwf	(f_write@clst+1)& (0+255),w,b
  6432  010FEA  11D9               	iorwf	(f_write@clst+2)& (0+255),w,b
  6433  010FEC  11DA               	iorwf	(f_write@clst+3)& (0+255),w,b
  6434  010FEE  A4D8               	btfss	status,2,c
  6435  010FF0  EFFC  F087         	goto	u11711
  6436  010FF4  EFFE  F087         	goto	u11710
  6437  010FF8                     u11711:
  6438  010FF8  EF00  F088         	goto	l9761
  6439  010FFC                     u11710:
  6440  010FFC  EFBD  F08A         	goto	l9847
  6441  011000                     l9761:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  6445  011000  05D7               	decf	f_write@clst& (0+255),w,b
  6446  011002  11D8               	iorwf	(f_write@clst+1)& (0+255),w,b
  6447  011004  11D9               	iorwf	(f_write@clst+2)& (0+255),w,b
  6448  011006  11DA               	iorwf	(f_write@clst+3)& (0+255),w,b
  6449  011008  A4D8               	btfss	status,2,c
  6450  01100A  EF09  F088         	goto	u11721
  6451  01100E  EF0B  F088         	goto	u11720
  6452  011012                     u11721:
  6453  011012  EF15  F088         	goto	l9767
  6454  011016                     u11720:
  6455  011016                     
  6456                           ; BSR set to: 0
  6457  011016  EE20 F00F          	lfsr	2,15
  6458  01101A  51B4               	movf	f_write@fp& (0+255),w,b
  6459  01101C  26D9               	addwf	fsr2l,f,c
  6460  01101E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6461  011020  22DA               	addwfc	fsr2h,f,c
  6462  011022  0E02               	movlw	2
  6463  011024  6EDF               	movwf	indf2,c
  6464  011026  EFC5  F08A         	goto	l560
  6465  01102A                     l9767:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  6469  01102A  29D7               	incf	f_write@clst& (0+255),w,b
  6470  01102C  E10A               	bnz	u11731
  6471  01102E  29D8               	incf	(f_write@clst+1)& (0+255),w,b
  6472  011030  E108               	bnz	u11731
  6473  011032  29D9               	incf	(f_write@clst+2)& (0+255),w,b
  6474  011034  E106               	bnz	u11731
  6475  011036  29DA               	incf	(f_write@clst+3)& (0+255),w,b
  6476  011038  A4D8               	btfss	status,2,c
  6477  01103A  EF21  F088         	goto	u11731
  6478  01103E  EF23  F088         	goto	u11730
  6479  011042                     u11731:
  6480  011042  EF2D  F088         	goto	l9773
  6481  011046                     u11730:
  6482  011046                     
  6483                           ; BSR set to: 0
  6484  011046  EE20 F00F          	lfsr	2,15
  6485  01104A  51B4               	movf	f_write@fp& (0+255),w,b
  6486  01104C  26D9               	addwf	fsr2l,f,c
  6487  01104E  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6488  011050  22DA               	addwfc	fsr2h,f,c
  6489  011052  0E01               	movlw	1
  6490  011054  6EDF               	movwf	indf2,c
  6491  011056  EFC5  F08A         	goto	l560
  6492  01105A                     l9773:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  6496  01105A  EE20 F014          	lfsr	2,20
  6497  01105E  51B4               	movf	f_write@fp& (0+255),w,b
  6498  011060  26D9               	addwf	fsr2l,f,c
  6499  011062  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6500  011064  22DA               	addwfc	fsr2h,f,c
  6501  011066  0060  F35F  FFDE   	movff	f_write@clst,postinc2
  6502  01106C  0060  F363  FFDE   	movff	f_write@clst+1,postinc2
  6503  011072  0060  F367  FFDE   	movff	f_write@clst+2,postinc2
  6504  011078  0060  F36B  FFDE   	movff	f_write@clst+3,postinc2
  6505                           
  6506                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  6507  01107E  EE20 F006          	lfsr	2,6
  6508  011082  51B4               	movf	f_write@fp& (0+255),w,b
  6509  011084  26D9               	addwf	fsr2l,f,c
  6510  011086  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6511  011088  22DA               	addwfc	fsr2h,f,c
  6512  01108A  50DE               	movf	postinc2,w,c
  6513  01108C  10DE               	iorwf	postinc2,w,c
  6514  01108E  10DE               	iorwf	postinc2,w,c
  6515  011090  10DE               	iorwf	postinc2,w,c
  6516  011092  A4D8               	btfss	status,2,c
  6517  011094  EF4E  F088         	goto	u11741
  6518  011098  EF50  F088         	goto	u11740
  6519  01109C                     u11741:
  6520  01109C  EF62  F088         	goto	l568
  6521  0110A0                     u11740:
  6522  0110A0                     
  6523                           ; BSR set to: 0
  6524  0110A0  EE20 F006          	lfsr	2,6
  6525  0110A4  51B4               	movf	f_write@fp& (0+255),w,b
  6526  0110A6  26D9               	addwf	fsr2l,f,c
  6527  0110A8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6528  0110AA  22DA               	addwfc	fsr2h,f,c
  6529  0110AC  0060  F35F  FFDE   	movff	f_write@clst,postinc2
  6530  0110B2  0060  F363  FFDE   	movff	f_write@clst+1,postinc2
  6531  0110B8  0060  F367  FFDE   	movff	f_write@clst+2,postinc2
  6532  0110BE  0060  F36B  FFDE   	movff	f_write@clst+3,postinc2
  6533  0110C4                     l568:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  6537  0110C4  EE20 F00E          	lfsr	2,14
  6538  0110C8  51B4               	movf	f_write@fp& (0+255),w,b
  6539  0110CA  26D9               	addwf	fsr2l,f,c
  6540  0110CC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6541  0110CE  22DA               	addwfc	fsr2h,f,c
  6542  0110D0  AEDF               	btfss	indf2,7,c
  6543  0110D2  EF6D  F088         	goto	u11751
  6544  0110D6  EF6F  F088         	goto	u11750
  6545  0110DA                     u11751:
  6546  0110DA  EFB0  F088         	goto	l9785
  6547  0110DE                     u11750:
  6548  0110DE                     
  6549                           ; BSR set to: 0
  6550                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  6551  0110DE  0E22               	movlw	34
  6552  0110E0  25B4               	addwf	f_write@fp& (0+255),w,b
  6553  0110E2  6E4C               	movwf	disk_write@buff^0,c
  6554  0110E4  0E00               	movlw	0
  6555  0110E6  21B5               	addwfc	(f_write@fp+1)& (0+255),w,b
  6556  0110E8  6E4D               	movwf	(disk_write@buff+1)^0,c
  6557  0110EA  EE20 F018          	lfsr	2,24
  6558  0110EE  51B4               	movf	f_write@fp& (0+255),w,b
  6559  0110F0  26D9               	addwf	fsr2l,f,c
  6560  0110F2  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6561  0110F4  22DA               	addwfc	fsr2h,f,c
  6562  0110F6  006F FF78  F04E    	movff	postinc2,disk_write@sector
  6563  0110FC  006F FF78  F04F    	movff	postinc2,disk_write@sector+1
  6564  011102  006F FF78  F050    	movff	postinc2,disk_write@sector+2
  6565  011108  006F FF78  F051    	movff	postinc2,disk_write@sector+3
  6566  01110E  0E00               	movlw	0
  6567  011110  6E53               	movwf	(disk_write@count+1)^0,c
  6568  011112  0E01               	movlw	1
  6569  011114  6E52               	movwf	disk_write@count^0,c
  6570  011116  EE20 F001          	lfsr	2,1
  6571  01111A  51DD               	movf	f_write@fs& (0+255),w,b
  6572  01111C  26D9               	addwf	fsr2l,f,c
  6573  01111E  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6574  011120  22DA               	addwfc	fsr2h,f,c
  6575  011122  50DF               	movf	indf2,w,c
  6576  011124  EC00  F0CE         	call	_disk_write
  6577  011128  0900               	iorlw	0
  6578  01112A  B4D8               	btfsc	status,2,c
  6579  01112C  EF9A  F088         	goto	u11761
  6580  011130  EF9C  F088         	goto	u11760
  6581  011134                     u11761:
  6582  011134  EFA7  F088         	goto	l9783
  6583  011138                     u11760:
  6584  011138  0100               	movlb	0	; () banked
  6585  01113A  EE20 F00F          	lfsr	2,15
  6586  01113E  51B4               	movf	f_write@fp& (0+255),w,b
  6587  011140  26D9               	addwf	fsr2l,f,c
  6588  011142  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6589  011144  22DA               	addwfc	fsr2h,f,c
  6590  011146  0E01               	movlw	1
  6591  011148  6EDF               	movwf	indf2,c
  6592  01114A  EFC5  F08A         	goto	l560
  6593  01114E                     l9783:
  6594                           
  6595                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  6596  01114E  0100               	movlb	0	; () banked
  6597  011150  EE20 F00E          	lfsr	2,14
  6598  011154  51B4               	movf	f_write@fp& (0+255),w,b
  6599  011156  26D9               	addwf	fsr2l,f,c
  6600  011158  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6601  01115A  22DA               	addwfc	fsr2h,f,c
  6602  01115C  0E7F               	movlw	127
  6603  01115E  16DF               	andwf	indf2,f,c
  6604  011160                     l9785:
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  6608  011160  C0DD  F00D         	movff	f_write@fs,clst2sect@fs
  6609  011164  C0DE  F00E         	movff	f_write@fs+1,clst2sect@fs+1
  6610  011168  EE20 F014          	lfsr	2,20
  6611  01116C  51B4               	movf	f_write@fp& (0+255),w,b
  6612  01116E  26D9               	addwf	fsr2l,f,c
  6613  011170  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6614  011172  22DA               	addwfc	fsr2h,f,c
  6615  011174  006F FF78  F00F    	movff	postinc2,clst2sect@clst
  6616  01117A  006F FF78  F010    	movff	postinc2,clst2sect@clst+1
  6617  011180  006F FF78  F011    	movff	postinc2,clst2sect@clst+2
  6618  011186  006F FF78  F012    	movff	postinc2,clst2sect@clst+3
  6619  01118C  ECE3  F0C4         	call	_clst2sect	;wreg free
  6620  011190  C00D  F0D3         	movff	?_clst2sect,f_write@sect
  6621  011194  C00E  F0D4         	movff	?_clst2sect+1,f_write@sect+1
  6622  011198  C00F  F0D5         	movff	?_clst2sect+2,f_write@sect+2
  6623  01119C  C010  F0D6         	movff	?_clst2sect+3,f_write@sect+3
  6624  0111A0                     
  6625                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  6626  0111A0  0100               	movlb	0	; () banked
  6627  0111A2  51D3               	movf	f_write@sect& (0+255),w,b
  6628  0111A4  11D4               	iorwf	(f_write@sect+1)& (0+255),w,b
  6629  0111A6  11D5               	iorwf	(f_write@sect+2)& (0+255),w,b
  6630  0111A8  11D6               	iorwf	(f_write@sect+3)& (0+255),w,b
  6631  0111AA  A4D8               	btfss	status,2,c
  6632  0111AC  EFDA  F088         	goto	u11771
  6633  0111B0  EFDC  F088         	goto	u11770
  6634  0111B4                     u11771:
  6635  0111B4  EFE6  F088         	goto	l9793
  6636  0111B8                     u11770:
  6637  0111B8                     
  6638                           ; BSR set to: 0
  6639  0111B8  EE20 F00F          	lfsr	2,15
  6640  0111BC  51B4               	movf	f_write@fp& (0+255),w,b
  6641  0111BE  26D9               	addwf	fsr2l,f,c
  6642  0111C0  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6643  0111C2  22DA               	addwfc	fsr2h,f,c
  6644  0111C4  0E02               	movlw	2
  6645  0111C6  6EDF               	movwf	indf2,c
  6646  0111C8  EFC5  F08A         	goto	l560
  6647  0111CC                     l9793:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  6651  0111CC  51CF               	movf	f_write@csect& (0+255),w,b
  6652  0111CE  27D3               	addwf	f_write@sect& (0+255),f,b
  6653  0111D0  51D0               	movf	(f_write@csect+1)& (0+255),w,b
  6654  0111D2  23D4               	addwfc	(f_write@sect+1)& (0+255),f,b
  6655  0111D4  0E00               	movlw	0
  6656  0111D6  23D5               	addwfc	(f_write@sect+2)& (0+255),f,b
  6657  0111D8  0E00               	movlw	0
  6658  0111DA  23D6               	addwfc	(f_write@sect+3)& (0+255),f,b
  6659  0111DC                     
  6660                           ; BSR set to: 0
  6661                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  6662  0111DC  C0B8  F0BC         	movff	f_write@btw,??_f_write
  6663  0111E0  C0B9  F0BD         	movff	f_write@btw+1,??_f_write+1
  6664  0111E4  0E09               	movlw	9
  6665  0111E6  6FBE               	movwf	(??_f_write+2)& (0+255),b
  6666  0111E8                     u11785:
  6667  0111E8  90D8               	bcf	status,0,c
  6668  0111EA  33BD               	rrcf	(??_f_write+1)& (0+255),f,b
  6669  0111EC  33BC               	rrcf	??_f_write& (0+255),f,b
  6670  0111EE  2FBE               	decfsz	(??_f_write+2)& (0+255),f,b
  6671  0111F0  EFF4  F088         	goto	u11785
  6672  0111F4  C0BC  F0D1         	movff	??_f_write,f_write@cc
  6673  0111F8  C0BD  F0D2         	movff	??_f_write+1,f_write@cc+1
  6674  0111FC                     
  6675                           ; BSR set to: 0
  6676                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  6677  0111FC  51D1               	movf	f_write@cc& (0+255),w,b
  6678  0111FE  11D2               	iorwf	(f_write@cc+1)& (0+255),w,b
  6679  011200  B4D8               	btfsc	status,2,c
  6680  011202  EF05  F089         	goto	u11791
  6681  011206  EF07  F089         	goto	u11790
  6682  01120A                     u11791:
  6683  01120A  EF6E  F089         	goto	l9811
  6684  01120E                     u11790:
  6685  01120E                     
  6686                           ; BSR set to: 0
  6687                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  6688  01120E  51D1               	movf	f_write@cc& (0+255),w,b
  6689  011210  25CF               	addwf	f_write@csect& (0+255),w,b
  6690  011212  6FBC               	movwf	??_f_write& (0+255),b
  6691  011214  51D2               	movf	(f_write@cc+1)& (0+255),w,b
  6692  011216  21D0               	addwfc	(f_write@csect+1)& (0+255),w,b
  6693  011218  6FBD               	movwf	(??_f_write+1)& (0+255),b
  6694  01121A  EE20 F009          	lfsr	2,9
  6695  01121E  51DD               	movf	f_write@fs& (0+255),w,b
  6696  011220  26D9               	addwf	fsr2l,f,c
  6697  011222  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6698  011224  22DA               	addwfc	fsr2h,f,c
  6699  011226  51BC               	movf	??_f_write& (0+255),w,b
  6700  011228  5CDE               	subwf	postinc2,w,c
  6701  01122A  51BD               	movf	(??_f_write+1)& (0+255),w,b
  6702  01122C  58DE               	subwfb	postinc2,w,c
  6703  01122E  B0D8               	btfsc	status,0,c
  6704  011230  EF1C  F089         	goto	u11801
  6705  011234  EF1E  F089         	goto	u11800
  6706  011238                     u11801:
  6707  011238  EF30  F089         	goto	l9803
  6708  01123C                     u11800:
  6709  01123C                     
  6710                           ; BSR set to: 0
  6711                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  6712  01123C  EE20 F009          	lfsr	2,9
  6713  011240  51DD               	movf	f_write@fs& (0+255),w,b
  6714  011242  26D9               	addwf	fsr2l,f,c
  6715  011244  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6716  011246  22DA               	addwfc	fsr2h,f,c
  6717  011248  006F FF78  F0BC    	movff	postinc2,??_f_write
  6718  01124E  006F FF74  F0BD    	movff	postdec2,??_f_write+1
  6719  011254  51CF               	movf	f_write@csect& (0+255),w,b
  6720  011256  5DBC               	subwf	??_f_write& (0+255),w,b
  6721  011258  6FD1               	movwf	f_write@cc& (0+255),b
  6722  01125A  51D0               	movf	(f_write@csect+1)& (0+255),w,b
  6723  01125C  59BD               	subwfb	(??_f_write+1)& (0+255),w,b
  6724  01125E  6FD2               	movwf	(f_write@cc+1)& (0+255),b
  6725  011260                     l9803:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  6729  011260  C0CD  F04C         	movff	f_write@wbuff,disk_write@buff
  6730  011264  C0CE  F04D         	movff	f_write@wbuff+1,disk_write@buff+1
  6731  011268  C0D3  F04E         	movff	f_write@sect,disk_write@sector
  6732  01126C  C0D4  F04F         	movff	f_write@sect+1,disk_write@sector+1
  6733  011270  C0D5  F050         	movff	f_write@sect+2,disk_write@sector+2
  6734  011274  C0D6  F051         	movff	f_write@sect+3,disk_write@sector+3
  6735  011278  C0D1  F052         	movff	f_write@cc,disk_write@count
  6736  01127C  C0D2  F053         	movff	f_write@cc+1,disk_write@count+1
  6737  011280  EE20 F001          	lfsr	2,1
  6738  011284  51DD               	movf	f_write@fs& (0+255),w,b
  6739  011286  26D9               	addwf	fsr2l,f,c
  6740  011288  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6741  01128A  22DA               	addwfc	fsr2h,f,c
  6742  01128C  50DF               	movf	indf2,w,c
  6743  01128E  EC00  F0CE         	call	_disk_write
  6744  011292  0900               	iorlw	0
  6745  011294  B4D8               	btfsc	status,2,c
  6746  011296  EF4F  F089         	goto	u11811
  6747  01129A  EF51  F089         	goto	u11810
  6748  01129E                     u11811:
  6749  01129E  EF5C  F089         	goto	l9809
  6750  0112A2                     u11810:
  6751  0112A2  0100               	movlb	0	; () banked
  6752  0112A4  EE20 F00F          	lfsr	2,15
  6753  0112A8  51B4               	movf	f_write@fp& (0+255),w,b
  6754  0112AA  26D9               	addwf	fsr2l,f,c
  6755  0112AC  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6756  0112AE  22DA               	addwfc	fsr2h,f,c
  6757  0112B0  0E01               	movlw	1
  6758  0112B2  6EDF               	movwf	indf2,c
  6759  0112B4  EFC5  F08A         	goto	l560
  6760  0112B8                     l9809:
  6761                           
  6762                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  6763  0112B8  C0D1  F0BC         	movff	f_write@cc,??_f_write
  6764  0112BC  C0D2  F0BD         	movff	f_write@cc+1,??_f_write+1
  6765  0112C0  0E09               	movlw	9
  6766  0112C2                     u11825:
  6767  0112C2  90D8               	bcf	status,0,c
  6768  0112C4  0100               	movlb	0	; () banked
  6769  0112C6  37BC               	rlcf	??_f_write& (0+255),f,b
  6770  0112C8  37BD               	rlcf	(??_f_write+1)& (0+255),f,b
  6771  0112CA  2EE8               	decfsz	wreg,f,c
  6772  0112CC  EF61  F089         	goto	u11825
  6773  0112D0  C0BC  F0DB         	movff	??_f_write,f_write@wcnt
  6774  0112D4  C0BD  F0DC         	movff	??_f_write+1,f_write@wcnt+1
  6775                           
  6776                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  6777  0112D8  EF42  F08A         	goto	l9831
  6778  0112DC                     l9811:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  6782  0112DC  EE20 F018          	lfsr	2,24
  6783  0112E0  51B4               	movf	f_write@fp& (0+255),w,b
  6784  0112E2  26D9               	addwf	fsr2l,f,c
  6785  0112E4  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6786  0112E6  22DA               	addwfc	fsr2h,f,c
  6787  0112E8  51D3               	movf	f_write@sect& (0+255),w,b
  6788  0112EA  18DE               	xorwf	postinc2,w,c
  6789  0112EC  E10F               	bnz	u11830
  6790  0112EE  51D4               	movf	(f_write@sect+1)& (0+255),w,b
  6791  0112F0  18DE               	xorwf	postinc2,w,c
  6792  0112F2  E10C               	bnz	u11830
  6793  0112F4  51D5               	movf	(f_write@sect+2)& (0+255),w,b
  6794  0112F6  18DE               	xorwf	postinc2,w,c
  6795  0112F8  E109               	bnz	u11830
  6796  0112FA  51D6               	movf	(f_write@sect+3)& (0+255),w,b
  6797  0112FC  18DE               	xorwf	postinc2,w,c
  6798  0112FE  B4D8               	btfsc	status,2,c
  6799  011300  EF84  F089         	goto	u11831
  6800  011304  EF86  F089         	goto	u11830
  6801  011308                     u11831:
  6802  011308  EFCF  F089         	goto	l9821
  6803  01130C                     u11830:
  6804  01130C                     
  6805                           ; BSR set to: 0
  6806  01130C  EE20 F00A          	lfsr	2,10
  6807  011310  51B4               	movf	f_write@fp& (0+255),w,b
  6808  011312  26D9               	addwf	fsr2l,f,c
  6809  011314  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6810  011316  22DA               	addwfc	fsr2h,f,c
  6811  011318  EE10 F010          	lfsr	1,16
  6812  01131C  51B4               	movf	f_write@fp& (0+255),w,b
  6813  01131E  26E1               	addwf	fsr1l,f,c
  6814  011320  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6815  011322  22E2               	addwfc	fsr1h,f,c
  6816  011324  50DE               	movf	postinc2,w,c
  6817  011326  5CE6               	subwf	postinc1,w,c
  6818  011328  50DE               	movf	postinc2,w,c
  6819  01132A  58E6               	subwfb	postinc1,w,c
  6820  01132C  50DE               	movf	postinc2,w,c
  6821  01132E  58E6               	subwfb	postinc1,w,c
  6822  011330  50DE               	movf	postinc2,w,c
  6823  011332  58E6               	subwfb	postinc1,w,c
  6824  011334  B0D8               	btfsc	status,0,c
  6825  011336  EF9F  F089         	goto	u11841
  6826  01133A  EFA1  F089         	goto	u11840
  6827  01133E                     u11841:
  6828  01133E  EFCF  F089         	goto	l9821
  6829  011342                     u11840:
  6830  011342                     
  6831                           ; BSR set to: 0
  6832  011342  0E22               	movlw	34
  6833  011344  25B4               	addwf	f_write@fp& (0+255),w,b
  6834  011346  6E49               	movwf	disk_read@buff^0,c
  6835  011348  0E00               	movlw	0
  6836  01134A  21B5               	addwfc	(f_write@fp+1)& (0+255),w,b
  6837  01134C  6E4A               	movwf	(disk_read@buff+1)^0,c
  6838  01134E  C0D3  F04B         	movff	f_write@sect,disk_read@sector
  6839  011352  C0D4  F04C         	movff	f_write@sect+1,disk_read@sector+1
  6840  011356  C0D5  F04D         	movff	f_write@sect+2,disk_read@sector+2
  6841  01135A  C0D6  F04E         	movff	f_write@sect+3,disk_read@sector+3
  6842  01135E  0E00               	movlw	0
  6843  011360  6E50               	movwf	(disk_read@count+1)^0,c
  6844  011362  0E01               	movlw	1
  6845  011364  6E4F               	movwf	disk_read@count^0,c
  6846  011366  EE20 F001          	lfsr	2,1
  6847  01136A  51DD               	movf	f_write@fs& (0+255),w,b
  6848  01136C  26D9               	addwf	fsr2l,f,c
  6849  01136E  51DE               	movf	(f_write@fs+1)& (0+255),w,b
  6850  011370  22DA               	addwfc	fsr2h,f,c
  6851  011372  50DF               	movf	indf2,w,c
  6852  011374  EC3A  F0CE         	call	_disk_read
  6853  011378  0900               	iorlw	0
  6854  01137A  B4D8               	btfsc	status,2,c
  6855  01137C  EFC2  F089         	goto	u11851
  6856  011380  EFC4  F089         	goto	u11850
  6857  011384                     u11851:
  6858  011384  EFCF  F089         	goto	l9821
  6859  011388                     u11850:
  6860  011388                     
  6861                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  6862  011388  0100               	movlb	0	; () banked
  6863  01138A  EE20 F00F          	lfsr	2,15
  6864  01138E  51B4               	movf	f_write@fp& (0+255),w,b
  6865  011390  26D9               	addwf	fsr2l,f,c
  6866  011392  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6867  011394  22DA               	addwfc	fsr2h,f,c
  6868  011396  0E01               	movlw	1
  6869  011398  6EDF               	movwf	indf2,c
  6870  01139A  EFC5  F08A         	goto	l560
  6871  01139E                     l9821:
  6872                           
  6873                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  6874  01139E  0100               	movlb	0	; () banked
  6875  0113A0  EE20 F018          	lfsr	2,24
  6876  0113A4  51B4               	movf	f_write@fp& (0+255),w,b
  6877  0113A6  26D9               	addwf	fsr2l,f,c
  6878  0113A8  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6879  0113AA  22DA               	addwfc	fsr2h,f,c
  6880  0113AC  0060  F34F  FFDE   	movff	f_write@sect,postinc2
  6881  0113B2  0060  F353  FFDE   	movff	f_write@sect+1,postinc2
  6882  0113B8  0060  F357  FFDE   	movff	f_write@sect+2,postinc2
  6883  0113BE  0060  F35B  FFDE   	movff	f_write@sect+3,postinc2
  6884  0113C4                     l567:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  6888  0113C4  0EFF               	movlw	255
  6889  0113C6  6FBC               	movwf	??_f_write& (0+255),b
  6890  0113C8  0E01               	movlw	1
  6891  0113CA  6FBD               	movwf	(??_f_write+1)& (0+255),b
  6892  0113CC  EE20 F010          	lfsr	2,16
  6893  0113D0  51B4               	movf	f_write@fp& (0+255),w,b
  6894  0113D2  26D9               	addwf	fsr2l,f,c
  6895  0113D4  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6896  0113D6  22DA               	addwfc	fsr2h,f,c
  6897  0113D8  006F FF78  F0BE    	movff	postinc2,??_f_write+2
  6898  0113DE  006F FF74  F0BF    	movff	postdec2,??_f_write+3
  6899  0113E4  51BC               	movf	??_f_write& (0+255),w,b
  6900  0113E6  17BE               	andwf	(??_f_write+2)& (0+255),f,b
  6901  0113E8  51BD               	movf	(??_f_write+1)& (0+255),w,b
  6902  0113EA  17BF               	andwf	(??_f_write+3)& (0+255),f,b
  6903  0113EC  51BE               	movf	(??_f_write+2)& (0+255),w,b
  6904  0113EE  0800               	sublw	0
  6905  0113F0  6FDB               	movwf	f_write@wcnt& (0+255),b
  6906  0113F2  51BF               	movf	(??_f_write+3)& (0+255),w,b
  6907  0113F4  A0D8               	btfss	status,0,c
  6908  0113F6  2AE8               	incf	wreg,f,c
  6909  0113F8  0802               	sublw	2
  6910  0113FA  6FDC               	movwf	(f_write@wcnt+1)& (0+255),b
  6911  0113FC                     
  6912                           ; BSR set to: 0
  6913                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  6914  0113FC  51DB               	movf	f_write@wcnt& (0+255),w,b
  6915  0113FE  5DB8               	subwf	f_write@btw& (0+255),w,b
  6916  011400  51DC               	movf	(f_write@wcnt+1)& (0+255),w,b
  6917  011402  59B9               	subwfb	(f_write@btw+1)& (0+255),w,b
  6918  011404  B0D8               	btfsc	status,0,c
  6919  011406  EF07  F08A         	goto	u11861
  6920  01140A  EF09  F08A         	goto	u11860
  6921  01140E                     u11861:
  6922  01140E  EF0D  F08A         	goto	l9827
  6923  011412                     u11860:
  6924  011412                     
  6925                           ; BSR set to: 0
  6926  011412  C0B8  F0DB         	movff	f_write@btw,f_write@wcnt
  6927  011416  C0B9  F0DC         	movff	f_write@btw+1,f_write@wcnt+1
  6928  01141A                     l9827:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  6932  01141A  0EFF               	movlw	255
  6933  01141C  6FBC               	movwf	??_f_write& (0+255),b
  6934  01141E  0E01               	movlw	1
  6935  011420  6FBD               	movwf	(??_f_write+1)& (0+255),b
  6936  011422  EE20 F010          	lfsr	2,16
  6937  011426  51B4               	movf	f_write@fp& (0+255),w,b
  6938  011428  26D9               	addwf	fsr2l,f,c
  6939  01142A  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6940  01142C  22DA               	addwfc	fsr2h,f,c
  6941  01142E  006F FF78  F0BE    	movff	postinc2,??_f_write+2
  6942  011434  006F FF74  F0BF    	movff	postdec2,??_f_write+3
  6943  01143A  51BC               	movf	??_f_write& (0+255),w,b
  6944  01143C  17BE               	andwf	(??_f_write+2)& (0+255),f,b
  6945  01143E  51BD               	movf	(??_f_write+1)& (0+255),w,b
  6946  011440  17BF               	andwf	(??_f_write+3)& (0+255),f,b
  6947  011442  C0B4  F0C0         	movff	f_write@fp,??_f_write+4
  6948  011446  C0B5  F0C1         	movff	f_write@fp+1,??_f_write+5
  6949  01144A  51BE               	movf	(??_f_write+2)& (0+255),w,b
  6950  01144C  27C0               	addwf	(??_f_write+4)& (0+255),f,b
  6951  01144E  51BF               	movf	(??_f_write+3)& (0+255),w,b
  6952  011450  23C1               	addwfc	(??_f_write+5)& (0+255),f,b
  6953  011452  0E22               	movlw	34
  6954  011454  25C0               	addwf	(??_f_write+4)& (0+255),w,b
  6955  011456  6E01               	movwf	mem_cpy@dst^0,c
  6956  011458  0E00               	movlw	0
  6957  01145A  21C1               	addwfc	(??_f_write+5)& (0+255),w,b
  6958  01145C  6E02               	movwf	(mem_cpy@dst+1)^0,c
  6959  01145E  C0CD  F003         	movff	f_write@wbuff,mem_cpy@src
  6960  011462  C0CE  F004         	movff	f_write@wbuff+1,mem_cpy@src+1
  6961  011466  C0DB  F005         	movff	f_write@wcnt,mem_cpy@cnt
  6962  01146A  C0DC  F006         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  6963  01146E  ECB1  F0CF         	call	_mem_cpy	;wreg free
  6964  011472                     
  6965                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  6966  011472  0100               	movlb	0	; () banked
  6967  011474  EE20 F00E          	lfsr	2,14
  6968  011478  51B4               	movf	f_write@fp& (0+255),w,b
  6969  01147A  26D9               	addwf	fsr2l,f,c
  6970  01147C  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  6971  01147E  22DA               	addwfc	fsr2h,f,c
  6972  011480  0E00               	movlw	0
  6973  011482  8EDB               	bsf	plusw2,7,c
  6974  011484                     l9831:
  6975                           
  6976                           ; BSR set to: 0
  6977  011484  51DB               	movf	f_write@wcnt& (0+255),w,b
  6978  011486  5FB8               	subwf	f_write@btw& (0+255),f,b
  6979  011488  51DC               	movf	(f_write@wcnt+1)& (0+255),w,b
  6980  01148A  5BB9               	subwfb	(f_write@btw+1)& (0+255),f,b
  6981  01148C                     
  6982                           ; BSR set to: 0
  6983  01148C  0060  F2EB  FFD9   	movff	f_write@bw,fsr2l
  6984  011492  0060  F2EF  FFDA   	movff	f_write@bw+1,fsr2h
  6985  011498  51DB               	movf	f_write@wcnt& (0+255),w,b
  6986  01149A  26DE               	addwf	postinc2,f,c
  6987  01149C  51DC               	movf	(f_write@wcnt+1)& (0+255),w,b
  6988  01149E  22DD               	addwfc	postdec2,f,c
  6989  0114A0                     
  6990                           ; BSR set to: 0
  6991  0114A0  51DB               	movf	f_write@wcnt& (0+255),w,b
  6992  0114A2  27CD               	addwf	f_write@wbuff& (0+255),f,b
  6993  0114A4  51DC               	movf	(f_write@wcnt+1)& (0+255),w,b
  6994  0114A6  23CE               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  6995  0114A8                     
  6996                           ; BSR set to: 0
  6997  0114A8  EE20 F010          	lfsr	2,16
  6998  0114AC  51B4               	movf	f_write@fp& (0+255),w,b
  6999  0114AE  26D9               	addwf	fsr2l,f,c
  7000  0114B0  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7001  0114B2  22DA               	addwfc	fsr2h,f,c
  7002  0114B4  51DB               	movf	f_write@wcnt& (0+255),w,b
  7003  0114B6  26DE               	addwf	postinc2,f,c
  7004  0114B8  51DC               	movf	(f_write@wcnt+1)& (0+255),w,b
  7005  0114BA  22DE               	addwfc	postinc2,f,c
  7006  0114BC  0E00               	movlw	0
  7007  0114BE  22DE               	addwfc	postinc2,f,c
  7008  0114C0  22DE               	addwfc	postinc2,f,c
  7009  0114C2                     
  7010                           ; BSR set to: 0
  7011  0114C2  EE20 F010          	lfsr	2,16
  7012  0114C6  51B4               	movf	f_write@fp& (0+255),w,b
  7013  0114C8  26D9               	addwf	fsr2l,f,c
  7014  0114CA  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7015  0114CC  22DA               	addwfc	fsr2h,f,c
  7016  0114CE  EE10 F00A          	lfsr	1,10
  7017  0114D2  51B4               	movf	f_write@fp& (0+255),w,b
  7018  0114D4  26E1               	addwf	fsr1l,f,c
  7019  0114D6  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7020  0114D8  22E2               	addwfc	fsr1h,f,c
  7021  0114DA  50DE               	movf	postinc2,w,c
  7022  0114DC  5CE6               	subwf	postinc1,w,c
  7023  0114DE  50DE               	movf	postinc2,w,c
  7024  0114E0  58E6               	subwfb	postinc1,w,c
  7025  0114E2  50DE               	movf	postinc2,w,c
  7026  0114E4  58E6               	subwfb	postinc1,w,c
  7027  0114E6  50DE               	movf	postinc2,w,c
  7028  0114E8  58E6               	subwfb	postinc1,w,c
  7029  0114EA  A0D8               	btfss	status,0,c
  7030  0114EC  EF7A  F08A         	goto	u11871
  7031  0114F0  EF7C  F08A         	goto	u11870
  7032  0114F4                     u11871:
  7033  0114F4  EF90  F08A         	goto	l9843
  7034  0114F8                     u11870:
  7035  0114F8                     
  7036                           ; BSR set to: 0
  7037  0114F8  EE20 F00A          	lfsr	2,10
  7038  0114FC  51B4               	movf	f_write@fp& (0+255),w,b
  7039  0114FE  26D9               	addwf	fsr2l,f,c
  7040  011500  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7041  011502  22DA               	addwfc	fsr2h,f,c
  7042  011504  006F FF78  F0C8    	movff	postinc2,_f_write$1263
  7043  01150A  006F FF78  F0C9    	movff	postinc2,_f_write$1263+1
  7044  011510  006F FF78  F0CA    	movff	postinc2,_f_write$1263+2
  7045  011516  006F FF78  F0CB    	movff	postinc2,_f_write$1263+3
  7046  01151C  EFA2  F08A         	goto	l589
  7047  011520                     l9843:
  7048                           
  7049                           ; BSR set to: 0
  7050  011520  EE20 F010          	lfsr	2,16
  7051  011524  51B4               	movf	f_write@fp& (0+255),w,b
  7052  011526  26D9               	addwf	fsr2l,f,c
  7053  011528  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7054  01152A  22DA               	addwfc	fsr2h,f,c
  7055  01152C  006F FF78  F0C8    	movff	postinc2,_f_write$1263
  7056  011532  006F FF78  F0C9    	movff	postinc2,_f_write$1263+1
  7057  011538  006F FF78  F0CA    	movff	postinc2,_f_write$1263+2
  7058  01153E  006F FF78  F0CB    	movff	postinc2,_f_write$1263+3
  7059  011544                     l589:
  7060                           
  7061                           ; BSR set to: 0
  7062  011544  EE20 F00A          	lfsr	2,10
  7063  011548  51B4               	movf	f_write@fp& (0+255),w,b
  7064  01154A  26D9               	addwf	fsr2l,f,c
  7065  01154C  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7066  01154E  22DA               	addwfc	fsr2h,f,c
  7067  011550  0060  F323  FFDE   	movff	_f_write$1263,postinc2
  7068  011556  0060  F327  FFDE   	movff	_f_write$1263+1,postinc2
  7069  01155C  0060  F32B  FFDE   	movff	_f_write$1263+2,postinc2
  7070  011562  0060  F32F  FFDE   	movff	_f_write$1263+3,postinc2
  7071  011568                     l9845:
  7072                           
  7073                           ; BSR set to: 0
  7074  011568  51B8               	movf	f_write@btw& (0+255),w,b
  7075  01156A  11B9               	iorwf	(f_write@btw+1)& (0+255),w,b
  7076  01156C  A4D8               	btfss	status,2,c
  7077  01156E  EFBB  F08A         	goto	u11881
  7078  011572  EFBD  F08A         	goto	u11880
  7079  011576                     u11881:
  7080  011576  EF2F  F087         	goto	l9741
  7081  01157A                     u11880:
  7082  01157A                     l9847:
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  7086  01157A  EE20 F00E          	lfsr	2,14
  7087  01157E  51B4               	movf	f_write@fp& (0+255),w,b
  7088  011580  26D9               	addwf	fsr2l,f,c
  7089  011582  51B5               	movf	(f_write@fp+1)& (0+255),w,b
  7090  011584  22DA               	addwfc	fsr2h,f,c
  7091  011586  0E00               	movlw	0
  7092  011588  8CDB               	bsf	plusw2,6,c
  7093  01158A                     l560:
  7094                           
  7095                           ; BSR set to: 0
  7096  01158A  0012               	return		;funcret
  7097  01158C                     __end_of_f_write:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _f_sync *****************
  7101 ;; Defined at:
  7102 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  fp              2   24[BANK0 ] PTR struct .
  7105 ;;		 -> file(546), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  tm              4    0        unsigned long 
  7108 ;;  fs              2   33[BANK0 ] PTR struct .
  7109 ;;		 -> drive(563), NULL(0), 
  7110 ;;  dir             2   31[BANK0 ] PTR unsigned char 
  7111 ;;		 -> drive(563), NULL(0), 
  7112 ;;  res             1   30[BANK0 ] enum E68
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      enum E68
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;Total ram usage:       11 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    7
  7129 ;; This function calls:
  7130 ;;		_disk_write
  7131 ;;		_move_window
  7132 ;;		_st_clust
  7133 ;;		_st_dword
  7134 ;;		_st_word
  7135 ;;		_sync_fs
  7136 ;;		_validate
  7137 ;; This function is called by:
  7138 ;;		_f_close
  7139 ;;		_Save_Data
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text20
  7144  01621C                     __ptext20:
  7145                           	callstack 0
  7146  01621C                     _f_sync:
  7147                           	callstack 20
  7148  01621C                     
  7149                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
  7150  01621C  C078  F005         	movff	f_sync@fp,validate@obj
  7151  016220  C079  F006         	movff	f_sync@fp+1,validate@obj+1
  7152  016224  0E81               	movlw	low f_sync@fs
  7153  016226  6E07               	movwf	validate@rfs^0,c
  7154  016228  0E00               	movlw	high f_sync@fs
  7155  01622A  6E08               	movwf	(validate@rfs+1)^0,c
  7156  01622C  EC36  F0C0         	call	_validate	;wreg free
  7157  016230  0100               	movlb	0	; () banked
  7158  016232  6F7E               	movwf	f_sync@res& (0+255),b
  7159  016234                     
  7160                           ; BSR set to: 0
  7161                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
  7162  016234  517E               	movf	f_sync@res& (0+255),w,b
  7163  016236  A4D8               	btfss	status,2,c
  7164  016238  EF20  F0B1         	goto	u11891
  7165  01623C  EF22  F0B1         	goto	u11890
  7166  016240                     u11891:
  7167  016240  EF21  F0B2         	goto	l9887
  7168  016244                     u11890:
  7169  016244                     
  7170                           ; BSR set to: 0
  7171                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
  7172  016244  EE20 F00E          	lfsr	2,14
  7173  016248  5178               	movf	f_sync@fp& (0+255),w,b
  7174  01624A  26D9               	addwf	fsr2l,f,c
  7175  01624C  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7176  01624E  22DA               	addwfc	fsr2h,f,c
  7177  016250  ACDF               	btfss	indf2,6,c
  7178  016252  EF2D  F0B1         	goto	u11901
  7179  016256  EF2F  F0B1         	goto	u11900
  7180  01625A                     u11901:
  7181  01625A  EF21  F0B2         	goto	l9887
  7182  01625E                     u11900:
  7183  01625E                     
  7184                           ; BSR set to: 0
  7185                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
  7186  01625E  EE20 F00E          	lfsr	2,14
  7187  016262  5178               	movf	f_sync@fp& (0+255),w,b
  7188  016264  26D9               	addwf	fsr2l,f,c
  7189  016266  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7190  016268  22DA               	addwfc	fsr2h,f,c
  7191  01626A  AEDF               	btfss	indf2,7,c
  7192  01626C  EF3A  F0B1         	goto	u11911
  7193  016270  EF3C  F0B1         	goto	u11910
  7194  016274                     u11911:
  7195  016274  EF75  F0B1         	goto	l9867
  7196  016278                     u11910:
  7197  016278                     
  7198                           ; BSR set to: 0
  7199                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
  7200  016278  0E22               	movlw	34
  7201  01627A  2578               	addwf	f_sync@fp& (0+255),w,b
  7202  01627C  6E4C               	movwf	disk_write@buff^0,c
  7203  01627E  0E00               	movlw	0
  7204  016280  2179               	addwfc	(f_sync@fp+1)& (0+255),w,b
  7205  016282  6E4D               	movwf	(disk_write@buff+1)^0,c
  7206  016284  EE20 F018          	lfsr	2,24
  7207  016288  5178               	movf	f_sync@fp& (0+255),w,b
  7208  01628A  26D9               	addwf	fsr2l,f,c
  7209  01628C  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7210  01628E  22DA               	addwfc	fsr2h,f,c
  7211  016290  006F FF78  F04E    	movff	postinc2,disk_write@sector
  7212  016296  006F FF78  F04F    	movff	postinc2,disk_write@sector+1
  7213  01629C  006F FF78  F050    	movff	postinc2,disk_write@sector+2
  7214  0162A2  006F FF78  F051    	movff	postinc2,disk_write@sector+3
  7215  0162A8  0E00               	movlw	0
  7216  0162AA  6E53               	movwf	(disk_write@count+1)^0,c
  7217  0162AC  0E01               	movlw	1
  7218  0162AE  6E52               	movwf	disk_write@count^0,c
  7219  0162B0  EE20 F001          	lfsr	2,1
  7220  0162B4  5181               	movf	f_sync@fs& (0+255),w,b
  7221  0162B6  26D9               	addwf	fsr2l,f,c
  7222  0162B8  5182               	movf	(f_sync@fs+1)& (0+255),w,b
  7223  0162BA  22DA               	addwfc	fsr2h,f,c
  7224  0162BC  50DF               	movf	indf2,w,c
  7225  0162BE  EC00  F0CE         	call	_disk_write
  7226  0162C2  0900               	iorlw	0
  7227  0162C4  B4D8               	btfsc	status,2,c
  7228  0162C6  EF67  F0B1         	goto	u11921
  7229  0162CA  EF69  F0B1         	goto	u11920
  7230  0162CE                     u11921:
  7231  0162CE  EF6C  F0B1         	goto	l9865
  7232  0162D2                     u11920:
  7233  0162D2  0E01               	movlw	1
  7234  0162D4  EF22  F0B2         	goto	l596
  7235  0162D8                     l9865:
  7236                           
  7237                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
  7238  0162D8  0100               	movlb	0	; () banked
  7239  0162DA  EE20 F00E          	lfsr	2,14
  7240  0162DE  5178               	movf	f_sync@fp& (0+255),w,b
  7241  0162E0  26D9               	addwf	fsr2l,f,c
  7242  0162E2  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7243  0162E4  22DA               	addwfc	fsr2h,f,c
  7244  0162E6  0E7F               	movlw	127
  7245  0162E8  16DF               	andwf	indf2,f,c
  7246  0162EA                     l9867:
  7247  0162EA                     
  7248                           ; BSR set to: 0
  7249                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
  7250  0162EA  C081  F070         	movff	f_sync@fs,move_window@fs
  7251  0162EE  C082  F071         	movff	f_sync@fs+1,move_window@fs+1
  7252  0162F2  EE20 F01C          	lfsr	2,28
  7253  0162F6  5178               	movf	f_sync@fp& (0+255),w,b
  7254  0162F8  26D9               	addwf	fsr2l,f,c
  7255  0162FA  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7256  0162FC  22DA               	addwfc	fsr2h,f,c
  7257  0162FE  006F FF78  F072    	movff	postinc2,move_window@sector
  7258  016304  006F FF78  F073    	movff	postinc2,move_window@sector+1
  7259  01630A  006F FF78  F074    	movff	postinc2,move_window@sector+2
  7260  016310  006F FF78  F075    	movff	postinc2,move_window@sector+3
  7261  016316  ECFC  F0C6         	call	_move_window	;wreg free
  7262  01631A  0100               	movlb	0	; () banked
  7263  01631C  6F7E               	movwf	f_sync@res& (0+255),b
  7264  01631E                     
  7265                           ; BSR set to: 0
  7266                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
  7267  01631E  517E               	movf	f_sync@res& (0+255),w,b
  7268  016320  A4D8               	btfss	status,2,c
  7269  016322  EF95  F0B1         	goto	u11931
  7270  016326  EF97  F0B1         	goto	u11930
  7271  01632A                     u11931:
  7272  01632A  EF21  F0B2         	goto	l9887
  7273  01632E                     u11930:
  7274  01632E                     
  7275                           ; BSR set to: 0
  7276                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
  7277  01632E  EE20 F020          	lfsr	2,32
  7278  016332  5178               	movf	f_sync@fp& (0+255),w,b
  7279  016334  26D9               	addwf	fsr2l,f,c
  7280  016336  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7281  016338  22DA               	addwfc	fsr2h,f,c
  7282  01633A  006F FF78  F07F    	movff	postinc2,f_sync@dir
  7283  016340  006F FF74  F080    	movff	postdec2,f_sync@dir+1
  7284                           
  7285                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
  7286  016346  EE20 F00B          	lfsr	2,11
  7287  01634A  517F               	movf	f_sync@dir& (0+255),w,b
  7288  01634C  26D9               	addwf	fsr2l,f,c
  7289  01634E  5180               	movf	(f_sync@dir+1)& (0+255),w,b
  7290  016350  22DA               	addwfc	fsr2h,f,c
  7291  016352  0E00               	movlw	0
  7292  016354  8ADB               	bsf	plusw2,5,c
  7293  016356                     
  7294                           ; BSR set to: 0
  7295                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
  7296  016356  0060  F1E3  FFD9   	movff	f_sync@fp,fsr2l
  7297  01635C  0060  F1E7  FFDA   	movff	f_sync@fp+1,fsr2h
  7298  016362  006F FF78  F005    	movff	postinc2,st_clust@fs
  7299  016368  006F FF74  F006    	movff	postdec2,st_clust@fs+1
  7300  01636E  C07F  F007         	movff	f_sync@dir,st_clust@dir
  7301  016372  C080  F008         	movff	f_sync@dir+1,st_clust@dir+1
  7302  016376  EE20 F006          	lfsr	2,6
  7303  01637A  5178               	movf	f_sync@fp& (0+255),w,b
  7304  01637C  26D9               	addwf	fsr2l,f,c
  7305  01637E  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7306  016380  22DA               	addwfc	fsr2h,f,c
  7307  016382  006F FF78  F009    	movff	postinc2,st_clust@cl
  7308  016388  006F FF78  F00A    	movff	postinc2,st_clust@cl+1
  7309  01638E  006F FF78  F00B    	movff	postinc2,st_clust@cl+2
  7310  016394  006F FF78  F00C    	movff	postinc2,st_clust@cl+3
  7311  01639A  EC44  F0D1         	call	_st_clust	;wreg free
  7312  01639E                     
  7313                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
  7314  01639E  0E1C               	movlw	28
  7315  0163A0  0100               	movlb	0	; () banked
  7316  0163A2  257F               	addwf	f_sync@dir& (0+255),w,b
  7317  0163A4  6E01               	movwf	st_dword@ptr^0,c
  7318  0163A6  0E00               	movlw	0
  7319  0163A8  2180               	addwfc	(f_sync@dir+1)& (0+255),w,b
  7320  0163AA  6E02               	movwf	(st_dword@ptr+1)^0,c
  7321  0163AC  EE20 F00A          	lfsr	2,10
  7322  0163B0  5178               	movf	f_sync@fp& (0+255),w,b
  7323  0163B2  26D9               	addwf	fsr2l,f,c
  7324  0163B4  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7325  0163B6  22DA               	addwfc	fsr2h,f,c
  7326  0163B8  006F FF78  F003    	movff	postinc2,st_dword@val
  7327  0163BE  006F FF78  F004    	movff	postinc2,st_dword@val+1
  7328  0163C4  006F FF78  F005    	movff	postinc2,st_dword@val+2
  7329  0163CA  006F FF78  F006    	movff	postinc2,st_dword@val+3
  7330  0163D0  ECCB  F0CC         	call	_st_dword	;wreg free
  7331  0163D4                     
  7332                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
  7333  0163D4  0E16               	movlw	22
  7334  0163D6  0100               	movlb	0	; () banked
  7335  0163D8  257F               	addwf	f_sync@dir& (0+255),w,b
  7336  0163DA  6E01               	movwf	st_dword@ptr^0,c
  7337  0163DC  0E00               	movlw	0
  7338  0163DE  2180               	addwfc	(f_sync@dir+1)& (0+255),w,b
  7339  0163E0  6E02               	movwf	(st_dword@ptr+1)^0,c
  7340  0163E2  0E00               	movlw	0
  7341  0163E4  6E03               	movwf	st_dword@val^0,c
  7342  0163E6  0E00               	movlw	0
  7343  0163E8  6E04               	movwf	(st_dword@val+1)^0,c
  7344  0163EA  0E69               	movlw	105
  7345  0163EC  6E05               	movwf	(st_dword@val+2)^0,c
  7346  0163EE  0E52               	movlw	82
  7347  0163F0  6E06               	movwf	(st_dword@val+3)^0,c
  7348  0163F2  ECCB  F0CC         	call	_st_dword	;wreg free
  7349  0163F6                     
  7350                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
  7351  0163F6  0E12               	movlw	18
  7352  0163F8  0100               	movlb	0	; () banked
  7353  0163FA  257F               	addwf	f_sync@dir& (0+255),w,b
  7354  0163FC  6E01               	movwf	st_word@ptr^0,c
  7355  0163FE  0E00               	movlw	0
  7356  016400  2180               	addwfc	(f_sync@dir+1)& (0+255),w,b
  7357  016402  6E02               	movwf	(st_word@ptr+1)^0,c
  7358  016404  0E00               	movlw	0
  7359  016406  6E04               	movwf	(st_word@val+1)^0,c
  7360  016408  0E00               	movlw	0
  7361  01640A  6E03               	movwf	st_word@val^0,c
  7362  01640C  ECB5  F0D2         	call	_st_word	;wreg free
  7363                           
  7364                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
  7365  016410  0100               	movlb	0	; () banked
  7366  016412  EE20 F003          	lfsr	2,3
  7367  016416  5181               	movf	f_sync@fs& (0+255),w,b
  7368  016418  26D9               	addwf	fsr2l,f,c
  7369  01641A  5182               	movf	(f_sync@fs+1)& (0+255),w,b
  7370  01641C  22DA               	addwfc	fsr2h,f,c
  7371  01641E  0E01               	movlw	1
  7372  016420  6EDF               	movwf	indf2,c
  7373  016422                     
  7374                           ; BSR set to: 0
  7375                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
  7376  016422  C081  F05B         	movff	f_sync@fs,sync_fs@fs
  7377  016426  C082  F05C         	movff	f_sync@fs+1,sync_fs@fs+1
  7378  01642A  EC23  F0B2         	call	_sync_fs	;wreg free
  7379  01642E  0100               	movlb	0	; () banked
  7380  016430  6F7E               	movwf	f_sync@res& (0+255),b
  7381  016432                     
  7382                           ; BSR set to: 0
  7383                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
  7384  016432  EE20 F00E          	lfsr	2,14
  7385  016436  5178               	movf	f_sync@fp& (0+255),w,b
  7386  016438  26D9               	addwf	fsr2l,f,c
  7387  01643A  5179               	movf	(f_sync@fp+1)& (0+255),w,b
  7388  01643C  22DA               	addwfc	fsr2h,f,c
  7389  01643E  0EBF               	movlw	191
  7390  016440  16DF               	andwf	indf2,f,c
  7391  016442                     l9887:
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
  7395  016442  517E               	movf	f_sync@res& (0+255),w,b
  7396  016444                     l596:
  7397  016444  0012               	return		;funcret
  7398  016446                     __end_of_f_sync:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _validate *****************
  7402 ;; Defined at:
  7403 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  obj             2    4[COMRAM] PTR struct .
  7406 ;;		 -> file(546), 
  7407 ;;  rfs             2    6[COMRAM] PTR PTR struct .
  7408 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  res             1   14[COMRAM] enum E68
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      enum E68
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7421 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7423 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7424 ;;Total ram usage:       11 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    2
  7427 ;; This function calls:
  7428 ;;		_disk_status
  7429 ;; This function is called by:
  7430 ;;		_f_write
  7431 ;;		_f_sync
  7432 ;;		_f_close
  7433 ;;		_f_read
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text21
  7438  01806C                     __ptext21:
  7439                           	callstack 0
  7440  01806C                     _validate:
  7441                           	callstack 25
  7442  01806C                     
  7443                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
  7444  01806C  0E09               	movlw	9
  7445  01806E  6E0F               	movwf	validate@res^0,c
  7446  018070                     
  7447                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
  7448  018070  5005               	movf	validate@obj^0,w,c
  7449  018072  1006               	iorwf	(validate@obj+1)^0,w,c
  7450  018074  B4D8               	btfsc	status,2,c
  7451  018076  EF3F  F0C0         	goto	u11011
  7452  01807A  EF41  F0C0         	goto	u11010
  7453  01807E                     u11011:
  7454  01807E  EFA1  F0C0         	goto	l472
  7455  018082                     u11010:
  7456  018082  0060  F017  FFD9   	movff	validate@obj,fsr2l
  7457  018088  0060  F01B  FFDA   	movff	validate@obj+1,fsr2h
  7458  01808E  50DE               	movf	postinc2,w,c
  7459  018090  10DE               	iorwf	postinc2,w,c
  7460  018092  B4D8               	btfsc	status,2,c
  7461  018094  EF4E  F0C0         	goto	u11021
  7462  018098  EF50  F0C0         	goto	u11020
  7463  01809C                     u11021:
  7464  01809C  EFA1  F0C0         	goto	l472
  7465  0180A0                     u11020:
  7466  0180A0  0060  F017  FFD9   	movff	validate@obj,fsr2l
  7467  0180A6  0060  F01B  FFDA   	movff	validate@obj+1,fsr2h
  7468  0180AC  006F FF78  F009    	movff	postinc2,??_validate
  7469  0180B2  006F FF74  F00A    	movff	postdec2,??_validate+1
  7470  0180B8  0060  F027  FFD9   	movff	??_validate,fsr2l
  7471  0180BE  0060  F02B  FFDA   	movff	??_validate+1,fsr2h
  7472  0180C4  50DF               	movf	indf2,w,c
  7473  0180C6  B4D8               	btfsc	status,2,c
  7474  0180C8  EF68  F0C0         	goto	u11031
  7475  0180CC  EF6A  F0C0         	goto	u11030
  7476  0180D0                     u11031:
  7477  0180D0  EFA1  F0C0         	goto	l472
  7478  0180D4                     u11030:
  7479  0180D4  0060  F017  FFD9   	movff	validate@obj,fsr2l
  7480  0180DA  0060  F01B  FFDA   	movff	validate@obj+1,fsr2h
  7481  0180E0  EE10 F005          	lfsr	1,5
  7482  0180E4  50DE               	movf	postinc2,w,c
  7483  0180E6  26E1               	addwf	fsr1l,f,c
  7484  0180E8  50DD               	movf	postdec2,w,c
  7485  0180EA  22E2               	addwfc	fsr1h,f,c
  7486  0180EC  EE20 F002          	lfsr	2,2
  7487  0180F0  5005               	movf	validate@obj^0,w,c
  7488  0180F2  26D9               	addwf	fsr2l,f,c
  7489  0180F4  5006               	movf	(validate@obj+1)^0,w,c
  7490  0180F6  22DA               	addwfc	fsr2h,f,c
  7491  0180F8  50E6               	movf	postinc1,w,c
  7492  0180FA  18DE               	xorwf	postinc2,w,c
  7493  0180FC  E107               	bnz	u11041
  7494  0180FE  50E6               	movf	postinc1,w,c
  7495  018100  18DE               	xorwf	postinc2,w,c
  7496  018102  A4D8               	btfss	status,2,c
  7497  018104  EF86  F0C0         	goto	u11041
  7498  018108  EF88  F0C0         	goto	u11040
  7499  01810C                     u11041:
  7500  01810C  EFA1  F0C0         	goto	l472
  7501  018110                     u11040:
  7502  018110                     
  7503                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
  7504  018110  0060  F017  FFD9   	movff	validate@obj,fsr2l
  7505  018116  0060  F01B  FFDA   	movff	validate@obj+1,fsr2h
  7506  01811C  EE10 F001          	lfsr	1,1
  7507  018120  50DE               	movf	postinc2,w,c
  7508  018122  26E1               	addwf	fsr1l,f,c
  7509  018124  50DD               	movf	postdec2,w,c
  7510  018126  22E2               	addwfc	fsr1h,f,c
  7511  018128  50E7               	movf	indf1,w,c
  7512  01812A  EC0D  F0CD         	call	_disk_status
  7513  01812E  6E09               	movwf	??_validate^0,c
  7514  018130  B009               	btfsc	??_validate^0,0,c
  7515  018132  EF9D  F0C0         	goto	u11051
  7516  018136  EF9F  F0C0         	goto	u11050
  7517  01813A                     u11051:
  7518  01813A  EFA1  F0C0         	goto	l472
  7519  01813E                     u11050:
  7520  01813E                     
  7521                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
  7522  01813E  0E00               	movlw	0
  7523  018140  6E0F               	movwf	validate@res^0,c
  7524  018142                     l472:
  7525                           
  7526                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
  7527  018142  500F               	movf	validate@res^0,w,c
  7528  018144  B4D8               	btfsc	status,2,c
  7529  018146  EFA7  F0C0         	goto	u11061
  7530  01814A  EFA9  F0C0         	goto	u11060
  7531  01814E                     u11061:
  7532  01814E  EFAF  F0C0         	goto	l9423
  7533  018152                     u11060:
  7534  018152  0E00               	movlw	0
  7535  018154  6E0D               	movwf	_validate$979^0,c
  7536  018156  0E00               	movlw	0
  7537  018158  6E0E               	movwf	(_validate$979+1)^0,c
  7538  01815A  EFBB  F0C0         	goto	l477
  7539  01815E                     l9423:
  7540  01815E  0060  F017  FFD9   	movff	validate@obj,fsr2l
  7541  018164  0060  F01B  FFDA   	movff	validate@obj+1,fsr2h
  7542  01816A  006F FF78  F00D    	movff	postinc2,_validate$979
  7543  018170  006F FF74  F00E    	movff	postdec2,_validate$979+1
  7544  018176                     l477:
  7545  018176  0060  F01F  FFD9   	movff	validate@rfs,fsr2l
  7546  01817C  0060  F023  FFDA   	movff	validate@rfs+1,fsr2h
  7547  018182  0060  F037  FFDE   	movff	_validate$979,postinc2
  7548  018188  0060  F03B  FFDD   	movff	_validate$979+1,postdec2
  7549  01818E                     
  7550                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
  7551  01818E  500F               	movf	validate@res^0,w,c
  7552  018190  0012               	return		;funcret
  7553  018192                     __end_of_validate:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _sync_fs *****************
  7557 ;; Defined at:
  7558 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  fs              2   90[COMRAM] PTR struct .
  7561 ;;		 -> drive(563), NULL(0), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  res             1   92[COMRAM] enum E68
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      enum E68
  7566 ;; Registers used:
  7567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;Total ram usage:       11 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    6
  7580 ;; This function calls:
  7581 ;;		_disk_ioctl
  7582 ;;		_disk_write
  7583 ;;		_mem_set
  7584 ;;		_st_dword
  7585 ;;		_st_word
  7586 ;;		_sync_window
  7587 ;; This function is called by:
  7588 ;;		_f_sync
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text22
  7593  016446                     __ptext22:
  7594                           	callstack 0
  7595  016446                     _sync_fs:
  7596                           	callstack 20
  7597  016446                     
  7598                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
  7599  016446  C05B  F058         	movff	sync_fs@fs,sync_window@fs
  7600  01644A  C05C  F059         	movff	sync_fs@fs+1,sync_window@fs+1
  7601  01644E  EC55  F0B5         	call	_sync_window	;wreg free
  7602  016452  6E5D               	movwf	sync_fs@res^0,c
  7603  016454                     
  7604                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
  7605  016454  505D               	movf	sync_fs@res^0,w,c
  7606  016456  A4D8               	btfss	status,2,c
  7607  016458  EF30  F0B2         	goto	u10231
  7608  01645C  EF32  F0B2         	goto	u10230
  7609  016460                     u10231:
  7610  016460  EF36  F0B3         	goto	l117
  7611  016464                     u10230:
  7612  016464                     
  7613                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
  7614  016464  0060  F16F  FFD9   	movff	sync_fs@fs,fsr2l
  7615  01646A  0060  F173  FFDA   	movff	sync_fs@fs+1,fsr2h
  7616  016470  0E03               	movlw	3
  7617  016472  18DE               	xorwf	postinc2,w,c
  7618  016474  A4D8               	btfss	status,2,c
  7619  016476  EF3F  F0B2         	goto	u10241
  7620  01647A  EF41  F0B2         	goto	u10240
  7621  01647E                     u10241:
  7622  01647E  EF1D  F0B3         	goto	l8969
  7623  016482                     u10240:
  7624  016482  EE20 F004          	lfsr	2,4
  7625  016486  505B               	movf	sync_fs@fs^0,w,c
  7626  016488  26D9               	addwf	fsr2l,f,c
  7627  01648A  505C               	movf	(sync_fs@fs+1)^0,w,c
  7628  01648C  22DA               	addwfc	fsr2h,f,c
  7629  01648E  04DE               	decf	postinc2,w,c
  7630  016490  A4D8               	btfss	status,2,c
  7631  016492  EF4D  F0B2         	goto	u10251
  7632  016496  EF4F  F0B2         	goto	u10250
  7633  01649A                     u10251:
  7634  01649A  EF1D  F0B3         	goto	l8969
  7635  01649E                     u10250:
  7636  01649E                     
  7637                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
  7638  01649E  0E33               	movlw	51
  7639  0164A0  245B               	addwf	sync_fs@fs^0,w,c
  7640  0164A2  6E01               	movwf	mem_set@dst^0,c
  7641  0164A4  0E00               	movlw	0
  7642  0164A6  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7643  0164A8  6E02               	movwf	(mem_set@dst+1)^0,c
  7644  0164AA  0E00               	movlw	0
  7645  0164AC  6E04               	movwf	(mem_set@val+1)^0,c
  7646  0164AE  0E00               	movlw	0
  7647  0164B0  6E03               	movwf	mem_set@val^0,c
  7648  0164B2  0E02               	movlw	2
  7649  0164B4  6E06               	movwf	(mem_set@cnt+1)^0,c
  7650  0164B6  0E00               	movlw	0
  7651  0164B8  6E05               	movwf	mem_set@cnt^0,c
  7652  0164BA  EC7D  F0D2         	call	_mem_set	;wreg free
  7653                           
  7654                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
  7655  0164BE  0E31               	movlw	49
  7656  0164C0  245B               	addwf	sync_fs@fs^0,w,c
  7657  0164C2  6E01               	movwf	st_word@ptr^0,c
  7658  0164C4  0E02               	movlw	2
  7659  0164C6  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7660  0164C8  6E02               	movwf	(st_word@ptr+1)^0,c
  7661  0164CA  0EAA               	movlw	170
  7662  0164CC  6E04               	movwf	(st_word@val+1)^0,c
  7663  0164CE  0E55               	movlw	85
  7664  0164D0  6E03               	movwf	st_word@val^0,c
  7665  0164D2  ECB5  F0D2         	call	_st_word	;wreg free
  7666                           
  7667                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
  7668  0164D6  0E33               	movlw	51
  7669  0164D8  245B               	addwf	sync_fs@fs^0,w,c
  7670  0164DA  6E01               	movwf	st_dword@ptr^0,c
  7671  0164DC  0E00               	movlw	0
  7672  0164DE  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7673  0164E0  6E02               	movwf	(st_dword@ptr+1)^0,c
  7674  0164E2  0E52               	movlw	82
  7675  0164E4  6E03               	movwf	st_dword@val^0,c
  7676  0164E6  0E52               	movlw	82
  7677  0164E8  6E04               	movwf	(st_dword@val+1)^0,c
  7678  0164EA  0E61               	movlw	97
  7679  0164EC  6E05               	movwf	(st_dword@val+2)^0,c
  7680  0164EE  0E41               	movlw	65
  7681  0164F0  6E06               	movwf	(st_dword@val+3)^0,c
  7682  0164F2  ECCB  F0CC         	call	_st_dword	;wreg free
  7683                           
  7684                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
  7685  0164F6  0E17               	movlw	23
  7686  0164F8  245B               	addwf	sync_fs@fs^0,w,c
  7687  0164FA  6E01               	movwf	st_dword@ptr^0,c
  7688  0164FC  0E02               	movlw	2
  7689  0164FE  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7690  016500  6E02               	movwf	(st_dword@ptr+1)^0,c
  7691  016502  0E72               	movlw	114
  7692  016504  6E03               	movwf	st_dword@val^0,c
  7693  016506  0E72               	movlw	114
  7694  016508  6E04               	movwf	(st_dword@val+1)^0,c
  7695  01650A  0E41               	movlw	65
  7696  01650C  6E05               	movwf	(st_dword@val+2)^0,c
  7697  01650E  0E61               	movlw	97
  7698  016510  6E06               	movwf	(st_dword@val+3)^0,c
  7699  016512  ECCB  F0CC         	call	_st_dword	;wreg free
  7700                           
  7701                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
  7702  016516  0E1B               	movlw	27
  7703  016518  245B               	addwf	sync_fs@fs^0,w,c
  7704  01651A  6E01               	movwf	st_dword@ptr^0,c
  7705  01651C  0E02               	movlw	2
  7706  01651E  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7707  016520  6E02               	movwf	(st_dword@ptr+1)^0,c
  7708  016522  EE20 F00F          	lfsr	2,15
  7709  016526  505B               	movf	sync_fs@fs^0,w,c
  7710  016528  26D9               	addwf	fsr2l,f,c
  7711  01652A  505C               	movf	(sync_fs@fs+1)^0,w,c
  7712  01652C  22DA               	addwfc	fsr2h,f,c
  7713  01652E  006F FF78  F003    	movff	postinc2,st_dword@val
  7714  016534  006F FF78  F004    	movff	postinc2,st_dword@val+1
  7715  01653A  006F FF78  F005    	movff	postinc2,st_dword@val+2
  7716  016540  006F FF78  F006    	movff	postinc2,st_dword@val+3
  7717  016546  ECCB  F0CC         	call	_st_dword	;wreg free
  7718                           
  7719                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
  7720  01654A  0E1F               	movlw	31
  7721  01654C  245B               	addwf	sync_fs@fs^0,w,c
  7722  01654E  6E01               	movwf	st_dword@ptr^0,c
  7723  016550  0E02               	movlw	2
  7724  016552  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7725  016554  6E02               	movwf	(st_dword@ptr+1)^0,c
  7726  016556  EE20 F00B          	lfsr	2,11
  7727  01655A  505B               	movf	sync_fs@fs^0,w,c
  7728  01655C  26D9               	addwf	fsr2l,f,c
  7729  01655E  505C               	movf	(sync_fs@fs+1)^0,w,c
  7730  016560  22DA               	addwfc	fsr2h,f,c
  7731  016562  006F FF78  F003    	movff	postinc2,st_dword@val
  7732  016568  006F FF78  F004    	movff	postinc2,st_dword@val+1
  7733  01656E  006F FF78  F005    	movff	postinc2,st_dword@val+2
  7734  016574  006F FF78  F006    	movff	postinc2,st_dword@val+3
  7735  01657A  ECCB  F0CC         	call	_st_dword	;wreg free
  7736  01657E                     
  7737                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
  7738  01657E  EE20 F01F          	lfsr	2,31
  7739  016582  505B               	movf	sync_fs@fs^0,w,c
  7740  016584  26D9               	addwf	fsr2l,f,c
  7741  016586  505C               	movf	(sync_fs@fs+1)^0,w,c
  7742  016588  22DA               	addwfc	fsr2h,f,c
  7743  01658A  006F FF78  F070    	movff	postinc2,??_sync_fs
  7744  016590  006F FF78  F071    	movff	postinc2,??_sync_fs+1
  7745  016596  006F FF78  F072    	movff	postinc2,??_sync_fs+2
  7746  01659C  006F FF78  F073    	movff	postinc2,??_sync_fs+3
  7747  0165A2  0E01               	movlw	1
  7748  0165A4  0100               	movlb	0	; () banked
  7749  0165A6  2570               	addwf	??_sync_fs& (0+255),w,b
  7750  0165A8  6F74               	movwf	(??_sync_fs+4)& (0+255),b
  7751  0165AA  0E00               	movlw	0
  7752  0165AC  2171               	addwfc	(??_sync_fs+1)& (0+255),w,b
  7753  0165AE  6F75               	movwf	(??_sync_fs+5)& (0+255),b
  7754  0165B0  0E00               	movlw	0
  7755  0165B2  2172               	addwfc	(??_sync_fs+2)& (0+255),w,b
  7756  0165B4  6F76               	movwf	(??_sync_fs+6)& (0+255),b
  7757  0165B6  0E00               	movlw	0
  7758  0165B8  2173               	addwfc	(??_sync_fs+3)& (0+255),w,b
  7759  0165BA  6F77               	movwf	(??_sync_fs+7)& (0+255),b
  7760  0165BC  EE20 F02F          	lfsr	2,47
  7761  0165C0  505B               	movf	sync_fs@fs^0,w,c
  7762  0165C2  26D9               	addwf	fsr2l,f,c
  7763  0165C4  505C               	movf	(sync_fs@fs+1)^0,w,c
  7764  0165C6  22DA               	addwfc	fsr2h,f,c
  7765  0165C8  0060  F1D3  FFDE   	movff	??_sync_fs+4,postinc2
  7766  0165CE  0060  F1D7  FFDE   	movff	??_sync_fs+5,postinc2
  7767  0165D4  0060  F1DB  FFDE   	movff	??_sync_fs+6,postinc2
  7768  0165DA  0060  F1DF  FFDE   	movff	??_sync_fs+7,postinc2
  7769  0165E0                     
  7770                           ; BSR set to: 0
  7771                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
  7772  0165E0  0E33               	movlw	51
  7773  0165E2  245B               	addwf	sync_fs@fs^0,w,c
  7774  0165E4  6E4C               	movwf	disk_write@buff^0,c
  7775  0165E6  0E00               	movlw	0
  7776  0165E8  205C               	addwfc	(sync_fs@fs+1)^0,w,c
  7777  0165EA  6E4D               	movwf	(disk_write@buff+1)^0,c
  7778  0165EC  EE20 F02F          	lfsr	2,47
  7779  0165F0  505B               	movf	sync_fs@fs^0,w,c
  7780  0165F2  26D9               	addwf	fsr2l,f,c
  7781  0165F4  505C               	movf	(sync_fs@fs+1)^0,w,c
  7782  0165F6  22DA               	addwfc	fsr2h,f,c
  7783  0165F8  006F FF78  F04E    	movff	postinc2,disk_write@sector
  7784  0165FE  006F FF78  F04F    	movff	postinc2,disk_write@sector+1
  7785  016604  006F FF78  F050    	movff	postinc2,disk_write@sector+2
  7786  01660A  006F FF78  F051    	movff	postinc2,disk_write@sector+3
  7787  016610  0E00               	movlw	0
  7788  016612  6E53               	movwf	(disk_write@count+1)^0,c
  7789  016614  0E01               	movlw	1
  7790  016616  6E52               	movwf	disk_write@count^0,c
  7791  016618  EE20 F001          	lfsr	2,1
  7792  01661C  505B               	movf	sync_fs@fs^0,w,c
  7793  01661E  26D9               	addwf	fsr2l,f,c
  7794  016620  505C               	movf	(sync_fs@fs+1)^0,w,c
  7795  016622  22DA               	addwfc	fsr2h,f,c
  7796  016624  50DF               	movf	indf2,w,c
  7797  016626  EC00  F0CE         	call	_disk_write
  7798  01662A                     
  7799                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
  7800  01662A  EE20 F004          	lfsr	2,4
  7801  01662E  505B               	movf	sync_fs@fs^0,w,c
  7802  016630  26D9               	addwf	fsr2l,f,c
  7803  016632  505C               	movf	(sync_fs@fs+1)^0,w,c
  7804  016634  22DA               	addwfc	fsr2h,f,c
  7805  016636  0E00               	movlw	0
  7806  016638  6EDF               	movwf	indf2,c
  7807  01663A                     l8969:
  7808                           
  7809                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
  7810  01663A  0E00               	movlw	0
  7811  01663C  6E01               	movwf	disk_ioctl@cmd^0,c
  7812  01663E  0E00               	movlw	0
  7813  016640  6E02               	movwf	disk_ioctl@buff^0,c
  7814  016642  0E00               	movlw	0
  7815  016644  6E03               	movwf	(disk_ioctl@buff+1)^0,c
  7816  016646  EE20 F001          	lfsr	2,1
  7817  01664A  505B               	movf	sync_fs@fs^0,w,c
  7818  01664C  26D9               	addwf	fsr2l,f,c
  7819  01664E  505C               	movf	(sync_fs@fs+1)^0,w,c
  7820  016650  22DA               	addwfc	fsr2h,f,c
  7821  016652  50DF               	movf	indf2,w,c
  7822  016654  ECCF  F0D2         	call	_disk_ioctl
  7823  016658  0900               	iorlw	0
  7824  01665A  B4D8               	btfsc	status,2,c
  7825  01665C  EF32  F0B3         	goto	u10261
  7826  016660  EF34  F0B3         	goto	u10260
  7827  016664                     u10261:
  7828  016664  EF36  F0B3         	goto	l117
  7829  016668                     u10260:
  7830  016668  0E01               	movlw	1
  7831  01666A  6E5D               	movwf	sync_fs@res^0,c
  7832  01666C                     l117:
  7833                           
  7834                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
  7835  01666C  505D               	movf	sync_fs@res^0,w,c
  7836  01666E  0012               	return		;funcret
  7837  016670                     __end_of_sync_fs:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function _disk_ioctl *****************
  7841 ;; Defined at:
  7842 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  pdrv            1    wreg     unsigned char 
  7845 ;;  cmd             1    0[COMRAM] unsigned char 
  7846 ;;  buff            2    1[COMRAM] PTR void 
  7847 ;;		 -> NULL(0), 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  pdrv            1    5[COMRAM] unsigned char 
  7850 ;;  res             1    0        enum E12
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      enum E208
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7863 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7864 ;;Total ram usage:        7 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_sync_fs
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text23
  7874  01A59E                     __ptext23:
  7875                           	callstack 0
  7876  01A59E                     _disk_ioctl:
  7877                           	callstack 25
  7878                           
  7879                           ;incstack = 0
  7880                           ;disk_ioctl@pdrv stored from wreg
  7881  01A59E  6E06               	movwf	disk_ioctl@pdrv^0,c
  7882  01A5A0                     
  7883                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
  7884  01A5A0  EFD5  F0D2         	goto	l8553
  7885  01A5A4                     l670:
  7886                           
  7887                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
  7888  01A5A4  0E00               	movlw	0
  7889  01A5A6  EFE7  F0D2         	goto	l671
  7890  01A5AA                     l8553:
  7891  01A5AA  5006               	movf	disk_ioctl@pdrv^0,w,c
  7892  01A5AC  6E04               	movwf	??_disk_ioctl^0,c
  7893  01A5AE  6A05               	clrf	(??_disk_ioctl+1)^0,c
  7894                           
  7895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7896                           ; Switch size 1, requested type "simple"
  7897                           ; Number of cases is 1, Range of values is 0 to 0
  7898                           ; switch strategies available:
  7899                           ; Name         Instructions Cycles
  7900                           ; simple_byte            4     3 (average)
  7901                           ;	Chosen strategy is simple_byte
  7902  01A5B0  5005               	movf	(??_disk_ioctl+1)^0,w,c
  7903  01A5B2  0A00               	xorlw	0	; case 0
  7904  01A5B4  B4D8               	btfsc	status,2,c
  7905  01A5B6  EFDF  F0D2         	goto	l11859
  7906  01A5BA  EFE6  F0D2         	goto	l8555
  7907  01A5BE                     l11859:
  7908                           
  7909                           ; Switch size 1, requested type "simple"
  7910                           ; Number of cases is 1, Range of values is 0 to 0
  7911                           ; switch strategies available:
  7912                           ; Name         Instructions Cycles
  7913                           ; simple_byte            4     3 (average)
  7914                           ;	Chosen strategy is simple_byte
  7915  01A5BE  5004               	movf	??_disk_ioctl^0,w,c
  7916  01A5C0  0A00               	xorlw	0	; case 0
  7917  01A5C2  B4D8               	btfsc	status,2,c
  7918  01A5C4  EFD2  F0D2         	goto	l670
  7919  01A5C8  EFE6  F0D2         	goto	l8555
  7920  01A5CC                     l8555:
  7921                           
  7922                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
  7923  01A5CC  0E04               	movlw	4
  7924  01A5CE                     l671:
  7925  01A5CE  0012               	return		;funcret
  7926  01A5D0                     __end_of_disk_ioctl:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _f_open *****************
  7930 ;; Defined at:
  7931 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  fp              2  136[BANK0 ] PTR struct .
  7934 ;;		 -> file(546), 
  7935 ;;  path            2  138[BANK0 ] PTR const unsigned char 
  7936 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
  7937 ;;  mode            1  140[BANK0 ] unsigned char 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  dj             40   29[BANK1 ] struct .
  7940 ;;  clst            4   22[BANK1 ] unsigned long 
  7941 ;;  ofs             4   18[BANK1 ] unsigned long 
  7942 ;;  cl              4   14[BANK1 ] unsigned long 
  7943 ;;  bcs             4   10[BANK1 ] unsigned long 
  7944 ;;  sc              4    4[BANK1 ] unsigned long 
  7945 ;;  dw              4    0[BANK1 ] unsigned long 
  7946 ;;  fs              2   26[BANK1 ] PTR struct .
  7947 ;;		 -> drive(563), NULL(0), 
  7948 ;;  res             1   28[BANK1 ] enum E68
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      enum E68
  7951 ;; Registers used:
  7952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7958 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Totals:         0      13      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;Total ram usage:       82 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:   12
  7965 ;; This function calls:
  7966 ;;		_clst2sect
  7967 ;;		_dir_register
  7968 ;;		_disk_read
  7969 ;;		_find_volume
  7970 ;;		_follow_path
  7971 ;;		_get_fat
  7972 ;;		_ld_clust
  7973 ;;		_ld_dword
  7974 ;;		_mem_set
  7975 ;;		_move_window
  7976 ;;		_remove_chain
  7977 ;;		_st_clust
  7978 ;;		_st_dword
  7979 ;; This function is called by:
  7980 ;;		_Save_Data
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text24
  7985  01158C                     __ptext24:
  7986                           	callstack 0
  7987  01158C                     _f_open:
  7988                           	callstack 10
  7989  01158C                     
  7990                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  7991  01158C  0100               	movlb	0	; () banked
  7992  01158E  51E8               	movf	f_open@fp& (0+255),w,b
  7993  011590  11E9               	iorwf	(f_open@fp+1)& (0+255),w,b
  7994  011592  A4D8               	btfss	status,2,c
  7995  011594  EFCE  F08A         	goto	u11291
  7996  011598  EFD0  F08A         	goto	u11290
  7997  01159C                     u11291:
  7998  01159C  EFD3  F08A         	goto	l9575
  7999  0115A0                     u11290:
  8000  0115A0                     
  8001                           ; BSR set to: 0
  8002  0115A0  0E09               	movlw	9
  8003  0115A2  EFDA  F08E         	goto	l489
  8004  0115A6                     l9575:
  8005  0115A6                     
  8006                           ; BSR set to: 0
  8007  0115A6  0E3F               	movlw	63
  8008  0115A8  17EC               	andwf	f_open@mode& (0+255),f,b
  8009  0115AA                     
  8010                           ; BSR set to: 0
  8011                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  8012  0115AA  0EEA               	movlw	low f_open@path
  8013  0115AC  6F7D               	movwf	find_volume@path& (0+255),b
  8014  0115AE  0E00               	movlw	high f_open@path
  8015  0115B0  6F7E               	movwf	(find_volume@path+1)& (0+255),b
  8016  0115B2  0E9C               	movlw	low f_open@fs
  8017  0115B4  6F7F               	movwf	find_volume@rfs& (0+255),b
  8018  0115B6  0E01               	movlw	high f_open@fs
  8019  0115B8  6F80               	movwf	(find_volume@rfs+1)& (0+255),b
  8020  0115BA  C0EC  F081         	movff	f_open@mode,find_volume@mode
  8021  0115BE  EC00  F080         	call	_find_volume	;wreg free
  8022  0115C2  0101               	movlb	1	; () banked
  8023  0115C4  6F9E               	movwf	f_open@res& (0+255),b
  8024  0115C6                     
  8025                           ; BSR set to: 1
  8026                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  8027  0115C6  519E               	movf	f_open@res& (0+255),w,b
  8028  0115C8  A4D8               	btfss	status,2,c
  8029  0115CA  EFE9  F08A         	goto	u11301
  8030  0115CE  EFEB  F08A         	goto	u11300
  8031  0115D2                     u11301:
  8032  0115D2  EFC6  F08E         	goto	l494
  8033  0115D6                     u11300:
  8034  0115D6                     
  8035                           ; BSR set to: 1
  8036                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  8037  0115D6  C19C  F19F         	movff	f_open@fs,f_open@dj
  8038  0115DA  C19D  F1A0         	movff	f_open@fs+1,f_open@dj+1
  8039  0115DE                     
  8040                           ; BSR set to: 1
  8041                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  8042  0115DE  0E9F               	movlw	low f_open@dj
  8043  0115E0  0100               	movlb	0	; () banked
  8044  0115E2  6FDA               	movwf	follow_path@dp& (0+255),b
  8045  0115E4  0E01               	movlw	high f_open@dj
  8046  0115E6  6FDB               	movwf	(follow_path@dp+1)& (0+255),b
  8047  0115E8  C0EA  F0DC         	movff	f_open@path,follow_path@path
  8048  0115EC  C0EB  F0DD         	movff	f_open@path+1,follow_path@path+1
  8049  0115F0  EC94  F0AE         	call	_follow_path	;wreg free
  8050  0115F4  0101               	movlb	1	; () banked
  8051  0115F6  6F9E               	movwf	f_open@res& (0+255),b
  8052  0115F8                     
  8053                           ; BSR set to: 1
  8054                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  8055  0115F8  519E               	movf	f_open@res& (0+255),w,b
  8056  0115FA  A4D8               	btfss	status,2,c
  8057  0115FC  EF02  F08B         	goto	u11311
  8058  011600  EF04  F08B         	goto	u11310
  8059  011604                     u11311:
  8060  011604  EF0D  F08B         	goto	l9595
  8061  011608                     u11310:
  8062  011608                     
  8063                           ; BSR set to: 1
  8064                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  8065  011608  AFC6               	btfss	(f_open@dj+39)& (0+255),7,b
  8066  01160A  EF09  F08B         	goto	u11321
  8067  01160E  EF0B  F08B         	goto	u11320
  8068  011612                     u11321:
  8069  011612  EF0D  F08B         	goto	l9595
  8070  011616                     u11320:
  8071  011616                     
  8072                           ; BSR set to: 1
  8073                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  8074  011616  0E06               	movlw	6
  8075  011618  6F9E               	movwf	f_open@res& (0+255),b
  8076  01161A                     l9595:
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  8080  01161A  C0EC  F0ED         	movff	f_open@mode,??_f_open
  8081  01161E  0E1C               	movlw	28
  8082  011620  0100               	movlb	0	; () banked
  8083  011622  17ED               	andwf	??_f_open& (0+255),f,b
  8084  011624  B4D8               	btfsc	status,2,c
  8085  011626  EF17  F08B         	goto	u11331
  8086  01162A  EF19  F08B         	goto	u11330
  8087  01162E                     u11331:
  8088  01162E  EF32  F08C         	goto	l9635
  8089  011632                     u11330:
  8090  011632                     
  8091                           ; BSR set to: 0
  8092                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  8093  011632  0101               	movlb	1	; () banked
  8094  011634  519E               	movf	f_open@res& (0+255),w,b
  8095  011636  B4D8               	btfsc	status,2,c
  8096  011638  EF20  F08B         	goto	u11341
  8097  01163C  EF22  F08B         	goto	u11340
  8098  011640                     u11341:
  8099  011640  EF38  F08B         	goto	l9605
  8100  011644                     u11340:
  8101  011644                     
  8102                           ; BSR set to: 1
  8103                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  8104  011644  0E04               	movlw	4
  8105  011646  199E               	xorwf	f_open@res& (0+255),w,b
  8106  011648  A4D8               	btfss	status,2,c
  8107  01164A  EF29  F08B         	goto	u11351
  8108  01164E  EF2B  F08B         	goto	u11350
  8109  011652                     u11351:
  8110  011652  EF34  F08B         	goto	l9603
  8111  011656                     u11350:
  8112  011656                     
  8113                           ; BSR set to: 1
  8114                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  8115  011656  0E9F               	movlw	low f_open@dj
  8116  011658  0100               	movlb	0	; () banked
  8117  01165A  6FDE               	movwf	dir_register@dp& (0+255),b
  8118  01165C  0E01               	movlw	high f_open@dj
  8119  01165E  6FDF               	movwf	(dir_register@dp+1)& (0+255),b
  8120  011660  EC4F  F0C1         	call	_dir_register	;wreg free
  8121  011664  0101               	movlb	1	; () banked
  8122  011666  6F9E               	movwf	f_open@res& (0+255),b
  8123  011668                     l9603:
  8124                           
  8125                           ; BSR set to: 1
  8126                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  8127  011668  0100               	movlb	0	; () banked
  8128  01166A  87EC               	bsf	f_open@mode& (0+255),3,b
  8129                           
  8130                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  8131  01166C  EF53  F08B         	goto	l500
  8132  011670                     l9605:
  8133                           
  8134                           ; BSR set to: 1
  8135                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  8136  011670  C1A3  F0ED         	movff	f_open@dj+4,??_f_open
  8137  011674  0E11               	movlw	17
  8138  011676  0100               	movlb	0	; () banked
  8139  011678  17ED               	andwf	??_f_open& (0+255),f,b
  8140  01167A  B4D8               	btfsc	status,2,c
  8141  01167C  EF42  F08B         	goto	u11361
  8142  011680  EF44  F08B         	goto	u11360
  8143  011684                     u11361:
  8144  011684  EF49  F08B         	goto	l501
  8145  011688                     u11360:
  8146  011688                     
  8147                           ; BSR set to: 0
  8148                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  8149  011688  0E07               	movlw	7
  8150  01168A  0101               	movlb	1	; () banked
  8151  01168C  6F9E               	movwf	f_open@res& (0+255),b
  8152                           
  8153                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  8154  01168E  EF53  F08B         	goto	l500
  8155  011692                     l501:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  8159  011692  A5EC               	btfss	f_open@mode& (0+255),2,b
  8160  011694  EF4E  F08B         	goto	u11371
  8161  011698  EF50  F08B         	goto	u11370
  8162  01169C                     u11371:
  8163  01169C  EF53  F08B         	goto	l500
  8164  0116A0                     u11370:
  8165  0116A0                     
  8166                           ; BSR set to: 0
  8167  0116A0  0E08               	movlw	8
  8168  0116A2  0101               	movlb	1	; () banked
  8169  0116A4  6F9E               	movwf	f_open@res& (0+255),b
  8170  0116A6                     l500:
  8171                           
  8172                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  8173  0116A6  0101               	movlb	1	; () banked
  8174  0116A8  519E               	movf	f_open@res& (0+255),w,b
  8175  0116AA  A4D8               	btfss	status,2,c
  8176  0116AC  EF5A  F08B         	goto	u11381
  8177  0116B0  EF5C  F08B         	goto	u11380
  8178  0116B4                     u11381:
  8179  0116B4  EF58  F08C         	goto	l507
  8180  0116B8                     u11380:
  8181  0116B8                     
  8182                           ; BSR set to: 1
  8183  0116B8  0100               	movlb	0	; () banked
  8184  0116BA  A7EC               	btfss	f_open@mode& (0+255),3,b
  8185  0116BC  EF62  F08B         	goto	u11391
  8186  0116C0  EF64  F08B         	goto	u11390
  8187  0116C4                     u11391:
  8188  0116C4  EF58  F08C         	goto	l507
  8189  0116C8                     u11390:
  8190  0116C8                     
  8191                           ; BSR set to: 0
  8192                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  8193  0116C8  C19C  F008         	movff	f_open@fs,ld_clust@fs
  8194  0116CC  C19D  F009         	movff	f_open@fs+1,ld_clust@fs+1
  8195  0116D0  C1B9  F00A         	movff	f_open@dj+26,ld_clust@dir
  8196  0116D4  C1BA  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  8197  0116D8  EC89  F0CC         	call	_ld_clust	;wreg free
  8198  0116DC  C008  F190         	movff	?_ld_clust,f_open@cl
  8199  0116E0  C009  F191         	movff	?_ld_clust+1,f_open@cl+1
  8200  0116E4  C00A  F192         	movff	?_ld_clust+2,f_open@cl+2
  8201  0116E8  C00B  F193         	movff	?_ld_clust+3,f_open@cl+3
  8202                           
  8203                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2021 - 1980) 
      +                          << 25 | (DWORD)3 << 21 | (DWORD)9 << 16));
  8204  0116EC  0E0E               	movlw	14
  8205  0116EE  0101               	movlb	1	; () banked
  8206  0116F0  25B9               	addwf	(f_open@dj+26)& (0+255),w,b
  8207  0116F2  6E01               	movwf	st_dword@ptr^0,c
  8208  0116F4  0E00               	movlw	0
  8209  0116F6  21BA               	addwfc	(f_open@dj+27)& (0+255),w,b
  8210  0116F8  6E02               	movwf	(st_dword@ptr+1)^0,c
  8211  0116FA  0E00               	movlw	0
  8212  0116FC  6E03               	movwf	st_dword@val^0,c
  8213  0116FE  0E00               	movlw	0
  8214  011700  6E04               	movwf	(st_dword@val+1)^0,c
  8215  011702  0E69               	movlw	105
  8216  011704  6E05               	movwf	(st_dword@val+2)^0,c
  8217  011706  0E52               	movlw	82
  8218  011708  6E06               	movwf	(st_dword@val+3)^0,c
  8219  01170A  ECCB  F0CC         	call	_st_dword	;wreg free
  8220  01170E                     
  8221                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  8222  01170E  0101               	movlb	1	; () banked
  8223  011710  EE20 F00B          	lfsr	2,11
  8224  011714  51B9               	movf	(f_open@dj+26)& (0+255),w,b
  8225  011716  26D9               	addwf	fsr2l,f,c
  8226  011718  51BA               	movf	(f_open@dj+27)& (0+255),w,b
  8227  01171A  22DA               	addwfc	fsr2h,f,c
  8228  01171C  0E20               	movlw	32
  8229  01171E  6EDF               	movwf	indf2,c
  8230  011720                     
  8231                           ; BSR set to: 1
  8232                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  8233  011720  C19C  F005         	movff	f_open@fs,st_clust@fs
  8234  011724  C19D  F006         	movff	f_open@fs+1,st_clust@fs+1
  8235  011728  C1B9  F007         	movff	f_open@dj+26,st_clust@dir
  8236  01172C  C1BA  F008         	movff	f_open@dj+27,st_clust@dir+1
  8237  011730  0E00               	movlw	0
  8238  011732  6E09               	movwf	st_clust@cl^0,c
  8239  011734  0E00               	movlw	0
  8240  011736  6E0A               	movwf	(st_clust@cl+1)^0,c
  8241  011738  0E00               	movlw	0
  8242  01173A  6E0B               	movwf	(st_clust@cl+2)^0,c
  8243  01173C  0E00               	movlw	0
  8244  01173E  6E0C               	movwf	(st_clust@cl+3)^0,c
  8245  011740  EC44  F0D1         	call	_st_clust	;wreg free
  8246  011744                     
  8247                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  8248  011744  0E1C               	movlw	28
  8249  011746  0101               	movlb	1	; () banked
  8250  011748  25B9               	addwf	(f_open@dj+26)& (0+255),w,b
  8251  01174A  6E01               	movwf	st_dword@ptr^0,c
  8252  01174C  0E00               	movlw	0
  8253  01174E  21BA               	addwfc	(f_open@dj+27)& (0+255),w,b
  8254  011750  6E02               	movwf	(st_dword@ptr+1)^0,c
  8255  011752  0E00               	movlw	0
  8256  011754  6E03               	movwf	st_dword@val^0,c
  8257  011756  0E00               	movlw	0
  8258  011758  6E04               	movwf	(st_dword@val+1)^0,c
  8259  01175A  0E00               	movlw	0
  8260  01175C  6E05               	movwf	(st_dword@val+2)^0,c
  8261  01175E  0E00               	movlw	0
  8262  011760  6E06               	movwf	(st_dword@val+3)^0,c
  8263  011762  ECCB  F0CC         	call	_st_dword	;wreg free
  8264  011766                     
  8265                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  8266  011766  0101               	movlb	1	; () banked
  8267  011768  EE20 F003          	lfsr	2,3
  8268  01176C  519C               	movf	f_open@fs& (0+255),w,b
  8269  01176E  26D9               	addwf	fsr2l,f,c
  8270  011770  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8271  011772  22DA               	addwfc	fsr2h,f,c
  8272  011774  0E01               	movlw	1
  8273  011776  6EDF               	movwf	indf2,c
  8274  011778                     
  8275                           ; BSR set to: 1
  8276                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  8277  011778  5190               	movf	f_open@cl& (0+255),w,b
  8278  01177A  1191               	iorwf	(f_open@cl+1)& (0+255),w,b
  8279  01177C  1192               	iorwf	(f_open@cl+2)& (0+255),w,b
  8280  01177E  1193               	iorwf	(f_open@cl+3)& (0+255),w,b
  8281  011780  B4D8               	btfsc	status,2,c
  8282  011782  EFC5  F08B         	goto	u11401
  8283  011786  EFC7  F08B         	goto	u11400
  8284  01178A                     u11401:
  8285  01178A  EF58  F08C         	goto	l507
  8286  01178E                     u11400:
  8287  01178E                     
  8288                           ; BSR set to: 1
  8289                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  8290  01178E  EE20 F02F          	lfsr	2,47
  8291  011792  519C               	movf	f_open@fs& (0+255),w,b
  8292  011794  26D9               	addwf	fsr2l,f,c
  8293  011796  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8294  011798  22DA               	addwfc	fsr2h,f,c
  8295  01179A  006F FF78  F182    	movff	postinc2,f_open@dw
  8296  0117A0  006F FF78  F183    	movff	postinc2,f_open@dw+1
  8297  0117A6  006F FF78  F184    	movff	postinc2,f_open@dw+2
  8298  0117AC  006F FF78  F185    	movff	postinc2,f_open@dw+3
  8299  0117B2                     
  8300                           ; BSR set to: 1
  8301                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  8302  0117B2  0E9F               	movlw	low f_open@dj
  8303  0117B4  0100               	movlb	0	; () banked
  8304  0117B6  6F97               	movwf	remove_chain@obj& (0+255),b
  8305  0117B8  0E01               	movlw	high f_open@dj
  8306  0117BA  6F98               	movwf	(remove_chain@obj+1)& (0+255),b
  8307  0117BC  C190  F099         	movff	f_open@cl,remove_chain@clst
  8308  0117C0  C191  F09A         	movff	f_open@cl+1,remove_chain@clst+1
  8309  0117C4  C192  F09B         	movff	f_open@cl+2,remove_chain@clst+2
  8310  0117C8  C193  F09C         	movff	f_open@cl+3,remove_chain@clst+3
  8311  0117CC  0E00               	movlw	0
  8312  0117CE  6F9D               	movwf	remove_chain@pclst& (0+255),b
  8313  0117D0  0E00               	movlw	0
  8314  0117D2  6F9E               	movwf	(remove_chain@pclst+1)& (0+255),b
  8315  0117D4  0E00               	movlw	0
  8316  0117D6  6F9F               	movwf	(remove_chain@pclst+2)& (0+255),b
  8317  0117D8  0E00               	movlw	0
  8318  0117DA  6FA0               	movwf	(remove_chain@pclst+3)& (0+255),b
  8319  0117DC  ECF1  F0AF         	call	_remove_chain	;wreg free
  8320  0117E0  0101               	movlb	1	; () banked
  8321  0117E2  6F9E               	movwf	f_open@res& (0+255),b
  8322  0117E4                     
  8323                           ; BSR set to: 1
  8324                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  8325  0117E4  519E               	movf	f_open@res& (0+255),w,b
  8326  0117E6  A4D8               	btfss	status,2,c
  8327  0117E8  EFF8  F08B         	goto	u11411
  8328  0117EC  EFFA  F08B         	goto	u11410
  8329  0117F0                     u11411:
  8330  0117F0  EF58  F08C         	goto	l507
  8331  0117F4                     u11410:
  8332  0117F4                     
  8333                           ; BSR set to: 1
  8334                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  8335  0117F4  C19C  F070         	movff	f_open@fs,move_window@fs
  8336  0117F8  C19D  F071         	movff	f_open@fs+1,move_window@fs+1
  8337  0117FC  C182  F072         	movff	f_open@dw,move_window@sector
  8338  011800  C183  F073         	movff	f_open@dw+1,move_window@sector+1
  8339  011804  C184  F074         	movff	f_open@dw+2,move_window@sector+2
  8340  011808  C185  F075         	movff	f_open@dw+3,move_window@sector+3
  8341  01180C  ECFC  F0C6         	call	_move_window	;wreg free
  8342  011810  0101               	movlb	1	; () banked
  8343  011812  6F9E               	movwf	f_open@res& (0+255),b
  8344  011814                     
  8345                           ; BSR set to: 1
  8346                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  8347  011814  0EFF               	movlw	255
  8348  011816  2590               	addwf	f_open@cl& (0+255),w,b
  8349  011818  0100               	movlb	0	; () banked
  8350  01181A  6FED               	movwf	??_f_open& (0+255),b
  8351  01181C  0EFF               	movlw	255
  8352  01181E  0101               	movlb	1	; () banked
  8353  011820  2191               	addwfc	(f_open@cl+1)& (0+255),w,b
  8354  011822  0100               	movlb	0	; () banked
  8355  011824  6FEE               	movwf	(??_f_open+1)& (0+255),b
  8356  011826  0EFF               	movlw	255
  8357  011828  0101               	movlb	1	; () banked
  8358  01182A  2192               	addwfc	(f_open@cl+2)& (0+255),w,b
  8359  01182C  0100               	movlb	0	; () banked
  8360  01182E  6FEF               	movwf	(??_f_open+2)& (0+255),b
  8361  011830  0EFF               	movlw	255
  8362  011832  0101               	movlb	1	; () banked
  8363  011834  2193               	addwfc	(f_open@cl+3)& (0+255),w,b
  8364  011836  0100               	movlb	0	; () banked
  8365  011838  6FF0               	movwf	(??_f_open+3)& (0+255),b
  8366  01183A  0101               	movlb	1	; () banked
  8367  01183C  EE20 F00B          	lfsr	2,11
  8368  011840  519C               	movf	f_open@fs& (0+255),w,b
  8369  011842  26D9               	addwf	fsr2l,f,c
  8370  011844  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8371  011846  22DA               	addwfc	fsr2h,f,c
  8372  011848  0060  F3B7  FFDE   	movff	??_f_open,postinc2
  8373  01184E  0060  F3BB  FFDE   	movff	??_f_open+1,postinc2
  8374  011854  0060  F3BF  FFDE   	movff	??_f_open+2,postinc2
  8375  01185A  0060  F3C3  FFDE   	movff	??_f_open+3,postinc2
  8376  011860  EF58  F08C         	goto	l507
  8377  011864                     l9635:
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  8381  011864  0101               	movlb	1	; () banked
  8382  011866  519E               	movf	f_open@res& (0+255),w,b
  8383  011868  A4D8               	btfss	status,2,c
  8384  01186A  EF39  F08C         	goto	u11421
  8385  01186E  EF3B  F08C         	goto	u11420
  8386  011872                     u11421:
  8387  011872  EF58  F08C         	goto	l507
  8388  011876                     u11420:
  8389  011876                     
  8390                           ; BSR set to: 1
  8391                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  8392  011876  A9A3               	btfss	(f_open@dj+4)& (0+255),4,b
  8393  011878  EF40  F08C         	goto	u11431
  8394  01187C  EF42  F08C         	goto	u11430
  8395  011880                     u11431:
  8396  011880  EF46  F08C         	goto	l509
  8397  011884                     u11430:
  8398  011884                     
  8399                           ; BSR set to: 1
  8400                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  8401  011884  0E04               	movlw	4
  8402  011886  6F9E               	movwf	f_open@res& (0+255),b
  8403                           
  8404                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  8405  011888  EF58  F08C         	goto	l507
  8406  01188C                     l509:
  8407                           
  8408                           ; BSR set to: 1
  8409                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  8410  01188C  0100               	movlb	0	; () banked
  8411  01188E  A3EC               	btfss	f_open@mode& (0+255),1,b
  8412  011890  EF4C  F08C         	goto	u11441
  8413  011894  EF4E  F08C         	goto	u11440
  8414  011898                     u11441:
  8415  011898  EF58  F08C         	goto	l507
  8416  01189C                     u11440:
  8417  01189C                     
  8418                           ; BSR set to: 0
  8419  01189C  0101               	movlb	1	; () banked
  8420  01189E  A1A3               	btfss	(f_open@dj+4)& (0+255),0,b
  8421  0118A0  EF54  F08C         	goto	u11451
  8422  0118A4  EF56  F08C         	goto	u11450
  8423  0118A8                     u11451:
  8424  0118A8  EF58  F08C         	goto	l507
  8425  0118AC                     u11450:
  8426  0118AC                     
  8427                           ; BSR set to: 1
  8428                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  8429  0118AC  0E07               	movlw	7
  8430  0118AE  6F9E               	movwf	f_open@res& (0+255),b
  8431  0118B0                     l507:
  8432                           
  8433                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  8434  0118B0  0101               	movlb	1	; () banked
  8435  0118B2  519E               	movf	f_open@res& (0+255),w,b
  8436  0118B4  A4D8               	btfss	status,2,c
  8437  0118B6  EF5F  F08C         	goto	u11461
  8438  0118BA  EF61  F08C         	goto	u11460
  8439  0118BE                     u11461:
  8440  0118BE  EF90  F08C         	goto	l9653
  8441  0118C2                     u11460:
  8442  0118C2                     
  8443                           ; BSR set to: 1
  8444                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  8445  0118C2  0100               	movlb	0	; () banked
  8446  0118C4  A7EC               	btfss	f_open@mode& (0+255),3,b
  8447  0118C6  EF67  F08C         	goto	u11471
  8448  0118CA  EF69  F08C         	goto	u11470
  8449  0118CE                     u11471:
  8450  0118CE  EF6A  F08C         	goto	l9649
  8451  0118D2                     u11470:
  8452  0118D2                     
  8453                           ; BSR set to: 0
  8454  0118D2  8DEC               	bsf	f_open@mode& (0+255),6,b
  8455  0118D4                     l9649:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  8459  0118D4  0101               	movlb	1	; () banked
  8460  0118D6  EE20 F02F          	lfsr	2,47
  8461  0118DA  519C               	movf	f_open@fs& (0+255),w,b
  8462  0118DC  26D9               	addwf	fsr2l,f,c
  8463  0118DE  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8464  0118E0  22DA               	addwfc	fsr2h,f,c
  8465  0118E2  0100               	movlb	0	; () banked
  8466  0118E4  EE10 F01C          	lfsr	1,28
  8467  0118E8  51E8               	movf	f_open@fp& (0+255),w,b
  8468  0118EA  26E1               	addwf	fsr1l,f,c
  8469  0118EC  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8470  0118EE  22E2               	addwfc	fsr1h,f,c
  8471  0118F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8472  0118F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8473  0118FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8474  011902  006F FF7B FFE6     	movff	postinc2,postinc1
  8475  011908                     
  8476                           ; BSR set to: 0
  8477                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  8478  011908  EE20 F020          	lfsr	2,32
  8479  01190C  51E8               	movf	f_open@fp& (0+255),w,b
  8480  01190E  26D9               	addwf	fsr2l,f,c
  8481  011910  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8482  011912  22DA               	addwfc	fsr2h,f,c
  8483  011914  0060  F6E7  FFDE   	movff	f_open@dj+26,postinc2
  8484  01191A  0060  F6EB  FFDD   	movff	f_open@dj+27,postdec2
  8485  011920                     l9653:
  8486                           
  8487                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  8488  011920  0101               	movlb	1	; () banked
  8489  011922  519E               	movf	f_open@res& (0+255),w,b
  8490  011924  A4D8               	btfss	status,2,c
  8491  011926  EF97  F08C         	goto	u11481
  8492  01192A  EF99  F08C         	goto	u11480
  8493  01192E                     u11481:
  8494  01192E  EFC6  F08E         	goto	l494
  8495  011932                     u11480:
  8496  011932                     
  8497                           ; BSR set to: 1
  8498                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  8499  011932  C19C  F008         	movff	f_open@fs,ld_clust@fs
  8500  011936  C19D  F009         	movff	f_open@fs+1,ld_clust@fs+1
  8501  01193A  C1B9  F00A         	movff	f_open@dj+26,ld_clust@dir
  8502  01193E  C1BA  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  8503  011942  EC89  F0CC         	call	_ld_clust	;wreg free
  8504  011946  0100               	movlb	0	; () banked
  8505  011948  EE20 F006          	lfsr	2,6
  8506  01194C  51E8               	movf	f_open@fp& (0+255),w,b
  8507  01194E  26D9               	addwf	fsr2l,f,c
  8508  011950  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8509  011952  22DA               	addwfc	fsr2h,f,c
  8510  011954  0060  F023  FFDE   	movff	?_ld_clust,postinc2
  8511  01195A  0060  F027  FFDE   	movff	?_ld_clust+1,postinc2
  8512  011960  0060  F02B  FFDE   	movff	?_ld_clust+2,postinc2
  8513  011966  0060  F02F  FFDE   	movff	?_ld_clust+3,postinc2
  8514                           
  8515                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  8516  01196C  0E1C               	movlw	28
  8517  01196E  0101               	movlb	1	; () banked
  8518  011970  25B9               	addwf	(f_open@dj+26)& (0+255),w,b
  8519  011972  6E01               	movwf	ld_dword@ptr^0,c
  8520  011974  0E00               	movlw	0
  8521  011976  21BA               	addwfc	(f_open@dj+27)& (0+255),w,b
  8522  011978  6E02               	movwf	(ld_dword@ptr+1)^0,c
  8523  01197A  ECF6  F0C8         	call	_ld_dword	;wreg free
  8524  01197E  0100               	movlb	0	; () banked
  8525  011980  EE20 F00A          	lfsr	2,10
  8526  011984  51E8               	movf	f_open@fp& (0+255),w,b
  8527  011986  26D9               	addwf	fsr2l,f,c
  8528  011988  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8529  01198A  22DA               	addwfc	fsr2h,f,c
  8530  01198C  0060  F007  FFDE   	movff	?_ld_dword,postinc2
  8531  011992  0060  F00B  FFDE   	movff	?_ld_dword+1,postinc2
  8532  011998  0060  F00F  FFDE   	movff	?_ld_dword+2,postinc2
  8533  01199E  0060  F013  FFDE   	movff	?_ld_dword+3,postinc2
  8534  0119A4                     
  8535                           ; BSR set to: 0
  8536                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  8537  0119A4  0060  F3A3  FFD9   	movff	f_open@fp,fsr2l
  8538  0119AA  0060  F3A7  FFDA   	movff	f_open@fp+1,fsr2h
  8539  0119B0  0060  F673  FFDE   	movff	f_open@fs,postinc2
  8540  0119B6  0060  F677  FFDD   	movff	f_open@fs+1,postdec2
  8541  0119BC                     
  8542                           ; BSR set to: 0
  8543                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  8544  0119BC  0101               	movlb	1	; () banked
  8545  0119BE  EE20 F005          	lfsr	2,5
  8546  0119C2  519C               	movf	f_open@fs& (0+255),w,b
  8547  0119C4  26D9               	addwf	fsr2l,f,c
  8548  0119C6  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8549  0119C8  22DA               	addwfc	fsr2h,f,c
  8550  0119CA  0100               	movlb	0	; () banked
  8551  0119CC  EE10 F002          	lfsr	1,2
  8552  0119D0  51E8               	movf	f_open@fp& (0+255),w,b
  8553  0119D2  26E1               	addwf	fsr1l,f,c
  8554  0119D4  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8555  0119D6  22E2               	addwfc	fsr1h,f,c
  8556  0119D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8557  0119DE  006F FF77 FFE5     	movff	postdec2,postdec1
  8558  0119E4                     
  8559                           ; BSR set to: 0
  8560                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  8561  0119E4  EE20 F00E          	lfsr	2,14
  8562  0119E8  51E8               	movf	f_open@fp& (0+255),w,b
  8563  0119EA  26D9               	addwf	fsr2l,f,c
  8564  0119EC  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8565  0119EE  22DA               	addwfc	fsr2h,f,c
  8566  0119F0  0060  F3B3  FFDF   	movff	f_open@mode,indf2
  8567  0119F6                     
  8568                           ; BSR set to: 0
  8569                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  8570  0119F6  EE20 F00F          	lfsr	2,15
  8571  0119FA  51E8               	movf	f_open@fp& (0+255),w,b
  8572  0119FC  26D9               	addwf	fsr2l,f,c
  8573  0119FE  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8574  011A00  22DA               	addwfc	fsr2h,f,c
  8575  011A02  0E00               	movlw	0
  8576  011A04  6EDF               	movwf	indf2,c
  8577  011A06                     
  8578                           ; BSR set to: 0
  8579                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  8580  011A06  EE20 F018          	lfsr	2,24
  8581  011A0A  51E8               	movf	f_open@fp& (0+255),w,b
  8582  011A0C  26D9               	addwf	fsr2l,f,c
  8583  011A0E  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8584  011A10  22DA               	addwfc	fsr2h,f,c
  8585  011A12  6ADE               	clrf	postinc2,c
  8586  011A14  6ADE               	clrf	postinc2,c
  8587  011A16  6ADE               	clrf	postinc2,c
  8588  011A18  6ADD               	clrf	postdec2,c
  8589  011A1A                     
  8590                           ; BSR set to: 0
  8591                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  8592  011A1A  EE20 F010          	lfsr	2,16
  8593  011A1E  51E8               	movf	f_open@fp& (0+255),w,b
  8594  011A20  26D9               	addwf	fsr2l,f,c
  8595  011A22  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8596  011A24  22DA               	addwfc	fsr2h,f,c
  8597  011A26  6ADE               	clrf	postinc2,c
  8598  011A28  6ADE               	clrf	postinc2,c
  8599  011A2A  6ADE               	clrf	postinc2,c
  8600  011A2C  6ADD               	clrf	postdec2,c
  8601  011A2E                     
  8602                           ; BSR set to: 0
  8603                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  8604  011A2E  0E22               	movlw	34
  8605  011A30  25E8               	addwf	f_open@fp& (0+255),w,b
  8606  011A32  6E01               	movwf	mem_set@dst^0,c
  8607  011A34  0E00               	movlw	0
  8608  011A36  21E9               	addwfc	(f_open@fp+1)& (0+255),w,b
  8609  011A38  6E02               	movwf	(mem_set@dst+1)^0,c
  8610  011A3A  0E00               	movlw	0
  8611  011A3C  6E04               	movwf	(mem_set@val+1)^0,c
  8612  011A3E  0E00               	movlw	0
  8613  011A40  6E03               	movwf	mem_set@val^0,c
  8614  011A42  0E02               	movlw	2
  8615  011A44  6E06               	movwf	(mem_set@cnt+1)^0,c
  8616  011A46  0E00               	movlw	0
  8617  011A48  6E05               	movwf	mem_set@cnt^0,c
  8618  011A4A  EC7D  F0D2         	call	_mem_set	;wreg free
  8619  011A4E                     
  8620                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  8621  011A4E  0100               	movlb	0	; () banked
  8622  011A50  ABEC               	btfss	f_open@mode& (0+255),5,b
  8623  011A52  EF2D  F08D         	goto	u11491
  8624  011A56  EF2F  F08D         	goto	u11490
  8625  011A5A                     u11491:
  8626  011A5A  EFC6  F08E         	goto	l494
  8627  011A5E                     u11490:
  8628  011A5E                     
  8629                           ; BSR set to: 0
  8630  011A5E  EE20 F00A          	lfsr	2,10
  8631  011A62  51E8               	movf	f_open@fp& (0+255),w,b
  8632  011A64  26D9               	addwf	fsr2l,f,c
  8633  011A66  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8634  011A68  22DA               	addwfc	fsr2h,f,c
  8635  011A6A  50DE               	movf	postinc2,w,c
  8636  011A6C  10DE               	iorwf	postinc2,w,c
  8637  011A6E  10DE               	iorwf	postinc2,w,c
  8638  011A70  10DE               	iorwf	postinc2,w,c
  8639  011A72  B4D8               	btfsc	status,2,c
  8640  011A74  EF3E  F08D         	goto	u11501
  8641  011A78  EF40  F08D         	goto	u11500
  8642  011A7C                     u11501:
  8643  011A7C  EFC6  F08E         	goto	l494
  8644  011A80                     u11500:
  8645  011A80                     
  8646                           ; BSR set to: 0
  8647                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  8648  011A80  EE20 F00A          	lfsr	2,10
  8649  011A84  51E8               	movf	f_open@fp& (0+255),w,b
  8650  011A86  26D9               	addwf	fsr2l,f,c
  8651  011A88  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8652  011A8A  22DA               	addwfc	fsr2h,f,c
  8653  011A8C  EE10 F010          	lfsr	1,16
  8654  011A90  51E8               	movf	f_open@fp& (0+255),w,b
  8655  011A92  26E1               	addwf	fsr1l,f,c
  8656  011A94  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8657  011A96  22E2               	addwfc	fsr1h,f,c
  8658  011A98  006F FF7B FFE6     	movff	postinc2,postinc1
  8659  011A9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8660  011AA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8661  011AAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8662  011AB0                     
  8663                           ; BSR set to: 0
  8664                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  8665  011AB0  0101               	movlb	1	; () banked
  8666  011AB2  EE20 F009          	lfsr	2,9
  8667  011AB6  519C               	movf	f_open@fs& (0+255),w,b
  8668  011AB8  26D9               	addwf	fsr2l,f,c
  8669  011ABA  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8670  011ABC  22DA               	addwfc	fsr2h,f,c
  8671  011ABE  006F FF78  F0ED    	movff	postinc2,??_f_open
  8672  011AC4  006F FF74  F0EE    	movff	postdec2,??_f_open+1
  8673  011ACA  0100               	movlb	0	; () banked
  8674  011ACC  51ED               	movf	??_f_open& (0+255),w,b
  8675  011ACE  6FEF               	movwf	(??_f_open+2)& (0+255),b
  8676  011AD0  51EE               	movf	(??_f_open+1)& (0+255),w,b
  8677  011AD2  6FF0               	movwf	(??_f_open+3)& (0+255),b
  8678  011AD4  6BF1               	clrf	(??_f_open+4)& (0+255),b
  8679  011AD6  6BF2               	clrf	(??_f_open+5)& (0+255),b
  8680  011AD8  0E09               	movlw	9
  8681  011ADA                     u11515:
  8682  011ADA  90D8               	bcf	status,0,c
  8683  011ADC  37EF               	rlcf	(??_f_open+2)& (0+255),f,b
  8684  011ADE  37F0               	rlcf	(??_f_open+3)& (0+255),f,b
  8685  011AE0  37F1               	rlcf	(??_f_open+4)& (0+255),f,b
  8686  011AE2  37F2               	rlcf	(??_f_open+5)& (0+255),f,b
  8687  011AE4  2EE8               	decfsz	wreg,f,c
  8688  011AE6  EF6D  F08D         	goto	u11515
  8689  011AEA  C0EF  F18C         	movff	??_f_open+2,f_open@bcs
  8690  011AEE  C0F0  F18D         	movff	??_f_open+3,f_open@bcs+1
  8691  011AF2  C0F1  F18E         	movff	??_f_open+4,f_open@bcs+2
  8692  011AF6  C0F2  F18F         	movff	??_f_open+5,f_open@bcs+3
  8693  011AFA                     
  8694                           ; BSR set to: 0
  8695                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  8696  011AFA  EE20 F006          	lfsr	2,6
  8697  011AFE  51E8               	movf	f_open@fp& (0+255),w,b
  8698  011B00  26D9               	addwf	fsr2l,f,c
  8699  011B02  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8700  011B04  22DA               	addwfc	fsr2h,f,c
  8701  011B06  006F FF78  F198    	movff	postinc2,f_open@clst
  8702  011B0C  006F FF78  F199    	movff	postinc2,f_open@clst+1
  8703  011B12  006F FF78  F19A    	movff	postinc2,f_open@clst+2
  8704  011B18  006F FF78  F19B    	movff	postinc2,f_open@clst+3
  8705  011B1E                     
  8706                           ; BSR set to: 0
  8707                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  8708  011B1E  EE20 F00A          	lfsr	2,10
  8709  011B22  51E8               	movf	f_open@fp& (0+255),w,b
  8710  011B24  26D9               	addwf	fsr2l,f,c
  8711  011B26  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8712  011B28  22DA               	addwfc	fsr2h,f,c
  8713  011B2A  006F FF78  F194    	movff	postinc2,f_open@ofs
  8714  011B30  006F FF78  F195    	movff	postinc2,f_open@ofs+1
  8715  011B36  006F FF78  F196    	movff	postinc2,f_open@ofs+2
  8716  011B3C  006F FF78  F197    	movff	postinc2,f_open@ofs+3
  8717  011B42  EFE1  F08D         	goto	l9695
  8718  011B46                     l9683:
  8719                           
  8720                           ; BSR set to: 1
  8721                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  8722  011B46  C0E8  F076         	movff	f_open@fp,get_fat@obj
  8723  011B4A  C0E9  F077         	movff	f_open@fp+1,get_fat@obj+1
  8724  011B4E  C198  F078         	movff	f_open@clst,get_fat@clst
  8725  011B52  C199  F079         	movff	f_open@clst+1,get_fat@clst+1
  8726  011B56  C19A  F07A         	movff	f_open@clst+2,get_fat@clst+2
  8727  011B5A  C19B  F07B         	movff	f_open@clst+3,get_fat@clst+3
  8728  011B5E  EC38  F0A5         	call	_get_fat	;wreg free
  8729  011B62  C076  F198         	movff	?_get_fat,f_open@clst
  8730  011B66  C077  F199         	movff	?_get_fat+1,f_open@clst+1
  8731  011B6A  C078  F19A         	movff	?_get_fat+2,f_open@clst+2
  8732  011B6E  C079  F19B         	movff	?_get_fat+3,f_open@clst+3
  8733  011B72                     
  8734                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  8735  011B72  0101               	movlb	1	; () banked
  8736  011B74  519B               	movf	(f_open@clst+3)& (0+255),w,b
  8737  011B76  119A               	iorwf	(f_open@clst+2)& (0+255),w,b
  8738  011B78  1199               	iorwf	(f_open@clst+1)& (0+255),w,b
  8739  011B7A  E107               	bnz	u11521
  8740  011B7C  0E02               	movlw	2
  8741  011B7E  5D98               	subwf	f_open@clst& (0+255),w,b
  8742  011B80  B0D8               	btfsc	status,0,c
  8743  011B82  EFC5  F08D         	goto	u11521
  8744  011B86  EFC7  F08D         	goto	u11520
  8745  011B8A                     u11521:
  8746  011B8A  EFC9  F08D         	goto	l9689
  8747  011B8E                     u11520:
  8748  011B8E                     
  8749                           ; BSR set to: 1
  8750  011B8E  0E02               	movlw	2
  8751  011B90  6F9E               	movwf	f_open@res& (0+255),b
  8752  011B92                     l9689:
  8753                           
  8754                           ; BSR set to: 1
  8755                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  8756  011B92  2998               	incf	f_open@clst& (0+255),w,b
  8757  011B94  E10A               	bnz	u11531
  8758  011B96  2999               	incf	(f_open@clst+1)& (0+255),w,b
  8759  011B98  E108               	bnz	u11531
  8760  011B9A  299A               	incf	(f_open@clst+2)& (0+255),w,b
  8761  011B9C  E106               	bnz	u11531
  8762  011B9E  299B               	incf	(f_open@clst+3)& (0+255),w,b
  8763  011BA0  A4D8               	btfss	status,2,c
  8764  011BA2  EFD5  F08D         	goto	u11531
  8765  011BA6  EFD7  F08D         	goto	u11530
  8766  011BAA                     u11531:
  8767  011BAA  EFD9  F08D         	goto	l9693
  8768  011BAE                     u11530:
  8769  011BAE                     
  8770                           ; BSR set to: 1
  8771  011BAE  0E01               	movlw	1
  8772  011BB0  6F9E               	movwf	f_open@res& (0+255),b
  8773  011BB2                     l9693:
  8774                           
  8775                           ; BSR set to: 1
  8776                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  8777  011BB2  518C               	movf	f_open@bcs& (0+255),w,b
  8778  011BB4  5F94               	subwf	f_open@ofs& (0+255),f,b
  8779  011BB6  518D               	movf	(f_open@bcs+1)& (0+255),w,b
  8780  011BB8  5B95               	subwfb	(f_open@ofs+1)& (0+255),f,b
  8781  011BBA  518E               	movf	(f_open@bcs+2)& (0+255),w,b
  8782  011BBC  5B96               	subwfb	(f_open@ofs+2)& (0+255),f,b
  8783  011BBE  518F               	movf	(f_open@bcs+3)& (0+255),w,b
  8784  011BC0  5B97               	subwfb	(f_open@ofs+3)& (0+255),f,b
  8785  011BC2                     l9695:
  8786  011BC2  0101               	movlb	1	; () banked
  8787  011BC4  519E               	movf	f_open@res& (0+255),w,b
  8788  011BC6  A4D8               	btfss	status,2,c
  8789  011BC8  EFE8  F08D         	goto	u11541
  8790  011BCC  EFEA  F08D         	goto	u11540
  8791  011BD0                     u11541:
  8792  011BD0  EFF9  F08D         	goto	l9699
  8793  011BD4                     u11540:
  8794  011BD4                     
  8795                           ; BSR set to: 1
  8796  011BD4  5194               	movf	f_open@ofs& (0+255),w,b
  8797  011BD6  5D8C               	subwf	f_open@bcs& (0+255),w,b
  8798  011BD8  5195               	movf	(f_open@ofs+1)& (0+255),w,b
  8799  011BDA  598D               	subwfb	(f_open@bcs+1)& (0+255),w,b
  8800  011BDC  5196               	movf	(f_open@ofs+2)& (0+255),w,b
  8801  011BDE  598E               	subwfb	(f_open@bcs+2)& (0+255),w,b
  8802  011BE0  5197               	movf	(f_open@ofs+3)& (0+255),w,b
  8803  011BE2  598F               	subwfb	(f_open@bcs+3)& (0+255),w,b
  8804  011BE4  A0D8               	btfss	status,0,c
  8805  011BE6  EFF7  F08D         	goto	u11551
  8806  011BEA  EFF9  F08D         	goto	u11550
  8807  011BEE                     u11551:
  8808  011BEE  EFA3  F08D         	goto	l9683
  8809  011BF2                     u11550:
  8810  011BF2                     l9699:
  8811                           
  8812                           ; BSR set to: 1
  8813                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  8814  011BF2  0100               	movlb	0	; () banked
  8815  011BF4  EE20 F014          	lfsr	2,20
  8816  011BF8  51E8               	movf	f_open@fp& (0+255),w,b
  8817  011BFA  26D9               	addwf	fsr2l,f,c
  8818  011BFC  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8819  011BFE  22DA               	addwfc	fsr2h,f,c
  8820  011C00  0060  F663  FFDE   	movff	f_open@clst,postinc2
  8821  011C06  0060  F667  FFDE   	movff	f_open@clst+1,postinc2
  8822  011C0C  0060  F66B  FFDE   	movff	f_open@clst+2,postinc2
  8823  011C12  0060  F66F  FFDE   	movff	f_open@clst+3,postinc2
  8824  011C18                     
  8825                           ; BSR set to: 0
  8826                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  8827  011C18  0101               	movlb	1	; () banked
  8828  011C1A  519E               	movf	f_open@res& (0+255),w,b
  8829  011C1C  A4D8               	btfss	status,2,c
  8830  011C1E  EF13  F08E         	goto	u11561
  8831  011C22  EF15  F08E         	goto	u11560
  8832  011C26                     u11561:
  8833  011C26  EFC6  F08E         	goto	l494
  8834  011C2A                     u11560:
  8835  011C2A                     
  8836                           ; BSR set to: 1
  8837  011C2A  0EFF               	movlw	255
  8838  011C2C  1594               	andwf	f_open@ofs& (0+255),w,b
  8839  011C2E  0100               	movlb	0	; () banked
  8840  011C30  6FED               	movwf	??_f_open& (0+255),b
  8841  011C32  0E01               	movlw	1
  8842  011C34  0101               	movlb	1	; () banked
  8843  011C36  1595               	andwf	(f_open@ofs+1)& (0+255),w,b
  8844  011C38  0100               	movlb	0	; () banked
  8845  011C3A  6FEE               	movwf	(??_f_open+1)& (0+255),b
  8846  011C3C  0E00               	movlw	0
  8847  011C3E  0101               	movlb	1	; () banked
  8848  011C40  1596               	andwf	(f_open@ofs+2)& (0+255),w,b
  8849  011C42  0100               	movlb	0	; () banked
  8850  011C44  6FEF               	movwf	(??_f_open+2)& (0+255),b
  8851  011C46  0E00               	movlw	0
  8852  011C48  0101               	movlb	1	; () banked
  8853  011C4A  1597               	andwf	(f_open@ofs+3)& (0+255),w,b
  8854  011C4C  0100               	movlb	0	; () banked
  8855  011C4E  6FF0               	movwf	(??_f_open+3)& (0+255),b
  8856  011C50  51ED               	movf	??_f_open& (0+255),w,b
  8857  011C52  11EE               	iorwf	(??_f_open+1)& (0+255),w,b
  8858  011C54  11EF               	iorwf	(??_f_open+2)& (0+255),w,b
  8859  011C56  11F0               	iorwf	(??_f_open+3)& (0+255),w,b
  8860  011C58  B4D8               	btfsc	status,2,c
  8861  011C5A  EF31  F08E         	goto	u11571
  8862  011C5E  EF33  F08E         	goto	u11570
  8863  011C62                     u11571:
  8864  011C62  EFC6  F08E         	goto	l494
  8865  011C66                     u11570:
  8866  011C66                     
  8867                           ; BSR set to: 0
  8868                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  8869  011C66  C19C  F00D         	movff	f_open@fs,clst2sect@fs
  8870  011C6A  C19D  F00E         	movff	f_open@fs+1,clst2sect@fs+1
  8871  011C6E  C198  F00F         	movff	f_open@clst,clst2sect@clst
  8872  011C72  C199  F010         	movff	f_open@clst+1,clst2sect@clst+1
  8873  011C76  C19A  F011         	movff	f_open@clst+2,clst2sect@clst+2
  8874  011C7A  C19B  F012         	movff	f_open@clst+3,clst2sect@clst+3
  8875  011C7E  ECE3  F0C4         	call	_clst2sect	;wreg free
  8876  011C82  C00D  F186         	movff	?_clst2sect,f_open@sc
  8877  011C86  C00E  F187         	movff	?_clst2sect+1,f_open@sc+1
  8878  011C8A  C00F  F188         	movff	?_clst2sect+2,f_open@sc+2
  8879  011C8E  C010  F189         	movff	?_clst2sect+3,f_open@sc+3
  8880  011C92  0101               	movlb	1	; () banked
  8881  011C94  5186               	movf	f_open@sc& (0+255),w,b
  8882  011C96  1187               	iorwf	(f_open@sc+1)& (0+255),w,b
  8883  011C98  1188               	iorwf	(f_open@sc+2)& (0+255),w,b
  8884  011C9A  1189               	iorwf	(f_open@sc+3)& (0+255),w,b
  8885  011C9C  A4D8               	btfss	status,2,c
  8886  011C9E  EF53  F08E         	goto	u11581
  8887  011CA2  EF55  F08E         	goto	u11580
  8888  011CA6                     u11581:
  8889  011CA6  EF59  F08E         	goto	l9709
  8890  011CAA                     u11580:
  8891  011CAA                     
  8892                           ; BSR set to: 1
  8893                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  8894  011CAA  0E02               	movlw	2
  8895  011CAC  6F9E               	movwf	f_open@res& (0+255),b
  8896                           
  8897                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  8898  011CAE  EFC6  F08E         	goto	l494
  8899  011CB2                     l9709:
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  8903  011CB2  C194  F0ED         	movff	f_open@ofs,??_f_open
  8904  011CB6  C195  F0EE         	movff	f_open@ofs+1,??_f_open+1
  8905  011CBA  C196  F0EF         	movff	f_open@ofs+2,??_f_open+2
  8906  011CBE  C197  F0F0         	movff	f_open@ofs+3,??_f_open+3
  8907  011CC2  0E0A               	movlw	10
  8908  011CC4  EF6A  F08E         	goto	u11590
  8909  011CC8                     u11595:
  8910  011CC8  0100               	movlb	0	; () banked
  8911  011CCA  90D8               	bcf	status,0,c
  8912  011CCC  33F0               	rrcf	(??_f_open+3)& (0+255),f,b
  8913  011CCE  33EF               	rrcf	(??_f_open+2)& (0+255),f,b
  8914  011CD0  33EE               	rrcf	(??_f_open+1)& (0+255),f,b
  8915  011CD2  33ED               	rrcf	??_f_open& (0+255),f,b
  8916  011CD4                     u11590:
  8917  011CD4  2EE8               	decfsz	wreg,f,c
  8918  011CD6  EF64  F08E         	goto	u11595
  8919  011CDA  0101               	movlb	1	; () banked
  8920  011CDC  5186               	movf	f_open@sc& (0+255),w,b
  8921  011CDE  0100               	movlb	0	; () banked
  8922  011CE0  25ED               	addwf	??_f_open& (0+255),w,b
  8923  011CE2  6FF1               	movwf	(??_f_open+4)& (0+255),b
  8924  011CE4  0101               	movlb	1	; () banked
  8925  011CE6  5187               	movf	(f_open@sc+1)& (0+255),w,b
  8926  011CE8  0100               	movlb	0	; () banked
  8927  011CEA  21EE               	addwfc	(??_f_open+1)& (0+255),w,b
  8928  011CEC  6FF2               	movwf	(??_f_open+5)& (0+255),b
  8929  011CEE  0101               	movlb	1	; () banked
  8930  011CF0  5188               	movf	(f_open@sc+2)& (0+255),w,b
  8931  011CF2  0100               	movlb	0	; () banked
  8932  011CF4  21EF               	addwfc	(??_f_open+2)& (0+255),w,b
  8933  011CF6  6FF3               	movwf	(??_f_open+6)& (0+255),b
  8934  011CF8  0101               	movlb	1	; () banked
  8935  011CFA  5189               	movf	(f_open@sc+3)& (0+255),w,b
  8936  011CFC  0100               	movlb	0	; () banked
  8937  011CFE  21F0               	addwfc	(??_f_open+3)& (0+255),w,b
  8938  011D00  6FF4               	movwf	(??_f_open+7)& (0+255),b
  8939  011D02  EE20 F018          	lfsr	2,24
  8940  011D06  51E8               	movf	f_open@fp& (0+255),w,b
  8941  011D08  26D9               	addwf	fsr2l,f,c
  8942  011D0A  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8943  011D0C  22DA               	addwfc	fsr2h,f,c
  8944  011D0E  0060  F3C7  FFDE   	movff	??_f_open+4,postinc2
  8945  011D14  0060  F3CB  FFDE   	movff	??_f_open+5,postinc2
  8946  011D1A  0060  F3CF  FFDE   	movff	??_f_open+6,postinc2
  8947  011D20  0060  F3D3  FFDE   	movff	??_f_open+7,postinc2
  8948  011D26                     
  8949                           ; BSR set to: 0
  8950                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  8951  011D26  0E22               	movlw	34
  8952  011D28  25E8               	addwf	f_open@fp& (0+255),w,b
  8953  011D2A  6E49               	movwf	disk_read@buff^0,c
  8954  011D2C  0E00               	movlw	0
  8955  011D2E  21E9               	addwfc	(f_open@fp+1)& (0+255),w,b
  8956  011D30  6E4A               	movwf	(disk_read@buff+1)^0,c
  8957  011D32  EE20 F018          	lfsr	2,24
  8958  011D36  51E8               	movf	f_open@fp& (0+255),w,b
  8959  011D38  26D9               	addwf	fsr2l,f,c
  8960  011D3A  51E9               	movf	(f_open@fp+1)& (0+255),w,b
  8961  011D3C  22DA               	addwfc	fsr2h,f,c
  8962  011D3E  006F FF78  F04B    	movff	postinc2,disk_read@sector
  8963  011D44  006F FF78  F04C    	movff	postinc2,disk_read@sector+1
  8964  011D4A  006F FF78  F04D    	movff	postinc2,disk_read@sector+2
  8965  011D50  006F FF78  F04E    	movff	postinc2,disk_read@sector+3
  8966  011D56  0E00               	movlw	0
  8967  011D58  6E50               	movwf	(disk_read@count+1)^0,c
  8968  011D5A  0E01               	movlw	1
  8969  011D5C  6E4F               	movwf	disk_read@count^0,c
  8970  011D5E  0101               	movlb	1	; () banked
  8971  011D60  EE20 F001          	lfsr	2,1
  8972  011D64  519C               	movf	f_open@fs& (0+255),w,b
  8973  011D66  26D9               	addwf	fsr2l,f,c
  8974  011D68  519D               	movf	(f_open@fs+1)& (0+255),w,b
  8975  011D6A  22DA               	addwfc	fsr2h,f,c
  8976  011D6C  50DF               	movf	indf2,w,c
  8977  011D6E  EC3A  F0CE         	call	_disk_read
  8978  011D72  0900               	iorlw	0
  8979  011D74  B4D8               	btfsc	status,2,c
  8980  011D76  EFBF  F08E         	goto	u11601
  8981  011D7A  EFC1  F08E         	goto	u11600
  8982  011D7E                     u11601:
  8983  011D7E  EFC6  F08E         	goto	l515
  8984  011D82                     u11600:
  8985  011D82  0E01               	movlw	1
  8986  011D84  0101               	movlb	1	; () banked
  8987  011D86  6F9E               	movwf	f_open@res& (0+255),b
  8988  011D88  EFC6  F08E         	goto	l494
  8989  011D8C                     l515:
  8990  011D8C                     l494:
  8991                           
  8992                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  8993  011D8C  0101               	movlb	1	; () banked
  8994  011D8E  519E               	movf	f_open@res& (0+255),w,b
  8995  011D90  B4D8               	btfsc	status,2,c
  8996  011D92  EFCD  F08E         	goto	u11611
  8997  011D96  EFCF  F08E         	goto	u11610
  8998  011D9A                     u11611:
  8999  011D9A  EFD9  F08E         	goto	l9717
  9000  011D9E                     u11610:
  9001  011D9E                     
  9002                           ; BSR set to: 1
  9003  011D9E  0060  F3A3  FFD9   	movff	f_open@fp,fsr2l
  9004  011DA4  0060  F3A7  FFDA   	movff	f_open@fp+1,fsr2h
  9005  011DAA  0E00               	movlw	0
  9006  011DAC  6EDE               	movwf	postinc2,c
  9007  011DAE  0E00               	movlw	0
  9008  011DB0  6EDD               	movwf	postdec2,c
  9009  011DB2                     l9717:
  9010                           
  9011                           ; BSR set to: 1
  9012                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  9013  011DB2  519E               	movf	f_open@res& (0+255),w,b
  9014  011DB4                     l489:
  9015  011DB4  0012               	return		;funcret
  9016  011DB6                     __end_of_f_open:
  9017                           	callstack 0
  9018                           
  9019 ;; *************** function _st_clust *****************
  9020 ;; Defined at:
  9021 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  fs              2    4[COMRAM] PTR struct .
  9024 ;;		 -> drive(563), NULL(0), 
  9025 ;;  dir             2    6[COMRAM] PTR unsigned char 
  9026 ;;		 -> drive(563), NULL(0), 
  9027 ;;  cl              4    8[COMRAM] unsigned long 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9042 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9043 ;;Total ram usage:        9 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    1
  9046 ;; This function calls:
  9047 ;;		_st_word
  9048 ;; This function is called by:
  9049 ;;		_f_open
  9050 ;;		_f_sync
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text25
  9055  01A288                     __ptext25:
  9056                           	callstack 0
  9057  01A288                     _st_clust:
  9058                           	callstack 25
  9059  01A288                     
  9060                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
  9061  01A288  0E1A               	movlw	26
  9062  01A28A  2407               	addwf	st_clust@dir^0,w,c
  9063  01A28C  6E01               	movwf	st_word@ptr^0,c
  9064  01A28E  0E00               	movlw	0
  9065  01A290  2008               	addwfc	(st_clust@dir+1)^0,w,c
  9066  01A292  6E02               	movwf	(st_word@ptr+1)^0,c
  9067  01A294  C009  F003         	movff	st_clust@cl,st_word@val
  9068  01A298  C00A  F004         	movff	st_clust@cl+1,st_word@val+1
  9069  01A29C  ECB5  F0D2         	call	_st_word	;wreg free
  9070  01A2A0                     
  9071                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
  9072  01A2A0  0060  F017  FFD9   	movff	st_clust@fs,fsr2l
  9073  01A2A6  0060  F01B  FFDA   	movff	st_clust@fs+1,fsr2h
  9074  01A2AC  0E03               	movlw	3
  9075  01A2AE  18DE               	xorwf	postinc2,w,c
  9076  01A2B0  A4D8               	btfss	status,2,c
  9077  01A2B2  EF5D  F0D1         	goto	u10371
  9078  01A2B6  EF5F  F0D1         	goto	u10370
  9079  01A2BA                     u10371:
  9080  01A2BA  EF6B  F0D1         	goto	l307
  9081  01A2BE                     u10370:
  9082  01A2BE                     
  9083                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
  9084  01A2BE  0E14               	movlw	20
  9085  01A2C0  2407               	addwf	st_clust@dir^0,w,c
  9086  01A2C2  6E01               	movwf	st_word@ptr^0,c
  9087  01A2C4  0E00               	movlw	0
  9088  01A2C6  2008               	addwfc	(st_clust@dir+1)^0,w,c
  9089  01A2C8  6E02               	movwf	(st_word@ptr+1)^0,c
  9090  01A2CA  C00B  F003         	movff	st_clust@cl+2,st_word@val
  9091  01A2CE  C00C  F004         	movff	st_clust@cl+3,st_word@val+1
  9092  01A2D2  ECB5  F0D2         	call	_st_word	;wreg free
  9093  01A2D6                     l307:
  9094  01A2D6  0012               	return		;funcret
  9095  01A2D8                     __end_of_st_clust:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function _remove_chain *****************
  9099 ;; Defined at:
  9100 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  obj             2   55[BANK0 ] PTR struct .
  9103 ;;		 -> f_open@dj(40), 
  9104 ;;  clst            4   57[BANK0 ] unsigned long 
  9105 ;;  pclst           4   61[BANK0 ] unsigned long 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  nxt             4   73[BANK0 ] unsigned long 
  9108 ;;  fs              2   78[BANK0 ] PTR struct .
  9109 ;;		 -> drive(563), NULL(0), 
  9110 ;;  res             1   77[BANK0 ] enum E68
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1    wreg      enum E68
  9113 ;; Registers used:
  9114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9120 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;Total ram usage:       25 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    8
  9127 ;; This function calls:
  9128 ;;		_get_fat
  9129 ;;		_put_fat
  9130 ;; This function is called by:
  9131 ;;		_f_open
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text26
  9136  015FE2                     __ptext26:
  9137                           	callstack 0
  9138  015FE2                     _remove_chain:
  9139                           	callstack 13
  9140  015FE2                     
  9141                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  9142  015FE2  0060  F25F  FFD9   	movff	remove_chain@obj,fsr2l
  9143  015FE8  0060  F263  FFDA   	movff	remove_chain@obj+1,fsr2h
  9144  015FEE  006F FF78  F0AE    	movff	postinc2,remove_chain@fs
  9145  015FF4  006F FF74  F0AF    	movff	postdec2,remove_chain@fs+1
  9146  015FFA                     
  9147                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  9148  015FFA  0100               	movlb	0	; () banked
  9149  015FFC  519C               	movf	(remove_chain@clst+3)& (0+255),w,b
  9150  015FFE  119B               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  9151  016000  119A               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  9152  016002  E109               	bnz	u10270
  9153  016004  0E02               	movlw	2
  9154  016006  5D99               	subwf	remove_chain@clst& (0+255),w,b
  9155  016008  A0D8               	btfss	status,0,c
  9156  01600A  EF09  F0B0         	goto	u10271
  9157  01600E  EF0B  F0B0         	goto	u10270
  9158  016012                     u10271:
  9159  016012  EF20  F0B0         	goto	l8983
  9160  016016                     u10270:
  9161  016016                     
  9162                           ; BSR set to: 0
  9163  016016  EE20 F017          	lfsr	2,23
  9164  01601A  51AE               	movf	remove_chain@fs& (0+255),w,b
  9165  01601C  26D9               	addwf	fsr2l,f,c
  9166  01601E  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9167  016020  22DA               	addwfc	fsr2h,f,c
  9168  016022  50DE               	movf	postinc2,w,c
  9169  016024  5D99               	subwf	remove_chain@clst& (0+255),w,b
  9170  016026  50DE               	movf	postinc2,w,c
  9171  016028  599A               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  9172  01602A  50DE               	movf	postinc2,w,c
  9173  01602C  599B               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  9174  01602E  50DE               	movf	postinc2,w,c
  9175  016030  599C               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  9176  016032  A0D8               	btfss	status,0,c
  9177  016034  EF1E  F0B0         	goto	u10281
  9178  016038  EF20  F0B0         	goto	u10280
  9179  01603C                     u10281:
  9180  01603C  EF23  F0B0         	goto	l8987
  9181  016040                     u10280:
  9182  016040                     l8983:
  9183                           
  9184                           ; BSR set to: 0
  9185  016040  0E02               	movlw	2
  9186  016042  EF0D  F0B1         	goto	l175
  9187  016046                     l8987:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  9191  016046  519D               	movf	remove_chain@pclst& (0+255),w,b
  9192  016048  119E               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  9193  01604A  119F               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  9194  01604C  11A0               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  9195  01604E  B4D8               	btfsc	status,2,c
  9196  016050  EF2C  F0B0         	goto	u10291
  9197  016054  EF2E  F0B0         	goto	u10290
  9198  016058                     u10291:
  9199  016058  EF51  F0B0         	goto	l9003
  9200  01605C                     u10290:
  9201  01605C                     
  9202                           ; BSR set to: 0
  9203                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  9204  01605C  C0AE  F076         	movff	remove_chain@fs,put_fat@fs
  9205  016060  C0AF  F077         	movff	remove_chain@fs+1,put_fat@fs+1
  9206  016064  C09D  F078         	movff	remove_chain@pclst,put_fat@clst
  9207  016068  C09E  F079         	movff	remove_chain@pclst+1,put_fat@clst+1
  9208  01606C  C09F  F07A         	movff	remove_chain@pclst+2,put_fat@clst+2
  9209  016070  C0A0  F07B         	movff	remove_chain@pclst+3,put_fat@clst+3
  9210  016074  0EFF               	movlw	255
  9211  016076  6F7C               	movwf	put_fat@val& (0+255),b
  9212  016078  0EFF               	movlw	255
  9213  01607A  6F7D               	movwf	(put_fat@val+1)& (0+255),b
  9214  01607C  0EFF               	movlw	255
  9215  01607E  6F7E               	movwf	(put_fat@val+2)& (0+255),b
  9216  016080  0EFF               	movlw	255
  9217  016082  6F7F               	movwf	(put_fat@val+3)& (0+255),b
  9218  016084  ECF1  F098         	call	_put_fat	;wreg free
  9219  016088  0100               	movlb	0	; () banked
  9220  01608A  6FAD               	movwf	remove_chain@res& (0+255),b
  9221  01608C                     
  9222                           ; BSR set to: 0
  9223                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  9224  01608C  51AD               	movf	remove_chain@res& (0+255),w,b
  9225  01608E  B4D8               	btfsc	status,2,c
  9226  016090  EF4C  F0B0         	goto	u10301
  9227  016094  EF4E  F0B0         	goto	u10300
  9228  016098                     u10301:
  9229  016098  EF51  F0B0         	goto	l9003
  9230  01609C                     u10300:
  9231  01609C                     l8999:
  9232                           
  9233                           ; BSR set to: 0
  9234  01609C  51AD               	movf	remove_chain@res& (0+255),w,b
  9235  01609E  EF0D  F0B1         	goto	l175
  9236  0160A2                     l9003:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  9240  0160A2  C097  F076         	movff	remove_chain@obj,get_fat@obj
  9241  0160A6  C098  F077         	movff	remove_chain@obj+1,get_fat@obj+1
  9242  0160AA  C099  F078         	movff	remove_chain@clst,get_fat@clst
  9243  0160AE  C09A  F079         	movff	remove_chain@clst+1,get_fat@clst+1
  9244  0160B2  C09B  F07A         	movff	remove_chain@clst+2,get_fat@clst+2
  9245  0160B6  C09C  F07B         	movff	remove_chain@clst+3,get_fat@clst+3
  9246  0160BA  EC38  F0A5         	call	_get_fat	;wreg free
  9247  0160BE  C076  F0A9         	movff	?_get_fat,remove_chain@nxt
  9248  0160C2  C077  F0AA         	movff	?_get_fat+1,remove_chain@nxt+1
  9249  0160C6  C078  F0AB         	movff	?_get_fat+2,remove_chain@nxt+2
  9250  0160CA  C079  F0AC         	movff	?_get_fat+3,remove_chain@nxt+3
  9251  0160CE                     
  9252                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  9253  0160CE  0100               	movlb	0	; () banked
  9254  0160D0  51A9               	movf	remove_chain@nxt& (0+255),w,b
  9255  0160D2  11AA               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  9256  0160D4  11AB               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  9257  0160D6  11AC               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  9258  0160D8  A4D8               	btfss	status,2,c
  9259  0160DA  EF71  F0B0         	goto	u10311
  9260  0160DE  EF73  F0B0         	goto	u10310
  9261  0160E2                     u10311:
  9262  0160E2  EF75  F0B0         	goto	l9009
  9263  0160E6                     u10310:
  9264  0160E6  EF0C  F0B1         	goto	l9037
  9265  0160EA                     l9009:
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  9269  0160EA  05A9               	decf	remove_chain@nxt& (0+255),w,b
  9270  0160EC  11AA               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  9271  0160EE  11AB               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  9272  0160F0  11AC               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  9273  0160F2  A4D8               	btfss	status,2,c
  9274  0160F4  EF7E  F0B0         	goto	u10321
  9275  0160F8  EF80  F0B0         	goto	u10320
  9276  0160FC                     u10321:
  9277  0160FC  EF82  F0B0         	goto	l9015
  9278  016100                     u10320:
  9279  016100  EF20  F0B0         	goto	l8983
  9280  016104                     l9015:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  9284  016104  29A9               	incf	remove_chain@nxt& (0+255),w,b
  9285  016106  E10A               	bnz	u10331
  9286  016108  29AA               	incf	(remove_chain@nxt+1)& (0+255),w,b
  9287  01610A  E108               	bnz	u10331
  9288  01610C  29AB               	incf	(remove_chain@nxt+2)& (0+255),w,b
  9289  01610E  E106               	bnz	u10331
  9290  016110  29AC               	incf	(remove_chain@nxt+3)& (0+255),w,b
  9291  016112  A4D8               	btfss	status,2,c
  9292  016114  EF8E  F0B0         	goto	u10331
  9293  016118  EF90  F0B0         	goto	u10330
  9294  01611C                     u10331:
  9295  01611C  EF93  F0B0         	goto	l9023
  9296  016120                     u10330:
  9297  016120                     
  9298                           ; BSR set to: 0
  9299  016120  0E01               	movlw	1
  9300  016122  EF0D  F0B1         	goto	l175
  9301  016126                     l9023:
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  9305  016126  C0AE  F076         	movff	remove_chain@fs,put_fat@fs
  9306  01612A  C0AF  F077         	movff	remove_chain@fs+1,put_fat@fs+1
  9307  01612E  C099  F078         	movff	remove_chain@clst,put_fat@clst
  9308  016132  C09A  F079         	movff	remove_chain@clst+1,put_fat@clst+1
  9309  016136  C09B  F07A         	movff	remove_chain@clst+2,put_fat@clst+2
  9310  01613A  C09C  F07B         	movff	remove_chain@clst+3,put_fat@clst+3
  9311  01613E  0E00               	movlw	0
  9312  016140  6F7C               	movwf	put_fat@val& (0+255),b
  9313  016142  0E00               	movlw	0
  9314  016144  6F7D               	movwf	(put_fat@val+1)& (0+255),b
  9315  016146  0E00               	movlw	0
  9316  016148  6F7E               	movwf	(put_fat@val+2)& (0+255),b
  9317  01614A  0E00               	movlw	0
  9318  01614C  6F7F               	movwf	(put_fat@val+3)& (0+255),b
  9319  01614E  ECF1  F098         	call	_put_fat	;wreg free
  9320  016152  0100               	movlb	0	; () banked
  9321  016154  6FAD               	movwf	remove_chain@res& (0+255),b
  9322  016156                     
  9323                           ; BSR set to: 0
  9324                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  9325  016156  51AD               	movf	remove_chain@res& (0+255),w,b
  9326  016158  B4D8               	btfsc	status,2,c
  9327  01615A  EFB1  F0B0         	goto	u10341
  9328  01615E  EFB3  F0B0         	goto	u10340
  9329  016162                     u10341:
  9330  016162  EFB5  F0B0         	goto	l9031
  9331  016166                     u10340:
  9332  016166  EF4E  F0B0         	goto	l8999
  9333  01616A                     l9031:
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  9337  01616A  EE20 F017          	lfsr	2,23
  9338  01616E  51AE               	movf	remove_chain@fs& (0+255),w,b
  9339  016170  26D9               	addwf	fsr2l,f,c
  9340  016172  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9341  016174  22DA               	addwfc	fsr2h,f,c
  9342  016176  0EFE               	movlw	254
  9343  016178  24DE               	addwf	postinc2,w,c
  9344  01617A  6FA1               	movwf	??_remove_chain& (0+255),b
  9345  01617C  0EFF               	movlw	255
  9346  01617E  20DE               	addwfc	postinc2,w,c
  9347  016180  6FA2               	movwf	(??_remove_chain+1)& (0+255),b
  9348  016182  0EFF               	movlw	255
  9349  016184  20DE               	addwfc	postinc2,w,c
  9350  016186  6FA3               	movwf	(??_remove_chain+2)& (0+255),b
  9351  016188  0EFF               	movlw	255
  9352  01618A  20DE               	addwfc	postinc2,w,c
  9353  01618C  6FA4               	movwf	(??_remove_chain+3)& (0+255),b
  9354  01618E  EE20 F00F          	lfsr	2,15
  9355  016192  51AE               	movf	remove_chain@fs& (0+255),w,b
  9356  016194  26D9               	addwf	fsr2l,f,c
  9357  016196  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9358  016198  22DA               	addwfc	fsr2h,f,c
  9359  01619A  51A1               	movf	??_remove_chain& (0+255),w,b
  9360  01619C  5CDE               	subwf	postinc2,w,c
  9361  01619E  51A2               	movf	(??_remove_chain+1)& (0+255),w,b
  9362  0161A0  58DE               	subwfb	postinc2,w,c
  9363  0161A2  51A3               	movf	(??_remove_chain+2)& (0+255),w,b
  9364  0161A4  58DE               	subwfb	postinc2,w,c
  9365  0161A6  51A4               	movf	(??_remove_chain+3)& (0+255),w,b
  9366  0161A8  58DE               	subwfb	postinc2,w,c
  9367  0161AA  B0D8               	btfsc	status,0,c
  9368  0161AC  EFDA  F0B0         	goto	u10351
  9369  0161B0  EFDC  F0B0         	goto	u10350
  9370  0161B4                     u10351:
  9371  0161B4  EFEF  F0B0         	goto	l9035
  9372  0161B8                     u10350:
  9373  0161B8                     
  9374                           ; BSR set to: 0
  9375                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  9376  0161B8  EE20 F00F          	lfsr	2,15
  9377  0161BC  51AE               	movf	remove_chain@fs& (0+255),w,b
  9378  0161BE  26D9               	addwf	fsr2l,f,c
  9379  0161C0  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9380  0161C2  22DA               	addwfc	fsr2h,f,c
  9381  0161C4  2ADE               	incf	postinc2,f,c
  9382  0161C6  0E00               	movlw	0
  9383  0161C8  22DE               	addwfc	postinc2,f,c
  9384  0161CA  22DE               	addwfc	postinc2,f,c
  9385  0161CC  22DE               	addwfc	postinc2,f,c
  9386                           
  9387                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  9388  0161CE  EE20 F004          	lfsr	2,4
  9389  0161D2  51AE               	movf	remove_chain@fs& (0+255),w,b
  9390  0161D4  26D9               	addwf	fsr2l,f,c
  9391  0161D6  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9392  0161D8  22DA               	addwfc	fsr2h,f,c
  9393  0161DA  0E00               	movlw	0
  9394  0161DC  80DB               	bsf	plusw2,0,c
  9395  0161DE                     l9035:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  9399  0161DE  C0A9  F099         	movff	remove_chain@nxt,remove_chain@clst
  9400  0161E2  C0AA  F09A         	movff	remove_chain@nxt+1,remove_chain@clst+1
  9401  0161E6  C0AB  F09B         	movff	remove_chain@nxt+2,remove_chain@clst+2
  9402  0161EA  C0AC  F09C         	movff	remove_chain@nxt+3,remove_chain@clst+3
  9403                           
  9404                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  9405  0161EE  EE20 F017          	lfsr	2,23
  9406  0161F2  51AE               	movf	remove_chain@fs& (0+255),w,b
  9407  0161F4  26D9               	addwf	fsr2l,f,c
  9408  0161F6  51AF               	movf	(remove_chain@fs+1)& (0+255),w,b
  9409  0161F8  22DA               	addwfc	fsr2h,f,c
  9410  0161FA  50DE               	movf	postinc2,w,c
  9411  0161FC  5D99               	subwf	remove_chain@clst& (0+255),w,b
  9412  0161FE  50DE               	movf	postinc2,w,c
  9413  016200  599A               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  9414  016202  50DE               	movf	postinc2,w,c
  9415  016204  599B               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  9416  016206  50DE               	movf	postinc2,w,c
  9417  016208  599C               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  9418  01620A  A0D8               	btfss	status,0,c
  9419  01620C  EF0A  F0B1         	goto	u10361
  9420  016210  EF0C  F0B1         	goto	u10360
  9421  016214                     u10361:
  9422  016214  EF51  F0B0         	goto	l9003
  9423  016218                     u10360:
  9424  016218                     l9037:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  9428  016218  0E00               	movlw	0
  9429  01621A                     l175:
  9430                           
  9431                           ; BSR set to: 0
  9432  01621A  0012               	return		;funcret
  9433  01621C                     __end_of_remove_chain:
  9434                           	callstack 0
  9435                           
  9436 ;; *************** function _follow_path *****************
  9437 ;; Defined at:
  9438 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  dp              2  122[BANK0 ] PTR struct .
  9441 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  9442 ;;  path            2  124[BANK0 ] PTR const unsigned char 
  9443 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  fs              2  132[BANK0 ] PTR struct .
  9446 ;;		 -> drive(563), NULL(0), 
  9447 ;;  res             1  135[BANK0 ] enum E68
  9448 ;;  ns              1  134[BANK0 ] unsigned char 
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      enum E68
  9451 ;; Registers used:
  9452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;Total ram usage:       14 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   11
  9465 ;; This function calls:
  9466 ;;		_create_name
  9467 ;;		_dir_find
  9468 ;;		_dir_sdi
  9469 ;;		_ld_clust
  9470 ;; This function is called by:
  9471 ;;		_f_open
  9472 ;;		_f_chdir
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text27
  9477  015D28                     __ptext27:
  9478                           	callstack 0
  9479  015D28                     _follow_path:
  9480                           	callstack 10
  9481  015D28                     
  9482                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  9483  015D28  0060  F36B  FFD9   	movff	follow_path@dp,fsr2l
  9484  015D2E  0060  F36F  FFDA   	movff	follow_path@dp+1,fsr2h
  9485  015D34  006F FF78  F0E4    	movff	postinc2,follow_path@fs
  9486  015D3A  006F FF74  F0E5    	movff	postdec2,follow_path@fs+1
  9487  015D40                     
  9488                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  9489  015D40  0060  F373  FFF6   	movff	follow_path@path,tblptrl
  9490  015D46  0060  F377  FFF7   	movff	follow_path@path+1,tblptrh
  9491  015D4C                     	if	0	;tblptru may be non-zero
  9492  015D4C                     	endif
  9493  015D4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9494  015D4C  0E00               	movlw	low (__mediumconst shr (0+16))
  9495  015D4E  6EF8               	movwf	tblptru,c
  9496  015D50                     	endif
  9497  015D50  0008               	tblrd		*
  9498  015D52  50F5               	movf	tablat,w,c
  9499  015D54  0A2F               	xorlw	47
  9500  015D56  B4D8               	btfsc	status,2,c
  9501  015D58  EFB0  F0AE         	goto	u10401
  9502  015D5C  EFB2  F0AE         	goto	u10400
  9503  015D60                     u10401:
  9504  015D60  EFE2  F0AE         	goto	l9077
  9505  015D64                     u10400:
  9506  015D64  0060  F373  FFF6   	movff	follow_path@path,tblptrl
  9507  015D6A  0060  F377  FFF7   	movff	follow_path@path+1,tblptrh
  9508  015D70                     	if	0	;tblptru may be non-zero
  9509  015D70                     	endif
  9510  015D70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9511  015D70  0E00               	movlw	low (__mediumconst shr (0+16))
  9512  015D72  6EF8               	movwf	tblptru,c
  9513  015D74                     	endif
  9514  015D74  0008               	tblrd		*
  9515  015D76  50F5               	movf	tablat,w,c
  9516  015D78  0A5C               	xorlw	92
  9517  015D7A  B4D8               	btfsc	status,2,c
  9518  015D7C  EFC2  F0AE         	goto	u10411
  9519  015D80  EFC4  F0AE         	goto	u10410
  9520  015D84                     u10411:
  9521  015D84  EFE2  F0AE         	goto	l9077
  9522  015D88                     u10410:
  9523  015D88                     
  9524                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  9525  015D88  0100               	movlb	0	; () banked
  9526  015D8A  EE20 F013          	lfsr	2,19
  9527  015D8E  51E4               	movf	follow_path@fs& (0+255),w,b
  9528  015D90  26D9               	addwf	fsr2l,f,c
  9529  015D92  51E5               	movf	(follow_path@fs+1)& (0+255),w,b
  9530  015D94  22DA               	addwfc	fsr2h,f,c
  9531  015D96  EE10 F006          	lfsr	1,6
  9532  015D9A  51DA               	movf	follow_path@dp& (0+255),w,b
  9533  015D9C  26E1               	addwf	fsr1l,f,c
  9534  015D9E  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9535  015DA0  22E2               	addwfc	fsr1h,f,c
  9536  015DA2  006F FF7B FFE6     	movff	postinc2,postinc1
  9537  015DA8  006F FF7B FFE6     	movff	postinc2,postinc1
  9538  015DAE  006F FF7B FFE6     	movff	postinc2,postinc1
  9539  015DB4  006F FF7B FFE6     	movff	postinc2,postinc1
  9540                           
  9541                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  9542  015DBA  EF11  F0AF         	goto	l9083
  9543  015DBE                     l9075:
  9544  015DBE  0100               	movlb	0	; () banked
  9545  015DC0  4BDC               	infsnz	follow_path@path& (0+255),f,b
  9546  015DC2  2BDD               	incf	(follow_path@path+1)& (0+255),f,b
  9547  015DC4                     l9077:
  9548  015DC4  0060  F373  FFF6   	movff	follow_path@path,tblptrl
  9549  015DCA  0060  F377  FFF7   	movff	follow_path@path+1,tblptrh
  9550  015DD0                     	if	0	;tblptru may be non-zero
  9551  015DD0                     	endif
  9552  015DD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9553  015DD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9554  015DD2  6EF8               	movwf	tblptru,c
  9555  015DD4                     	endif
  9556  015DD4  0008               	tblrd		*
  9557  015DD6  50F5               	movf	tablat,w,c
  9558  015DD8  0A2F               	xorlw	47
  9559  015DDA  B4D8               	btfsc	status,2,c
  9560  015DDC  EFF2  F0AE         	goto	u10421
  9561  015DE0  EFF4  F0AE         	goto	u10420
  9562  015DE4                     u10421:
  9563  015DE4  EFDF  F0AE         	goto	l9075
  9564  015DE8                     u10420:
  9565  015DE8  0060  F373  FFF6   	movff	follow_path@path,tblptrl
  9566  015DEE  0060  F377  FFF7   	movff	follow_path@path+1,tblptrh
  9567  015DF4                     	if	0	;tblptru may be non-zero
  9568  015DF4                     	endif
  9569  015DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9570  015DF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9571  015DF6  6EF8               	movwf	tblptru,c
  9572  015DF8                     	endif
  9573  015DF8  0008               	tblrd		*
  9574  015DFA  50F5               	movf	tablat,w,c
  9575  015DFC  0A5C               	xorlw	92
  9576  015DFE  B4D8               	btfsc	status,2,c
  9577  015E00  EF04  F0AF         	goto	u10431
  9578  015E04  EF06  F0AF         	goto	u10430
  9579  015E08                     u10431:
  9580  015E08  EFDF  F0AE         	goto	l9075
  9581  015E0C                     u10430:
  9582  015E0C                     
  9583                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  9584  015E0C  0100               	movlb	0	; () banked
  9585  015E0E  EE20 F006          	lfsr	2,6
  9586  015E12  51DA               	movf	follow_path@dp& (0+255),w,b
  9587  015E14  26D9               	addwf	fsr2l,f,c
  9588  015E16  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9589  015E18  22DA               	addwfc	fsr2h,f,c
  9590  015E1A  6ADE               	clrf	postinc2,c
  9591  015E1C  6ADE               	clrf	postinc2,c
  9592  015E1E  6ADE               	clrf	postinc2,c
  9593  015E20  6ADD               	clrf	postdec2,c
  9594  015E22                     l9083:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  9598  015E22  0060  F373  FFF6   	movff	follow_path@path,tblptrl
  9599  015E28  0060  F377  FFF7   	movff	follow_path@path+1,tblptrh
  9600  015E2E                     	if	0	;tblptru may be non-zero
  9601  015E2E                     	endif
  9602  015E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9603  015E2E  0E00               	movlw	low (__mediumconst shr (0+16))
  9604  015E30  6EF8               	movwf	tblptru,c
  9605  015E32                     	endif
  9606  015E32  0E20               	movlw	32
  9607  015E34  0008               	tblrd		*
  9608  015E36  60F5               	cpfslt	tablat,c
  9609  015E38  EF20  F0AF         	goto	u10441
  9610  015E3C  EF22  F0AF         	goto	u10440
  9611  015E40                     u10441:
  9612  015E40  EF3C  F0AF         	goto	l9089
  9613  015E44                     u10440:
  9614  015E44                     
  9615                           ; BSR set to: 0
  9616                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  9617  015E44  EE20 F027          	lfsr	2,39
  9618  015E48  51DA               	movf	follow_path@dp& (0+255),w,b
  9619  015E4A  26D9               	addwf	fsr2l,f,c
  9620  015E4C  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9621  015E4E  22DA               	addwfc	fsr2h,f,c
  9622  015E50  0E80               	movlw	128
  9623  015E52  6EDF               	movwf	indf2,c
  9624  015E54                     
  9625                           ; BSR set to: 0
  9626                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  9627  015E54  C0DA  F091         	movff	follow_path@dp,dir_sdi@dp
  9628  015E58  C0DB  F092         	movff	follow_path@dp+1,dir_sdi@dp+1
  9629  015E5C  0E00               	movlw	0
  9630  015E5E  6F93               	movwf	dir_sdi@ofs& (0+255),b
  9631  015E60  0E00               	movlw	0
  9632  015E62  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  9633  015E64  0E00               	movlw	0
  9634  015E66  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  9635  015E68  0E00               	movlw	0
  9636  015E6A  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  9637  015E6C  EC91  F0A9         	call	_dir_sdi	;wreg free
  9638  015E70  0100               	movlb	0	; () banked
  9639  015E72  6FE7               	movwf	follow_path@res& (0+255),b
  9640                           
  9641                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  9642  015E74  EFEF  F0AF         	goto	l9123
  9643  015E78                     l9089:
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  9647  015E78  C0DA  F009         	movff	follow_path@dp,create_name@dp
  9648  015E7C  C0DB  F00A         	movff	follow_path@dp+1,create_name@dp+1
  9649  015E80  0EDC               	movlw	low follow_path@path
  9650  015E82  6E0B               	movwf	create_name@path^0,c
  9651  015E84  0E00               	movlw	high follow_path@path
  9652  015E86  6E0C               	movwf	(create_name@path+1)^0,c
  9653  015E88  EC5F  F09E         	call	_create_name	;wreg free
  9654  015E8C  0100               	movlb	0	; () banked
  9655  015E8E  6FE7               	movwf	follow_path@res& (0+255),b
  9656  015E90                     
  9657                           ; BSR set to: 0
  9658                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  9659  015E90  51E7               	movf	follow_path@res& (0+255),w,b
  9660  015E92  B4D8               	btfsc	status,2,c
  9661  015E94  EF4E  F0AF         	goto	u10451
  9662  015E98  EF50  F0AF         	goto	u10450
  9663  015E9C                     u10451:
  9664  015E9C  EF52  F0AF         	goto	l9095
  9665  015EA0                     u10450:
  9666  015EA0  EFEF  F0AF         	goto	l9123
  9667  015EA4                     l9095:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  9671  015EA4  C0DA  F0D2         	movff	follow_path@dp,dir_find@dp
  9672  015EA8  C0DB  F0D3         	movff	follow_path@dp+1,dir_find@dp+1
  9673  015EAC  EC11  F0B7         	call	_dir_find	;wreg free
  9674  015EB0  0100               	movlb	0	; () banked
  9675  015EB2  6FE7               	movwf	follow_path@res& (0+255),b
  9676  015EB4                     
  9677                           ; BSR set to: 0
  9678                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  9679  015EB4  EE20 F027          	lfsr	2,39
  9680  015EB8  51DA               	movf	follow_path@dp& (0+255),w,b
  9681  015EBA  26D9               	addwf	fsr2l,f,c
  9682  015EBC  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9683  015EBE  22DA               	addwfc	fsr2h,f,c
  9684  015EC0  50DF               	movf	indf2,w,c
  9685  015EC2  6FE6               	movwf	follow_path@ns& (0+255),b
  9686  015EC4                     
  9687                           ; BSR set to: 0
  9688                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  9689  015EC4  51E7               	movf	follow_path@res& (0+255),w,b
  9690  015EC6  B4D8               	btfsc	status,2,c
  9691  015EC8  EF68  F0AF         	goto	u10461
  9692  015ECC  EF6A  F0AF         	goto	u10460
  9693  015ED0                     u10461:
  9694  015ED0  EF9A  F0AF         	goto	l378
  9695  015ED4                     u10460:
  9696  015ED4                     
  9697                           ; BSR set to: 0
  9698                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  9699  015ED4  0E04               	movlw	4
  9700  015ED6  19E7               	xorwf	follow_path@res& (0+255),w,b
  9701  015ED8  A4D8               	btfss	status,2,c
  9702  015EDA  EF71  F0AF         	goto	u10471
  9703  015EDE  EF73  F0AF         	goto	u10470
  9704  015EE2                     u10471:
  9705  015EE2  EFEF  F0AF         	goto	l9123
  9706  015EE6                     u10470:
  9707  015EE6                     
  9708                           ; BSR set to: 0
  9709  015EE6  ABE6               	btfss	follow_path@ns& (0+255),5,b
  9710  015EE8  EF78  F0AF         	goto	u10481
  9711  015EEC  EF7A  F0AF         	goto	u10480
  9712  015EF0                     u10481:
  9713  015EF0  EF8F  F0AF         	goto	l380
  9714  015EF4                     u10480:
  9715  015EF4                     
  9716                           ; BSR set to: 0
  9717                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  9718  015EF4  B5E6               	btfsc	follow_path@ns& (0+255),2,b
  9719  015EF6  EF7F  F0AF         	goto	u10491
  9720  015EFA  EF81  F0AF         	goto	u10490
  9721  015EFE                     u10491:
  9722  015EFE  EF83  F0AF         	goto	l9109
  9723  015F02                     u10490:
  9724  015F02  EF3C  F0AF         	goto	l9089
  9725  015F06                     l9109:
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  9729  015F06  EE20 F027          	lfsr	2,39
  9730  015F0A  51DA               	movf	follow_path@dp& (0+255),w,b
  9731  015F0C  26D9               	addwf	fsr2l,f,c
  9732  015F0E  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9733  015F10  22DA               	addwfc	fsr2h,f,c
  9734  015F12  0E80               	movlw	128
  9735  015F14  6EDF               	movwf	indf2,c
  9736  015F16                     
  9737                           ; BSR set to: 0
  9738                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  9739  015F16  0E00               	movlw	0
  9740  015F18  6FE7               	movwf	follow_path@res& (0+255),b
  9741                           
  9742                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  9743  015F1A  EFEF  F0AF         	goto	l9123
  9744  015F1E                     l380:
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  9748  015F1E  B5E6               	btfsc	follow_path@ns& (0+255),2,b
  9749  015F20  EF94  F0AF         	goto	u10501
  9750  015F24  EF96  F0AF         	goto	u10500
  9751  015F28                     u10501:
  9752  015F28  EFEF  F0AF         	goto	l9123
  9753  015F2C                     u10500:
  9754  015F2C                     l9113:
  9755                           
  9756                           ; BSR set to: 0
  9757  015F2C  0E05               	movlw	5
  9758  015F2E  6FE7               	movwf	follow_path@res& (0+255),b
  9759  015F30  EFEF  F0AF         	goto	l9123
  9760  015F34                     l378:
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  9764  015F34  A5E6               	btfss	follow_path@ns& (0+255),2,b
  9765  015F36  EF9F  F0AF         	goto	u10511
  9766  015F3A  EFA1  F0AF         	goto	u10510
  9767  015F3E                     u10511:
  9768  015F3E  EFA3  F0AF         	goto	l9117
  9769  015F42                     u10510:
  9770  015F42  EFEF  F0AF         	goto	l9123
  9771  015F46                     l9117:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  9775  015F46  EE20 F004          	lfsr	2,4
  9776  015F4A  51DA               	movf	follow_path@dp& (0+255),w,b
  9777  015F4C  26D9               	addwf	fsr2l,f,c
  9778  015F4E  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9779  015F50  22DA               	addwfc	fsr2h,f,c
  9780  015F52  B8DF               	btfsc	indf2,4,c
  9781  015F54  EFAE  F0AF         	goto	u10521
  9782  015F58  EFB0  F0AF         	goto	u10520
  9783  015F5C                     u10521:
  9784  015F5C  EFB2  F0AF         	goto	l9121
  9785  015F60                     u10520:
  9786  015F60  EF96  F0AF         	goto	l9113
  9787  015F64                     l9121:
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  9791  015F64  C0E4  F008         	movff	follow_path@fs,ld_clust@fs
  9792  015F68  C0E5  F009         	movff	follow_path@fs+1,ld_clust@fs+1
  9793  015F6C  0EFF               	movlw	255
  9794  015F6E  6FDE               	movwf	??_follow_path& (0+255),b
  9795  015F70  0E01               	movlw	1
  9796  015F72  6FDF               	movwf	(??_follow_path+1)& (0+255),b
  9797  015F74  EE20 F00E          	lfsr	2,14
  9798  015F78  51DA               	movf	follow_path@dp& (0+255),w,b
  9799  015F7A  26D9               	addwf	fsr2l,f,c
  9800  015F7C  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9801  015F7E  22DA               	addwfc	fsr2h,f,c
  9802  015F80  006F FF78  F0E0    	movff	postinc2,??_follow_path+2
  9803  015F86  006F FF74  F0E1    	movff	postdec2,??_follow_path+3
  9804  015F8C  51DE               	movf	??_follow_path& (0+255),w,b
  9805  015F8E  17E0               	andwf	(??_follow_path+2)& (0+255),f,b
  9806  015F90  51DF               	movf	(??_follow_path+1)& (0+255),w,b
  9807  015F92  17E1               	andwf	(??_follow_path+3)& (0+255),f,b
  9808  015F94  C0E4  F0E2         	movff	follow_path@fs,??_follow_path+4
  9809  015F98  C0E5  F0E3         	movff	follow_path@fs+1,??_follow_path+5
  9810  015F9C  51E0               	movf	(??_follow_path+2)& (0+255),w,b
  9811  015F9E  27E2               	addwf	(??_follow_path+4)& (0+255),f,b
  9812  015FA0  51E1               	movf	(??_follow_path+3)& (0+255),w,b
  9813  015FA2  23E3               	addwfc	(??_follow_path+5)& (0+255),f,b
  9814  015FA4  0E33               	movlw	51
  9815  015FA6  25E2               	addwf	(??_follow_path+4)& (0+255),w,b
  9816  015FA8  6E0A               	movwf	ld_clust@dir^0,c
  9817  015FAA  0E00               	movlw	0
  9818  015FAC  21E3               	addwfc	(??_follow_path+5)& (0+255),w,b
  9819  015FAE  6E0B               	movwf	(ld_clust@dir+1)^0,c
  9820  015FB0  EC89  F0CC         	call	_ld_clust	;wreg free
  9821  015FB4  0100               	movlb	0	; () banked
  9822  015FB6  EE20 F006          	lfsr	2,6
  9823  015FBA  51DA               	movf	follow_path@dp& (0+255),w,b
  9824  015FBC  26D9               	addwf	fsr2l,f,c
  9825  015FBE  51DB               	movf	(follow_path@dp+1)& (0+255),w,b
  9826  015FC0  22DA               	addwfc	fsr2h,f,c
  9827  015FC2  0060  F023  FFDE   	movff	?_ld_clust,postinc2
  9828  015FC8  0060  F027  FFDE   	movff	?_ld_clust+1,postinc2
  9829  015FCE  0060  F02B  FFDE   	movff	?_ld_clust+2,postinc2
  9830  015FD4  0060  F02F  FFDE   	movff	?_ld_clust+3,postinc2
  9831  015FDA  EF3C  F0AF         	goto	l9089
  9832  015FDE                     l9123:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  9836  015FDE  51E7               	movf	follow_path@res& (0+255),w,b
  9837  015FE0                     
  9838                           ; BSR set to: 0
  9839  015FE0  0012               	return		;funcret
  9840  015FE2                     __end_of_follow_path:
  9841                           	callstack 0
  9842                           
  9843 ;; *************** function _ld_clust *****************
  9844 ;; Defined at:
  9845 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  fs              2    7[COMRAM] PTR struct .
  9848 ;;		 -> drive(563), NULL(0), 
  9849 ;;  dir             2    9[COMRAM] PTR const unsigned char 
  9850 ;;		 -> drive.win(512), drive(563), NULL(0), 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;  cl              4   15[COMRAM] unsigned long 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  4    7[COMRAM] unsigned long 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;Total ram usage:       12 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:    1
  9869 ;; This function calls:
  9870 ;;		_ld_word
  9871 ;; This function is called by:
  9872 ;;		_follow_path
  9873 ;;		_f_open
  9874 ;;		_f_chdir
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           	psect	text28
  9879  019912                     __ptext28:
  9880                           	callstack 0
  9881  019912                     _ld_clust:
  9882                           	callstack 20
  9883  019912                     
  9884                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  9885  019912  0E1A               	movlw	26
  9886  019914  240A               	addwf	ld_clust@dir^0,w,c
  9887  019916  6E01               	movwf	ld_word@ptr^0,c
  9888  019918  0E00               	movlw	0
  9889  01991A  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  9890  01991C  6E02               	movwf	(ld_word@ptr+1)^0,c
  9891  01991E  EC5F  F0D2         	call	_ld_word	;wreg free
  9892  019922  C001  F010         	movff	?_ld_word,ld_clust@cl
  9893  019926  C002  F011         	movff	?_ld_word+1,ld_clust@cl+1
  9894  01992A  6A12               	clrf	(ld_clust@cl+2)^0,c
  9895  01992C  6A13               	clrf	(ld_clust@cl+3)^0,c
  9896  01992E                     
  9897                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  9898  01992E  0060  F023  FFD9   	movff	ld_clust@fs,fsr2l
  9899  019934  0060  F027  FFDA   	movff	ld_clust@fs+1,fsr2h
  9900  01993A  0E03               	movlw	3
  9901  01993C  18DE               	xorwf	postinc2,w,c
  9902  01993E  A4D8               	btfss	status,2,c
  9903  019940  EFA4  F0CC         	goto	u9651
  9904  019944  EFA6  F0CC         	goto	u9650
  9905  019948                     u9651:
  9906  019948  EFC2  F0CC         	goto	l8603
  9907  01994C                     u9650:
  9908  01994C                     
  9909                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  9910  01994C  0E14               	movlw	20
  9911  01994E  240A               	addwf	ld_clust@dir^0,w,c
  9912  019950  6E01               	movwf	ld_word@ptr^0,c
  9913  019952  0E00               	movlw	0
  9914  019954  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  9915  019956  6E02               	movwf	(ld_word@ptr+1)^0,c
  9916  019958  EC5F  F0D2         	call	_ld_word	;wreg free
  9917  01995C  5001               	movf	?_ld_word^0,w,c
  9918  01995E  6E0C               	movwf	??_ld_clust^0,c
  9919  019960  5002               	movf	(?_ld_word+1)^0,w,c
  9920  019962  6E0D               	movwf	(??_ld_clust+1)^0,c
  9921  019964  6A0E               	clrf	(??_ld_clust+2)^0,c
  9922  019966  6A0F               	clrf	(??_ld_clust+3)^0,c
  9923  019968  C00D  F00F         	movff	??_ld_clust+1,??_ld_clust+3
  9924  01996C  C00C  F00E         	movff	??_ld_clust,??_ld_clust+2
  9925  019970  6A0D               	clrf	(??_ld_clust+1)^0,c
  9926  019972  6A0C               	clrf	??_ld_clust^0,c
  9927  019974  500C               	movf	??_ld_clust^0,w,c
  9928  019976  1210               	iorwf	ld_clust@cl^0,f,c
  9929  019978  500D               	movf	(??_ld_clust+1)^0,w,c
  9930  01997A  1211               	iorwf	(ld_clust@cl+1)^0,f,c
  9931  01997C  500E               	movf	(??_ld_clust+2)^0,w,c
  9932  01997E  1212               	iorwf	(ld_clust@cl+2)^0,f,c
  9933  019980  500F               	movf	(??_ld_clust+3)^0,w,c
  9934  019982  1213               	iorwf	(ld_clust@cl+3)^0,f,c
  9935  019984                     l8603:
  9936                           
  9937                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  9938  019984  C010  F008         	movff	ld_clust@cl,?_ld_clust
  9939  019988  C011  F009         	movff	ld_clust@cl+1,?_ld_clust+1
  9940  01998C  C012  F00A         	movff	ld_clust@cl+2,?_ld_clust+2
  9941  019990  C013  F00B         	movff	ld_clust@cl+3,?_ld_clust+3
  9942  019994  0012               	return		;funcret
  9943  019996                     __end_of_ld_clust:
  9944                           	callstack 0
  9945                           
  9946 ;; *************** function _dir_find *****************
  9947 ;; Defined at:
  9948 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  dp              2  114[BANK0 ] PTR struct .
  9951 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  fs              2  118[BANK0 ] PTR struct .
  9954 ;;		 -> drive(563), NULL(0), 
  9955 ;;  res             1  121[BANK0 ] enum E68
  9956 ;;  c               1  120[BANK0 ] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  1    wreg      enum E68
  9959 ;; Registers used:
  9960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9966 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9969 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9970 ;;Total ram usage:        8 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:   10
  9973 ;; This function calls:
  9974 ;;		_dir_next
  9975 ;;		_dir_sdi
  9976 ;;		_mem_cmp
  9977 ;;		_move_window
  9978 ;; This function is called by:
  9979 ;;		_follow_path
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           	psect	text29
  9984  016E22                     __ptext29:
  9985                           	callstack 0
  9986  016E22                     _dir_find:
  9987                           	callstack 10
  9988  016E22                     
  9989                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  9990  016E22  0060  F34B  FFD9   	movff	dir_find@dp,fsr2l
  9991  016E28  0060  F34F  FFDA   	movff	dir_find@dp+1,fsr2h
  9992  016E2E  006F FF78  F0D6    	movff	postinc2,dir_find@fs
  9993  016E34  006F FF74  F0D7    	movff	postdec2,dir_find@fs+1
  9994  016E3A                     
  9995                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  9996  016E3A  C0D2  F091         	movff	dir_find@dp,dir_sdi@dp
  9997  016E3E  C0D3  F092         	movff	dir_find@dp+1,dir_sdi@dp+1
  9998  016E42  0E00               	movlw	0
  9999  016E44  0100               	movlb	0	; () banked
 10000  016E46  6F93               	movwf	dir_sdi@ofs& (0+255),b
 10001  016E48  0E00               	movlw	0
 10002  016E4A  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
 10003  016E4C  0E00               	movlw	0
 10004  016E4E  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
 10005  016E50  0E00               	movlw	0
 10006  016E52  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
 10007  016E54  EC91  F0A9         	call	_dir_sdi	;wreg free
 10008  016E58  0100               	movlb	0	; () banked
 10009  016E5A  6FD9               	movwf	dir_find@res& (0+255),b
 10010  016E5C                     
 10011                           ; BSR set to: 0
 10012                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
 10013  016E5C  51D9               	movf	dir_find@res& (0+255),w,b
 10014  016E5E  B4D8               	btfsc	status,2,c
 10015  016E60  EF34  F0B7         	goto	u9661
 10016  016E64  EF36  F0B7         	goto	u9660
 10017  016E68                     u9661:
 10018  016E68  EF3A  F0B7         	goto	l8617
 10019  016E6C                     u9660:
 10020  016E6C                     l8613:
 10021  016E6C  0100               	movlb	0	; () banked
 10022  016E6E  51D9               	movf	dir_find@res& (0+255),w,b
 10023  016E70  EFE0  F0B7         	goto	l311
 10024  016E74                     l8617:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
 10028  016E74  C0D6  F070         	movff	dir_find@fs,move_window@fs
 10029  016E78  C0D7  F071         	movff	dir_find@fs+1,move_window@fs+1
 10030  016E7C  EE20 F016          	lfsr	2,22
 10031  016E80  51D2               	movf	dir_find@dp& (0+255),w,b
 10032  016E82  26D9               	addwf	fsr2l,f,c
 10033  016E84  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10034  016E86  22DA               	addwfc	fsr2h,f,c
 10035  016E88  006F FF78  F072    	movff	postinc2,move_window@sector
 10036  016E8E  006F FF78  F073    	movff	postinc2,move_window@sector+1
 10037  016E94  006F FF78  F074    	movff	postinc2,move_window@sector+2
 10038  016E9A  006F FF78  F075    	movff	postinc2,move_window@sector+3
 10039  016EA0  ECFC  F0C6         	call	_move_window	;wreg free
 10040  016EA4  0100               	movlb	0	; () banked
 10041  016EA6  6FD9               	movwf	dir_find@res& (0+255),b
 10042  016EA8                     
 10043                           ; BSR set to: 0
 10044                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
 10045  016EA8  51D9               	movf	dir_find@res& (0+255),w,b
 10046  016EAA  B4D8               	btfsc	status,2,c
 10047  016EAC  EF5A  F0B7         	goto	u9671
 10048  016EB0  EF5C  F0B7         	goto	u9670
 10049  016EB4                     u9671:
 10050  016EB4  EF5E  F0B7         	goto	l8623
 10051  016EB8                     u9670:
 10052  016EB8  EF36  F0B7         	goto	l8613
 10053  016EBC                     l8623:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
 10057  016EBC  EE20 F01A          	lfsr	2,26
 10058  016EC0  51D2               	movf	dir_find@dp& (0+255),w,b
 10059  016EC2  26D9               	addwf	fsr2l,f,c
 10060  016EC4  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10061  016EC6  22DA               	addwfc	fsr2h,f,c
 10062  016EC8  006F FF78  F0D4    	movff	postinc2,??_dir_find
 10063  016ECE  006F FF74  F0D5    	movff	postdec2,??_dir_find+1
 10064  016ED4  0060  F353  FFD9   	movff	??_dir_find,fsr2l
 10065  016EDA  0060  F357  FFDA   	movff	??_dir_find+1,fsr2h
 10066  016EE0  50DF               	movf	indf2,w,c
 10067  016EE2  6FD8               	movwf	dir_find@c& (0+255),b
 10068  016EE4                     
 10069                           ; BSR set to: 0
 10070                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
 10071  016EE4  51D8               	movf	dir_find@c& (0+255),w,b
 10072  016EE6  A4D8               	btfss	status,2,c
 10073  016EE8  EF78  F0B7         	goto	u9681
 10074  016EEC  EF7A  F0B7         	goto	u9680
 10075  016EF0                     u9681:
 10076  016EF0  EF7E  F0B7         	goto	l8629
 10077  016EF4                     u9680:
 10078  016EF4                     
 10079                           ; BSR set to: 0
 10080  016EF4  0E04               	movlw	4
 10081  016EF6  6FD9               	movwf	dir_find@res& (0+255),b
 10082  016EF8  EF36  F0B7         	goto	l8613
 10083  016EFC                     l8629:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
 10087  016EFC  EE20 F004          	lfsr	2,4
 10088  016F00  51D2               	movf	dir_find@dp& (0+255),w,b
 10089  016F02  26D9               	addwf	fsr2l,f,c
 10090  016F04  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10091  016F06  22DA               	addwfc	fsr2h,f,c
 10092  016F08  EE10 F01A          	lfsr	1,26
 10093  016F0C  51D2               	movf	dir_find@dp& (0+255),w,b
 10094  016F0E  26E1               	addwf	fsr1l,f,c
 10095  016F10  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10096  016F12  22E2               	addwfc	fsr1h,f,c
 10097  016F14  EE00 F00B          	lfsr	0,11
 10098  016F18  50E6               	movf	postinc1,w,c
 10099  016F1A  26E9               	addwf	fsr0l,f,c
 10100  016F1C  50E5               	movf	postdec1,w,c
 10101  016F1E  22EA               	addwfc	fsr0h,f,c
 10102  016F20  50EF               	movf	indf0,w,c
 10103  016F22  0B3F               	andlw	63
 10104  016F24  6EDF               	movwf	indf2,c
 10105  016F26                     
 10106                           ; BSR set to: 0
 10107                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
 10108  016F26  EE20 F01A          	lfsr	2,26
 10109  016F2A  51D2               	movf	dir_find@dp& (0+255),w,b
 10110  016F2C  26D9               	addwf	fsr2l,f,c
 10111  016F2E  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10112  016F30  22DA               	addwfc	fsr2h,f,c
 10113  016F32  EE10 F00B          	lfsr	1,11
 10114  016F36  50DE               	movf	postinc2,w,c
 10115  016F38  26E1               	addwf	fsr1l,f,c
 10116  016F3A  50DD               	movf	postdec2,w,c
 10117  016F3C  22E2               	addwfc	fsr1h,f,c
 10118  016F3E  B6E7               	btfsc	indf1,3,c
 10119  016F40  EFA4  F0B7         	goto	u9691
 10120  016F44  EFA6  F0B7         	goto	u9690
 10121  016F48                     u9691:
 10122  016F48  EFC9  F0B7         	goto	l8637
 10123  016F4C                     u9690:
 10124  016F4C                     
 10125                           ; BSR set to: 0
 10126  016F4C  EE20 F01A          	lfsr	2,26
 10127  016F50  51D2               	movf	dir_find@dp& (0+255),w,b
 10128  016F52  26D9               	addwf	fsr2l,f,c
 10129  016F54  51D3               	movf	(dir_find@dp+1)& (0+255),w,b
 10130  016F56  22DA               	addwfc	fsr2h,f,c
 10131  016F58  006F FF78  F001    	movff	postinc2,mem_cmp@dst
 10132  016F5E  006F FF74  F002    	movff	postdec2,mem_cmp@dst+1
 10133  016F64  0E1C               	movlw	28
 10134  016F66  25D2               	addwf	dir_find@dp& (0+255),w,b
 10135  016F68  6E03               	movwf	mem_cmp@src^0,c
 10136  016F6A  0E00               	movlw	0
 10137  016F6C  21D3               	addwfc	(dir_find@dp+1)& (0+255),w,b
 10138  016F6E  6E04               	movwf	(mem_cmp@src+1)^0,c
 10139  016F70  0E00               	movlw	0
 10140  016F72  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 10141  016F74  0E0B               	movlw	11
 10142  016F76  6E05               	movwf	mem_cmp@cnt^0,c
 10143  016F78  EC99  F0CA         	call	_mem_cmp	;wreg free
 10144  016F7C  5001               	movf	?_mem_cmp^0,w,c
 10145  016F7E  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 10146  016F80  A4D8               	btfss	status,2,c
 10147  016F82  EFC5  F0B7         	goto	u9701
 10148  016F86  EFC7  F0B7         	goto	u9700
 10149  016F8A                     u9701:
 10150  016F8A  EFC9  F0B7         	goto	l8637
 10151  016F8E                     u9700:
 10152  016F8E  EF36  F0B7         	goto	l8613
 10153  016F92                     l8637:
 10154                           
 10155                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
 10156  016F92  C0D2  F0B4         	movff	dir_find@dp,dir_next@dp
 10157  016F96  C0D3  F0B5         	movff	dir_find@dp+1,dir_next@dp+1
 10158  016F9A  0E00               	movlw	0
 10159  016F9C  0100               	movlb	0	; () banked
 10160  016F9E  6FB7               	movwf	(dir_next@stretch+1)& (0+255),b
 10161  016FA0  0E00               	movlw	0
 10162  016FA2  6FB6               	movwf	dir_next@stretch& (0+255),b
 10163  016FA4  EC01  F0A3         	call	_dir_next	;wreg free
 10164  016FA8  0100               	movlb	0	; () banked
 10165  016FAA  6FD9               	movwf	dir_find@res& (0+255),b
 10166  016FAC                     
 10167                           ; BSR set to: 0
 10168                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
 10169  016FAC  51D9               	movf	dir_find@res& (0+255),w,b
 10170  016FAE  B4D8               	btfsc	status,2,c
 10171  016FB0  EFDC  F0B7         	goto	u9711
 10172  016FB4  EFDE  F0B7         	goto	u9710
 10173  016FB8                     u9711:
 10174  016FB8  EF3A  F0B7         	goto	l8617
 10175  016FBC                     u9710:
 10176  016FBC  EF36  F0B7         	goto	l8613
 10177  016FC0                     l311:
 10178                           
 10179                           ; BSR set to: 0
 10180  016FC0  0012               	return		;funcret
 10181  016FC2                     __end_of_dir_find:
 10182                           	callstack 0
 10183                           
 10184 ;; *************** function _create_name *****************
 10185 ;; Defined at:
 10186 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  dp              2    8[COMRAM] PTR struct .
 10189 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
 10190 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
 10191 ;;		 -> follow_path@path(2), 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  si              2   29[COMRAM] unsigned int 
 10194 ;;  sfn             2   27[COMRAM] PTR unsigned char 
 10195 ;;		 -> dj.fn(12), f_chdir@dj(40), dj.fn(12), f_open@dj(40), 
 10196 ;;  i               2   25[COMRAM] unsigned int 
 10197 ;;  p               2   23[COMRAM] PTR const unsigned char 
 10198 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
 10199 ;;  ni              2   21[COMRAM] unsigned int 
 10200 ;;  c               1   31[COMRAM] unsigned char 
 10201 ;;  d               1   20[COMRAM] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      enum E68
 10204 ;; Registers used:
 10205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10212 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10214 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10215 ;;Total ram usage:       24 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    1
 10218 ;; This function calls:
 10219 ;;		_chk_chr
 10220 ;;		_dbc_1st
 10221 ;;		_dbc_2nd
 10222 ;;		_mem_set
 10223 ;; This function is called by:
 10224 ;;		_follow_path
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text30
 10229  013CBE                     __ptext30:
 10230                           	callstack 0
 10231  013CBE                     _create_name:
 10232                           	callstack 19
 10233  013CBE                     
 10234                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
 10235  013CBE  0060  F02F  FFD9   	movff	create_name@path,fsr2l
 10236  013CC4  0060  F033  FFDA   	movff	create_name@path+1,fsr2h
 10237  013CCA  006F FF78  F018    	movff	postinc2,create_name@p
 10238  013CD0  006F FF74  F019    	movff	postdec2,create_name@p+1
 10239  013CD6  0E1C               	movlw	28
 10240  013CD8  2409               	addwf	create_name@dp^0,w,c
 10241  013CDA  6E1C               	movwf	create_name@sfn^0,c
 10242  013CDC  0E00               	movlw	0
 10243  013CDE  200A               	addwfc	(create_name@dp+1)^0,w,c
 10244  013CE0  6E1D               	movwf	(create_name@sfn+1)^0,c
 10245  013CE2                     
 10246                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
 10247  013CE2  C01C  F001         	movff	create_name@sfn,mem_set@dst
 10248  013CE6  C01D  F002         	movff	create_name@sfn+1,mem_set@dst+1
 10249  013CEA  0E00               	movlw	0
 10250  013CEC  6E04               	movwf	(mem_set@val+1)^0,c
 10251  013CEE  0E20               	movlw	32
 10252  013CF0  6E03               	movwf	mem_set@val^0,c
 10253  013CF2  0E00               	movlw	0
 10254  013CF4  6E06               	movwf	(mem_set@cnt+1)^0,c
 10255  013CF6  0E0B               	movlw	11
 10256  013CF8  6E05               	movwf	mem_set@cnt^0,c
 10257  013CFA  EC7D  F0D2         	call	_mem_set	;wreg free
 10258  013CFE                     
 10259                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
 10260  013CFE  0E00               	movlw	0
 10261  013D00  6E1B               	movwf	(create_name@i+1)^0,c
 10262  013D02  0E00               	movlw	0
 10263  013D04  6E1A               	movwf	create_name@i^0,c
 10264  013D06  C01A  F01E         	movff	create_name@i,create_name@si
 10265  013D0A  C01B  F01F         	movff	create_name@i+1,create_name@si+1
 10266  013D0E  0E00               	movlw	0
 10267  013D10  6E17               	movwf	(create_name@ni+1)^0,c
 10268  013D12  0E08               	movlw	8
 10269  013D14  6E16               	movwf	create_name@ni^0,c
 10270  013D16                     
 10271                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
 10272  013D16  501E               	movf	create_name@si^0,w,c
 10273  013D18  2418               	addwf	create_name@p^0,w,c
 10274  013D1A  6E0D               	movwf	??_create_name^0,c
 10275  013D1C  501F               	movf	(create_name@si+1)^0,w,c
 10276  013D1E  2019               	addwfc	(create_name@p+1)^0,w,c
 10277  013D20  6E0E               	movwf	(??_create_name+1)^0,c
 10278  013D22  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10279  013D28  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10280  013D2E                     	if	0	;tblptru may be non-zero
 10281  013D2E                     	endif
 10282  013D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10283  013D2E  0E00               	movlw	low (__mediumconst shr (0+16))
 10284  013D30  6EF8               	movwf	tblptru,c
 10285  013D32                     	endif
 10286  013D32  0008               	tblrd		*
 10287  013D34  50F5               	movf	tablat,w,c
 10288  013D36  0A2E               	xorlw	46
 10289  013D38  A4D8               	btfss	status,2,c
 10290  013D3A  EFA1  F09E         	goto	u9721
 10291  013D3E  EFA3  F09E         	goto	u9720
 10292  013D42                     u9721:
 10293  013D42  EF27  F09F         	goto	l8693
 10294  013D46                     u9720:
 10295  013D46                     l8657:
 10296                           
 10297                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
 10298  013D46  501E               	movf	create_name@si^0,w,c
 10299  013D48  2418               	addwf	create_name@p^0,w,c
 10300  013D4A  6E0D               	movwf	??_create_name^0,c
 10301  013D4C  501F               	movf	(create_name@si+1)^0,w,c
 10302  013D4E  2019               	addwfc	(create_name@p+1)^0,w,c
 10303  013D50  6E0E               	movwf	(??_create_name+1)^0,c
 10304  013D52  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10305  013D58  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10306  013D5E                     	if	0	;tblptru may be non-zero
 10307  013D5E                     	endif
 10308  013D5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10309  013D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 10310  013D60  6EF8               	movwf	tblptru,c
 10311  013D62                     	endif
 10312  013D62  0008               	tblrd		*
 10313  013D64  006F FFD4  F020    	movff	tablat,create_name@c
 10314  013D6A  4A1E               	infsnz	create_name@si^0,f,c
 10315  013D6C  2A1F               	incf	(create_name@si+1)^0,f,c
 10316  013D6E                     
 10317                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
 10318  013D6E  0E2E               	movlw	46
 10319  013D70  1820               	xorwf	create_name@c^0,w,c
 10320  013D72  A4D8               	btfss	status,2,c
 10321  013D74  EFBE  F09E         	goto	u9731
 10322  013D78  EFC0  F09E         	goto	u9730
 10323  013D7C                     u9731:
 10324  013D7C  EFDA  F09E         	goto	l8669
 10325  013D80                     u9730:
 10326  013D80  501F               	movf	(create_name@si+1)^0,w,c
 10327  013D82  E109               	bnz	u9740
 10328  013D84  0E03               	movlw	3
 10329  013D86  5C1E               	subwf	create_name@si^0,w,c
 10330  013D88  A0D8               	btfss	status,0,c
 10331  013D8A  EFC9  F09E         	goto	u9741
 10332  013D8E  EFCB  F09E         	goto	u9740
 10333  013D92                     u9741:
 10334  013D92  EFCD  F09E         	goto	l8665
 10335  013D96                     u9740:
 10336  013D96  EFDA  F09E         	goto	l8669
 10337  013D9A                     l8665:
 10338                           
 10339                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
 10340  013D9A  501A               	movf	create_name@i^0,w,c
 10341  013D9C  241C               	addwf	create_name@sfn^0,w,c
 10342  013D9E  6ED9               	movwf	fsr2l,c
 10343  013DA0  501B               	movf	(create_name@i+1)^0,w,c
 10344  013DA2  201D               	addwfc	(create_name@sfn+1)^0,w,c
 10345  013DA4  6EDA               	movwf	fsr2h,c
 10346  013DA6  0060  F083  FFDF   	movff	create_name@c,indf2
 10347  013DAC  4A1A               	infsnz	create_name@i^0,f,c
 10348  013DAE  2A1B               	incf	(create_name@i+1)^0,f,c
 10349                           
 10350                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
 10351  013DB0  EFA3  F09E         	goto	l8657
 10352  013DB4                     l8669:
 10353                           
 10354                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
 10355  013DB4  0E2F               	movlw	47
 10356  013DB6  1820               	xorwf	create_name@c^0,w,c
 10357  013DB8  B4D8               	btfsc	status,2,c
 10358  013DBA  EFE1  F09E         	goto	u9751
 10359  013DBE  EFE3  F09E         	goto	u9750
 10360  013DC2                     u9751:
 10361  013DC2  EFF7  F09E         	goto	l8679
 10362  013DC6                     u9750:
 10363  013DC6  0E5C               	movlw	92
 10364  013DC8  1820               	xorwf	create_name@c^0,w,c
 10365  013DCA  B4D8               	btfsc	status,2,c
 10366  013DCC  EFEA  F09E         	goto	u9761
 10367  013DD0  EFEC  F09E         	goto	u9760
 10368  013DD4                     u9761:
 10369  013DD4  EFF7  F09E         	goto	l8679
 10370  013DD8                     u9760:
 10371  013DD8  0E20               	movlw	32
 10372  013DDA  6420               	cpfsgt	create_name@c^0,c
 10373  013DDC  EFF2  F09E         	goto	u9771
 10374  013DE0  EFF4  F09E         	goto	u9770
 10375  013DE4                     u9771:
 10376  013DE4  EFF7  F09E         	goto	l8679
 10377  013DE8                     u9770:
 10378  013DE8                     l8675:
 10379  013DE8  0E06               	movlw	6
 10380  013DEA  EFBA  F0A0         	goto	l331
 10381  013DEE                     l8679:
 10382                           
 10383                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
 10384  013DEE  501E               	movf	create_name@si^0,w,c
 10385  013DF0  2418               	addwf	create_name@p^0,w,c
 10386  013DF2  6E0D               	movwf	??_create_name^0,c
 10387  013DF4  501F               	movf	(create_name@si+1)^0,w,c
 10388  013DF6  2019               	addwfc	(create_name@p+1)^0,w,c
 10389  013DF8  6E0E               	movwf	(??_create_name+1)^0,c
 10390  013DFA  0060  F02F  FFD9   	movff	create_name@path,fsr2l
 10391  013E00  0060  F033  FFDA   	movff	create_name@path+1,fsr2h
 10392  013E06  0060  F037  FFDE   	movff	??_create_name,postinc2
 10393  013E0C  0060  F03B  FFDD   	movff	??_create_name+1,postdec2
 10394  013E12                     
 10395                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
 10396  013E12  0E20               	movlw	32
 10397  013E14  6420               	cpfsgt	create_name@c^0,c
 10398  013E16  EF0F  F09F         	goto	u9781
 10399  013E1A  EF11  F09F         	goto	u9780
 10400  013E1E                     u9781:
 10401  013E1E  EF17  F09F         	goto	l8685
 10402  013E22                     u9780:
 10403  013E22  0E00               	movlw	0
 10404  013E24  6E12               	movwf	(_create_name$811+1)^0,c
 10405  013E26  0E20               	movlw	32
 10406  013E28  6E11               	movwf	_create_name$811^0,c
 10407  013E2A  EF1B  F09F         	goto	l8687
 10408  013E2E                     l8685:
 10409  013E2E  0E00               	movlw	0
 10410  013E30  6E12               	movwf	(_create_name$811+1)^0,c
 10411  013E32  0E24               	movlw	36
 10412  013E34  6E11               	movwf	_create_name$811^0,c
 10413  013E36                     l8687:
 10414  013E36  EE20 F00B          	lfsr	2,11
 10415  013E3A  501C               	movf	create_name@sfn^0,w,c
 10416  013E3C  26D9               	addwf	fsr2l,f,c
 10417  013E3E  501D               	movf	(create_name@sfn+1)^0,w,c
 10418  013E40  22DA               	addwfc	fsr2h,f,c
 10419  013E42  0060  F047  FFDF   	movff	_create_name$811,indf2
 10420  013E48                     l8689:
 10421                           
 10422                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
 10423  013E48  0E00               	movlw	0
 10424  013E4A  EFBA  F0A0         	goto	l331
 10425  013E4E                     l8693:
 10426                           
 10427                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
 10428  013E4E  501E               	movf	create_name@si^0,w,c
 10429  013E50  2418               	addwf	create_name@p^0,w,c
 10430  013E52  6E0D               	movwf	??_create_name^0,c
 10431  013E54  501F               	movf	(create_name@si+1)^0,w,c
 10432  013E56  2019               	addwfc	(create_name@p+1)^0,w,c
 10433  013E58  6E0E               	movwf	(??_create_name+1)^0,c
 10434  013E5A  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10435  013E60  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10436  013E66                     	if	0	;tblptru may be non-zero
 10437  013E66                     	endif
 10438  013E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10439  013E66  0E00               	movlw	low (__mediumconst shr (0+16))
 10440  013E68  6EF8               	movwf	tblptru,c
 10441  013E6A                     	endif
 10442  013E6A  0008               	tblrd		*
 10443  013E6C  006F FFD4  F020    	movff	tablat,create_name@c
 10444  013E72  4A1E               	infsnz	create_name@si^0,f,c
 10445  013E74  2A1F               	incf	(create_name@si+1)^0,f,c
 10446  013E76                     
 10447                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
 10448  013E76  0E21               	movlw	33
 10449  013E78  6020               	cpfslt	create_name@c^0,c
 10450  013E7A  EF41  F09F         	goto	u9791
 10451  013E7E  EF43  F09F         	goto	u9790
 10452  013E82                     u9791:
 10453  013E82  EF45  F09F         	goto	l8701
 10454  013E86                     u9790:
 10455  013E86  EF69  F0A0         	goto	l8765
 10456  013E8A                     l8701:
 10457                           
 10458                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
 10459  013E8A  0E2F               	movlw	47
 10460  013E8C  1820               	xorwf	create_name@c^0,w,c
 10461  013E8E  B4D8               	btfsc	status,2,c
 10462  013E90  EF4C  F09F         	goto	u9801
 10463  013E94  EF4E  F09F         	goto	u9800
 10464  013E98                     u9801:
 10465  013E98  EF5B  F09F         	goto	l8707
 10466  013E9C                     u9800:
 10467  013E9C  0E5C               	movlw	92
 10468  013E9E  1820               	xorwf	create_name@c^0,w,c
 10469  013EA0  A4D8               	btfss	status,2,c
 10470  013EA2  EF55  F09F         	goto	u9811
 10471  013EA6  EF57  F09F         	goto	u9810
 10472  013EAA                     u9811:
 10473  013EAA  EF8D  F09F         	goto	l8711
 10474  013EAE                     u9810:
 10475  013EAE  EF5B  F09F         	goto	l8707
 10476  013EB2                     l8705:
 10477  013EB2  4A1E               	infsnz	create_name@si^0,f,c
 10478  013EB4  2A1F               	incf	(create_name@si+1)^0,f,c
 10479  013EB6                     l8707:
 10480  013EB6  501E               	movf	create_name@si^0,w,c
 10481  013EB8  2418               	addwf	create_name@p^0,w,c
 10482  013EBA  6E0D               	movwf	??_create_name^0,c
 10483  013EBC  501F               	movf	(create_name@si+1)^0,w,c
 10484  013EBE  2019               	addwfc	(create_name@p+1)^0,w,c
 10485  013EC0  6E0E               	movwf	(??_create_name+1)^0,c
 10486  013EC2  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10487  013EC8  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10488  013ECE                     	if	0	;tblptru may be non-zero
 10489  013ECE                     	endif
 10490  013ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10491  013ECE  0E00               	movlw	low (__mediumconst shr (0+16))
 10492  013ED0  6EF8               	movwf	tblptru,c
 10493  013ED2                     	endif
 10494  013ED2  0008               	tblrd		*
 10495  013ED4  50F5               	movf	tablat,w,c
 10496  013ED6  0A2F               	xorlw	47
 10497  013ED8  B4D8               	btfsc	status,2,c
 10498  013EDA  EF71  F09F         	goto	u9821
 10499  013EDE  EF73  F09F         	goto	u9820
 10500  013EE2                     u9821:
 10501  013EE2  EF59  F09F         	goto	l8705
 10502  013EE6                     u9820:
 10503  013EE6  501E               	movf	create_name@si^0,w,c
 10504  013EE8  2418               	addwf	create_name@p^0,w,c
 10505  013EEA  6E0D               	movwf	??_create_name^0,c
 10506  013EEC  501F               	movf	(create_name@si+1)^0,w,c
 10507  013EEE  2019               	addwfc	(create_name@p+1)^0,w,c
 10508  013EF0  6E0E               	movwf	(??_create_name+1)^0,c
 10509  013EF2  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10510  013EF8  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10511  013EFE                     	if	0	;tblptru may be non-zero
 10512  013EFE                     	endif
 10513  013EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10514  013EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 10515  013F00  6EF8               	movwf	tblptru,c
 10516  013F02                     	endif
 10517  013F02  0008               	tblrd		*
 10518  013F04  50F5               	movf	tablat,w,c
 10519  013F06  0A5C               	xorlw	92
 10520  013F08  B4D8               	btfsc	status,2,c
 10521  013F0A  EF89  F09F         	goto	u9831
 10522  013F0E  EF8B  F09F         	goto	u9830
 10523  013F12                     u9831:
 10524  013F12  EF59  F09F         	goto	l8705
 10525  013F16                     u9830:
 10526  013F16  EF69  F0A0         	goto	l8765
 10527  013F1A                     l8711:
 10528                           
 10529                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
 10530  013F1A  0E2E               	movlw	46
 10531  013F1C  1820               	xorwf	create_name@c^0,w,c
 10532  013F1E  B4D8               	btfsc	status,2,c
 10533  013F20  EF94  F09F         	goto	u9841
 10534  013F24  EF96  F09F         	goto	u9840
 10535  013F28                     u9841:
 10536  013F28  EFA1  F09F         	goto	l8715
 10537  013F2C                     u9840:
 10538  013F2C  5016               	movf	create_name@ni^0,w,c
 10539  013F2E  5C1A               	subwf	create_name@i^0,w,c
 10540  013F30  5017               	movf	(create_name@ni+1)^0,w,c
 10541  013F32  581B               	subwfb	(create_name@i+1)^0,w,c
 10542  013F34  A0D8               	btfss	status,0,c
 10543  013F36  EF9F  F09F         	goto	u9851
 10544  013F3A  EFA1  F09F         	goto	u9850
 10545  013F3E                     u9851:
 10546  013F3E  EFC0  F09F         	goto	l8725
 10547  013F42                     u9850:
 10548  013F42                     l8715:
 10549                           
 10550                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
 10551  013F42  0E0B               	movlw	11
 10552  013F44  1816               	xorwf	create_name@ni^0,w,c
 10553  013F46  1017               	iorwf	(create_name@ni+1)^0,w,c
 10554  013F48  B4D8               	btfsc	status,2,c
 10555  013F4A  EFA9  F09F         	goto	u9861
 10556  013F4E  EFAB  F09F         	goto	u9860
 10557  013F52                     u9861:
 10558  013F52  EFF4  F09E         	goto	l8675
 10559  013F56                     u9860:
 10560  013F56  0E2E               	movlw	46
 10561  013F58  1820               	xorwf	create_name@c^0,w,c
 10562  013F5A  B4D8               	btfsc	status,2,c
 10563  013F5C  EFB2  F09F         	goto	u9871
 10564  013F60  EFB4  F09F         	goto	u9870
 10565  013F64                     u9871:
 10566  013F64  EFB6  F09F         	goto	l8723
 10567  013F68                     u9870:
 10568  013F68  EFF4  F09E         	goto	l8675
 10569  013F6C                     l8723:
 10570                           
 10571                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
 10572  013F6C  0E00               	movlw	0
 10573  013F6E  6E1B               	movwf	(create_name@i+1)^0,c
 10574  013F70  0E08               	movlw	8
 10575  013F72  6E1A               	movwf	create_name@i^0,c
 10576  013F74  0E00               	movlw	0
 10577  013F76  6E17               	movwf	(create_name@ni+1)^0,c
 10578  013F78  0E0B               	movlw	11
 10579  013F7A  6E16               	movwf	create_name@ni^0,c
 10580                           
 10581                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
 10582  013F7C  EF27  F09F         	goto	l8693
 10583  013F80                     l8725:
 10584                           
 10585                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
 10586  013F80  0E7F               	movlw	127
 10587  013F82  6420               	cpfsgt	create_name@c^0,c
 10588  013F84  EFC6  F09F         	goto	u9881
 10589  013F88  EFC8  F09F         	goto	u9880
 10590  013F8C                     u9881:
 10591  013F8C  EFD9  F09F         	goto	l8729
 10592  013F90                     u9880:
 10593  013F90                     
 10594                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
 10595  013F90  5020               	movf	create_name@c^0,w,c
 10596  013F92  0B7F               	andlw	127
 10597  013F94  6E0D               	movwf	??_create_name^0,c
 10598  013F96  6A0E               	clrf	(??_create_name+1)^0,c
 10599  013F98  0EB8               	movlw	low _ExCvt
 10600  013F9A  240D               	addwf	??_create_name^0,w,c
 10601  013F9C  6EF6               	movwf	tblptrl,c
 10602  013F9E  0EFD               	movlw	high _ExCvt
 10603  013FA0  200E               	addwfc	(??_create_name+1)^0,w,c
 10604  013FA2  6EF7               	movwf	tblptrh,c
 10605  013FA4                     	if	1	;There are 3 active tblptr bytes
 10606  013FA4  6AF8               	clrf	tblptru,c
 10607  013FA6  0E00               	movlw	low (__mediumconst shr (0+16))
 10608  013FA8  22F8               	addwfc	tblptru,f,c
 10609  013FAA                     	endif
 10610  013FAA  0008               	tblrd		*
 10611  013FAC  006F FFD4  F020    	movff	tablat,create_name@c
 10612  013FB2                     l8729:
 10613                           
 10614                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
 10615  013FB2  5020               	movf	create_name@c^0,w,c
 10616  013FB4  ECD4  F0D3         	call	_dbc_1st
 10617  013FB8  5001               	movf	?_dbc_1st^0,w,c
 10618  013FBA  1002               	iorwf	(?_dbc_1st+1)^0,w,c
 10619  013FBC  B4D8               	btfsc	status,2,c
 10620  013FBE  EFE3  F09F         	goto	u9891
 10621  013FC2  EFE5  F09F         	goto	u9890
 10622  013FC6                     u9891:
 10623  013FC6  EF36  F0A0         	goto	l8749
 10624  013FCA                     u9890:
 10625  013FCA                     
 10626                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
 10627  013FCA  501E               	movf	create_name@si^0,w,c
 10628  013FCC  2418               	addwf	create_name@p^0,w,c
 10629  013FCE  6E0D               	movwf	??_create_name^0,c
 10630  013FD0  501F               	movf	(create_name@si+1)^0,w,c
 10631  013FD2  2019               	addwfc	(create_name@p+1)^0,w,c
 10632  013FD4  6E0E               	movwf	(??_create_name+1)^0,c
 10633  013FD6  0060  F037  FFF6   	movff	??_create_name,tblptrl
 10634  013FDC  0060  F03B  FFF7   	movff	??_create_name+1,tblptrh
 10635  013FE2                     	if	0	;tblptru may be non-zero
 10636  013FE2                     	endif
 10637  013FE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10638  013FE2  0E00               	movlw	low (__mediumconst shr (0+16))
 10639  013FE4  6EF8               	movwf	tblptru,c
 10640  013FE6                     	endif
 10641  013FE6  0008               	tblrd		*
 10642  013FE8  006F FFD4  F015    	movff	tablat,create_name@d
 10643  013FEE  4A1E               	infsnz	create_name@si^0,f,c
 10644  013FF0  2A1F               	incf	(create_name@si+1)^0,f,c
 10645  013FF2                     
 10646                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
 10647  013FF2  5015               	movf	create_name@d^0,w,c
 10648  013FF4  ECCF  F0D3         	call	_dbc_2nd
 10649  013FF8  5001               	movf	?_dbc_2nd^0,w,c
 10650  013FFA  1002               	iorwf	(?_dbc_2nd+1)^0,w,c
 10651  013FFC  B4D8               	btfsc	status,2,c
 10652  013FFE  EF03  F0A0         	goto	u9901
 10653  014002  EF05  F0A0         	goto	u9900
 10654  014006                     u9901:
 10655  014006  EFF4  F09E         	goto	l8675
 10656  01400A                     u9900:
 10657  01400A  0EFF               	movlw	255
 10658  01400C  6E0D               	movwf	??_create_name^0,c
 10659  01400E  0EFF               	movlw	255
 10660  014010  6E0E               	movwf	(??_create_name+1)^0,c
 10661  014012  C016  F00F         	movff	create_name@ni,??_create_name+2
 10662  014016  C017  F010         	movff	create_name@ni+1,??_create_name+3
 10663  01401A  500D               	movf	??_create_name^0,w,c
 10664  01401C  260F               	addwf	(??_create_name+2)^0,f,c
 10665  01401E  500E               	movf	(??_create_name+1)^0,w,c
 10666  014020  2210               	addwfc	(??_create_name+3)^0,f,c
 10667  014022  500F               	movf	(??_create_name+2)^0,w,c
 10668  014024  5C1A               	subwf	create_name@i^0,w,c
 10669  014026  5010               	movf	(??_create_name+3)^0,w,c
 10670  014028  581B               	subwfb	(create_name@i+1)^0,w,c
 10671  01402A  A0D8               	btfss	status,0,c
 10672  01402C  EF1A  F0A0         	goto	u9911
 10673  014030  EF1C  F0A0         	goto	u9910
 10674  014034                     u9911:
 10675  014034  EF1E  F0A0         	goto	l8743
 10676  014038                     u9910:
 10677  014038  EFF4  F09E         	goto	l8675
 10678  01403C                     l8743:
 10679                           
 10680                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
 10681  01403C  501A               	movf	create_name@i^0,w,c
 10682  01403E  241C               	addwf	create_name@sfn^0,w,c
 10683  014040  6ED9               	movwf	fsr2l,c
 10684  014042  501B               	movf	(create_name@i+1)^0,w,c
 10685  014044  201D               	addwfc	(create_name@sfn+1)^0,w,c
 10686  014046  6EDA               	movwf	fsr2h,c
 10687  014048  0060  F083  FFDF   	movff	create_name@c,indf2
 10688  01404E  4A1A               	infsnz	create_name@i^0,f,c
 10689  014050  2A1B               	incf	(create_name@i+1)^0,f,c
 10690  014052                     
 10691                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
 10692  014052  501A               	movf	create_name@i^0,w,c
 10693  014054  241C               	addwf	create_name@sfn^0,w,c
 10694  014056  6ED9               	movwf	fsr2l,c
 10695  014058  501B               	movf	(create_name@i+1)^0,w,c
 10696  01405A  201D               	addwfc	(create_name@sfn+1)^0,w,c
 10697  01405C  6EDA               	movwf	fsr2h,c
 10698  01405E  0060  F057  FFDF   	movff	create_name@d,indf2
 10699  014064  4A1A               	infsnz	create_name@i^0,f,c
 10700  014066  2A1B               	incf	(create_name@i+1)^0,f,c
 10701                           
 10702                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
 10703  014068  EF27  F09F         	goto	l8693
 10704  01406C                     l8749:
 10705                           
 10706                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
 10707  01406C  0EDD               	movlw	low STR_1
 10708  01406E  6E01               	movwf	chk_chr@str^0,c
 10709  014070  0EFE               	movlw	high STR_1
 10710  014072  6E02               	movwf	(chk_chr@str+1)^0,c
 10711  014074  C020  F003         	movff	create_name@c,chk_chr@chr
 10712  014078  6A04               	clrf	(chk_chr@chr+1)^0,c
 10713  01407A  ECC5  F0CD         	call	_chk_chr	;wreg free
 10714  01407E  5001               	movf	?_chk_chr^0,w,c
 10715  014080  1002               	iorwf	(?_chk_chr+1)^0,w,c
 10716  014082  B4D8               	btfsc	status,2,c
 10717  014084  EF46  F0A0         	goto	u9921
 10718  014088  EF48  F0A0         	goto	u9920
 10719  01408C                     u9921:
 10720  01408C  EF4A  F0A0         	goto	l8755
 10721  014090                     u9920:
 10722  014090  EFF4  F09E         	goto	l8675
 10723  014094                     l8755:
 10724                           
 10725                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 10726  014094  0E60               	movlw	96
 10727  014096  6420               	cpfsgt	create_name@c^0,c
 10728  014098  EF50  F0A0         	goto	u9931
 10729  01409C  EF52  F0A0         	goto	u9930
 10730  0140A0                     u9931:
 10731  0140A0  EF5C  F0A0         	goto	l8761
 10732  0140A4                     u9930:
 10733  0140A4  0E7B               	movlw	123
 10734  0140A6  6020               	cpfslt	create_name@c^0,c
 10735  0140A8  EF58  F0A0         	goto	u9941
 10736  0140AC  EF5A  F0A0         	goto	u9940
 10737  0140B0                     u9941:
 10738  0140B0  EF5C  F0A0         	goto	l8761
 10739  0140B4                     u9940:
 10740  0140B4  0E20               	movlw	32
 10741  0140B6  5E20               	subwf	create_name@c^0,f,c
 10742  0140B8                     l8761:
 10743                           
 10744                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
 10745  0140B8  501A               	movf	create_name@i^0,w,c
 10746  0140BA  241C               	addwf	create_name@sfn^0,w,c
 10747  0140BC  6ED9               	movwf	fsr2l,c
 10748  0140BE  501B               	movf	(create_name@i+1)^0,w,c
 10749  0140C0  201D               	addwfc	(create_name@sfn+1)^0,w,c
 10750  0140C2  6EDA               	movwf	fsr2h,c
 10751  0140C4  0060  F083  FFDF   	movff	create_name@c,indf2
 10752  0140CA  4A1A               	infsnz	create_name@i^0,f,c
 10753  0140CC  2A1B               	incf	(create_name@i+1)^0,f,c
 10754  0140CE  EF27  F09F         	goto	l8693
 10755  0140D2                     l8765:
 10756                           
 10757                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
 10758  0140D2  501E               	movf	create_name@si^0,w,c
 10759  0140D4  2418               	addwf	create_name@p^0,w,c
 10760  0140D6  6E0D               	movwf	??_create_name^0,c
 10761  0140D8  501F               	movf	(create_name@si+1)^0,w,c
 10762  0140DA  2019               	addwfc	(create_name@p+1)^0,w,c
 10763  0140DC  6E0E               	movwf	(??_create_name+1)^0,c
 10764  0140DE  0060  F02F  FFD9   	movff	create_name@path,fsr2l
 10765  0140E4  0060  F033  FFDA   	movff	create_name@path+1,fsr2h
 10766  0140EA  0060  F037  FFDE   	movff	??_create_name,postinc2
 10767  0140F0  0060  F03B  FFDD   	movff	??_create_name+1,postdec2
 10768  0140F6                     
 10769                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
 10770  0140F6  501A               	movf	create_name@i^0,w,c
 10771  0140F8  101B               	iorwf	(create_name@i+1)^0,w,c
 10772  0140FA  A4D8               	btfss	status,2,c
 10773  0140FC  EF82  F0A0         	goto	u9951
 10774  014100  EF84  F0A0         	goto	u9950
 10775  014104                     u9951:
 10776  014104  EF86  F0A0         	goto	l8773
 10777  014108                     u9950:
 10778  014108  EFF4  F09E         	goto	l8675
 10779  01410C                     l8773:
 10780                           
 10781                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 10782  01410C  0060  F073  FFD9   	movff	create_name@sfn,fsr2l
 10783  014112  0060  F077  FFDA   	movff	create_name@sfn+1,fsr2h
 10784  014118  0EE5               	movlw	229
 10785  01411A  18DE               	xorwf	postinc2,w,c
 10786  01411C  A4D8               	btfss	status,2,c
 10787  01411E  EF93  F0A0         	goto	u9961
 10788  014122  EF95  F0A0         	goto	u9960
 10789  014126                     u9961:
 10790  014126  EF9D  F0A0         	goto	l8777
 10791  01412A                     u9960:
 10792  01412A  0060  F073  FFD9   	movff	create_name@sfn,fsr2l
 10793  014130  0060  F077  FFDA   	movff	create_name@sfn+1,fsr2h
 10794  014136  0E05               	movlw	5
 10795  014138  6EDF               	movwf	indf2,c
 10796  01413A                     l8777:
 10797                           
 10798                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
 10799  01413A  0E20               	movlw	32
 10800  01413C  6420               	cpfsgt	create_name@c^0,c
 10801  01413E  EFA3  F0A0         	goto	u9971
 10802  014142  EFA5  F0A0         	goto	u9970
 10803  014146                     u9971:
 10804  014146  EFAB  F0A0         	goto	l8781
 10805  01414A                     u9970:
 10806  01414A  0E00               	movlw	0
 10807  01414C  6E14               	movwf	(_create_name$816+1)^0,c
 10808  01414E  0E00               	movlw	0
 10809  014150  6E13               	movwf	_create_name$816^0,c
 10810  014152  EFAF  F0A0         	goto	l8783
 10811  014156                     l8781:
 10812  014156  0E00               	movlw	0
 10813  014158  6E14               	movwf	(_create_name$816+1)^0,c
 10814  01415A  0E04               	movlw	4
 10815  01415C  6E13               	movwf	_create_name$816^0,c
 10816  01415E                     l8783:
 10817  01415E  EE20 F00B          	lfsr	2,11
 10818  014162  501C               	movf	create_name@sfn^0,w,c
 10819  014164  26D9               	addwf	fsr2l,f,c
 10820  014166  501D               	movf	(create_name@sfn+1)^0,w,c
 10821  014168  22DA               	addwfc	fsr2h,f,c
 10822  01416A  0060  F04F  FFDF   	movff	_create_name$816,indf2
 10823  014170  EF24  F09F         	goto	l8689
 10824  014174                     l331:
 10825  014174  0012               	return		;funcret
 10826  014176                     __end_of_create_name:
 10827                           	callstack 0
 10828                           
 10829 ;; *************** function _dbc_2nd *****************
 10830 ;; Defined at:
 10831 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  c               1    wreg     unsigned char 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  c               1    2[COMRAM] unsigned char 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  2    0[COMRAM] int 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;Total ram usage:        3 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_create_name
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text31
 10859  01A79E                     __ptext31:
 10860                           	callstack 0
 10861  01A79E                     _dbc_2nd:
 10862                           	callstack 19
 10863  01A79E  0E00               	movlw	0
 10864  01A7A0  6E02               	movwf	(?_dbc_2nd+1)^0,c
 10865  01A7A2  0E00               	movlw	0
 10866  01A7A4  6E01               	movwf	?_dbc_2nd^0,c
 10867  01A7A6  0012               	return		;funcret
 10868  01A7A8                     __end_of_dbc_2nd:
 10869                           	callstack 0
 10870                           
 10871 ;; *************** function _dbc_1st *****************
 10872 ;; Defined at:
 10873 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  c               1    wreg     unsigned char 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  c               1    2[COMRAM] unsigned char 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  2    0[COMRAM] int 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10891 ;;Total ram usage:        3 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_create_name
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text32
 10901  01A7A8                     __ptext32:
 10902                           	callstack 0
 10903  01A7A8                     _dbc_1st:
 10904                           	callstack 19
 10905  01A7A8  0E00               	movlw	0
 10906  01A7AA  6E02               	movwf	(?_dbc_1st+1)^0,c
 10907  01A7AC  0E00               	movlw	0
 10908  01A7AE  6E01               	movwf	?_dbc_1st^0,c
 10909  01A7B0  0012               	return		;funcret
 10910  01A7B2                     __end_of_dbc_1st:
 10911                           	callstack 0
 10912                           
 10913 ;; *************** function _chk_chr *****************
 10914 ;; Defined at:
 10915 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  str             2    0[COMRAM] PTR const unsigned char 
 10918 ;;		 -> STR_2(15), 
 10919 ;;  chr             2    2[COMRAM] int 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  2    0[COMRAM] int 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10935 ;;Total ram usage:        6 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; This function calls:
 10938 ;;		Nothing
 10939 ;; This function is called by:
 10940 ;;		_create_name
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text33
 10945  019B8A                     __ptext33:
 10946                           	callstack 0
 10947  019B8A                     _chk_chr:
 10948                           	callstack 19
 10949  019B8A                     
 10950                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
 10951  019B8A  EFC9  F0CD         	goto	l8123
 10952  019B8E                     l8121:
 10953  019B8E  4A01               	infsnz	chk_chr@str^0,f,c
 10954  019B90  2A02               	incf	(chk_chr@str+1)^0,f,c
 10955  019B92                     l8123:
 10956  019B92  0060  F007  FFF6   	movff	chk_chr@str,tblptrl
 10957  019B98  0060  F00B  FFF7   	movff	chk_chr@str+1,tblptrh
 10958  019B9E                     	if	0	;tblptru may be non-zero
 10959  019B9E                     	endif
 10960  019B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10961  019B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 10962  019BA0  6EF8               	movwf	tblptru,c
 10963  019BA2                     	endif
 10964  019BA2  0008               	tblrd		*
 10965  019BA4  50F5               	movf	tablat,w,c
 10966  019BA6  0900               	iorlw	0
 10967  019BA8  B4D8               	btfsc	status,2,c
 10968  019BAA  EFD9  F0CD         	goto	u8731
 10969  019BAE  EFDB  F0CD         	goto	u8730
 10970  019BB2                     u8731:
 10971  019BB2  EFF3  F0CD         	goto	l8127
 10972  019BB6                     u8730:
 10973  019BB6  0060  F007  FFF6   	movff	chk_chr@str,tblptrl
 10974  019BBC  0060  F00B  FFF7   	movff	chk_chr@str+1,tblptrh
 10975  019BC2                     	if	0	;tblptru may be non-zero
 10976  019BC2                     	endif
 10977  019BC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10978  019BC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10979  019BC4  6EF8               	movwf	tblptru,c
 10980  019BC6                     	endif
 10981  019BC6  0008               	tblrd		*
 10982  019BC8  50F5               	movf	tablat,w,c
 10983  019BCA  6E05               	movwf	??_chk_chr^0,c
 10984  019BCC  6A06               	clrf	(??_chk_chr+1)^0,c
 10985  019BCE  5003               	movf	chk_chr@chr^0,w,c
 10986  019BD0  1805               	xorwf	??_chk_chr^0,w,c
 10987  019BD2  E107               	bnz	u8741
 10988  019BD4  5004               	movf	(chk_chr@chr+1)^0,w,c
 10989  019BD6  1806               	xorwf	(??_chk_chr+1)^0,w,c
 10990  019BD8  A4D8               	btfss	status,2,c
 10991  019BDA  EFF1  F0CD         	goto	u8741
 10992  019BDE  EFF3  F0CD         	goto	u8740
 10993  019BE2                     u8741:
 10994  019BE2  EFC7  F0CD         	goto	l8121
 10995  019BE6                     u8740:
 10996  019BE6                     l8127:
 10997                           
 10998                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
 10999  019BE6  0060  F007  FFF6   	movff	chk_chr@str,tblptrl
 11000  019BEC  0060  F00B  FFF7   	movff	chk_chr@str+1,tblptrh
 11001  019BF2                     	if	0	;tblptru may be non-zero
 11002  019BF2                     	endif
 11003  019BF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11004  019BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 11005  019BF4  6EF8               	movwf	tblptru,c
 11006  019BF6                     	endif
 11007  019BF6  0008               	tblrd		*
 11008  019BF8  50F5               	movf	tablat,w,c
 11009  019BFA  6E01               	movwf	?_chk_chr^0,c
 11010  019BFC  6A02               	clrf	(?_chk_chr+1)^0,c
 11011  019BFE  0012               	return		;funcret
 11012  019C00                     __end_of_chk_chr:
 11013                           	callstack 0
 11014                           
 11015 ;; *************** function _dir_register *****************
 11016 ;; Defined at:
 11017 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  dp              2  126[BANK0 ] PTR struct .
 11020 ;;		 -> f_open@dj(40), 
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;  fs              2  128[BANK0 ] PTR struct .
 11023 ;;		 -> drive(563), NULL(0), 
 11024 ;;  res             1  130[BANK0 ] enum E68
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      enum E68
 11027 ;; Registers used:
 11028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11035 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11037 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11038 ;;Total ram usage:        5 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   11
 11041 ;; This function calls:
 11042 ;;		_dir_alloc
 11043 ;;		_mem_cpy
 11044 ;;		_mem_set
 11045 ;;		_move_window
 11046 ;; This function is called by:
 11047 ;;		_f_open
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text34
 11052  01829E                     __ptext34:
 11053                           	callstack 0
 11054  01829E                     _dir_register:
 11055                           	callstack 10
 11056  01829E                     
 11057                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
 11058  01829E  0060  F37B  FFD9   	movff	dir_register@dp,fsr2l
 11059  0182A4  0060  F37F  FFDA   	movff	dir_register@dp+1,fsr2h
 11060  0182AA  006F FF78  F0E0    	movff	postinc2,dir_register@fs
 11061  0182B0  006F FF74  F0E1    	movff	postdec2,dir_register@fs+1
 11062  0182B6                     
 11063                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
 11064  0182B6  C0DE  F0D2         	movff	dir_register@dp,dir_alloc@dp
 11065  0182BA  C0DF  F0D3         	movff	dir_register@dp+1,dir_alloc@dp+1
 11066  0182BE  0E00               	movlw	0
 11067  0182C0  0100               	movlb	0	; () banked
 11068  0182C2  6FD5               	movwf	(dir_alloc@nent+1)& (0+255),b
 11069  0182C4  0E01               	movlw	1
 11070  0182C6  6FD4               	movwf	dir_alloc@nent& (0+255),b
 11071  0182C8  ECF8  F0BA         	call	_dir_alloc	;wreg free
 11072  0182CC  0100               	movlb	0	; () banked
 11073  0182CE  6FE2               	movwf	dir_register@res& (0+255),b
 11074  0182D0                     
 11075                           ; BSR set to: 0
 11076                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
 11077  0182D0  51E2               	movf	dir_register@res& (0+255),w,b
 11078  0182D2  A4D8               	btfss	status,2,c
 11079  0182D4  EF6E  F0C1         	goto	u10381
 11080  0182D8  EF70  F0C1         	goto	u10380
 11081  0182DC                     u10381:
 11082  0182DC  EFCA  F0C1         	goto	l9063
 11083  0182E0                     u10380:
 11084  0182E0                     
 11085                           ; BSR set to: 0
 11086                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
 11087  0182E0  C0E0  F070         	movff	dir_register@fs,move_window@fs
 11088  0182E4  C0E1  F071         	movff	dir_register@fs+1,move_window@fs+1
 11089  0182E8  EE20 F016          	lfsr	2,22
 11090  0182EC  51DE               	movf	dir_register@dp& (0+255),w,b
 11091  0182EE  26D9               	addwf	fsr2l,f,c
 11092  0182F0  51DF               	movf	(dir_register@dp+1)& (0+255),w,b
 11093  0182F2  22DA               	addwfc	fsr2h,f,c
 11094  0182F4  006F FF78  F072    	movff	postinc2,move_window@sector
 11095  0182FA  006F FF78  F073    	movff	postinc2,move_window@sector+1
 11096  018300  006F FF78  F074    	movff	postinc2,move_window@sector+2
 11097  018306  006F FF78  F075    	movff	postinc2,move_window@sector+3
 11098  01830C  ECFC  F0C6         	call	_move_window	;wreg free
 11099  018310  0100               	movlb	0	; () banked
 11100  018312  6FE2               	movwf	dir_register@res& (0+255),b
 11101  018314                     
 11102                           ; BSR set to: 0
 11103                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
 11104  018314  51E2               	movf	dir_register@res& (0+255),w,b
 11105  018316  A4D8               	btfss	status,2,c
 11106  018318  EF90  F0C1         	goto	u10391
 11107  01831C  EF92  F0C1         	goto	u10390
 11108  018320                     u10391:
 11109  018320  EFCA  F0C1         	goto	l9063
 11110  018324                     u10390:
 11111  018324                     
 11112                           ; BSR set to: 0
 11113                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
 11114  018324  EE20 F01A          	lfsr	2,26
 11115  018328  51DE               	movf	dir_register@dp& (0+255),w,b
 11116  01832A  26D9               	addwf	fsr2l,f,c
 11117  01832C  51DF               	movf	(dir_register@dp+1)& (0+255),w,b
 11118  01832E  22DA               	addwfc	fsr2h,f,c
 11119  018330  006F FF78  F001    	movff	postinc2,mem_set@dst
 11120  018336  006F FF74  F002    	movff	postdec2,mem_set@dst+1
 11121  01833C  0E00               	movlw	0
 11122  01833E  6E04               	movwf	(mem_set@val+1)^0,c
 11123  018340  0E00               	movlw	0
 11124  018342  6E03               	movwf	mem_set@val^0,c
 11125  018344  0E00               	movlw	0
 11126  018346  6E06               	movwf	(mem_set@cnt+1)^0,c
 11127  018348  0E20               	movlw	32
 11128  01834A  6E05               	movwf	mem_set@cnt^0,c
 11129  01834C  EC7D  F0D2         	call	_mem_set	;wreg free
 11130  018350                     
 11131                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
 11132  018350  0100               	movlb	0	; () banked
 11133  018352  EE20 F01A          	lfsr	2,26
 11134  018356  51DE               	movf	dir_register@dp& (0+255),w,b
 11135  018358  26D9               	addwf	fsr2l,f,c
 11136  01835A  51DF               	movf	(dir_register@dp+1)& (0+255),w,b
 11137  01835C  22DA               	addwfc	fsr2h,f,c
 11138  01835E  006F FF78  F001    	movff	postinc2,mem_cpy@dst
 11139  018364  006F FF74  F002    	movff	postdec2,mem_cpy@dst+1
 11140  01836A  0E1C               	movlw	28
 11141  01836C  25DE               	addwf	dir_register@dp& (0+255),w,b
 11142  01836E  6E03               	movwf	mem_cpy@src^0,c
 11143  018370  0E00               	movlw	0
 11144  018372  21DF               	addwfc	(dir_register@dp+1)& (0+255),w,b
 11145  018374  6E04               	movwf	(mem_cpy@src+1)^0,c
 11146  018376  0E00               	movlw	0
 11147  018378  6E06               	movwf	(mem_cpy@cnt+1)^0,c
 11148  01837A  0E0B               	movlw	11
 11149  01837C  6E05               	movwf	mem_cpy@cnt^0,c
 11150  01837E  ECB1  F0CF         	call	_mem_cpy	;wreg free
 11151  018382                     
 11152                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
 11153  018382  0100               	movlb	0	; () banked
 11154  018384  EE20 F003          	lfsr	2,3
 11155  018388  51E0               	movf	dir_register@fs& (0+255),w,b
 11156  01838A  26D9               	addwf	fsr2l,f,c
 11157  01838C  51E1               	movf	(dir_register@fs+1)& (0+255),w,b
 11158  01838E  22DA               	addwfc	fsr2h,f,c
 11159  018390  0E01               	movlw	1
 11160  018392  6EDF               	movwf	indf2,c
 11161  018394                     l9063:
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
 11165  018394  51E2               	movf	dir_register@res& (0+255),w,b
 11166  018396                     
 11167                           ; BSR set to: 0
 11168  018396  0012               	return		;funcret
 11169  018398                     __end_of_dir_register:
 11170                           	callstack 0
 11171                           
 11172 ;; *************** function _mem_cpy *****************
 11173 ;; Defined at:
 11174 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  dst             2    0[COMRAM] PTR void 
 11177 ;;		 -> file.buf(512), file(546), drive(563), NULL(0), 
 11178 ;;  src             2    2[COMRAM] PTR const void 
 11179 ;;		 -> savedMessage(12), Save_Data@newLine(3), dj.fn(12), f_open@dj(40), 
 11180 ;;  cnt             2    4[COMRAM] unsigned int 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;  s               2    8[COMRAM] PTR const unsigned char 
 11183 ;;		 -> savedMessage(12), Save_Data@newLine(3), dj.fn(12), f_open@dj(40), 
 11184 ;;  d               2    6[COMRAM] PTR unsigned char 
 11185 ;;		 -> file.buf(512), file(546), drive(563), NULL(0), 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11195 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11198 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11199 ;;Total ram usage:       10 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		_dir_register
 11205 ;;		_f_write
 11206 ;;		_f_read
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text35
 11211  019F62                     __ptext35:
 11212                           	callstack 0
 11213  019F62                     _mem_cpy:
 11214                           	callstack 21
 11215  019F62                     
 11216                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
 11217  019F62  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
 11218  019F66  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
 11219                           
 11220                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
 11221  019F6A  C003  F009         	movff	mem_cpy@src,mem_cpy@s
 11222  019F6E  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
 11223                           
 11224                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
 11225  019F72  5005               	movf	mem_cpy@cnt^0,w,c
 11226  019F74  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
 11227  019F76  B4D8               	btfsc	status,2,c
 11228  019F78  EFC0  F0CF         	goto	u9561
 11229  019F7C  EFC2  F0CF         	goto	u9560
 11230  019F80                     u9561:
 11231  019F80  EFE1  F0CF         	goto	l72
 11232  019F84                     u9560:
 11233  019F84                     l8541:
 11234                           
 11235                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
 11236  019F84  0060  F027  FFD9   	movff	mem_cpy@s,fsr2l
 11237  019F8A  0060  F02B  FFDA   	movff	mem_cpy@s+1,fsr2h
 11238  019F90  0060  F01F  FFE1   	movff	mem_cpy@d,fsr1l
 11239  019F96  0060  F023  FFE2   	movff	mem_cpy@d+1,fsr1h
 11240  019F9C  006F FF7F FFE7     	movff	indf2,indf1
 11241  019FA2  4A09               	infsnz	mem_cpy@s^0,f,c
 11242  019FA4  2A0A               	incf	(mem_cpy@s+1)^0,f,c
 11243  019FA6  4A07               	infsnz	mem_cpy@d^0,f,c
 11244  019FA8  2A08               	incf	(mem_cpy@d+1)^0,f,c
 11245  019FAA                     
 11246                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
 11247  019FAA  0605               	decf	mem_cpy@cnt^0,f,c
 11248  019FAC  A0D8               	btfss	status,0,c
 11249  019FAE  0606               	decf	(mem_cpy@cnt+1)^0,f,c
 11250  019FB0  5005               	movf	mem_cpy@cnt^0,w,c
 11251  019FB2  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
 11252  019FB4  A4D8               	btfss	status,2,c
 11253  019FB6  EFDF  F0CF         	goto	u9571
 11254  019FBA  EFE1  F0CF         	goto	u9570
 11255  019FBE                     u9571:
 11256  019FBE  EFC2  F0CF         	goto	l8541
 11257  019FC2                     u9570:
 11258  019FC2                     l72:
 11259  019FC2  0012               	return		;funcret
 11260  019FC4                     __end_of_mem_cpy:
 11261                           	callstack 0
 11262                           
 11263 ;; *************** function _dir_alloc *****************
 11264 ;; Defined at:
 11265 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  dp              2  114[BANK0 ] PTR struct .
 11268 ;;		 -> f_open@dj(40), 
 11269 ;;  nent            2  116[BANK0 ] unsigned int 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;  n               2  123[BANK0 ] unsigned int 
 11272 ;;  fs              2  121[BANK0 ] PTR struct .
 11273 ;;		 -> drive(563), NULL(0), 
 11274 ;;  res             1  125[BANK0 ] enum E68
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  1    wreg      enum E68
 11277 ;; Registers used:
 11278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11285 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11286 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11287 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11288 ;;Total ram usage:       12 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:   10
 11291 ;; This function calls:
 11292 ;;		_dir_next
 11293 ;;		_dir_sdi
 11294 ;;		_move_window
 11295 ;; This function is called by:
 11296 ;;		_dir_register
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text36
 11301  0175F0                     __ptext36:
 11302                           	callstack 0
 11303  0175F0                     _dir_alloc:
 11304                           	callstack 10
 11305  0175F0                     
 11306                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
 11307  0175F0  0060  F34B  FFD9   	movff	dir_alloc@dp,fsr2l
 11308  0175F6  0060  F34F  FFDA   	movff	dir_alloc@dp+1,fsr2h
 11309  0175FC  006F FF78  F0D9    	movff	postinc2,dir_alloc@fs
 11310  017602  006F FF74  F0DA    	movff	postdec2,dir_alloc@fs+1
 11311  017608                     
 11312                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
 11313  017608  C0D2  F091         	movff	dir_alloc@dp,dir_sdi@dp
 11314  01760C  C0D3  F092         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 11315  017610  0E00               	movlw	0
 11316  017612  0100               	movlb	0	; () banked
 11317  017614  6F93               	movwf	dir_sdi@ofs& (0+255),b
 11318  017616  0E00               	movlw	0
 11319  017618  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
 11320  01761A  0E00               	movlw	0
 11321  01761C  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
 11322  01761E  0E00               	movlw	0
 11323  017620  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
 11324  017622  EC91  F0A9         	call	_dir_sdi	;wreg free
 11325  017626  0100               	movlb	0	; () banked
 11326  017628  6FDD               	movwf	dir_alloc@res& (0+255),b
 11327  01762A                     
 11328                           ; BSR set to: 0
 11329                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
 11330  01762A  51DD               	movf	dir_alloc@res& (0+255),w,b
 11331  01762C  A4D8               	btfss	status,2,c
 11332  01762E  EF1B  F0BB         	goto	u9581
 11333  017632  EF1D  F0BB         	goto	u9580
 11334  017636                     u9581:
 11335  017636  EFA2  F0BB         	goto	l8591
 11336  01763A                     u9580:
 11337  01763A                     
 11338                           ; BSR set to: 0
 11339                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
 11340  01763A  0E00               	movlw	0
 11341  01763C  6FDC               	movwf	(dir_alloc@n+1)& (0+255),b
 11342  01763E  0E00               	movlw	0
 11343  017640  6FDB               	movwf	dir_alloc@n& (0+255),b
 11344  017642                     l8571:
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
 11348  017642  C0D9  F070         	movff	dir_alloc@fs,move_window@fs
 11349  017646  C0DA  F071         	movff	dir_alloc@fs+1,move_window@fs+1
 11350  01764A  EE20 F016          	lfsr	2,22
 11351  01764E  51D2               	movf	dir_alloc@dp& (0+255),w,b
 11352  017650  26D9               	addwf	fsr2l,f,c
 11353  017652  51D3               	movf	(dir_alloc@dp+1)& (0+255),w,b
 11354  017654  22DA               	addwfc	fsr2h,f,c
 11355  017656  006F FF78  F072    	movff	postinc2,move_window@sector
 11356  01765C  006F FF78  F073    	movff	postinc2,move_window@sector+1
 11357  017662  006F FF78  F074    	movff	postinc2,move_window@sector+2
 11358  017668  006F FF78  F075    	movff	postinc2,move_window@sector+3
 11359  01766E  ECFC  F0C6         	call	_move_window	;wreg free
 11360  017672  0100               	movlb	0	; () banked
 11361  017674  6FDD               	movwf	dir_alloc@res& (0+255),b
 11362  017676                     
 11363                           ; BSR set to: 0
 11364                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
 11365  017676  51DD               	movf	dir_alloc@res& (0+255),w,b
 11366  017678  B4D8               	btfsc	status,2,c
 11367  01767A  EF41  F0BB         	goto	u9591
 11368  01767E  EF43  F0BB         	goto	u9590
 11369  017682                     u9591:
 11370  017682  EF45  F0BB         	goto	l8577
 11371  017686                     u9590:
 11372  017686  EFA2  F0BB         	goto	l8591
 11373  01768A                     l8577:
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 11377  01768A  EE20 F01A          	lfsr	2,26
 11378  01768E  51D2               	movf	dir_alloc@dp& (0+255),w,b
 11379  017690  26D9               	addwf	fsr2l,f,c
 11380  017692  51D3               	movf	(dir_alloc@dp+1)& (0+255),w,b
 11381  017694  22DA               	addwfc	fsr2h,f,c
 11382  017696  006F FF78  F0D6    	movff	postinc2,??_dir_alloc
 11383  01769C  006F FF74  F0D7    	movff	postdec2,??_dir_alloc+1
 11384  0176A2  0060  F35B  FFD9   	movff	??_dir_alloc,fsr2l
 11385  0176A8  0060  F35F  FFDA   	movff	??_dir_alloc+1,fsr2h
 11386  0176AE  0EE5               	movlw	229
 11387  0176B0  18DE               	xorwf	postinc2,w,c
 11388  0176B2  B4D8               	btfsc	status,2,c
 11389  0176B4  EF5E  F0BB         	goto	u9601
 11390  0176B8  EF60  F0BB         	goto	u9600
 11391  0176BC                     u9601:
 11392  0176BC  EF7A  F0BB         	goto	l8581
 11393  0176C0                     u9600:
 11394  0176C0                     
 11395                           ; BSR set to: 0
 11396  0176C0  EE20 F01A          	lfsr	2,26
 11397  0176C4  51D2               	movf	dir_alloc@dp& (0+255),w,b
 11398  0176C6  26D9               	addwf	fsr2l,f,c
 11399  0176C8  51D3               	movf	(dir_alloc@dp+1)& (0+255),w,b
 11400  0176CA  22DA               	addwfc	fsr2h,f,c
 11401  0176CC  006F FF78  F0D6    	movff	postinc2,??_dir_alloc
 11402  0176D2  006F FF74  F0D7    	movff	postdec2,??_dir_alloc+1
 11403  0176D8  0060  F35B  FFD9   	movff	??_dir_alloc,fsr2l
 11404  0176DE  0060  F35F  FFDA   	movff	??_dir_alloc+1,fsr2h
 11405  0176E4  50DF               	movf	indf2,w,c
 11406  0176E6  A4D8               	btfss	status,2,c
 11407  0176E8  EF78  F0BB         	goto	u9611
 11408  0176EC  EF7A  F0BB         	goto	u9610
 11409  0176F0                     u9611:
 11410  0176F0  EF8A  F0BB         	goto	l8585
 11411  0176F4                     u9610:
 11412  0176F4                     l8581:
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
 11416  0176F4  4BDB               	infsnz	dir_alloc@n& (0+255),f,b
 11417  0176F6  2BDC               	incf	(dir_alloc@n+1)& (0+255),f,b
 11418  0176F8  51D4               	movf	dir_alloc@nent& (0+255),w,b
 11419  0176FA  19DB               	xorwf	dir_alloc@n& (0+255),w,b
 11420  0176FC  E107               	bnz	u9621
 11421  0176FE  51D5               	movf	(dir_alloc@nent+1)& (0+255),w,b
 11422  017700  19DC               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 11423  017702  A4D8               	btfss	status,2,c
 11424  017704  EF86  F0BB         	goto	u9621
 11425  017708  EF88  F0BB         	goto	u9620
 11426  01770C                     u9621:
 11427  01770C  EF8E  F0BB         	goto	l8587
 11428  017710                     u9620:
 11429  017710  EFA2  F0BB         	goto	l8591
 11430  017714                     l8585:
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
 11434  017714  0E00               	movlw	0
 11435  017716  6FDC               	movwf	(dir_alloc@n+1)& (0+255),b
 11436  017718  0E00               	movlw	0
 11437  01771A  6FDB               	movwf	dir_alloc@n& (0+255),b
 11438  01771C                     l8587:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
 11442  01771C  C0D2  F0B4         	movff	dir_alloc@dp,dir_next@dp
 11443  017720  C0D3  F0B5         	movff	dir_alloc@dp+1,dir_next@dp+1
 11444  017724  0E00               	movlw	0
 11445  017726  6FB7               	movwf	(dir_next@stretch+1)& (0+255),b
 11446  017728  0E01               	movlw	1
 11447  01772A  6FB6               	movwf	dir_next@stretch& (0+255),b
 11448  01772C  EC01  F0A3         	call	_dir_next	;wreg free
 11449  017730  0100               	movlb	0	; () banked
 11450  017732  6FDD               	movwf	dir_alloc@res& (0+255),b
 11451  017734                     
 11452                           ; BSR set to: 0
 11453                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
 11454  017734  51DD               	movf	dir_alloc@res& (0+255),w,b
 11455  017736  B4D8               	btfsc	status,2,c
 11456  017738  EFA0  F0BB         	goto	u9631
 11457  01773C  EFA2  F0BB         	goto	u9630
 11458  017740                     u9631:
 11459  017740  EF21  F0BB         	goto	l8571
 11460  017744                     u9630:
 11461  017744                     l8591:
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
 11465  017744  0E04               	movlw	4
 11466  017746  19DD               	xorwf	dir_alloc@res& (0+255),w,b
 11467  017748  A4D8               	btfss	status,2,c
 11468  01774A  EFA9  F0BB         	goto	u9641
 11469  01774E  EFAB  F0BB         	goto	u9640
 11470  017752                     u9641:
 11471  017752  EFAD  F0BB         	goto	l298
 11472  017756                     u9640:
 11473  017756                     
 11474                           ; BSR set to: 0
 11475  017756  0E07               	movlw	7
 11476  017758  6FDD               	movwf	dir_alloc@res& (0+255),b
 11477  01775A                     l298:
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
 11481  01775A  51DD               	movf	dir_alloc@res& (0+255),w,b
 11482  01775C                     
 11483                           ; BSR set to: 0
 11484  01775C  0012               	return		;funcret
 11485  01775E                     __end_of_dir_alloc:
 11486                           	callstack 0
 11487                           
 11488 ;; *************** function _dir_sdi *****************
 11489 ;; Defined at:
 11490 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  dp              2   49[BANK0 ] PTR struct .
 11493 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
 11494 ;;  ofs             4   51[BANK0 ] unsigned long 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  clst            4   73[BANK0 ] unsigned long 
 11497 ;;  csz             4   69[BANK0 ] unsigned long 
 11498 ;;  fs              2   77[BANK0 ] PTR struct .
 11499 ;;		 -> drive(563), NULL(0), 
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      enum E68
 11502 ;; Registers used:
 11503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11509 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11510 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11513 ;;Total ram usage:       30 bytes
 11514 ;; Hardware stack levels used:    1
 11515 ;; Hardware stack levels required when called:    8
 11516 ;; This function calls:
 11517 ;;		_clst2sect
 11518 ;;		_get_fat
 11519 ;; This function is called by:
 11520 ;;		_dir_alloc
 11521 ;;		_dir_find
 11522 ;;		_follow_path
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text37
 11527  015322                     __ptext37:
 11528                           	callstack 0
 11529  015322                     _dir_sdi:
 11530                           	callstack 12
 11531  015322                     
 11532                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
 11533  015322  0060  F247  FFD9   	movff	dir_sdi@dp,fsr2l
 11534  015328  0060  F24B  FFDA   	movff	dir_sdi@dp+1,fsr2h
 11535  01532E  006F FF78  F0AD    	movff	postinc2,dir_sdi@fs
 11536  015334  006F FF74  F0AE    	movff	postdec2,dir_sdi@fs+1
 11537  01533A  0100               	movlb	0	; () banked
 11538  01533C  5196               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 11539  01533E  E107               	bnz	u8751
 11540  015340  0E20               	movlw	32
 11541  015342  5D95               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 11542  015344  B0D8               	btfsc	status,0,c
 11543  015346  EFA7  F0A9         	goto	u8751
 11544  01534A  EFA9  F0A9         	goto	u8750
 11545  01534E                     u8751:
 11546  01534E  EFC0  F0A9         	goto	l8163
 11547  015352                     u8750:
 11548  015352                     
 11549                           ; BSR set to: 0
 11550  015352  0E1F               	movlw	31
 11551  015354  1593               	andwf	dir_sdi@ofs& (0+255),w,b
 11552  015356  6F97               	movwf	??_dir_sdi& (0+255),b
 11553  015358  0E00               	movlw	0
 11554  01535A  1594               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 11555  01535C  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
 11556  01535E  0E00               	movlw	0
 11557  015360  1595               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
 11558  015362  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
 11559  015364  0E00               	movlw	0
 11560  015366  1596               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
 11561  015368  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
 11562  01536A  5197               	movf	??_dir_sdi& (0+255),w,b
 11563  01536C  1198               	iorwf	(??_dir_sdi+1)& (0+255),w,b
 11564  01536E  1199               	iorwf	(??_dir_sdi+2)& (0+255),w,b
 11565  015370  119A               	iorwf	(??_dir_sdi+3)& (0+255),w,b
 11566  015372  B4D8               	btfsc	status,2,c
 11567  015374  EFBE  F0A9         	goto	u8761
 11568  015378  EFC0  F0A9         	goto	u8760
 11569  01537C                     u8761:
 11570  01537C  EFC3  F0A9         	goto	l8167
 11571  015380                     u8760:
 11572  015380                     l8163:
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
 11576  015380  0E02               	movlw	2
 11577  015382  EF81  F0AB         	goto	l247
 11578  015386                     l8167:
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
 11582  015386  EE20 F00E          	lfsr	2,14
 11583  01538A  5191               	movf	dir_sdi@dp& (0+255),w,b
 11584  01538C  26D9               	addwf	fsr2l,f,c
 11585  01538E  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11586  015390  22DA               	addwfc	fsr2h,f,c
 11587  015392  0060  F24F  FFDE   	movff	dir_sdi@ofs,postinc2
 11588  015398  0060  F253  FFDE   	movff	dir_sdi@ofs+1,postinc2
 11589  01539E  0060  F257  FFDE   	movff	dir_sdi@ofs+2,postinc2
 11590  0153A4  0060  F25B  FFDE   	movff	dir_sdi@ofs+3,postinc2
 11591                           
 11592                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
 11593  0153AA  EE20 F006          	lfsr	2,6
 11594  0153AE  5191               	movf	dir_sdi@dp& (0+255),w,b
 11595  0153B0  26D9               	addwf	fsr2l,f,c
 11596  0153B2  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11597  0153B4  22DA               	addwfc	fsr2h,f,c
 11598  0153B6  006F FF78  F0A9    	movff	postinc2,dir_sdi@clst
 11599  0153BC  006F FF78  F0AA    	movff	postinc2,dir_sdi@clst+1
 11600  0153C2  006F FF78  F0AB    	movff	postinc2,dir_sdi@clst+2
 11601  0153C8  006F FF78  F0AC    	movff	postinc2,dir_sdi@clst+3
 11602  0153CE                     
 11603                           ; BSR set to: 0
 11604                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
 11605  0153CE  51A9               	movf	dir_sdi@clst& (0+255),w,b
 11606  0153D0  11AA               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 11607  0153D2  11AB               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 11608  0153D4  11AC               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 11609  0153D6  A4D8               	btfss	status,2,c
 11610  0153D8  EFF0  F0A9         	goto	u8771
 11611  0153DC  EFF2  F0A9         	goto	u8770
 11612  0153E0                     u8771:
 11613  0153E0  EF12  F0AA         	goto	l8177
 11614  0153E4                     u8770:
 11615  0153E4                     
 11616                           ; BSR set to: 0
 11617  0153E4  0060  F2B7  FFD9   	movff	dir_sdi@fs,fsr2l
 11618  0153EA  0060  F2BB  FFDA   	movff	dir_sdi@fs+1,fsr2h
 11619  0153F0  0E02               	movlw	2
 11620  0153F2  64DF               	cpfsgt	indf2,c
 11621  0153F4  EFFE  F0A9         	goto	u8781
 11622  0153F8  EF00  F0AA         	goto	u8780
 11623  0153FC                     u8781:
 11624  0153FC  EF12  F0AA         	goto	l8177
 11625  015400                     u8780:
 11626  015400                     
 11627                           ; BSR set to: 0
 11628                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
 11629  015400  EE20 F027          	lfsr	2,39
 11630  015404  51AD               	movf	dir_sdi@fs& (0+255),w,b
 11631  015406  26D9               	addwf	fsr2l,f,c
 11632  015408  51AE               	movf	(dir_sdi@fs+1)& (0+255),w,b
 11633  01540A  22DA               	addwfc	fsr2h,f,c
 11634  01540C  006F FF78  F0A9    	movff	postinc2,dir_sdi@clst
 11635  015412  006F FF78  F0AA    	movff	postinc2,dir_sdi@clst+1
 11636  015418  006F FF78  F0AB    	movff	postinc2,dir_sdi@clst+2
 11637  01541E  006F FF78  F0AC    	movff	postinc2,dir_sdi@clst+3
 11638  015424                     l8177:
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
 11642  015424  51A9               	movf	dir_sdi@clst& (0+255),w,b
 11643  015426  11AA               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 11644  015428  11AB               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 11645  01542A  11AC               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 11646  01542C  A4D8               	btfss	status,2,c
 11647  01542E  EF1B  F0AA         	goto	u8791
 11648  015432  EF1D  F0AA         	goto	u8790
 11649  015436                     u8791:
 11650  015436  EF6D  F0AA         	goto	l8187
 11651  01543A                     u8790:
 11652  01543A                     
 11653                           ; BSR set to: 0
 11654                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
 11655  01543A  EE20 F007          	lfsr	2,7
 11656  01543E  51AD               	movf	dir_sdi@fs& (0+255),w,b
 11657  015440  26D9               	addwf	fsr2l,f,c
 11658  015442  51AE               	movf	(dir_sdi@fs+1)& (0+255),w,b
 11659  015444  22DA               	addwfc	fsr2h,f,c
 11660  015446  006F FF78  F097    	movff	postinc2,??_dir_sdi
 11661  01544C  006F FF74  F098    	movff	postdec2,??_dir_sdi+1
 11662  015452  5197               	movf	??_dir_sdi& (0+255),w,b
 11663  015454  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
 11664  015456  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
 11665  015458  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
 11666  01545A  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
 11667  01545C  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
 11668  01545E  C093  F09D         	movff	dir_sdi@ofs,??_dir_sdi+6
 11669  015462  C094  F09E         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 11670  015466  C095  F09F         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 11671  01546A  C096  F0A0         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 11672  01546E  0E06               	movlw	6
 11673  015470  EF3F  F0AA         	goto	u8800
 11674  015474                     u8805:
 11675  015474  90D8               	bcf	status,0,c
 11676  015476  33A0               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 11677  015478  339F               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 11678  01547A  339E               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 11679  01547C  339D               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 11680  01547E                     u8800:
 11681  01547E  2EE8               	decfsz	wreg,f,c
 11682  015480  EF3A  F0AA         	goto	u8805
 11683  015484  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
 11684  015486  5D9D               	subwf	(??_dir_sdi+6)& (0+255),w,b
 11685  015488  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
 11686  01548A  599E               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 11687  01548C  519B               	movf	(??_dir_sdi+4)& (0+255),w,b
 11688  01548E  599F               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 11689  015490  519C               	movf	(??_dir_sdi+5)& (0+255),w,b
 11690  015492  59A0               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 11691  015494  A0D8               	btfss	status,0,c
 11692  015496  EF4F  F0AA         	goto	u8811
 11693  01549A  EF51  F0AA         	goto	u8810
 11694  01549E                     u8811:
 11695  01549E  EF53  F0AA         	goto	l8185
 11696  0154A2                     u8810:
 11697  0154A2  EFC0  F0A9         	goto	l8163
 11698  0154A6                     l8185:
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
 11702  0154A6  EE20 F027          	lfsr	2,39
 11703  0154AA  51AD               	movf	dir_sdi@fs& (0+255),w,b
 11704  0154AC  26D9               	addwf	fsr2l,f,c
 11705  0154AE  51AE               	movf	(dir_sdi@fs+1)& (0+255),w,b
 11706  0154B0  22DA               	addwfc	fsr2h,f,c
 11707  0154B2  EE10 F016          	lfsr	1,22
 11708  0154B6  5191               	movf	dir_sdi@dp& (0+255),w,b
 11709  0154B8  26E1               	addwf	fsr1l,f,c
 11710  0154BA  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11711  0154BC  22E2               	addwfc	fsr1h,f,c
 11712  0154BE  006F FF7B FFE6     	movff	postinc2,postinc1
 11713  0154C4  006F FF7B FFE6     	movff	postinc2,postinc1
 11714  0154CA  006F FF7B FFE6     	movff	postinc2,postinc1
 11715  0154D0  006F FF7B FFE6     	movff	postinc2,postinc1
 11716                           
 11717                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
 11718  0154D6  EF16  F0AB         	goto	l8209
 11719  0154DA                     l8187:
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
 11723  0154DA  EE20 F009          	lfsr	2,9
 11724  0154DE  51AD               	movf	dir_sdi@fs& (0+255),w,b
 11725  0154E0  26D9               	addwf	fsr2l,f,c
 11726  0154E2  51AE               	movf	(dir_sdi@fs+1)& (0+255),w,b
 11727  0154E4  22DA               	addwfc	fsr2h,f,c
 11728  0154E6  006F FF78  F097    	movff	postinc2,??_dir_sdi
 11729  0154EC  006F FF74  F098    	movff	postdec2,??_dir_sdi+1
 11730  0154F2  5197               	movf	??_dir_sdi& (0+255),w,b
 11731  0154F4  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
 11732  0154F6  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
 11733  0154F8  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
 11734  0154FA  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
 11735  0154FC  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
 11736  0154FE  0E09               	movlw	9
 11737  015500                     u8825:
 11738  015500  90D8               	bcf	status,0,c
 11739  015502  3799               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 11740  015504  379A               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 11741  015506  379B               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 11742  015508  379C               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 11743  01550A  2EE8               	decfsz	wreg,f,c
 11744  01550C  EF80  F0AA         	goto	u8825
 11745  015510  C099  F0A5         	movff	??_dir_sdi+2,dir_sdi@csz
 11746  015514  C09A  F0A6         	movff	??_dir_sdi+3,dir_sdi@csz+1
 11747  015518  C09B  F0A7         	movff	??_dir_sdi+4,dir_sdi@csz+2
 11748  01551C  C09C  F0A8         	movff	??_dir_sdi+5,dir_sdi@csz+3
 11749                           
 11750                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
 11751  015520  EFE6  F0AA         	goto	l253
 11752  015524                     l8189:
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
 11756  015524  C091  F076         	movff	dir_sdi@dp,get_fat@obj
 11757  015528  C092  F077         	movff	dir_sdi@dp+1,get_fat@obj+1
 11758  01552C  C0A9  F078         	movff	dir_sdi@clst,get_fat@clst
 11759  015530  C0AA  F079         	movff	dir_sdi@clst+1,get_fat@clst+1
 11760  015534  C0AB  F07A         	movff	dir_sdi@clst+2,get_fat@clst+2
 11761  015538  C0AC  F07B         	movff	dir_sdi@clst+3,get_fat@clst+3
 11762  01553C  EC38  F0A5         	call	_get_fat	;wreg free
 11763  015540  C076  F0A9         	movff	?_get_fat,dir_sdi@clst
 11764  015544  C077  F0AA         	movff	?_get_fat+1,dir_sdi@clst+1
 11765  015548  C078  F0AB         	movff	?_get_fat+2,dir_sdi@clst+2
 11766  01554C  C079  F0AC         	movff	?_get_fat+3,dir_sdi@clst+3
 11767  015550                     
 11768                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 11769  015550  0100               	movlb	0	; () banked
 11770  015552  29A9               	incf	dir_sdi@clst& (0+255),w,b
 11771  015554  E10A               	bnz	u8831
 11772  015556  29AA               	incf	(dir_sdi@clst+1)& (0+255),w,b
 11773  015558  E108               	bnz	u8831
 11774  01555A  29AB               	incf	(dir_sdi@clst+2)& (0+255),w,b
 11775  01555C  E106               	bnz	u8831
 11776  01555E  29AC               	incf	(dir_sdi@clst+3)& (0+255),w,b
 11777  015560  A4D8               	btfss	status,2,c
 11778  015562  EFB5  F0AA         	goto	u8831
 11779  015566  EFB7  F0AA         	goto	u8830
 11780  01556A                     u8831:
 11781  01556A  EFBA  F0AA         	goto	l8197
 11782  01556E                     u8830:
 11783  01556E                     
 11784                           ; BSR set to: 0
 11785  01556E  0E01               	movlw	1
 11786  015570  EF81  F0AB         	goto	l247
 11787  015574                     l8197:
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
 11791  015574  51AC               	movf	(dir_sdi@clst+3)& (0+255),w,b
 11792  015576  11AB               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 11793  015578  11AA               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 11794  01557A  E109               	bnz	u8840
 11795  01557C  0E02               	movlw	2
 11796  01557E  5DA9               	subwf	dir_sdi@clst& (0+255),w,b
 11797  015580  A0D8               	btfss	status,0,c
 11798  015582  EFC5  F0AA         	goto	u8841
 11799  015586  EFC7  F0AA         	goto	u8840
 11800  01558A                     u8841:
 11801  01558A  EFC0  F0A9         	goto	l8163
 11802  01558E                     u8840:
 11803  01558E                     
 11804                           ; BSR set to: 0
 11805  01558E  EE20 F017          	lfsr	2,23
 11806  015592  51AD               	movf	dir_sdi@fs& (0+255),w,b
 11807  015594  26D9               	addwf	fsr2l,f,c
 11808  015596  51AE               	movf	(dir_sdi@fs+1)& (0+255),w,b
 11809  015598  22DA               	addwfc	fsr2h,f,c
 11810  01559A  50DE               	movf	postinc2,w,c
 11811  01559C  5DA9               	subwf	dir_sdi@clst& (0+255),w,b
 11812  01559E  50DE               	movf	postinc2,w,c
 11813  0155A0  59AA               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 11814  0155A2  50DE               	movf	postinc2,w,c
 11815  0155A4  59AB               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 11816  0155A6  50DE               	movf	postinc2,w,c
 11817  0155A8  59AC               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 11818  0155AA  A0D8               	btfss	status,0,c
 11819  0155AC  EFDA  F0AA         	goto	u8851
 11820  0155B0  EFDC  F0AA         	goto	u8850
 11821  0155B4                     u8851:
 11822  0155B4  EFDE  F0AA         	goto	l8205
 11823  0155B8                     u8850:
 11824  0155B8  EFC0  F0A9         	goto	l8163
 11825  0155BC                     l8205:
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
 11829  0155BC  51A5               	movf	dir_sdi@csz& (0+255),w,b
 11830  0155BE  5F93               	subwf	dir_sdi@ofs& (0+255),f,b
 11831  0155C0  51A6               	movf	(dir_sdi@csz+1)& (0+255),w,b
 11832  0155C2  5B94               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 11833  0155C4  51A7               	movf	(dir_sdi@csz+2)& (0+255),w,b
 11834  0155C6  5B95               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 11835  0155C8  51A8               	movf	(dir_sdi@csz+3)& (0+255),w,b
 11836  0155CA  5B96               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 11837  0155CC                     l253:
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
 11841  0155CC  51A5               	movf	dir_sdi@csz& (0+255),w,b
 11842  0155CE  5D93               	subwf	dir_sdi@ofs& (0+255),w,b
 11843  0155D0  51A6               	movf	(dir_sdi@csz+1)& (0+255),w,b
 11844  0155D2  5994               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 11845  0155D4  51A7               	movf	(dir_sdi@csz+2)& (0+255),w,b
 11846  0155D6  5995               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 11847  0155D8  51A8               	movf	(dir_sdi@csz+3)& (0+255),w,b
 11848  0155DA  5996               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 11849  0155DC  B0D8               	btfsc	status,0,c
 11850  0155DE  EFF3  F0AA         	goto	u8861
 11851  0155E2  EFF5  F0AA         	goto	u8860
 11852  0155E6                     u8861:
 11853  0155E6  EF92  F0AA         	goto	l8189
 11854  0155EA                     u8860:
 11855  0155EA                     
 11856                           ; BSR set to: 0
 11857                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
 11858  0155EA  C0AD  F00D         	movff	dir_sdi@fs,clst2sect@fs
 11859  0155EE  C0AE  F00E         	movff	dir_sdi@fs+1,clst2sect@fs+1
 11860  0155F2  C0A9  F00F         	movff	dir_sdi@clst,clst2sect@clst
 11861  0155F6  C0AA  F010         	movff	dir_sdi@clst+1,clst2sect@clst+1
 11862  0155FA  C0AB  F011         	movff	dir_sdi@clst+2,clst2sect@clst+2
 11863  0155FE  C0AC  F012         	movff	dir_sdi@clst+3,clst2sect@clst+3
 11864  015602  ECE3  F0C4         	call	_clst2sect	;wreg free
 11865  015606  0100               	movlb	0	; () banked
 11866  015608  EE20 F016          	lfsr	2,22
 11867  01560C  5191               	movf	dir_sdi@dp& (0+255),w,b
 11868  01560E  26D9               	addwf	fsr2l,f,c
 11869  015610  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11870  015612  22DA               	addwfc	fsr2h,f,c
 11871  015614  0060  F037  FFDE   	movff	?_clst2sect,postinc2
 11872  01561A  0060  F03B  FFDE   	movff	?_clst2sect+1,postinc2
 11873  015620  0060  F03F  FFDE   	movff	?_clst2sect+2,postinc2
 11874  015626  0060  F043  FFDE   	movff	?_clst2sect+3,postinc2
 11875  01562C                     l8209:
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
 11879  01562C  EE20 F012          	lfsr	2,18
 11880  015630  5191               	movf	dir_sdi@dp& (0+255),w,b
 11881  015632  26D9               	addwf	fsr2l,f,c
 11882  015634  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11883  015636  22DA               	addwfc	fsr2h,f,c
 11884  015638  0060  F2A7  FFDE   	movff	dir_sdi@clst,postinc2
 11885  01563E  0060  F2AB  FFDE   	movff	dir_sdi@clst+1,postinc2
 11886  015644  0060  F2AF  FFDE   	movff	dir_sdi@clst+2,postinc2
 11887  01564A  0060  F2B3  FFDE   	movff	dir_sdi@clst+3,postinc2
 11888  015650                     
 11889                           ; BSR set to: 0
 11890                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
 11891  015650  EE20 F016          	lfsr	2,22
 11892  015654  5191               	movf	dir_sdi@dp& (0+255),w,b
 11893  015656  26D9               	addwf	fsr2l,f,c
 11894  015658  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11895  01565A  22DA               	addwfc	fsr2h,f,c
 11896  01565C  50DE               	movf	postinc2,w,c
 11897  01565E  10DE               	iorwf	postinc2,w,c
 11898  015660  10DE               	iorwf	postinc2,w,c
 11899  015662  10DE               	iorwf	postinc2,w,c
 11900  015664  A4D8               	btfss	status,2,c
 11901  015666  EF37  F0AB         	goto	u8871
 11902  01566A  EF39  F0AB         	goto	u8870
 11903  01566E                     u8871:
 11904  01566E  EF3B  F0AB         	goto	l8217
 11905  015672                     u8870:
 11906  015672  EFC0  F0A9         	goto	l8163
 11907  015676                     l8217:
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
 11911  015676  C093  F097         	movff	dir_sdi@ofs,??_dir_sdi
 11912  01567A  C094  F098         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 11913  01567E  C095  F099         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 11914  015682  C096  F09A         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 11915  015686  0E0A               	movlw	10
 11916  015688  EF4B  F0AB         	goto	u8880
 11917  01568C                     u8885:
 11918  01568C  90D8               	bcf	status,0,c
 11919  01568E  339A               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 11920  015690  3399               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 11921  015692  3398               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 11922  015694  3397               	rrcf	??_dir_sdi& (0+255),f,b
 11923  015696                     u8880:
 11924  015696  2EE8               	decfsz	wreg,f,c
 11925  015698  EF46  F0AB         	goto	u8885
 11926  01569C  EE20 F016          	lfsr	2,22
 11927  0156A0  5191               	movf	dir_sdi@dp& (0+255),w,b
 11928  0156A2  26D9               	addwf	fsr2l,f,c
 11929  0156A4  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11930  0156A6  22DA               	addwfc	fsr2h,f,c
 11931  0156A8  5197               	movf	??_dir_sdi& (0+255),w,b
 11932  0156AA  26DE               	addwf	postinc2,f,c
 11933  0156AC  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
 11934  0156AE  22DE               	addwfc	postinc2,f,c
 11935  0156B0  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
 11936  0156B2  22DE               	addwfc	postinc2,f,c
 11937  0156B4  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
 11938  0156B6  22DE               	addwfc	postinc2,f,c
 11939                           
 11940                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
 11941  0156B8  0EFF               	movlw	255
 11942  0156BA  6F97               	movwf	??_dir_sdi& (0+255),b
 11943  0156BC  0E01               	movlw	1
 11944  0156BE  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
 11945  0156C0  C093  F099         	movff	dir_sdi@ofs,??_dir_sdi+2
 11946  0156C4  C094  F09A         	movff	dir_sdi@ofs+1,??_dir_sdi+3
 11947  0156C8  5197               	movf	??_dir_sdi& (0+255),w,b
 11948  0156CA  1799               	andwf	(??_dir_sdi+2)& (0+255),f,b
 11949  0156CC  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
 11950  0156CE  179A               	andwf	(??_dir_sdi+3)& (0+255),f,b
 11951  0156D0  C0AD  F09B         	movff	dir_sdi@fs,??_dir_sdi+4
 11952  0156D4  C0AE  F09C         	movff	dir_sdi@fs+1,??_dir_sdi+5
 11953  0156D8  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
 11954  0156DA  279B               	addwf	(??_dir_sdi+4)& (0+255),f,b
 11955  0156DC  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
 11956  0156DE  239C               	addwfc	(??_dir_sdi+5)& (0+255),f,b
 11957  0156E0  0E33               	movlw	51
 11958  0156E2  279B               	addwf	(??_dir_sdi+4)& (0+255),f,b
 11959  0156E4  0E00               	movlw	0
 11960  0156E6  239C               	addwfc	(??_dir_sdi+5)& (0+255),f,b
 11961  0156E8  EE20 F01A          	lfsr	2,26
 11962  0156EC  5191               	movf	dir_sdi@dp& (0+255),w,b
 11963  0156EE  26D9               	addwf	fsr2l,f,c
 11964  0156F0  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
 11965  0156F2  22DA               	addwfc	fsr2h,f,c
 11966  0156F4  0060  F26F  FFDE   	movff	??_dir_sdi+4,postinc2
 11967  0156FA  0060  F273  FFDD   	movff	??_dir_sdi+5,postdec2
 11968  015700                     
 11969                           ; BSR set to: 0
 11970                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
 11971  015700  0E00               	movlw	0
 11972  015702                     l247:
 11973                           
 11974                           ; BSR set to: 0
 11975  015702  0012               	return		;funcret
 11976  015704                     __end_of_dir_sdi:
 11977                           	callstack 0
 11978                           
 11979 ;; *************** function _dir_next *****************
 11980 ;; Defined at:
 11981 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;  dp              2   84[BANK0 ] PTR struct .
 11984 ;;		 -> f_chdir@dj(40), f_open@dj(40), 
 11985 ;;  stretch         2   86[BANK0 ] int 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;  clst            4  110[BANK0 ] unsigned long 
 11988 ;;  ofs             4  104[BANK0 ] unsigned long 
 11989 ;;  fs              2  108[BANK0 ] PTR struct .
 11990 ;;		 -> drive(563), NULL(0), 
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      enum E68
 11993 ;; Registers used:
 11994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12001 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12002 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12003 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12004 ;;Total ram usage:       30 bytes
 12005 ;; Hardware stack levels used:    1
 12006 ;; Hardware stack levels required when called:    9
 12007 ;; This function calls:
 12008 ;;		_clst2sect
 12009 ;;		_create_chain
 12010 ;;		_dir_clear
 12011 ;;		_get_fat
 12012 ;; This function is called by:
 12013 ;;		_dir_alloc
 12014 ;;		_dir_find
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           	psect	text38
 12019  014602                     __ptext38:
 12020                           	callstack 0
 12021  014602                     _dir_next:
 12022                           	callstack 10
 12023  014602                     
 12024                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
 12025  014602  0060  F2D3  FFD9   	movff	dir_next@dp,fsr2l
 12026  014608  0060  F2D7  FFDA   	movff	dir_next@dp+1,fsr2h
 12027  01460E  006F FF78  F0CC    	movff	postinc2,dir_next@fs
 12028  014614  006F FF74  F0CD    	movff	postdec2,dir_next@fs+1
 12029  01461A                     
 12030                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
 12031  01461A  0100               	movlb	0	; () banked
 12032  01461C  EE20 F00E          	lfsr	2,14
 12033  014620  51B4               	movf	dir_next@dp& (0+255),w,b
 12034  014622  26D9               	addwf	fsr2l,f,c
 12035  014624  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12036  014626  22DA               	addwfc	fsr2h,f,c
 12037  014628  006F FF78  F0B8    	movff	postinc2,??_dir_next
 12038  01462E  006F FF78  F0B9    	movff	postinc2,??_dir_next+1
 12039  014634  006F FF78  F0BA    	movff	postinc2,??_dir_next+2
 12040  01463A  006F FF78  F0BB    	movff	postinc2,??_dir_next+3
 12041  014640  0E20               	movlw	32
 12042  014642  25B8               	addwf	??_dir_next& (0+255),w,b
 12043  014644  6FC8               	movwf	dir_next@ofs& (0+255),b
 12044  014646  0E00               	movlw	0
 12045  014648  21B9               	addwfc	(??_dir_next+1)& (0+255),w,b
 12046  01464A  6FC9               	movwf	(dir_next@ofs+1)& (0+255),b
 12047  01464C  0E00               	movlw	0
 12048  01464E  21BA               	addwfc	(??_dir_next+2)& (0+255),w,b
 12049  014650  6FCA               	movwf	(dir_next@ofs+2)& (0+255),b
 12050  014652  0E00               	movlw	0
 12051  014654  21BB               	addwfc	(??_dir_next+3)& (0+255),w,b
 12052  014656  6FCB               	movwf	(dir_next@ofs+3)& (0+255),b
 12053  014658                     
 12054                           ; BSR set to: 0
 12055                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
 12056  014658  EE20 F016          	lfsr	2,22
 12057  01465C  51B4               	movf	dir_next@dp& (0+255),w,b
 12058  01465E  26D9               	addwf	fsr2l,f,c
 12059  014660  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12060  014662  22DA               	addwfc	fsr2h,f,c
 12061  014664  50DE               	movf	postinc2,w,c
 12062  014666  10DE               	iorwf	postinc2,w,c
 12063  014668  10DE               	iorwf	postinc2,w,c
 12064  01466A  10DE               	iorwf	postinc2,w,c
 12065  01466C  B4D8               	btfsc	status,2,c
 12066  01466E  EF3B  F0A3         	goto	u8891
 12067  014672  EF3D  F0A3         	goto	u8890
 12068  014676                     u8891:
 12069  014676  EF48  F0A3         	goto	l8239
 12070  01467A                     u8890:
 12071  01467A                     
 12072                           ; BSR set to: 0
 12073  01467A  51CB               	movf	(dir_next@ofs+3)& (0+255),w,b
 12074  01467C  E109               	bnz	u8900
 12075  01467E  0E20               	movlw	32
 12076  014680  5DCA               	subwf	(dir_next@ofs+2)& (0+255),w,b
 12077  014682  A0D8               	btfss	status,0,c
 12078  014684  EF46  F0A3         	goto	u8901
 12079  014688  EF48  F0A3         	goto	u8900
 12080  01468C                     u8901:
 12081  01468C  EF4B  F0A3         	goto	l8243
 12082  014690                     u8900:
 12083  014690                     l8239:
 12084                           
 12085                           ; BSR set to: 0
 12086  014690  0E04               	movlw	4
 12087  014692  EF37  F0A5         	goto	l272
 12088  014696                     l8243:
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
 12092  014696  0EFF               	movlw	255
 12093  014698  15C8               	andwf	dir_next@ofs& (0+255),w,b
 12094  01469A  6FB8               	movwf	??_dir_next& (0+255),b
 12095  01469C  0E01               	movlw	1
 12096  01469E  15C9               	andwf	(dir_next@ofs+1)& (0+255),w,b
 12097  0146A0  6FB9               	movwf	(??_dir_next+1)& (0+255),b
 12098  0146A2  0E00               	movlw	0
 12099  0146A4  15CA               	andwf	(dir_next@ofs+2)& (0+255),w,b
 12100  0146A6  6FBA               	movwf	(??_dir_next+2)& (0+255),b
 12101  0146A8  0E00               	movlw	0
 12102  0146AA  15CB               	andwf	(dir_next@ofs+3)& (0+255),w,b
 12103  0146AC  6FBB               	movwf	(??_dir_next+3)& (0+255),b
 12104  0146AE  51B8               	movf	??_dir_next& (0+255),w,b
 12105  0146B0  11B9               	iorwf	(??_dir_next+1)& (0+255),w,b
 12106  0146B2  11BA               	iorwf	(??_dir_next+2)& (0+255),w,b
 12107  0146B4  11BB               	iorwf	(??_dir_next+3)& (0+255),w,b
 12108  0146B6  A4D8               	btfss	status,2,c
 12109  0146B8  EF60  F0A3         	goto	u8911
 12110  0146BC  EF62  F0A3         	goto	u8910
 12111  0146C0                     u8911:
 12112  0146C0  EF00  F0A5         	goto	l8311
 12113  0146C4                     u8910:
 12114  0146C4                     
 12115                           ; BSR set to: 0
 12116                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
 12117  0146C4  EE20 F016          	lfsr	2,22
 12118  0146C8  51B4               	movf	dir_next@dp& (0+255),w,b
 12119  0146CA  26D9               	addwf	fsr2l,f,c
 12120  0146CC  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12121  0146CE  22DA               	addwfc	fsr2h,f,c
 12122  0146D0  2ADE               	incf	postinc2,f,c
 12123  0146D2  0E00               	movlw	0
 12124  0146D4  22DE               	addwfc	postinc2,f,c
 12125  0146D6  22DE               	addwfc	postinc2,f,c
 12126  0146D8  22DE               	addwfc	postinc2,f,c
 12127                           
 12128                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
 12129  0146DA  EE20 F012          	lfsr	2,18
 12130  0146DE  51B4               	movf	dir_next@dp& (0+255),w,b
 12131  0146E0  26D9               	addwf	fsr2l,f,c
 12132  0146E2  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12133  0146E4  22DA               	addwfc	fsr2h,f,c
 12134  0146E6  50DE               	movf	postinc2,w,c
 12135  0146E8  10DE               	iorwf	postinc2,w,c
 12136  0146EA  10DE               	iorwf	postinc2,w,c
 12137  0146EC  10DE               	iorwf	postinc2,w,c
 12138  0146EE  A4D8               	btfss	status,2,c
 12139  0146F0  EF7C  F0A3         	goto	u8921
 12140  0146F4  EF7E  F0A3         	goto	u8920
 12141  0146F8                     u8921:
 12142  0146F8  EFBE  F0A3         	goto	l8255
 12143  0146FC                     u8920:
 12144  0146FC                     
 12145                           ; BSR set to: 0
 12146                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
 12147  0146FC  EE20 F007          	lfsr	2,7
 12148  014700  51CC               	movf	dir_next@fs& (0+255),w,b
 12149  014702  26D9               	addwf	fsr2l,f,c
 12150  014704  51CD               	movf	(dir_next@fs+1)& (0+255),w,b
 12151  014706  22DA               	addwfc	fsr2h,f,c
 12152  014708  006F FF78  F0B8    	movff	postinc2,??_dir_next
 12153  01470E  006F FF74  F0B9    	movff	postdec2,??_dir_next+1
 12154  014714  51B8               	movf	??_dir_next& (0+255),w,b
 12155  014716  6FBA               	movwf	(??_dir_next+2)& (0+255),b
 12156  014718  51B9               	movf	(??_dir_next+1)& (0+255),w,b
 12157  01471A  6FBB               	movwf	(??_dir_next+3)& (0+255),b
 12158  01471C  6BBC               	clrf	(??_dir_next+4)& (0+255),b
 12159  01471E  6BBD               	clrf	(??_dir_next+5)& (0+255),b
 12160  014720  C0C8  F0BE         	movff	dir_next@ofs,??_dir_next+6
 12161  014724  C0C9  F0BF         	movff	dir_next@ofs+1,??_dir_next+7
 12162  014728  C0CA  F0C0         	movff	dir_next@ofs+2,??_dir_next+8
 12163  01472C  C0CB  F0C1         	movff	dir_next@ofs+3,??_dir_next+9
 12164  014730  0E06               	movlw	6
 12165  014732  EFA0  F0A3         	goto	u8930
 12166  014736                     u8935:
 12167  014736  90D8               	bcf	status,0,c
 12168  014738  33C1               	rrcf	(??_dir_next+9)& (0+255),f,b
 12169  01473A  33C0               	rrcf	(??_dir_next+8)& (0+255),f,b
 12170  01473C  33BF               	rrcf	(??_dir_next+7)& (0+255),f,b
 12171  01473E  33BE               	rrcf	(??_dir_next+6)& (0+255),f,b
 12172  014740                     u8930:
 12173  014740  2EE8               	decfsz	wreg,f,c
 12174  014742  EF9B  F0A3         	goto	u8935
 12175  014746  51BA               	movf	(??_dir_next+2)& (0+255),w,b
 12176  014748  5DBE               	subwf	(??_dir_next+6)& (0+255),w,b
 12177  01474A  51BB               	movf	(??_dir_next+3)& (0+255),w,b
 12178  01474C  59BF               	subwfb	(??_dir_next+7)& (0+255),w,b
 12179  01474E  51BC               	movf	(??_dir_next+4)& (0+255),w,b
 12180  014750  59C0               	subwfb	(??_dir_next+8)& (0+255),w,b
 12181  014752  51BD               	movf	(??_dir_next+5)& (0+255),w,b
 12182  014754  59C1               	subwfb	(??_dir_next+9)& (0+255),w,b
 12183  014756  A0D8               	btfss	status,0,c
 12184  014758  EFB0  F0A3         	goto	u8941
 12185  01475C  EFB2  F0A3         	goto	u8940
 12186  014760                     u8941:
 12187  014760  EF00  F0A5         	goto	l8311
 12188  014764                     u8940:
 12189  014764                     
 12190                           ; BSR set to: 0
 12191                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
 12192  014764  EE20 F016          	lfsr	2,22
 12193  014768  51B4               	movf	dir_next@dp& (0+255),w,b
 12194  01476A  26D9               	addwf	fsr2l,f,c
 12195  01476C  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12196  01476E  22DA               	addwfc	fsr2h,f,c
 12197  014770  6ADE               	clrf	postinc2,c
 12198  014772  6ADE               	clrf	postinc2,c
 12199  014774  6ADE               	clrf	postinc2,c
 12200  014776  6ADD               	clrf	postdec2,c
 12201  014778  EF48  F0A3         	goto	l8239
 12202  01477C                     l8255:
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
 12206  01477C  0EFF               	movlw	255
 12207  01477E  6FB8               	movwf	??_dir_next& (0+255),b
 12208  014780  0EFF               	movlw	255
 12209  014782  6FB9               	movwf	(??_dir_next+1)& (0+255),b
 12210  014784  EE20 F009          	lfsr	2,9
 12211  014788  51CC               	movf	dir_next@fs& (0+255),w,b
 12212  01478A  26D9               	addwf	fsr2l,f,c
 12213  01478C  51CD               	movf	(dir_next@fs+1)& (0+255),w,b
 12214  01478E  22DA               	addwfc	fsr2h,f,c
 12215  014790  006F FF78  F0BA    	movff	postinc2,??_dir_next+2
 12216  014796  006F FF74  F0BB    	movff	postdec2,??_dir_next+3
 12217  01479C  51B8               	movf	??_dir_next& (0+255),w,b
 12218  01479E  27BA               	addwf	(??_dir_next+2)& (0+255),f,b
 12219  0147A0  51B9               	movf	(??_dir_next+1)& (0+255),w,b
 12220  0147A2  23BB               	addwfc	(??_dir_next+3)& (0+255),f,b
 12221  0147A4  C0C8  F0BC         	movff	dir_next@ofs,??_dir_next+4
 12222  0147A8  C0C9  F0BD         	movff	dir_next@ofs+1,??_dir_next+5
 12223  0147AC  C0CA  F0BE         	movff	dir_next@ofs+2,??_dir_next+6
 12224  0147B0  C0CB  F0BF         	movff	dir_next@ofs+3,??_dir_next+7
 12225  0147B4  0E0A               	movlw	10
 12226  0147B6  EFE2  F0A3         	goto	u8950
 12227  0147BA                     u8955:
 12228  0147BA  90D8               	bcf	status,0,c
 12229  0147BC  33BF               	rrcf	(??_dir_next+7)& (0+255),f,b
 12230  0147BE  33BE               	rrcf	(??_dir_next+6)& (0+255),f,b
 12231  0147C0  33BD               	rrcf	(??_dir_next+5)& (0+255),f,b
 12232  0147C2  33BC               	rrcf	(??_dir_next+4)& (0+255),f,b
 12233  0147C4                     u8950:
 12234  0147C4  2EE8               	decfsz	wreg,f,c
 12235  0147C6  EFDD  F0A3         	goto	u8955
 12236  0147CA  51BA               	movf	(??_dir_next+2)& (0+255),w,b
 12237  0147CC  15BC               	andwf	(??_dir_next+4)& (0+255),w,b
 12238  0147CE  6FC0               	movwf	(??_dir_next+8)& (0+255),b
 12239  0147D0  51BB               	movf	(??_dir_next+3)& (0+255),w,b
 12240  0147D2  15BD               	andwf	(??_dir_next+5)& (0+255),w,b
 12241  0147D4  6FC1               	movwf	(??_dir_next+9)& (0+255),b
 12242  0147D6  0E00               	movlw	0
 12243  0147D8  15BE               	andwf	(??_dir_next+6)& (0+255),w,b
 12244  0147DA  6FC2               	movwf	(??_dir_next+10)& (0+255),b
 12245  0147DC  0E00               	movlw	0
 12246  0147DE  15BF               	andwf	(??_dir_next+7)& (0+255),w,b
 12247  0147E0  6FC3               	movwf	(??_dir_next+11)& (0+255),b
 12248  0147E2  51C0               	movf	(??_dir_next+8)& (0+255),w,b
 12249  0147E4  11C1               	iorwf	(??_dir_next+9)& (0+255),w,b
 12250  0147E6  11C2               	iorwf	(??_dir_next+10)& (0+255),w,b
 12251  0147E8  11C3               	iorwf	(??_dir_next+11)& (0+255),w,b
 12252  0147EA  A4D8               	btfss	status,2,c
 12253  0147EC  EFFA  F0A3         	goto	u8961
 12254  0147F0  EFFC  F0A3         	goto	u8960
 12255  0147F4                     u8961:
 12256  0147F4  EF00  F0A5         	goto	l8311
 12257  0147F8                     u8960:
 12258  0147F8                     
 12259                           ; BSR set to: 0
 12260                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
 12261  0147F8  C0B4  F076         	movff	dir_next@dp,get_fat@obj
 12262  0147FC  C0B5  F077         	movff	dir_next@dp+1,get_fat@obj+1
 12263  014800  EE20 F012          	lfsr	2,18
 12264  014804  51B4               	movf	dir_next@dp& (0+255),w,b
 12265  014806  26D9               	addwf	fsr2l,f,c
 12266  014808  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12267  01480A  22DA               	addwfc	fsr2h,f,c
 12268  01480C  006F FF78  F078    	movff	postinc2,get_fat@clst
 12269  014812  006F FF78  F079    	movff	postinc2,get_fat@clst+1
 12270  014818  006F FF78  F07A    	movff	postinc2,get_fat@clst+2
 12271  01481E  006F FF78  F07B    	movff	postinc2,get_fat@clst+3
 12272  014824  EC38  F0A5         	call	_get_fat	;wreg free
 12273  014828  C076  F0CE         	movff	?_get_fat,dir_next@clst
 12274  01482C  C077  F0CF         	movff	?_get_fat+1,dir_next@clst+1
 12275  014830  C078  F0D0         	movff	?_get_fat+2,dir_next@clst+2
 12276  014834  C079  F0D1         	movff	?_get_fat+3,dir_next@clst+3
 12277  014838                     
 12278                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
 12279  014838  0100               	movlb	0	; () banked
 12280  01483A  51D1               	movf	(dir_next@clst+3)& (0+255),w,b
 12281  01483C  11D0               	iorwf	(dir_next@clst+2)& (0+255),w,b
 12282  01483E  11CF               	iorwf	(dir_next@clst+1)& (0+255),w,b
 12283  014840  E107               	bnz	u8971
 12284  014842  0E02               	movlw	2
 12285  014844  5DCE               	subwf	dir_next@clst& (0+255),w,b
 12286  014846  B0D8               	btfsc	status,0,c
 12287  014848  EF28  F0A4         	goto	u8971
 12288  01484C  EF2A  F0A4         	goto	u8970
 12289  014850                     u8971:
 12290  014850  EF2D  F0A4         	goto	l8265
 12291  014854                     u8970:
 12292  014854                     l8261:
 12293                           
 12294                           ; BSR set to: 0
 12295  014854  0E02               	movlw	2
 12296  014856  EF37  F0A5         	goto	l272
 12297  01485A                     l8265:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 12301  01485A  29CE               	incf	dir_next@clst& (0+255),w,b
 12302  01485C  E10A               	bnz	u8981
 12303  01485E  29CF               	incf	(dir_next@clst+1)& (0+255),w,b
 12304  014860  E108               	bnz	u8981
 12305  014862  29D0               	incf	(dir_next@clst+2)& (0+255),w,b
 12306  014864  E106               	bnz	u8981
 12307  014866  29D1               	incf	(dir_next@clst+3)& (0+255),w,b
 12308  014868  A4D8               	btfss	status,2,c
 12309  01486A  EF39  F0A4         	goto	u8981
 12310  01486E  EF3B  F0A4         	goto	u8980
 12311  014872                     u8981:
 12312  014872  EF3E  F0A4         	goto	l8271
 12313  014876                     u8980:
 12314  014876                     l8267:
 12315  014876  0E01               	movlw	1
 12316  014878  EF37  F0A5         	goto	l272
 12317  01487C                     l8271:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
 12321  01487C  EE20 F017          	lfsr	2,23
 12322  014880  51CC               	movf	dir_next@fs& (0+255),w,b
 12323  014882  26D9               	addwf	fsr2l,f,c
 12324  014884  51CD               	movf	(dir_next@fs+1)& (0+255),w,b
 12325  014886  22DA               	addwfc	fsr2h,f,c
 12326  014888  50DE               	movf	postinc2,w,c
 12327  01488A  5DCE               	subwf	dir_next@clst& (0+255),w,b
 12328  01488C  50DE               	movf	postinc2,w,c
 12329  01488E  59CF               	subwfb	(dir_next@clst+1)& (0+255),w,b
 12330  014890  50DE               	movf	postinc2,w,c
 12331  014892  59D0               	subwfb	(dir_next@clst+2)& (0+255),w,b
 12332  014894  50DE               	movf	postinc2,w,c
 12333  014896  59D1               	subwfb	(dir_next@clst+3)& (0+255),w,b
 12334  014898  A0D8               	btfss	status,0,c
 12335  01489A  EF51  F0A4         	goto	u8991
 12336  01489E  EF53  F0A4         	goto	u8990
 12337  0148A2                     u8991:
 12338  0148A2  EFCC  F0A4         	goto	l280
 12339  0148A6                     u8990:
 12340  0148A6                     
 12341                           ; BSR set to: 0
 12342                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
 12343  0148A6  51B6               	movf	dir_next@stretch& (0+255),w,b
 12344  0148A8  11B7               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 12345  0148AA  A4D8               	btfss	status,2,c
 12346  0148AC  EF5A  F0A4         	goto	u9001
 12347  0148B0  EF5C  F0A4         	goto	u9000
 12348  0148B4                     u9001:
 12349  0148B4  EF68  F0A4         	goto	l8281
 12350  0148B8                     u9000:
 12351  0148B8                     
 12352                           ; BSR set to: 0
 12353                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
 12354  0148B8  EE20 F016          	lfsr	2,22
 12355  0148BC  51B4               	movf	dir_next@dp& (0+255),w,b
 12356  0148BE  26D9               	addwf	fsr2l,f,c
 12357  0148C0  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12358  0148C2  22DA               	addwfc	fsr2h,f,c
 12359  0148C4  6ADE               	clrf	postinc2,c
 12360  0148C6  6ADE               	clrf	postinc2,c
 12361  0148C8  6ADE               	clrf	postinc2,c
 12362  0148CA  6ADD               	clrf	postdec2,c
 12363  0148CC  EF48  F0A3         	goto	l8239
 12364  0148D0                     l8281:
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
 12368  0148D0  C0B4  F097         	movff	dir_next@dp,create_chain@obj
 12369  0148D4  C0B5  F098         	movff	dir_next@dp+1,create_chain@obj+1
 12370  0148D8  EE20 F012          	lfsr	2,18
 12371  0148DC  51B4               	movf	dir_next@dp& (0+255),w,b
 12372  0148DE  26D9               	addwf	fsr2l,f,c
 12373  0148E0  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12374  0148E2  22DA               	addwfc	fsr2h,f,c
 12375  0148E4  006F FF78  F099    	movff	postinc2,create_chain@clst
 12376  0148EA  006F FF78  F09A    	movff	postinc2,create_chain@clst+1
 12377  0148F0  006F FF78  F09B    	movff	postinc2,create_chain@clst+2
 12378  0148F6  006F FF78  F09C    	movff	postinc2,create_chain@clst+3
 12379  0148FC  EC09  F096         	call	_create_chain	;wreg free
 12380  014900  C097  F0CE         	movff	?_create_chain,dir_next@clst
 12381  014904  C098  F0CF         	movff	?_create_chain+1,dir_next@clst+1
 12382  014908  C099  F0D0         	movff	?_create_chain+2,dir_next@clst+2
 12383  01490C  C09A  F0D1         	movff	?_create_chain+3,dir_next@clst+3
 12384  014910                     
 12385                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
 12386  014910  0100               	movlb	0	; () banked
 12387  014912  51CE               	movf	dir_next@clst& (0+255),w,b
 12388  014914  11CF               	iorwf	(dir_next@clst+1)& (0+255),w,b
 12389  014916  11D0               	iorwf	(dir_next@clst+2)& (0+255),w,b
 12390  014918  11D1               	iorwf	(dir_next@clst+3)& (0+255),w,b
 12391  01491A  A4D8               	btfss	status,2,c
 12392  01491C  EF92  F0A4         	goto	u9011
 12393  014920  EF94  F0A4         	goto	u9010
 12394  014924                     u9011:
 12395  014924  EF97  F0A4         	goto	l8289
 12396  014928                     u9010:
 12397  014928                     
 12398                           ; BSR set to: 0
 12399  014928  0E07               	movlw	7
 12400  01492A  EF37  F0A5         	goto	l272
 12401  01492E                     l8289:
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
 12405  01492E  05CE               	decf	dir_next@clst& (0+255),w,b
 12406  014930  11CF               	iorwf	(dir_next@clst+1)& (0+255),w,b
 12407  014932  11D0               	iorwf	(dir_next@clst+2)& (0+255),w,b
 12408  014934  11D1               	iorwf	(dir_next@clst+3)& (0+255),w,b
 12409  014936  A4D8               	btfss	status,2,c
 12410  014938  EFA0  F0A4         	goto	u9021
 12411  01493C  EFA2  F0A4         	goto	u9020
 12412  014940                     u9021:
 12413  014940  EFA4  F0A4         	goto	l8295
 12414  014944                     u9020:
 12415  014944  EF2A  F0A4         	goto	l8261
 12416  014948                     l8295:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 12420  014948  29CE               	incf	dir_next@clst& (0+255),w,b
 12421  01494A  E10A               	bnz	u9031
 12422  01494C  29CF               	incf	(dir_next@clst+1)& (0+255),w,b
 12423  01494E  E108               	bnz	u9031
 12424  014950  29D0               	incf	(dir_next@clst+2)& (0+255),w,b
 12425  014952  E106               	bnz	u9031
 12426  014954  29D1               	incf	(dir_next@clst+3)& (0+255),w,b
 12427  014956  A4D8               	btfss	status,2,c
 12428  014958  EFB0  F0A4         	goto	u9031
 12429  01495C  EFB2  F0A4         	goto	u9030
 12430  014960                     u9031:
 12431  014960  EFB4  F0A4         	goto	l8301
 12432  014964                     u9030:
 12433  014964  EF3B  F0A4         	goto	l8267
 12434  014968                     l8301:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
 12438  014968  C0CC  F070         	movff	dir_next@fs,dir_clear@fs
 12439  01496C  C0CD  F071         	movff	dir_next@fs+1,dir_clear@fs+1
 12440  014970  C0CE  F072         	movff	dir_next@clst,dir_clear@clst
 12441  014974  C0CF  F073         	movff	dir_next@clst+1,dir_clear@clst+1
 12442  014978  C0D0  F074         	movff	dir_next@clst+2,dir_clear@clst+2
 12443  01497C  C0D1  F075         	movff	dir_next@clst+3,dir_clear@clst+3
 12444  014980  EC11  F0BD         	call	_dir_clear	;wreg free
 12445  014984  0900               	iorlw	0
 12446  014986  B4D8               	btfsc	status,2,c
 12447  014988  EFC8  F0A4         	goto	u9041
 12448  01498C  EFCA  F0A4         	goto	u9040
 12449  014990                     u9041:
 12450  014990  EFCC  F0A4         	goto	l280
 12451  014994                     u9040:
 12452  014994  EF3B  F0A4         	goto	l8267
 12453  014998                     l280:
 12454                           
 12455                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
 12456  014998  0100               	movlb	0	; () banked
 12457  01499A  EE20 F012          	lfsr	2,18
 12458  01499E  51B4               	movf	dir_next@dp& (0+255),w,b
 12459  0149A0  26D9               	addwf	fsr2l,f,c
 12460  0149A2  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12461  0149A4  22DA               	addwfc	fsr2h,f,c
 12462  0149A6  0060  F33B  FFDE   	movff	dir_next@clst,postinc2
 12463  0149AC  0060  F33F  FFDE   	movff	dir_next@clst+1,postinc2
 12464  0149B2  0060  F343  FFDE   	movff	dir_next@clst+2,postinc2
 12465  0149B8  0060  F347  FFDE   	movff	dir_next@clst+3,postinc2
 12466  0149BE                     
 12467                           ; BSR set to: 0
 12468                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
 12469  0149BE  C0CC  F00D         	movff	dir_next@fs,clst2sect@fs
 12470  0149C2  C0CD  F00E         	movff	dir_next@fs+1,clst2sect@fs+1
 12471  0149C6  C0CE  F00F         	movff	dir_next@clst,clst2sect@clst
 12472  0149CA  C0CF  F010         	movff	dir_next@clst+1,clst2sect@clst+1
 12473  0149CE  C0D0  F011         	movff	dir_next@clst+2,clst2sect@clst+2
 12474  0149D2  C0D1  F012         	movff	dir_next@clst+3,clst2sect@clst+3
 12475  0149D6  ECE3  F0C4         	call	_clst2sect	;wreg free
 12476  0149DA  0100               	movlb	0	; () banked
 12477  0149DC  EE20 F016          	lfsr	2,22
 12478  0149E0  51B4               	movf	dir_next@dp& (0+255),w,b
 12479  0149E2  26D9               	addwf	fsr2l,f,c
 12480  0149E4  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12481  0149E6  22DA               	addwfc	fsr2h,f,c
 12482  0149E8  0060  F037  FFDE   	movff	?_clst2sect,postinc2
 12483  0149EE  0060  F03B  FFDE   	movff	?_clst2sect+1,postinc2
 12484  0149F4  0060  F03F  FFDE   	movff	?_clst2sect+2,postinc2
 12485  0149FA  0060  F043  FFDE   	movff	?_clst2sect+3,postinc2
 12486  014A00                     l8311:
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
 12490  014A00  EE20 F00E          	lfsr	2,14
 12491  014A04  51B4               	movf	dir_next@dp& (0+255),w,b
 12492  014A06  26D9               	addwf	fsr2l,f,c
 12493  014A08  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12494  014A0A  22DA               	addwfc	fsr2h,f,c
 12495  014A0C  0060  F323  FFDE   	movff	dir_next@ofs,postinc2
 12496  014A12  0060  F327  FFDE   	movff	dir_next@ofs+1,postinc2
 12497  014A18  0060  F32B  FFDE   	movff	dir_next@ofs+2,postinc2
 12498  014A1E  0060  F32F  FFDE   	movff	dir_next@ofs+3,postinc2
 12499  014A24                     
 12500                           ; BSR set to: 0
 12501                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
 12502  014A24  0EFF               	movlw	255
 12503  014A26  6FB8               	movwf	??_dir_next& (0+255),b
 12504  014A28  0E01               	movlw	1
 12505  014A2A  6FB9               	movwf	(??_dir_next+1)& (0+255),b
 12506  014A2C  C0C8  F0BA         	movff	dir_next@ofs,??_dir_next+2
 12507  014A30  C0C9  F0BB         	movff	dir_next@ofs+1,??_dir_next+3
 12508  014A34  51B8               	movf	??_dir_next& (0+255),w,b
 12509  014A36  17BA               	andwf	(??_dir_next+2)& (0+255),f,b
 12510  014A38  51B9               	movf	(??_dir_next+1)& (0+255),w,b
 12511  014A3A  17BB               	andwf	(??_dir_next+3)& (0+255),f,b
 12512  014A3C  C0CC  F0BC         	movff	dir_next@fs,??_dir_next+4
 12513  014A40  C0CD  F0BD         	movff	dir_next@fs+1,??_dir_next+5
 12514  014A44  51BA               	movf	(??_dir_next+2)& (0+255),w,b
 12515  014A46  27BC               	addwf	(??_dir_next+4)& (0+255),f,b
 12516  014A48  51BB               	movf	(??_dir_next+3)& (0+255),w,b
 12517  014A4A  23BD               	addwfc	(??_dir_next+5)& (0+255),f,b
 12518  014A4C  0E33               	movlw	51
 12519  014A4E  27BC               	addwf	(??_dir_next+4)& (0+255),f,b
 12520  014A50  0E00               	movlw	0
 12521  014A52  23BD               	addwfc	(??_dir_next+5)& (0+255),f,b
 12522  014A54  EE20 F01A          	lfsr	2,26
 12523  014A58  51B4               	movf	dir_next@dp& (0+255),w,b
 12524  014A5A  26D9               	addwf	fsr2l,f,c
 12525  014A5C  51B5               	movf	(dir_next@dp+1)& (0+255),w,b
 12526  014A5E  22DA               	addwfc	fsr2h,f,c
 12527  014A60  0060  F2F3  FFDE   	movff	??_dir_next+4,postinc2
 12528  014A66  0060  F2F7  FFDD   	movff	??_dir_next+5,postdec2
 12529  014A6C                     
 12530                           ; BSR set to: 0
 12531                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
 12532  014A6C  0E00               	movlw	0
 12533  014A6E                     l272:
 12534  014A6E  0012               	return		;funcret
 12535  014A70                     __end_of_dir_next:
 12536                           	callstack 0
 12537                           
 12538 ;; *************** function _dir_clear *****************
 12539 ;; Defined at:
 12540 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  fs              2   16[BANK0 ] PTR struct .
 12543 ;;		 -> drive(563), NULL(0), 
 12544 ;;  clst            4   18[BANK0 ] unsigned long 
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;  sect            4   24[BANK0 ] unsigned long 
 12547 ;;  n               2   30[BANK0 ] unsigned int 
 12548 ;;  szb             2   28[BANK0 ] unsigned int 
 12549 ;;  ibuf            2   22[BANK0 ] PTR unsigned char 
 12550 ;;		 -> drive.win(512), drive(563), NULL(0), 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      enum E68
 12553 ;; Registers used:
 12554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12563 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12564 ;;Total ram usage:       18 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:    6
 12567 ;; This function calls:
 12568 ;;		_clst2sect
 12569 ;;		_disk_write
 12570 ;;		_mem_set
 12571 ;;		_sync_window
 12572 ;; This function is called by:
 12573 ;;		_dir_next
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text39
 12578  017A22                     __ptext39:
 12579                           	callstack 0
 12580  017A22                     _dir_clear:
 12581                           	callstack 12
 12582  017A22                     
 12583                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
 12584  017A22  C070  F058         	movff	dir_clear@fs,sync_window@fs
 12585  017A26  C071  F059         	movff	dir_clear@fs+1,sync_window@fs+1
 12586  017A2A  EC55  F0B5         	call	_sync_window	;wreg free
 12587  017A2E  0900               	iorlw	0
 12588  017A30  B4D8               	btfsc	status,2,c
 12589  017A32  EF1D  F0BD         	goto	u8631
 12590  017A36  EF1F  F0BD         	goto	u8630
 12591  017A3A                     u8631:
 12592  017A3A  EF22  F0BD         	goto	l8075
 12593  017A3E                     u8630:
 12594  017A3E  0E01               	movlw	1
 12595  017A40  EFBC  F0BD         	goto	l230
 12596  017A44                     l8075:
 12597                           
 12598                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
 12599  017A44  C070  F00D         	movff	dir_clear@fs,clst2sect@fs
 12600  017A48  C071  F00E         	movff	dir_clear@fs+1,clst2sect@fs+1
 12601  017A4C  C072  F00F         	movff	dir_clear@clst,clst2sect@clst
 12602  017A50  C073  F010         	movff	dir_clear@clst+1,clst2sect@clst+1
 12603  017A54  C074  F011         	movff	dir_clear@clst+2,clst2sect@clst+2
 12604  017A58  C075  F012         	movff	dir_clear@clst+3,clst2sect@clst+3
 12605  017A5C  ECE3  F0C4         	call	_clst2sect	;wreg free
 12606  017A60  C00D  F078         	movff	?_clst2sect,dir_clear@sect
 12607  017A64  C00E  F079         	movff	?_clst2sect+1,dir_clear@sect+1
 12608  017A68  C00F  F07A         	movff	?_clst2sect+2,dir_clear@sect+2
 12609  017A6C  C010  F07B         	movff	?_clst2sect+3,dir_clear@sect+3
 12610  017A70                     
 12611                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
 12612  017A70  0100               	movlb	0	; () banked
 12613  017A72  EE20 F02F          	lfsr	2,47
 12614  017A76  5170               	movf	dir_clear@fs& (0+255),w,b
 12615  017A78  26D9               	addwf	fsr2l,f,c
 12616  017A7A  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
 12617  017A7C  22DA               	addwfc	fsr2h,f,c
 12618  017A7E  0060  F1E3  FFDE   	movff	dir_clear@sect,postinc2
 12619  017A84  0060  F1E7  FFDE   	movff	dir_clear@sect+1,postinc2
 12620  017A8A  0060  F1EB  FFDE   	movff	dir_clear@sect+2,postinc2
 12621  017A90  0060  F1EF  FFDE   	movff	dir_clear@sect+3,postinc2
 12622  017A96                     
 12623                           ; BSR set to: 0
 12624                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
 12625  017A96  0E33               	movlw	51
 12626  017A98  2570               	addwf	dir_clear@fs& (0+255),w,b
 12627  017A9A  6E01               	movwf	mem_set@dst^0,c
 12628  017A9C  0E00               	movlw	0
 12629  017A9E  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 12630  017AA0  6E02               	movwf	(mem_set@dst+1)^0,c
 12631  017AA2  0E00               	movlw	0
 12632  017AA4  6E04               	movwf	(mem_set@val+1)^0,c
 12633  017AA6  0E00               	movlw	0
 12634  017AA8  6E03               	movwf	mem_set@val^0,c
 12635  017AAA  0E02               	movlw	2
 12636  017AAC  6E06               	movwf	(mem_set@cnt+1)^0,c
 12637  017AAE  0E00               	movlw	0
 12638  017AB0  6E05               	movwf	mem_set@cnt^0,c
 12639  017AB2  EC7D  F0D2         	call	_mem_set	;wreg free
 12640  017AB6                     
 12641                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
 12642  017AB6  0E33               	movlw	51
 12643  017AB8  0100               	movlb	0	; () banked
 12644  017ABA  2570               	addwf	dir_clear@fs& (0+255),w,b
 12645  017ABC  6F76               	movwf	dir_clear@ibuf& (0+255),b
 12646  017ABE  0E00               	movlw	0
 12647  017AC0  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 12648  017AC2  6F77               	movwf	(dir_clear@ibuf+1)& (0+255),b
 12649  017AC4                     
 12650                           ; BSR set to: 0
 12651  017AC4  0E00               	movlw	0
 12652  017AC6  6F7D               	movwf	(dir_clear@szb+1)& (0+255),b
 12653  017AC8  0E01               	movlw	1
 12654  017ACA  6F7C               	movwf	dir_clear@szb& (0+255),b
 12655  017ACC                     
 12656                           ; BSR set to: 0
 12657                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
 12658  017ACC  0E00               	movlw	0
 12659  017ACE  6F7F               	movwf	(dir_clear@n+1)& (0+255),b
 12660  017AD0  0E00               	movlw	0
 12661  017AD2  6F7E               	movwf	dir_clear@n& (0+255),b
 12662  017AD4  EF71  F0BD         	goto	l8089
 12663  017AD8                     l8087:
 12664  017AD8  0100               	movlb	0	; () banked
 12665  017ADA  517C               	movf	dir_clear@szb& (0+255),w,b
 12666  017ADC  277E               	addwf	dir_clear@n& (0+255),f,b
 12667  017ADE  517D               	movf	(dir_clear@szb+1)& (0+255),w,b
 12668  017AE0  237F               	addwfc	(dir_clear@n+1)& (0+255),f,b
 12669  017AE2                     l8089:
 12670                           
 12671                           ; BSR set to: 0
 12672  017AE2  EE20 F009          	lfsr	2,9
 12673  017AE6  5170               	movf	dir_clear@fs& (0+255),w,b
 12674  017AE8  26D9               	addwf	fsr2l,f,c
 12675  017AEA  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
 12676  017AEC  22DA               	addwfc	fsr2h,f,c
 12677  017AEE  50DE               	movf	postinc2,w,c
 12678  017AF0  5D7E               	subwf	dir_clear@n& (0+255),w,b
 12679  017AF2  50DE               	movf	postinc2,w,c
 12680  017AF4  597F               	subwfb	(dir_clear@n+1)& (0+255),w,b
 12681  017AF6  B0D8               	btfsc	status,0,c
 12682  017AF8  EF80  F0BD         	goto	u8641
 12683  017AFC  EF82  F0BD         	goto	u8640
 12684  017B00                     u8641:
 12685  017B00  EFA7  F0BD         	goto	l8093
 12686  017B04                     u8640:
 12687  017B04                     
 12688                           ; BSR set to: 0
 12689  017B04  C076  F04C         	movff	dir_clear@ibuf,disk_write@buff
 12690  017B08  C077  F04D         	movff	dir_clear@ibuf+1,disk_write@buff+1
 12691  017B0C  517E               	movf	dir_clear@n& (0+255),w,b
 12692  017B0E  2578               	addwf	dir_clear@sect& (0+255),w,b
 12693  017B10  6E4E               	movwf	disk_write@sector^0,c
 12694  017B12  517F               	movf	(dir_clear@n+1)& (0+255),w,b
 12695  017B14  2179               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 12696  017B16  6E4F               	movwf	(disk_write@sector+1)^0,c
 12697  017B18  0E00               	movlw	0
 12698  017B1A  217A               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 12699  017B1C  6E50               	movwf	(disk_write@sector+2)^0,c
 12700  017B1E  0E00               	movlw	0
 12701  017B20  217B               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 12702  017B22  6E51               	movwf	(disk_write@sector+3)^0,c
 12703  017B24  C07C  F052         	movff	dir_clear@szb,disk_write@count
 12704  017B28  C07D  F053         	movff	dir_clear@szb+1,disk_write@count+1
 12705  017B2C  EE20 F001          	lfsr	2,1
 12706  017B30  5170               	movf	dir_clear@fs& (0+255),w,b
 12707  017B32  26D9               	addwf	fsr2l,f,c
 12708  017B34  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
 12709  017B36  22DA               	addwfc	fsr2h,f,c
 12710  017B38  50DF               	movf	indf2,w,c
 12711  017B3A  EC00  F0CE         	call	_disk_write
 12712  017B3E  0900               	iorlw	0
 12713  017B40  B4D8               	btfsc	status,2,c
 12714  017B42  EFA5  F0BD         	goto	u8651
 12715  017B46  EFA7  F0BD         	goto	u8650
 12716  017B4A                     u8651:
 12717  017B4A  EF6C  F0BD         	goto	l8087
 12718  017B4E                     u8650:
 12719  017B4E                     l8093:
 12720                           
 12721                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
 12722  017B4E  0100               	movlb	0	; () banked
 12723  017B50  EE20 F009          	lfsr	2,9
 12724  017B54  5170               	movf	dir_clear@fs& (0+255),w,b
 12725  017B56  26D9               	addwf	fsr2l,f,c
 12726  017B58  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
 12727  017B5A  22DA               	addwfc	fsr2h,f,c
 12728  017B5C  517E               	movf	dir_clear@n& (0+255),w,b
 12729  017B5E  18DE               	xorwf	postinc2,w,c
 12730  017B60  E107               	bnz	u8661
 12731  017B62  517F               	movf	(dir_clear@n+1)& (0+255),w,b
 12732  017B64  18DE               	xorwf	postinc2,w,c
 12733  017B66  A4D8               	btfss	status,2,c
 12734  017B68  EFB8  F0BD         	goto	u8661
 12735  017B6C  EFBB  F0BD         	goto	u8660
 12736  017B70                     u8661:
 12737  017B70  0E01               	movlw	1
 12738  017B72  EFBC  F0BD         	goto	u8670
 12739  017B76                     u8660:
 12740  017B76  0E00               	movlw	0
 12741  017B78                     u8670:
 12742  017B78                     l230:
 12743  017B78  0012               	return		;funcret
 12744  017B7A                     __end_of_dir_clear:
 12745                           	callstack 0
 12746                           
 12747 ;; *************** function _mem_set *****************
 12748 ;; Defined at:
 12749 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  dst             2    0[COMRAM] PTR void 
 12752 ;;		 -> file(546), drive(563), dj.fn(12), f_chdir@dj(40), 
 12753 ;;		 -> dj.fn(12), f_open@dj(40), NULL(0), 
 12754 ;;  val             2    2[COMRAM] int 
 12755 ;;  cnt             2    4[COMRAM] unsigned int 
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;  d               2    6[COMRAM] PTR unsigned char 
 12758 ;;		 -> file(546), drive(563), dj.fn(12), f_chdir@dj(40), 
 12759 ;;		 -> dj.fn(12), f_open@dj(40), NULL(0), 
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      void 
 12762 ;; Registers used:
 12763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12769 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12773 ;;Total ram usage:        8 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; This function calls:
 12776 ;;		Nothing
 12777 ;; This function is called by:
 12778 ;;		_sync_fs
 12779 ;;		_dir_clear
 12780 ;;		_dir_register
 12781 ;;		_create_name
 12782 ;;		_f_open
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786                           	psect	text40
 12787  01A4FA                     __ptext40:
 12788                           	callstack 0
 12789  01A4FA                     _mem_set:
 12790                           	callstack 25
 12791  01A4FA                     
 12792                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 12793  01A4FA  C001  F007         	movff	mem_set@dst,mem_set@d
 12794  01A4FE  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 12795  01A502                     l7801:
 12796                           
 12797                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 12798  01A502  0060  F01F  FFD9   	movff	mem_set@d,fsr2l
 12799  01A508  0060  F023  FFDA   	movff	mem_set@d+1,fsr2h
 12800  01A50E  0060  F00F  FFDF   	movff	mem_set@val,indf2
 12801  01A514  4A07               	infsnz	mem_set@d^0,f,c
 12802  01A516  2A08               	incf	(mem_set@d+1)^0,f,c
 12803  01A518                     
 12804                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 12805  01A518  0605               	decf	mem_set@cnt^0,f,c
 12806  01A51A  A0D8               	btfss	status,0,c
 12807  01A51C  0606               	decf	(mem_set@cnt+1)^0,f,c
 12808  01A51E  5005               	movf	mem_set@cnt^0,w,c
 12809  01A520  1006               	iorwf	(mem_set@cnt+1)^0,w,c
 12810  01A522  A4D8               	btfss	status,2,c
 12811  01A524  EF96  F0D2         	goto	u8121
 12812  01A528  EF98  F0D2         	goto	u8120
 12813  01A52C                     u8121:
 12814  01A52C  EF81  F0D2         	goto	l7801
 12815  01A530                     u8120:
 12816  01A530  0012               	return		;funcret
 12817  01A532                     __end_of_mem_set:
 12818                           	callstack 0
 12819                           
 12820 ;; *************** function _clst2sect *****************
 12821 ;; Defined at:
 12822 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  fs              2   12[COMRAM] PTR struct .
 12825 ;;		 -> drive(563), NULL(0), 
 12826 ;;  clst            4   14[COMRAM] unsigned long 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  4   12[COMRAM] unsigned long 
 12831 ;; Registers used:
 12832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12838 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12840 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12841 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12842 ;;Total ram usage:       12 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:    1
 12845 ;; This function calls:
 12846 ;;		___lmul
 12847 ;; This function is called by:
 12848 ;;		_dir_clear
 12849 ;;		_dir_sdi
 12850 ;;		_dir_next
 12851 ;;		_f_open
 12852 ;;		_f_write
 12853 ;;		_f_read
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text41
 12858  0189C6                     __ptext41:
 12859                           	callstack 0
 12860  0189C6                     _clst2sect:
 12861                           	callstack 20
 12862  0189C6                     
 12863                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
 12864  0189C6  0E02               	movlw	2
 12865  0189C8  5E0F               	subwf	clst2sect@clst^0,f,c
 12866  0189CA  0E00               	movlw	0
 12867  0189CC  5A10               	subwfb	(clst2sect@clst+1)^0,f,c
 12868  0189CE  5A11               	subwfb	(clst2sect@clst+2)^0,f,c
 12869  0189D0  5A12               	subwfb	(clst2sect@clst+3)^0,f,c
 12870  0189D2                     
 12871                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
 12872  0189D2  EE20 F017          	lfsr	2,23
 12873  0189D6  500D               	movf	clst2sect@fs^0,w,c
 12874  0189D8  26D9               	addwf	fsr2l,f,c
 12875  0189DA  500E               	movf	(clst2sect@fs+1)^0,w,c
 12876  0189DC  22DA               	addwfc	fsr2h,f,c
 12877  0189DE  0EFE               	movlw	254
 12878  0189E0  24DE               	addwf	postinc2,w,c
 12879  0189E2  6E13               	movwf	??_clst2sect^0,c
 12880  0189E4  0EFF               	movlw	255
 12881  0189E6  20DE               	addwfc	postinc2,w,c
 12882  0189E8  6E14               	movwf	(??_clst2sect+1)^0,c
 12883  0189EA  0EFF               	movlw	255
 12884  0189EC  20DE               	addwfc	postinc2,w,c
 12885  0189EE  6E15               	movwf	(??_clst2sect+2)^0,c
 12886  0189F0  0EFF               	movlw	255
 12887  0189F2  20DE               	addwfc	postinc2,w,c
 12888  0189F4  6E16               	movwf	(??_clst2sect+3)^0,c
 12889  0189F6  5013               	movf	??_clst2sect^0,w,c
 12890  0189F8  5C0F               	subwf	clst2sect@clst^0,w,c
 12891  0189FA  5014               	movf	(??_clst2sect+1)^0,w,c
 12892  0189FC  5810               	subwfb	(clst2sect@clst+1)^0,w,c
 12893  0189FE  5015               	movf	(??_clst2sect+2)^0,w,c
 12894  018A00  5811               	subwfb	(clst2sect@clst+2)^0,w,c
 12895  018A02  5016               	movf	(??_clst2sect+3)^0,w,c
 12896  018A04  5812               	subwfb	(clst2sect@clst+3)^0,w,c
 12897  018A06  A0D8               	btfss	status,0,c
 12898  018A08  EF08  F0C5         	goto	u8131
 12899  018A0C  EF0A  F0C5         	goto	u8130
 12900  018A10                     u8131:
 12901  018A10  EF14  F0C5         	goto	l7815
 12902  018A14                     u8130:
 12903  018A14  0E00               	movlw	0
 12904  018A16  6E0D               	movwf	?_clst2sect^0,c
 12905  018A18  0E00               	movlw	0
 12906  018A1A  6E0E               	movwf	(?_clst2sect+1)^0,c
 12907  018A1C  0E00               	movlw	0
 12908  018A1E  6E0F               	movwf	(?_clst2sect+2)^0,c
 12909  018A20  0E00               	movlw	0
 12910  018A22  6E10               	movwf	(?_clst2sect+3)^0,c
 12911  018A24  EF4E  F0C5         	goto	l124
 12912  018A28                     l7815:
 12913                           
 12914                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
 12915  018A28  EE20 F02B          	lfsr	2,43
 12916  018A2C  500D               	movf	clst2sect@fs^0,w,c
 12917  018A2E  26D9               	addwf	fsr2l,f,c
 12918  018A30  500E               	movf	(clst2sect@fs+1)^0,w,c
 12919  018A32  22DA               	addwfc	fsr2h,f,c
 12920  018A34  006F FF78  F013    	movff	postinc2,??_clst2sect
 12921  018A3A  006F FF78  F014    	movff	postinc2,??_clst2sect+1
 12922  018A40  006F FF78  F015    	movff	postinc2,??_clst2sect+2
 12923  018A46  006F FF78  F016    	movff	postinc2,??_clst2sect+3
 12924  018A4C  EE20 F009          	lfsr	2,9
 12925  018A50  500D               	movf	clst2sect@fs^0,w,c
 12926  018A52  26D9               	addwf	fsr2l,f,c
 12927  018A54  500E               	movf	(clst2sect@fs+1)^0,w,c
 12928  018A56  22DA               	addwfc	fsr2h,f,c
 12929  018A58  006F FF78  F017    	movff	postinc2,??_clst2sect+4
 12930  018A5E  006F FF74  F018    	movff	postdec2,??_clst2sect+5
 12931  018A64  C017  F001         	movff	??_clst2sect+4,___lmul@multiplier
 12932  018A68  C018  F002         	movff	??_clst2sect+5,___lmul@multiplier+1
 12933  018A6C  6A03               	clrf	(___lmul@multiplier+2)^0,c
 12934  018A6E  6A04               	clrf	(___lmul@multiplier+3)^0,c
 12935  018A70  C00F  F005         	movff	clst2sect@clst,___lmul@multiplicand
 12936  018A74  C010  F006         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 12937  018A78  C011  F007         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 12938  018A7C  C012  F008         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 12939  018A80  ECE3  F0CE         	call	___lmul	;wreg free
 12940  018A84  5013               	movf	??_clst2sect^0,w,c
 12941  018A86  2401               	addwf	?___lmul^0,w,c
 12942  018A88  6E0D               	movwf	?_clst2sect^0,c
 12943  018A8A  5014               	movf	(??_clst2sect+1)^0,w,c
 12944  018A8C  2002               	addwfc	(?___lmul+1)^0,w,c
 12945  018A8E  6E0E               	movwf	(?_clst2sect+1)^0,c
 12946  018A90  5015               	movf	(??_clst2sect+2)^0,w,c
 12947  018A92  2003               	addwfc	(?___lmul+2)^0,w,c
 12948  018A94  6E0F               	movwf	(?_clst2sect+2)^0,c
 12949  018A96  5016               	movf	(??_clst2sect+3)^0,w,c
 12950  018A98  2004               	addwfc	(?___lmul+3)^0,w,c
 12951  018A9A  6E10               	movwf	(?_clst2sect+3)^0,c
 12952  018A9C                     l124:
 12953  018A9C  0012               	return		;funcret
 12954  018A9E                     __end_of_clst2sect:
 12955                           	callstack 0
 12956                           
 12957 ;; *************** function _create_chain *****************
 12958 ;; Defined at:
 12959 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;  obj             2   55[BANK0 ] PTR struct .
 12962 ;;		 -> file(546), f_chdir@dj(40), f_open@dj(40), 
 12963 ;;  clst            4   57[BANK0 ] unsigned long 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  cs              4   80[BANK0 ] unsigned long 
 12966 ;;  ncl             4   74[BANK0 ] unsigned long 
 12967 ;;  scl             4   70[BANK0 ] unsigned long 
 12968 ;;  fs              2   78[BANK0 ] PTR struct .
 12969 ;;		 -> drive(563), NULL(0), 
 12970 ;;  res             1   69[BANK0 ] enum E68
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  4   55[BANK0 ] unsigned long 
 12973 ;; Registers used:
 12974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12980 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12981 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12982 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12983 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12984 ;;Total ram usage:       29 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; Hardware stack levels required when called:    8
 12987 ;; This function calls:
 12988 ;;		_get_fat
 12989 ;;		_put_fat
 12990 ;; This function is called by:
 12991 ;;		_dir_next
 12992 ;;		_f_write
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           	psect	text42
 12997  012C12                     __ptext42:
 12998                           	callstack 0
 12999  012C12                     _create_chain:
 13000                           	callstack 13
 13001  012C12                     
 13002                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
 13003  012C12  0060  F25F  FFD9   	movff	create_chain@obj,fsr2l
 13004  012C18  0060  F263  FFDA   	movff	create_chain@obj+1,fsr2h
 13005  012C1E  006F FF78  F0AE    	movff	postinc2,create_chain@fs
 13006  012C24  006F FF74  F0AF    	movff	postdec2,create_chain@fs+1
 13007  012C2A                     
 13008                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
 13009  012C2A  0100               	movlb	0	; () banked
 13010  012C2C  5199               	movf	create_chain@clst& (0+255),w,b
 13011  012C2E  119A               	iorwf	(create_chain@clst+1)& (0+255),w,b
 13012  012C30  119B               	iorwf	(create_chain@clst+2)& (0+255),w,b
 13013  012C32  119C               	iorwf	(create_chain@clst+3)& (0+255),w,b
 13014  012C34  A4D8               	btfss	status,2,c
 13015  012C36  EF1F  F096         	goto	u8371
 13016  012C3A  EF21  F096         	goto	u8370
 13017  012C3E                     u8371:
 13018  012C3E  EF5D  F096         	goto	l7967
 13019  012C42                     u8370:
 13020  012C42                     
 13021                           ; BSR set to: 0
 13022                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
 13023  012C42  EE20 F00B          	lfsr	2,11
 13024  012C46  51AE               	movf	create_chain@fs& (0+255),w,b
 13025  012C48  26D9               	addwf	fsr2l,f,c
 13026  012C4A  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13027  012C4C  22DA               	addwfc	fsr2h,f,c
 13028  012C4E  006F FF78  F0A6    	movff	postinc2,create_chain@scl
 13029  012C54  006F FF78  F0A7    	movff	postinc2,create_chain@scl+1
 13030  012C5A  006F FF78  F0A8    	movff	postinc2,create_chain@scl+2
 13031  012C60  006F FF78  F0A9    	movff	postinc2,create_chain@scl+3
 13032  012C66                     
 13033                           ; BSR set to: 0
 13034                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 13035  012C66  51A6               	movf	create_chain@scl& (0+255),w,b
 13036  012C68  11A7               	iorwf	(create_chain@scl+1)& (0+255),w,b
 13037  012C6A  11A8               	iorwf	(create_chain@scl+2)& (0+255),w,b
 13038  012C6C  11A9               	iorwf	(create_chain@scl+3)& (0+255),w,b
 13039  012C6E  B4D8               	btfsc	status,2,c
 13040  012C70  EF3C  F096         	goto	u8381
 13041  012C74  EF3E  F096         	goto	u8380
 13042  012C78                     u8381:
 13043  012C78  EF53  F096         	goto	l7965
 13044  012C7C                     u8380:
 13045  012C7C                     
 13046                           ; BSR set to: 0
 13047  012C7C  EE20 F017          	lfsr	2,23
 13048  012C80  51AE               	movf	create_chain@fs& (0+255),w,b
 13049  012C82  26D9               	addwf	fsr2l,f,c
 13050  012C84  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13051  012C86  22DA               	addwfc	fsr2h,f,c
 13052  012C88  50DE               	movf	postinc2,w,c
 13053  012C8A  5DA6               	subwf	create_chain@scl& (0+255),w,b
 13054  012C8C  50DE               	movf	postinc2,w,c
 13055  012C8E  59A7               	subwfb	(create_chain@scl+1)& (0+255),w,b
 13056  012C90  50DE               	movf	postinc2,w,c
 13057  012C92  59A8               	subwfb	(create_chain@scl+2)& (0+255),w,b
 13058  012C94  50DE               	movf	postinc2,w,c
 13059  012C96  59A9               	subwfb	(create_chain@scl+3)& (0+255),w,b
 13060  012C98  A0D8               	btfss	status,0,c
 13061  012C9A  EF51  F096         	goto	u8391
 13062  012C9E  EF53  F096         	goto	u8390
 13063  012CA2                     u8391:
 13064  012CA2  EFC2  F096         	goto	l7983
 13065  012CA6                     u8390:
 13066  012CA6                     l7965:
 13067                           
 13068                           ; BSR set to: 0
 13069  012CA6  0E01               	movlw	1
 13070  012CA8  6FA6               	movwf	create_chain@scl& (0+255),b
 13071  012CAA  0E00               	movlw	0
 13072  012CAC  6FA7               	movwf	(create_chain@scl+1)& (0+255),b
 13073  012CAE  0E00               	movlw	0
 13074  012CB0  6FA8               	movwf	(create_chain@scl+2)& (0+255),b
 13075  012CB2  0E00               	movlw	0
 13076  012CB4  6FA9               	movwf	(create_chain@scl+3)& (0+255),b
 13077  012CB6  EFC2  F096         	goto	l7983
 13078  012CBA                     l7967:
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
 13082  012CBA  C097  F076         	movff	create_chain@obj,get_fat@obj
 13083  012CBE  C098  F077         	movff	create_chain@obj+1,get_fat@obj+1
 13084  012CC2  C099  F078         	movff	create_chain@clst,get_fat@clst
 13085  012CC6  C09A  F079         	movff	create_chain@clst+1,get_fat@clst+1
 13086  012CCA  C09B  F07A         	movff	create_chain@clst+2,get_fat@clst+2
 13087  012CCE  C09C  F07B         	movff	create_chain@clst+3,get_fat@clst+3
 13088  012CD2  EC38  F0A5         	call	_get_fat	;wreg free
 13089  012CD6  C076  F0B0         	movff	?_get_fat,create_chain@cs
 13090  012CDA  C077  F0B1         	movff	?_get_fat+1,create_chain@cs+1
 13091  012CDE  C078  F0B2         	movff	?_get_fat+2,create_chain@cs+2
 13092  012CE2  C079  F0B3         	movff	?_get_fat+3,create_chain@cs+3
 13093  012CE6                     
 13094                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
 13095  012CE6  0100               	movlb	0	; () banked
 13096  012CE8  51B3               	movf	(create_chain@cs+3)& (0+255),w,b
 13097  012CEA  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13098  012CEC  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13099  012CEE  E107               	bnz	u8401
 13100  012CF0  0E02               	movlw	2
 13101  012CF2  5DB0               	subwf	create_chain@cs& (0+255),w,b
 13102  012CF4  B0D8               	btfsc	status,0,c
 13103  012CF6  EF7F  F096         	goto	u8401
 13104  012CFA  EF81  F096         	goto	u8400
 13105  012CFE                     u8401:
 13106  012CFE  EF8B  F096         	goto	l7975
 13107  012D02                     u8400:
 13108  012D02                     
 13109                           ; BSR set to: 0
 13110  012D02  0E01               	movlw	1
 13111  012D04  6F97               	movwf	?_create_chain& (0+255),b
 13112  012D06  0E00               	movlw	0
 13113  012D08  6F98               	movwf	(?_create_chain+1)& (0+255),b
 13114  012D0A  0E00               	movlw	0
 13115  012D0C  6F99               	movwf	(?_create_chain+2)& (0+255),b
 13116  012D0E  0E00               	movlw	0
 13117  012D10  6F9A               	movwf	(?_create_chain+3)& (0+255),b
 13118  012D12  EFF0  F098         	goto	l198
 13119  012D16                     l7975:
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
 13123  012D16  29B0               	incf	create_chain@cs& (0+255),w,b
 13124  012D18  E10A               	bnz	u8411
 13125  012D1A  29B1               	incf	(create_chain@cs+1)& (0+255),w,b
 13126  012D1C  E108               	bnz	u8411
 13127  012D1E  29B2               	incf	(create_chain@cs+2)& (0+255),w,b
 13128  012D20  E106               	bnz	u8411
 13129  012D22  29B3               	incf	(create_chain@cs+3)& (0+255),w,b
 13130  012D24  A4D8               	btfss	status,2,c
 13131  012D26  EF97  F096         	goto	u8411
 13132  012D2A  EF99  F096         	goto	u8410
 13133  012D2E                     u8411:
 13134  012D2E  EFA3  F096         	goto	l7979
 13135  012D32                     u8410:
 13136  012D32                     l7977:
 13137                           
 13138                           ; BSR set to: 0
 13139  012D32  C0B0  F097         	movff	create_chain@cs,?_create_chain
 13140  012D36  C0B1  F098         	movff	create_chain@cs+1,?_create_chain+1
 13141  012D3A  C0B2  F099         	movff	create_chain@cs+2,?_create_chain+2
 13142  012D3E  C0B3  F09A         	movff	create_chain@cs+3,?_create_chain+3
 13143  012D42  EFF0  F098         	goto	l198
 13144  012D46                     l7979:
 13145                           
 13146                           ; BSR set to: 0
 13147                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
 13148  012D46  EE20 F017          	lfsr	2,23
 13149  012D4A  51AE               	movf	create_chain@fs& (0+255),w,b
 13150  012D4C  26D9               	addwf	fsr2l,f,c
 13151  012D4E  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13152  012D50  22DA               	addwfc	fsr2h,f,c
 13153  012D52  50DE               	movf	postinc2,w,c
 13154  012D54  5DB0               	subwf	create_chain@cs& (0+255),w,b
 13155  012D56  50DE               	movf	postinc2,w,c
 13156  012D58  59B1               	subwfb	(create_chain@cs+1)& (0+255),w,b
 13157  012D5A  50DE               	movf	postinc2,w,c
 13158  012D5C  59B2               	subwfb	(create_chain@cs+2)& (0+255),w,b
 13159  012D5E  50DE               	movf	postinc2,w,c
 13160  012D60  59B3               	subwfb	(create_chain@cs+3)& (0+255),w,b
 13161  012D62  B0D8               	btfsc	status,0,c
 13162  012D64  EFB6  F096         	goto	u8421
 13163  012D68  EFB8  F096         	goto	u8420
 13164  012D6C                     u8421:
 13165  012D6C  EFBA  F096         	goto	l200
 13166  012D70                     u8420:
 13167  012D70  EF99  F096         	goto	l7977
 13168  012D74                     l200:
 13169                           
 13170                           ; BSR set to: 0
 13171                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
 13172  012D74  C099  F0A6         	movff	create_chain@clst,create_chain@scl
 13173  012D78  C09A  F0A7         	movff	create_chain@clst+1,create_chain@scl+1
 13174  012D7C  C09B  F0A8         	movff	create_chain@clst+2,create_chain@scl+2
 13175  012D80  C09C  F0A9         	movff	create_chain@clst+3,create_chain@scl+3
 13176  012D84                     l7983:
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
 13180  012D84  EE20 F00F          	lfsr	2,15
 13181  012D88  51AE               	movf	create_chain@fs& (0+255),w,b
 13182  012D8A  26D9               	addwf	fsr2l,f,c
 13183  012D8C  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13184  012D8E  22DA               	addwfc	fsr2h,f,c
 13185  012D90  50DE               	movf	postinc2,w,c
 13186  012D92  10DE               	iorwf	postinc2,w,c
 13187  012D94  10DE               	iorwf	postinc2,w,c
 13188  012D96  10DE               	iorwf	postinc2,w,c
 13189  012D98  A4D8               	btfss	status,2,c
 13190  012D9A  EFD1  F096         	goto	u8431
 13191  012D9E  EFD3  F096         	goto	u8430
 13192  012DA2                     u8431:
 13193  012DA2  EFDD  F096         	goto	l7989
 13194  012DA6                     u8430:
 13195  012DA6                     l7985:
 13196                           
 13197                           ; BSR set to: 0
 13198  012DA6  0E00               	movlw	0
 13199  012DA8  6F97               	movwf	?_create_chain& (0+255),b
 13200  012DAA  0E00               	movlw	0
 13201  012DAC  6F98               	movwf	(?_create_chain+1)& (0+255),b
 13202  012DAE  0E00               	movlw	0
 13203  012DB0  6F99               	movwf	(?_create_chain+2)& (0+255),b
 13204  012DB2  0E00               	movlw	0
 13205  012DB4  6F9A               	movwf	(?_create_chain+3)& (0+255),b
 13206  012DB6  EFF0  F098         	goto	l198
 13207  012DBA                     l7989:
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
 13211  012DBA  0E00               	movlw	0
 13212  012DBC  6FAA               	movwf	create_chain@ncl& (0+255),b
 13213  012DBE  0E00               	movlw	0
 13214  012DC0  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13215  012DC2  0E00               	movlw	0
 13216  012DC4  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13217  012DC6  0E00               	movlw	0
 13218  012DC8  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13219  012DCA                     
 13220                           ; BSR set to: 0
 13221                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
 13222  012DCA  5199               	movf	create_chain@clst& (0+255),w,b
 13223  012DCC  19A6               	xorwf	create_chain@scl& (0+255),w,b
 13224  012DCE  E10D               	bnz	u8441
 13225  012DD0  519A               	movf	(create_chain@clst+1)& (0+255),w,b
 13226  012DD2  19A7               	xorwf	(create_chain@scl+1)& (0+255),w,b
 13227  012DD4  E10A               	bnz	u8441
 13228  012DD6  519B               	movf	(create_chain@clst+2)& (0+255),w,b
 13229  012DD8  19A8               	xorwf	(create_chain@scl+2)& (0+255),w,b
 13230  012DDA  E107               	bnz	u8441
 13231  012DDC  519C               	movf	(create_chain@clst+3)& (0+255),w,b
 13232  012DDE  19A9               	xorwf	(create_chain@scl+3)& (0+255),w,b
 13233  012DE0  A4D8               	btfss	status,2,c
 13234  012DE2  EFF5  F096         	goto	u8441
 13235  012DE6  EFF7  F096         	goto	u8440
 13236  012DEA                     u8441:
 13237  012DEA  EFA1  F097         	goto	l8017
 13238  012DEE                     u8440:
 13239  012DEE                     
 13240                           ; BSR set to: 0
 13241                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
 13242  012DEE  0E01               	movlw	1
 13243  012DF0  25A6               	addwf	create_chain@scl& (0+255),w,b
 13244  012DF2  6FAA               	movwf	create_chain@ncl& (0+255),b
 13245  012DF4  0E00               	movlw	0
 13246  012DF6  21A7               	addwfc	(create_chain@scl+1)& (0+255),w,b
 13247  012DF8  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13248  012DFA  0E00               	movlw	0
 13249  012DFC  21A8               	addwfc	(create_chain@scl+2)& (0+255),w,b
 13250  012DFE  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13251  012E00  0E00               	movlw	0
 13252  012E02  21A9               	addwfc	(create_chain@scl+3)& (0+255),w,b
 13253  012E04  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13254  012E06                     
 13255                           ; BSR set to: 0
 13256                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
 13257  012E06  EE20 F017          	lfsr	2,23
 13258  012E0A  51AE               	movf	create_chain@fs& (0+255),w,b
 13259  012E0C  26D9               	addwf	fsr2l,f,c
 13260  012E0E  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13261  012E10  22DA               	addwfc	fsr2h,f,c
 13262  012E12  50DE               	movf	postinc2,w,c
 13263  012E14  5DAA               	subwf	create_chain@ncl& (0+255),w,b
 13264  012E16  50DE               	movf	postinc2,w,c
 13265  012E18  59AB               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 13266  012E1A  50DE               	movf	postinc2,w,c
 13267  012E1C  59AC               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 13268  012E1E  50DE               	movf	postinc2,w,c
 13269  012E20  59AD               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 13270  012E22  A0D8               	btfss	status,0,c
 13271  012E24  EF16  F097         	goto	u8451
 13272  012E28  EF18  F097         	goto	u8450
 13273  012E2C                     u8451:
 13274  012E2C  EF20  F097         	goto	l7999
 13275  012E30                     u8450:
 13276  012E30                     
 13277                           ; BSR set to: 0
 13278  012E30  0E02               	movlw	2
 13279  012E32  6FAA               	movwf	create_chain@ncl& (0+255),b
 13280  012E34  0E00               	movlw	0
 13281  012E36  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13282  012E38  0E00               	movlw	0
 13283  012E3A  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13284  012E3C  0E00               	movlw	0
 13285  012E3E  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13286  012E40                     l7999:
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
 13290  012E40  C097  F076         	movff	create_chain@obj,get_fat@obj
 13291  012E44  C098  F077         	movff	create_chain@obj+1,get_fat@obj+1
 13292  012E48  C0AA  F078         	movff	create_chain@ncl,get_fat@clst
 13293  012E4C  C0AB  F079         	movff	create_chain@ncl+1,get_fat@clst+1
 13294  012E50  C0AC  F07A         	movff	create_chain@ncl+2,get_fat@clst+2
 13295  012E54  C0AD  F07B         	movff	create_chain@ncl+3,get_fat@clst+3
 13296  012E58  EC38  F0A5         	call	_get_fat	;wreg free
 13297  012E5C  C076  F0B0         	movff	?_get_fat,create_chain@cs
 13298  012E60  C077  F0B1         	movff	?_get_fat+1,create_chain@cs+1
 13299  012E64  C078  F0B2         	movff	?_get_fat+2,create_chain@cs+2
 13300  012E68  C079  F0B3         	movff	?_get_fat+3,create_chain@cs+3
 13301  012E6C                     
 13302                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 13303  012E6C  0100               	movlb	0	; () banked
 13304  012E6E  05B0               	decf	create_chain@cs& (0+255),w,b
 13305  012E70  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13306  012E72  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13307  012E74  11B3               	iorwf	(create_chain@cs+3)& (0+255),w,b
 13308  012E76  B4D8               	btfsc	status,2,c
 13309  012E78  EF40  F097         	goto	u8461
 13310  012E7C  EF42  F097         	goto	u8460
 13311  012E80                     u8461:
 13312  012E80  EF99  F096         	goto	l7977
 13313  012E84                     u8460:
 13314  012E84                     
 13315                           ; BSR set to: 0
 13316  012E84  29B0               	incf	create_chain@cs& (0+255),w,b
 13317  012E86  E10A               	bnz	u8471
 13318  012E88  29B1               	incf	(create_chain@cs+1)& (0+255),w,b
 13319  012E8A  E108               	bnz	u8471
 13320  012E8C  29B2               	incf	(create_chain@cs+2)& (0+255),w,b
 13321  012E8E  E106               	bnz	u8471
 13322  012E90  29B3               	incf	(create_chain@cs+3)& (0+255),w,b
 13323  012E92  A4D8               	btfss	status,2,c
 13324  012E94  EF4E  F097         	goto	u8471
 13325  012E98  EF50  F097         	goto	u8470
 13326  012E9C                     u8471:
 13327  012E9C  EF52  F097         	goto	l8005
 13328  012EA0                     u8470:
 13329  012EA0  EF99  F096         	goto	l7977
 13330  012EA4                     l8005:
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
 13334  012EA4  51B0               	movf	create_chain@cs& (0+255),w,b
 13335  012EA6  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13336  012EA8  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13337  012EAA  11B3               	iorwf	(create_chain@cs+3)& (0+255),w,b
 13338  012EAC  B4D8               	btfsc	status,2,c
 13339  012EAE  EF5B  F097         	goto	u8481
 13340  012EB2  EF5D  F097         	goto	u8480
 13341  012EB6                     u8481:
 13342  012EB6  EFA1  F097         	goto	l8017
 13343  012EBA                     u8480:
 13344  012EBA                     
 13345                           ; BSR set to: 0
 13346                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
 13347  012EBA  EE20 F00B          	lfsr	2,11
 13348  012EBE  51AE               	movf	create_chain@fs& (0+255),w,b
 13349  012EC0  26D9               	addwf	fsr2l,f,c
 13350  012EC2  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13351  012EC4  22DA               	addwfc	fsr2h,f,c
 13352  012EC6  006F FF78  F0B0    	movff	postinc2,create_chain@cs
 13353  012ECC  006F FF78  F0B1    	movff	postinc2,create_chain@cs+1
 13354  012ED2  006F FF78  F0B2    	movff	postinc2,create_chain@cs+2
 13355  012ED8  006F FF78  F0B3    	movff	postinc2,create_chain@cs+3
 13356  012EDE                     
 13357                           ; BSR set to: 0
 13358                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 13359  012EDE  51B3               	movf	(create_chain@cs+3)& (0+255),w,b
 13360  012EE0  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13361  012EE2  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13362  012EE4  E109               	bnz	u8490
 13363  012EE6  0E02               	movlw	2
 13364  012EE8  5DB0               	subwf	create_chain@cs& (0+255),w,b
 13365  012EEA  A0D8               	btfss	status,0,c
 13366  012EEC  EF7A  F097         	goto	u8491
 13367  012EF0  EF7C  F097         	goto	u8490
 13368  012EF4                     u8491:
 13369  012EF4  EF99  F097         	goto	l8015
 13370  012EF8                     u8490:
 13371  012EF8                     
 13372                           ; BSR set to: 0
 13373  012EF8  EE20 F017          	lfsr	2,23
 13374  012EFC  51AE               	movf	create_chain@fs& (0+255),w,b
 13375  012EFE  26D9               	addwf	fsr2l,f,c
 13376  012F00  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13377  012F02  22DA               	addwfc	fsr2h,f,c
 13378  012F04  50DE               	movf	postinc2,w,c
 13379  012F06  5DB0               	subwf	create_chain@cs& (0+255),w,b
 13380  012F08  50DE               	movf	postinc2,w,c
 13381  012F0A  59B1               	subwfb	(create_chain@cs+1)& (0+255),w,b
 13382  012F0C  50DE               	movf	postinc2,w,c
 13383  012F0E  59B2               	subwfb	(create_chain@cs+2)& (0+255),w,b
 13384  012F10  50DE               	movf	postinc2,w,c
 13385  012F12  59B3               	subwfb	(create_chain@cs+3)& (0+255),w,b
 13386  012F14  B0D8               	btfsc	status,0,c
 13387  012F16  EF8F  F097         	goto	u8501
 13388  012F1A  EF91  F097         	goto	u8500
 13389  012F1E                     u8501:
 13390  012F1E  EF99  F097         	goto	l8015
 13391  012F22                     u8500:
 13392  012F22                     
 13393                           ; BSR set to: 0
 13394  012F22  C0B0  F0A6         	movff	create_chain@cs,create_chain@scl
 13395  012F26  C0B1  F0A7         	movff	create_chain@cs+1,create_chain@scl+1
 13396  012F2A  C0B2  F0A8         	movff	create_chain@cs+2,create_chain@scl+2
 13397  012F2E  C0B3  F0A9         	movff	create_chain@cs+3,create_chain@scl+3
 13398  012F32                     l8015:
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
 13402  012F32  0E00               	movlw	0
 13403  012F34  6FAA               	movwf	create_chain@ncl& (0+255),b
 13404  012F36  0E00               	movlw	0
 13405  012F38  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13406  012F3A  0E00               	movlw	0
 13407  012F3C  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13408  012F3E  0E00               	movlw	0
 13409  012F40  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13410  012F42                     l8017:
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
 13414  012F42  51AA               	movf	create_chain@ncl& (0+255),w,b
 13415  012F44  11AB               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 13416  012F46  11AC               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 13417  012F48  11AD               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 13418  012F4A  A4D8               	btfss	status,2,c
 13419  012F4C  EFAA  F097         	goto	u8511
 13420  012F50  EFAC  F097         	goto	u8510
 13421  012F54                     u8511:
 13422  012F54  EF39  F098         	goto	l8049
 13423  012F58                     u8510:
 13424  012F58                     
 13425                           ; BSR set to: 0
 13426                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
 13427  012F58  C0A6  F0AA         	movff	create_chain@scl,create_chain@ncl
 13428  012F5C  C0A7  F0AB         	movff	create_chain@scl+1,create_chain@ncl+1
 13429  012F60  C0A8  F0AC         	movff	create_chain@scl+2,create_chain@ncl+2
 13430  012F64  C0A9  F0AD         	movff	create_chain@scl+3,create_chain@ncl+3
 13431  012F68                     l8021:
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
 13435  012F68  0E01               	movlw	1
 13436  012F6A  27AA               	addwf	create_chain@ncl& (0+255),f,b
 13437  012F6C  0E00               	movlw	0
 13438  012F6E  23AB               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 13439  012F70  23AC               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 13440  012F72  23AD               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 13441  012F74                     
 13442                           ; BSR set to: 0
 13443                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
 13444  012F74  EE20 F017          	lfsr	2,23
 13445  012F78  51AE               	movf	create_chain@fs& (0+255),w,b
 13446  012F7A  26D9               	addwf	fsr2l,f,c
 13447  012F7C  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13448  012F7E  22DA               	addwfc	fsr2h,f,c
 13449  012F80  50DE               	movf	postinc2,w,c
 13450  012F82  5DAA               	subwf	create_chain@ncl& (0+255),w,b
 13451  012F84  50DE               	movf	postinc2,w,c
 13452  012F86  59AB               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 13453  012F88  50DE               	movf	postinc2,w,c
 13454  012F8A  59AC               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 13455  012F8C  50DE               	movf	postinc2,w,c
 13456  012F8E  59AD               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 13457  012F90  A0D8               	btfss	status,0,c
 13458  012F92  EFCD  F097         	goto	u8521
 13459  012F96  EFCF  F097         	goto	u8520
 13460  012F9A                     u8521:
 13461  012F9A  EFE6  F097         	goto	l8033
 13462  012F9E                     u8520:
 13463  012F9E                     
 13464                           ; BSR set to: 0
 13465                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
 13466  012F9E  0E02               	movlw	2
 13467  012FA0  6FAA               	movwf	create_chain@ncl& (0+255),b
 13468  012FA2  0E00               	movlw	0
 13469  012FA4  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13470  012FA6  0E00               	movlw	0
 13471  012FA8  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13472  012FAA  0E00               	movlw	0
 13473  012FAC  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13474  012FAE                     
 13475                           ; BSR set to: 0
 13476                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
 13477  012FAE  51A9               	movf	(create_chain@scl+3)& (0+255),w,b
 13478  012FB0  11A8               	iorwf	(create_chain@scl+2)& (0+255),w,b
 13479  012FB2  11A7               	iorwf	(create_chain@scl+1)& (0+255),w,b
 13480  012FB4  E107               	bnz	u8531
 13481  012FB6  0E02               	movlw	2
 13482  012FB8  5DA6               	subwf	create_chain@scl& (0+255),w,b
 13483  012FBA  B0D8               	btfsc	status,0,c
 13484  012FBC  EFE2  F097         	goto	u8531
 13485  012FC0  EFE4  F097         	goto	u8530
 13486  012FC4                     u8531:
 13487  012FC4  EFE6  F097         	goto	l8033
 13488  012FC8                     u8530:
 13489  012FC8  EFD3  F096         	goto	l7985
 13490  012FCC                     l8033:
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
 13494  012FCC  C097  F076         	movff	create_chain@obj,get_fat@obj
 13495  012FD0  C098  F077         	movff	create_chain@obj+1,get_fat@obj+1
 13496  012FD4  C0AA  F078         	movff	create_chain@ncl,get_fat@clst
 13497  012FD8  C0AB  F079         	movff	create_chain@ncl+1,get_fat@clst+1
 13498  012FDC  C0AC  F07A         	movff	create_chain@ncl+2,get_fat@clst+2
 13499  012FE0  C0AD  F07B         	movff	create_chain@ncl+3,get_fat@clst+3
 13500  012FE4  EC38  F0A5         	call	_get_fat	;wreg free
 13501  012FE8  C076  F0B0         	movff	?_get_fat,create_chain@cs
 13502  012FEC  C077  F0B1         	movff	?_get_fat+1,create_chain@cs+1
 13503  012FF0  C078  F0B2         	movff	?_get_fat+2,create_chain@cs+2
 13504  012FF4  C079  F0B3         	movff	?_get_fat+3,create_chain@cs+3
 13505  012FF8                     
 13506                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
 13507  012FF8  0100               	movlb	0	; () banked
 13508  012FFA  51B0               	movf	create_chain@cs& (0+255),w,b
 13509  012FFC  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13510  012FFE  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13511  013000  11B3               	iorwf	(create_chain@cs+3)& (0+255),w,b
 13512  013002  A4D8               	btfss	status,2,c
 13513  013004  EF06  F098         	goto	u8541
 13514  013008  EF08  F098         	goto	u8540
 13515  01300C                     u8541:
 13516  01300C  EF0A  F098         	goto	l8039
 13517  013010                     u8540:
 13518  013010  EF39  F098         	goto	l8049
 13519  013014                     l8039:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 13523  013014  05B0               	decf	create_chain@cs& (0+255),w,b
 13524  013016  11B1               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13525  013018  11B2               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13526  01301A  11B3               	iorwf	(create_chain@cs+3)& (0+255),w,b
 13527  01301C  B4D8               	btfsc	status,2,c
 13528  01301E  EF13  F098         	goto	u8551
 13529  013022  EF15  F098         	goto	u8550
 13530  013026                     u8551:
 13531  013026  EF99  F096         	goto	l7977
 13532  01302A                     u8550:
 13533  01302A                     
 13534                           ; BSR set to: 0
 13535  01302A  29B0               	incf	create_chain@cs& (0+255),w,b
 13536  01302C  E10A               	bnz	u8561
 13537  01302E  29B1               	incf	(create_chain@cs+1)& (0+255),w,b
 13538  013030  E108               	bnz	u8561
 13539  013032  29B2               	incf	(create_chain@cs+2)& (0+255),w,b
 13540  013034  E106               	bnz	u8561
 13541  013036  29B3               	incf	(create_chain@cs+3)& (0+255),w,b
 13542  013038  A4D8               	btfss	status,2,c
 13543  01303A  EF21  F098         	goto	u8561
 13544  01303E  EF23  F098         	goto	u8560
 13545  013042                     u8561:
 13546  013042  EF25  F098         	goto	l8043
 13547  013046                     u8560:
 13548  013046  EF99  F096         	goto	l7977
 13549  01304A                     l8043:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
 13553  01304A  51A6               	movf	create_chain@scl& (0+255),w,b
 13554  01304C  19AA               	xorwf	create_chain@ncl& (0+255),w,b
 13555  01304E  E10D               	bnz	u8571
 13556  013050  51A7               	movf	(create_chain@scl+1)& (0+255),w,b
 13557  013052  19AB               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 13558  013054  E10A               	bnz	u8571
 13559  013056  51A8               	movf	(create_chain@scl+2)& (0+255),w,b
 13560  013058  19AC               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 13561  01305A  E107               	bnz	u8571
 13562  01305C  51A9               	movf	(create_chain@scl+3)& (0+255),w,b
 13563  01305E  19AD               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 13564  013060  A4D8               	btfss	status,2,c
 13565  013062  EF35  F098         	goto	u8571
 13566  013066  EF37  F098         	goto	u8570
 13567  01306A                     u8571:
 13568  01306A  EFB4  F097         	goto	l8021
 13569  01306E                     u8570:
 13570  01306E  EFD3  F096         	goto	l7985
 13571  013072                     l8049:
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 13575  013072  C0AE  F076         	movff	create_chain@fs,put_fat@fs
 13576  013076  C0AF  F077         	movff	create_chain@fs+1,put_fat@fs+1
 13577  01307A  C0AA  F078         	movff	create_chain@ncl,put_fat@clst
 13578  01307E  C0AB  F079         	movff	create_chain@ncl+1,put_fat@clst+1
 13579  013082  C0AC  F07A         	movff	create_chain@ncl+2,put_fat@clst+2
 13580  013086  C0AD  F07B         	movff	create_chain@ncl+3,put_fat@clst+3
 13581  01308A  0EFF               	movlw	255
 13582  01308C  6F7C               	movwf	put_fat@val& (0+255),b
 13583  01308E  0EFF               	movlw	255
 13584  013090  6F7D               	movwf	(put_fat@val+1)& (0+255),b
 13585  013092  0EFF               	movlw	255
 13586  013094  6F7E               	movwf	(put_fat@val+2)& (0+255),b
 13587  013096  0EFF               	movlw	255
 13588  013098  6F7F               	movwf	(put_fat@val+3)& (0+255),b
 13589  01309A  ECF1  F098         	call	_put_fat	;wreg free
 13590  01309E  0100               	movlb	0	; () banked
 13591  0130A0  6FA5               	movwf	create_chain@res& (0+255),b
 13592  0130A2                     
 13593                           ; BSR set to: 0
 13594                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
 13595  0130A2  51A5               	movf	create_chain@res& (0+255),w,b
 13596  0130A4  A4D8               	btfss	status,2,c
 13597  0130A6  EF57  F098         	goto	u8581
 13598  0130AA  EF59  F098         	goto	u8580
 13599  0130AE                     u8581:
 13600  0130AE  EF7C  F098         	goto	l8057
 13601  0130B2                     u8580:
 13602  0130B2                     
 13603                           ; BSR set to: 0
 13604  0130B2  5199               	movf	create_chain@clst& (0+255),w,b
 13605  0130B4  119A               	iorwf	(create_chain@clst+1)& (0+255),w,b
 13606  0130B6  119B               	iorwf	(create_chain@clst+2)& (0+255),w,b
 13607  0130B8  119C               	iorwf	(create_chain@clst+3)& (0+255),w,b
 13608  0130BA  B4D8               	btfsc	status,2,c
 13609  0130BC  EF62  F098         	goto	u8591
 13610  0130C0  EF64  F098         	goto	u8590
 13611  0130C4                     u8591:
 13612  0130C4  EF7C  F098         	goto	l8057
 13613  0130C8                     u8590:
 13614  0130C8                     
 13615                           ; BSR set to: 0
 13616                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
 13617  0130C8  C0AE  F076         	movff	create_chain@fs,put_fat@fs
 13618  0130CC  C0AF  F077         	movff	create_chain@fs+1,put_fat@fs+1
 13619  0130D0  C099  F078         	movff	create_chain@clst,put_fat@clst
 13620  0130D4  C09A  F079         	movff	create_chain@clst+1,put_fat@clst+1
 13621  0130D8  C09B  F07A         	movff	create_chain@clst+2,put_fat@clst+2
 13622  0130DC  C09C  F07B         	movff	create_chain@clst+3,put_fat@clst+3
 13623  0130E0  C0AA  F07C         	movff	create_chain@ncl,put_fat@val
 13624  0130E4  C0AB  F07D         	movff	create_chain@ncl+1,put_fat@val+1
 13625  0130E8  C0AC  F07E         	movff	create_chain@ncl+2,put_fat@val+2
 13626  0130EC  C0AD  F07F         	movff	create_chain@ncl+3,put_fat@val+3
 13627  0130F0  ECF1  F098         	call	_put_fat	;wreg free
 13628  0130F4  0100               	movlb	0	; () banked
 13629  0130F6  6FA5               	movwf	create_chain@res& (0+255),b
 13630  0130F8                     l8057:
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
 13634  0130F8  51A5               	movf	create_chain@res& (0+255),w,b
 13635  0130FA  A4D8               	btfss	status,2,c
 13636  0130FC  EF82  F098         	goto	u8601
 13637  013100  EF84  F098         	goto	u8600
 13638  013104                     u8601:
 13639  013104  EFD2  F098         	goto	l8065
 13640  013108                     u8600:
 13641  013108                     
 13642                           ; BSR set to: 0
 13643                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
 13644  013108  EE20 F00B          	lfsr	2,11
 13645  01310C  51AE               	movf	create_chain@fs& (0+255),w,b
 13646  01310E  26D9               	addwf	fsr2l,f,c
 13647  013110  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13648  013112  22DA               	addwfc	fsr2h,f,c
 13649  013114  0060  F2AB  FFDE   	movff	create_chain@ncl,postinc2
 13650  01311A  0060  F2AF  FFDE   	movff	create_chain@ncl+1,postinc2
 13651  013120  0060  F2B3  FFDE   	movff	create_chain@ncl+2,postinc2
 13652  013126  0060  F2B7  FFDE   	movff	create_chain@ncl+3,postinc2
 13653  01312C                     
 13654                           ; BSR set to: 0
 13655                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
 13656  01312C  EE20 F00F          	lfsr	2,15
 13657  013130  51AE               	movf	create_chain@fs& (0+255),w,b
 13658  013132  26D9               	addwf	fsr2l,f,c
 13659  013134  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13660  013136  22DA               	addwfc	fsr2h,f,c
 13661  013138  EE10 F017          	lfsr	1,23
 13662  01313C  51AE               	movf	create_chain@fs& (0+255),w,b
 13663  01313E  26E1               	addwf	fsr1l,f,c
 13664  013140  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13665  013142  22E2               	addwfc	fsr1h,f,c
 13666  013144  0EFE               	movlw	254
 13667  013146  24E6               	addwf	postinc1,w,c
 13668  013148  6FA1               	movwf	(??_create_chain+4)& (0+255),b
 13669  01314A  0EFF               	movlw	255
 13670  01314C  20E6               	addwfc	postinc1,w,c
 13671  01314E  6FA2               	movwf	(??_create_chain+5)& (0+255),b
 13672  013150  0EFF               	movlw	255
 13673  013152  20E6               	addwfc	postinc1,w,c
 13674  013154  6FA3               	movwf	(??_create_chain+6)& (0+255),b
 13675  013156  0EFF               	movlw	255
 13676  013158  20E6               	addwfc	postinc1,w,c
 13677  01315A  6FA4               	movwf	(??_create_chain+7)& (0+255),b
 13678  01315C  50DE               	movf	postinc2,w,c
 13679  01315E  5DA1               	subwf	(??_create_chain+4)& (0+255),w,b
 13680  013160  50DE               	movf	postinc2,w,c
 13681  013162  59A2               	subwfb	(??_create_chain+5)& (0+255),w,b
 13682  013164  50DE               	movf	postinc2,w,c
 13683  013166  59A3               	subwfb	(??_create_chain+6)& (0+255),w,b
 13684  013168  50DE               	movf	postinc2,w,c
 13685  01316A  59A4               	subwfb	(??_create_chain+7)& (0+255),w,b
 13686  01316C  A0D8               	btfss	status,0,c
 13687  01316E  EFBB  F098         	goto	u8611
 13688  013172  EFBD  F098         	goto	u8610
 13689  013176                     u8611:
 13690  013176  EFC8  F098         	goto	l221
 13691  01317A                     u8610:
 13692  01317A                     
 13693                           ; BSR set to: 0
 13694  01317A  EE20 F00F          	lfsr	2,15
 13695  01317E  51AE               	movf	create_chain@fs& (0+255),w,b
 13696  013180  26D9               	addwf	fsr2l,f,c
 13697  013182  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13698  013184  22DA               	addwfc	fsr2h,f,c
 13699  013186  06DE               	decf	postinc2,f,c
 13700  013188  0E00               	movlw	0
 13701  01318A  5ADE               	subwfb	postinc2,f,c
 13702  01318C  5ADE               	subwfb	postinc2,f,c
 13703  01318E  5ADE               	subwfb	postinc2,f,c
 13704  013190                     l221:
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
 13708  013190  EE20 F004          	lfsr	2,4
 13709  013194  51AE               	movf	create_chain@fs& (0+255),w,b
 13710  013196  26D9               	addwf	fsr2l,f,c
 13711  013198  51AF               	movf	(create_chain@fs+1)& (0+255),w,b
 13712  01319A  22DA               	addwfc	fsr2h,f,c
 13713  01319C  0E00               	movlw	0
 13714  01319E  80DB               	bsf	plusw2,0,c
 13715                           
 13716                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
 13717  0131A0  EFE8  F098         	goto	l222
 13718  0131A4                     l8065:
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 13722  0131A4  05A5               	decf	create_chain@res& (0+255),w,b
 13723  0131A6  B4D8               	btfsc	status,2,c
 13724  0131A8  EFD8  F098         	goto	u8621
 13725  0131AC  EFDA  F098         	goto	u8620
 13726  0131B0                     u8621:
 13727  0131B0  EFE4  F098         	goto	l224
 13728  0131B4                     u8620:
 13729  0131B4                     
 13730                           ; BSR set to: 0
 13731  0131B4  0E01               	movlw	1
 13732  0131B6  6FAA               	movwf	create_chain@ncl& (0+255),b
 13733  0131B8  0E00               	movlw	0
 13734  0131BA  6FAB               	movwf	(create_chain@ncl+1)& (0+255),b
 13735  0131BC  0E00               	movlw	0
 13736  0131BE  6FAC               	movwf	(create_chain@ncl+2)& (0+255),b
 13737  0131C0  0E00               	movlw	0
 13738  0131C2  6FAD               	movwf	(create_chain@ncl+3)& (0+255),b
 13739  0131C4  EFE8  F098         	goto	l222
 13740  0131C8                     l224:
 13741                           
 13742                           ; BSR set to: 0
 13743  0131C8  69AA               	setf	create_chain@ncl& (0+255),b
 13744  0131CA  69AB               	setf	(create_chain@ncl+1)& (0+255),b
 13745  0131CC  69AC               	setf	(create_chain@ncl+2)& (0+255),b
 13746  0131CE  69AD               	setf	(create_chain@ncl+3)& (0+255),b
 13747  0131D0                     l222:
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
 13751  0131D0  C0AA  F097         	movff	create_chain@ncl,?_create_chain
 13752  0131D4  C0AB  F098         	movff	create_chain@ncl+1,?_create_chain+1
 13753  0131D8  C0AC  F099         	movff	create_chain@ncl+2,?_create_chain+2
 13754  0131DC  C0AD  F09A         	movff	create_chain@ncl+3,?_create_chain+3
 13755  0131E0                     l198:
 13756                           
 13757                           ; BSR set to: 0
 13758  0131E0  0012               	return		;funcret
 13759  0131E2                     __end_of_create_chain:
 13760                           	callstack 0
 13761                           
 13762 ;; *************** function _put_fat *****************
 13763 ;; Defined at:
 13764 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;  fs              2   22[BANK0 ] PTR struct .
 13767 ;;		 -> drive(563), NULL(0), 
 13768 ;;  clst            4   24[BANK0 ] unsigned long 
 13769 ;;  val             4   28[BANK0 ] unsigned long 
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  bc              2   52[BANK0 ] unsigned int 
 13772 ;;  p               2   50[BANK0 ] PTR unsigned char 
 13773 ;;		 -> drive.win(512), drive(563), NULL(0), 
 13774 ;;  res             1   54[BANK0 ] enum E68
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      enum E68
 13777 ;; Registers used:
 13778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13784 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13785 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13786 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13787 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;Total ram usage:       33 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:    7
 13791 ;; This function calls:
 13792 ;;		_ld_dword
 13793 ;;		_move_window
 13794 ;;		_st_dword
 13795 ;;		_st_word
 13796 ;; This function is called by:
 13797 ;;		_remove_chain
 13798 ;;		_create_chain
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           	psect	text43
 13803  0131E2                     __ptext43:
 13804                           	callstack 0
 13805  0131E2                     _put_fat:
 13806                           	callstack 13
 13807  0131E2                     
 13808                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 13809  0131E2  0E02               	movlw	2
 13810  0131E4  0100               	movlb	0	; () banked
 13811  0131E6  6F96               	movwf	put_fat@res& (0+255),b
 13812  0131E8                     
 13813                           ; BSR set to: 0
 13814                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 13815  0131E8  517B               	movf	(put_fat@clst+3)& (0+255),w,b
 13816  0131EA  117A               	iorwf	(put_fat@clst+2)& (0+255),w,b
 13817  0131EC  1179               	iorwf	(put_fat@clst+1)& (0+255),w,b
 13818  0131EE  E109               	bnz	u8250
 13819  0131F0  0E02               	movlw	2
 13820  0131F2  5D78               	subwf	put_fat@clst& (0+255),w,b
 13821  0131F4  A0D8               	btfss	status,0,c
 13822  0131F6  EFFF  F098         	goto	u8251
 13823  0131FA  EF01  F099         	goto	u8250
 13824  0131FE                     u8251:
 13825  0131FE  EFA7  F09B         	goto	l7945
 13826  013202                     u8250:
 13827  013202                     
 13828                           ; BSR set to: 0
 13829  013202  EE20 F017          	lfsr	2,23
 13830  013206  5176               	movf	put_fat@fs& (0+255),w,b
 13831  013208  26D9               	addwf	fsr2l,f,c
 13832  01320A  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 13833  01320C  22DA               	addwfc	fsr2h,f,c
 13834  01320E  50DE               	movf	postinc2,w,c
 13835  013210  5D78               	subwf	put_fat@clst& (0+255),w,b
 13836  013212  50DE               	movf	postinc2,w,c
 13837  013214  5979               	subwfb	(put_fat@clst+1)& (0+255),w,b
 13838  013216  50DE               	movf	postinc2,w,c
 13839  013218  597A               	subwfb	(put_fat@clst+2)& (0+255),w,b
 13840  01321A  50DE               	movf	postinc2,w,c
 13841  01321C  597B               	subwfb	(put_fat@clst+3)& (0+255),w,b
 13842  01321E  B0D8               	btfsc	status,0,c
 13843  013220  EF14  F099         	goto	u8261
 13844  013224  EF16  F099         	goto	u8260
 13845  013228                     u8261:
 13846  013228  EFA7  F09B         	goto	l7945
 13847  01322C                     u8260:
 13848  01322C  EF88  F09B         	goto	l7943
 13849  013230                     l150:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 13853  013230  C078  F094         	movff	put_fat@clst,put_fat@bc
 13854  013234  C079  F095         	movff	put_fat@clst+1,put_fat@bc+1
 13855  013238                     
 13856                           ; BSR set to: 0
 13857  013238  90D8               	bcf	status,0,c
 13858  01323A  3195               	rrcf	(put_fat@bc+1)& (0+255),w,b
 13859  01323C  6F81               	movwf	(??_put_fat+1)& (0+255),b
 13860  01323E  3194               	rrcf	put_fat@bc& (0+255),w,b
 13861  013240  6F80               	movwf	??_put_fat& (0+255),b
 13862  013242  5180               	movf	??_put_fat& (0+255),w,b
 13863  013244  2794               	addwf	put_fat@bc& (0+255),f,b
 13864  013246  5181               	movf	(??_put_fat+1)& (0+255),w,b
 13865  013248  2395               	addwfc	(put_fat@bc+1)& (0+255),f,b
 13866  01324A                     
 13867                           ; BSR set to: 0
 13868                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 13869  01324A  C076  F070         	movff	put_fat@fs,move_window@fs
 13870  01324E  C077  F071         	movff	put_fat@fs+1,move_window@fs+1
 13871  013252  EE20 F023          	lfsr	2,35
 13872  013256  5176               	movf	put_fat@fs& (0+255),w,b
 13873  013258  26D9               	addwf	fsr2l,f,c
 13874  01325A  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 13875  01325C  22DA               	addwfc	fsr2h,f,c
 13876  01325E  006F FF78  F080    	movff	postinc2,??_put_fat
 13877  013264  006F FF78  F081    	movff	postinc2,??_put_fat+1
 13878  01326A  006F FF78  F082    	movff	postinc2,??_put_fat+2
 13879  013270  006F FF78  F083    	movff	postinc2,??_put_fat+3
 13880  013276  C094  F084         	movff	put_fat@bc,??_put_fat+4
 13881  01327A  C095  F085         	movff	put_fat@bc+1,??_put_fat+5
 13882  01327E  0E09               	movlw	9
 13883  013280  6F86               	movwf	(??_put_fat+6)& (0+255),b
 13884  013282                     u8275:
 13885  013282  90D8               	bcf	status,0,c
 13886  013284  3385               	rrcf	(??_put_fat+5)& (0+255),f,b
 13887  013286  3384               	rrcf	(??_put_fat+4)& (0+255),f,b
 13888  013288  2F86               	decfsz	(??_put_fat+6)& (0+255),f,b
 13889  01328A  EF41  F099         	goto	u8275
 13890  01328E  5184               	movf	(??_put_fat+4)& (0+255),w,b
 13891  013290  2580               	addwf	??_put_fat& (0+255),w,b
 13892  013292  6F72               	movwf	move_window@sector& (0+255),b
 13893  013294  5185               	movf	(??_put_fat+5)& (0+255),w,b
 13894  013296  2181               	addwfc	(??_put_fat+1)& (0+255),w,b
 13895  013298  6F73               	movwf	(move_window@sector+1)& (0+255),b
 13896  01329A  0E00               	movlw	0
 13897  01329C  2182               	addwfc	(??_put_fat+2)& (0+255),w,b
 13898  01329E  6F74               	movwf	(move_window@sector+2)& (0+255),b
 13899  0132A0  0E00               	movlw	0
 13900  0132A2  2183               	addwfc	(??_put_fat+3)& (0+255),w,b
 13901  0132A4  6F75               	movwf	(move_window@sector+3)& (0+255),b
 13902  0132A6  ECFC  F0C6         	call	_move_window	;wreg free
 13903  0132AA  0100               	movlb	0	; () banked
 13904  0132AC  6F96               	movwf	put_fat@res& (0+255),b
 13905  0132AE                     
 13906                           ; BSR set to: 0
 13907                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 13908  0132AE  5196               	movf	put_fat@res& (0+255),w,b
 13909  0132B0  B4D8               	btfsc	status,2,c
 13910  0132B2  EF5D  F099         	goto	u8281
 13911  0132B6  EF5F  F099         	goto	u8280
 13912  0132BA                     u8281:
 13913  0132BA  EF61  F099         	goto	l7889
 13914  0132BE                     u8280:
 13915  0132BE  EFA7  F09B         	goto	l7945
 13916  0132C2                     l7889:
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 13920  0132C2  0EFF               	movlw	255
 13921  0132C4  6F80               	movwf	??_put_fat& (0+255),b
 13922  0132C6  0E01               	movlw	1
 13923  0132C8  6F81               	movwf	(??_put_fat+1)& (0+255),b
 13924  0132CA  C094  F082         	movff	put_fat@bc,??_put_fat+2
 13925  0132CE  C095  F083         	movff	put_fat@bc+1,??_put_fat+3
 13926  0132D2  5180               	movf	??_put_fat& (0+255),w,b
 13927  0132D4  1782               	andwf	(??_put_fat+2)& (0+255),f,b
 13928  0132D6  5181               	movf	(??_put_fat+1)& (0+255),w,b
 13929  0132D8  1783               	andwf	(??_put_fat+3)& (0+255),f,b
 13930  0132DA  C076  F084         	movff	put_fat@fs,??_put_fat+4
 13931  0132DE  C077  F085         	movff	put_fat@fs+1,??_put_fat+5
 13932  0132E2  5182               	movf	(??_put_fat+2)& (0+255),w,b
 13933  0132E4  2784               	addwf	(??_put_fat+4)& (0+255),f,b
 13934  0132E6  5183               	movf	(??_put_fat+3)& (0+255),w,b
 13935  0132E8  2385               	addwfc	(??_put_fat+5)& (0+255),f,b
 13936  0132EA  0E33               	movlw	51
 13937  0132EC  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 13938  0132EE  6F92               	movwf	put_fat@p& (0+255),b
 13939  0132F0  0E00               	movlw	0
 13940  0132F2  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 13941  0132F4  6F93               	movwf	(put_fat@p+1)& (0+255),b
 13942  0132F6                     
 13943                           ; BSR set to: 0
 13944  0132F6  4B94               	infsnz	put_fat@bc& (0+255),f,b
 13945  0132F8  2B95               	incf	(put_fat@bc+1)& (0+255),f,b
 13946  0132FA                     
 13947                           ; BSR set to: 0
 13948                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 13949  0132FA  B178               	btfsc	put_fat@clst& (0+255),0,b
 13950  0132FC  EF82  F099         	goto	u8291
 13951  013300  EF84  F099         	goto	u8290
 13952  013304                     u8291:
 13953  013304  EF89  F099         	goto	l7897
 13954  013308                     u8290:
 13955  013308                     
 13956                           ; BSR set to: 0
 13957  013308  C07C  F08E         	movff	put_fat@val,_put_fat$456
 13958  01330C  6B8F               	clrf	(_put_fat$456+1)& (0+255),b
 13959  01330E  EFA5  F099         	goto	l7899
 13960  013312                     l7897:
 13961                           
 13962                           ; BSR set to: 0
 13963  013312  517C               	movf	put_fat@val& (0+255),w,b
 13964  013314  6F80               	movwf	??_put_fat& (0+255),b
 13965  013316  6B81               	clrf	(??_put_fat+1)& (0+255),b
 13966  013318  3B80               	swapf	??_put_fat& (0+255),f,b
 13967  01331A  3B81               	swapf	(??_put_fat+1)& (0+255),f,b
 13968  01331C  0EF0               	movlw	240
 13969  01331E  1781               	andwf	(??_put_fat+1)& (0+255),f,b
 13970  013320  5180               	movf	??_put_fat& (0+255),w,b
 13971  013322  0B0F               	andlw	15
 13972  013324  1381               	iorwf	(??_put_fat+1)& (0+255),f,b
 13973  013326  0EF0               	movlw	240
 13974  013328  1780               	andwf	??_put_fat& (0+255),f,b
 13975  01332A  0060  F24B  FFD9   	movff	put_fat@p,fsr2l
 13976  013330  0060  F24F  FFDA   	movff	put_fat@p+1,fsr2h
 13977  013336  50DF               	movf	indf2,w,c
 13978  013338  0B0F               	andlw	15
 13979  01333A  6F82               	movwf	(??_put_fat+2)& (0+255),b
 13980  01333C  6B83               	clrf	(??_put_fat+3)& (0+255),b
 13981  01333E  5180               	movf	??_put_fat& (0+255),w,b
 13982  013340  1182               	iorwf	(??_put_fat+2)& (0+255),w,b
 13983  013342  6F8E               	movwf	_put_fat$456& (0+255),b
 13984  013344  5181               	movf	(??_put_fat+1)& (0+255),w,b
 13985  013346  1183               	iorwf	(??_put_fat+3)& (0+255),w,b
 13986  013348  6F8F               	movwf	(_put_fat$456+1)& (0+255),b
 13987  01334A                     l7899:
 13988                           
 13989                           ; BSR set to: 0
 13990  01334A  0060  F24B  FFD9   	movff	put_fat@p,fsr2l
 13991  013350  0060  F24F  FFDA   	movff	put_fat@p+1,fsr2h
 13992  013356  0060  F23B  FFDF   	movff	_put_fat$456,indf2
 13993  01335C                     
 13994                           ; BSR set to: 0
 13995                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 13996  01335C  EE20 F003          	lfsr	2,3
 13997  013360  5176               	movf	put_fat@fs& (0+255),w,b
 13998  013362  26D9               	addwf	fsr2l,f,c
 13999  013364  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14000  013366  22DA               	addwfc	fsr2h,f,c
 14001  013368  0E01               	movlw	1
 14002  01336A  6EDF               	movwf	indf2,c
 14003  01336C                     
 14004                           ; BSR set to: 0
 14005                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 14006  01336C  C076  F070         	movff	put_fat@fs,move_window@fs
 14007  013370  C077  F071         	movff	put_fat@fs+1,move_window@fs+1
 14008  013374  EE20 F023          	lfsr	2,35
 14009  013378  5176               	movf	put_fat@fs& (0+255),w,b
 14010  01337A  26D9               	addwf	fsr2l,f,c
 14011  01337C  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14012  01337E  22DA               	addwfc	fsr2h,f,c
 14013  013380  006F FF78  F080    	movff	postinc2,??_put_fat
 14014  013386  006F FF78  F081    	movff	postinc2,??_put_fat+1
 14015  01338C  006F FF78  F082    	movff	postinc2,??_put_fat+2
 14016  013392  006F FF78  F083    	movff	postinc2,??_put_fat+3
 14017  013398  C094  F084         	movff	put_fat@bc,??_put_fat+4
 14018  01339C  C095  F085         	movff	put_fat@bc+1,??_put_fat+5
 14019  0133A0  0E09               	movlw	9
 14020  0133A2  6F86               	movwf	(??_put_fat+6)& (0+255),b
 14021  0133A4                     u8305:
 14022  0133A4  90D8               	bcf	status,0,c
 14023  0133A6  3385               	rrcf	(??_put_fat+5)& (0+255),f,b
 14024  0133A8  3384               	rrcf	(??_put_fat+4)& (0+255),f,b
 14025  0133AA  2F86               	decfsz	(??_put_fat+6)& (0+255),f,b
 14026  0133AC  EFD2  F099         	goto	u8305
 14027  0133B0  5184               	movf	(??_put_fat+4)& (0+255),w,b
 14028  0133B2  2580               	addwf	??_put_fat& (0+255),w,b
 14029  0133B4  6F72               	movwf	move_window@sector& (0+255),b
 14030  0133B6  5185               	movf	(??_put_fat+5)& (0+255),w,b
 14031  0133B8  2181               	addwfc	(??_put_fat+1)& (0+255),w,b
 14032  0133BA  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14033  0133BC  0E00               	movlw	0
 14034  0133BE  2182               	addwfc	(??_put_fat+2)& (0+255),w,b
 14035  0133C0  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14036  0133C2  0E00               	movlw	0
 14037  0133C4  2183               	addwfc	(??_put_fat+3)& (0+255),w,b
 14038  0133C6  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14039  0133C8  ECFC  F0C6         	call	_move_window	;wreg free
 14040  0133CC  0100               	movlb	0	; () banked
 14041  0133CE  6F96               	movwf	put_fat@res& (0+255),b
 14042  0133D0                     
 14043                           ; BSR set to: 0
 14044                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 14045  0133D0  5196               	movf	put_fat@res& (0+255),w,b
 14046  0133D2  B4D8               	btfsc	status,2,c
 14047  0133D4  EFEE  F099         	goto	u8311
 14048  0133D8  EFF0  F099         	goto	u8310
 14049  0133DC                     u8311:
 14050  0133DC  EFF2  F099         	goto	l7909
 14051  0133E0                     u8310:
 14052  0133E0  EFA7  F09B         	goto	l7945
 14053  0133E4                     l7909:
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 14057  0133E4  0EFF               	movlw	255
 14058  0133E6  6F80               	movwf	??_put_fat& (0+255),b
 14059  0133E8  0E01               	movlw	1
 14060  0133EA  6F81               	movwf	(??_put_fat+1)& (0+255),b
 14061  0133EC  C094  F082         	movff	put_fat@bc,??_put_fat+2
 14062  0133F0  C095  F083         	movff	put_fat@bc+1,??_put_fat+3
 14063  0133F4  5180               	movf	??_put_fat& (0+255),w,b
 14064  0133F6  1782               	andwf	(??_put_fat+2)& (0+255),f,b
 14065  0133F8  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14066  0133FA  1783               	andwf	(??_put_fat+3)& (0+255),f,b
 14067  0133FC  C076  F084         	movff	put_fat@fs,??_put_fat+4
 14068  013400  C077  F085         	movff	put_fat@fs+1,??_put_fat+5
 14069  013404  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14070  013406  2784               	addwf	(??_put_fat+4)& (0+255),f,b
 14071  013408  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14072  01340A  2385               	addwfc	(??_put_fat+5)& (0+255),f,b
 14073  01340C  0E33               	movlw	51
 14074  01340E  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14075  013410  6F92               	movwf	put_fat@p& (0+255),b
 14076  013412  0E00               	movlw	0
 14077  013414  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14078  013416  6F93               	movwf	(put_fat@p+1)& (0+255),b
 14079  013418                     
 14080                           ; BSR set to: 0
 14081                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 14082  013418  B178               	btfsc	put_fat@clst& (0+255),0,b
 14083  01341A  EF11  F09A         	goto	u8321
 14084  01341E  EF13  F09A         	goto	u8320
 14085  013422                     u8321:
 14086  013422  EF33  F09A         	goto	l7915
 14087  013426                     u8320:
 14088  013426                     
 14089                           ; BSR set to: 0
 14090  013426  C07C  F080         	movff	put_fat@val,??_put_fat
 14091  01342A  C07D  F081         	movff	put_fat@val+1,??_put_fat+1
 14092  01342E  C07E  F082         	movff	put_fat@val+2,??_put_fat+2
 14093  013432  C07F  F083         	movff	put_fat@val+3,??_put_fat+3
 14094  013436  C081  F080         	movff	??_put_fat+1,??_put_fat
 14095  01343A  C082  F081         	movff	??_put_fat+2,??_put_fat+1
 14096  01343E  C083  F082         	movff	??_put_fat+3,??_put_fat+2
 14097  013442  6B83               	clrf	(??_put_fat+3)& (0+255),b
 14098  013444  0E0F               	movlw	15
 14099  013446  1780               	andwf	??_put_fat& (0+255),f,b
 14100  013448  0060  F24B  FFD9   	movff	put_fat@p,fsr2l
 14101  01344E  0060  F24F  FFDA   	movff	put_fat@p+1,fsr2h
 14102  013454  50DF               	movf	indf2,w,c
 14103  013456  0BF0               	andlw	240
 14104  013458  1180               	iorwf	??_put_fat& (0+255),w,b
 14105  01345A  6F84               	movwf	(??_put_fat+4)& (0+255),b
 14106  01345C  5184               	movf	(??_put_fat+4)& (0+255),w,b
 14107  01345E  6F90               	movwf	_put_fat$457& (0+255),b
 14108  013460  6B91               	clrf	(_put_fat$457+1)& (0+255),b
 14109  013462  EF49  F09A         	goto	l7917
 14110  013466                     l7915:
 14111                           
 14112                           ; BSR set to: 0
 14113  013466  C07C  F080         	movff	put_fat@val,??_put_fat
 14114  01346A  C07D  F081         	movff	put_fat@val+1,??_put_fat+1
 14115  01346E  C07E  F082         	movff	put_fat@val+2,??_put_fat+2
 14116  013472  C07F  F083         	movff	put_fat@val+3,??_put_fat+3
 14117  013476  0E05               	movlw	5
 14118  013478  EF43  F09A         	goto	u8330
 14119  01347C                     u8335:
 14120  01347C  90D8               	bcf	status,0,c
 14121  01347E  3383               	rrcf	(??_put_fat+3)& (0+255),f,b
 14122  013480  3382               	rrcf	(??_put_fat+2)& (0+255),f,b
 14123  013482  3381               	rrcf	(??_put_fat+1)& (0+255),f,b
 14124  013484  3380               	rrcf	??_put_fat& (0+255),f,b
 14125  013486                     u8330:
 14126  013486  2EE8               	decfsz	wreg,f,c
 14127  013488  EF3E  F09A         	goto	u8335
 14128  01348C  5180               	movf	??_put_fat& (0+255),w,b
 14129  01348E  6F90               	movwf	_put_fat$457& (0+255),b
 14130  013490  6B91               	clrf	(_put_fat$457+1)& (0+255),b
 14131  013492                     l7917:
 14132                           
 14133                           ; BSR set to: 0
 14134  013492  0060  F24B  FFD9   	movff	put_fat@p,fsr2l
 14135  013498  0060  F24F  FFDA   	movff	put_fat@p+1,fsr2h
 14136  01349E  0060  F243  FFDF   	movff	_put_fat$457,indf2
 14137                           
 14138                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 14139  0134A4  EE20 F003          	lfsr	2,3
 14140  0134A8  5176               	movf	put_fat@fs& (0+255),w,b
 14141  0134AA  26D9               	addwf	fsr2l,f,c
 14142  0134AC  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14143  0134AE  22DA               	addwfc	fsr2h,f,c
 14144  0134B0  0E01               	movlw	1
 14145  0134B2  6EDF               	movwf	indf2,c
 14146                           
 14147                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 14148  0134B4  EFA7  F09B         	goto	l7945
 14149  0134B8                     l7919:
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 14153  0134B8  C076  F070         	movff	put_fat@fs,move_window@fs
 14154  0134BC  C077  F071         	movff	put_fat@fs+1,move_window@fs+1
 14155  0134C0  EE20 F023          	lfsr	2,35
 14156  0134C4  5176               	movf	put_fat@fs& (0+255),w,b
 14157  0134C6  26D9               	addwf	fsr2l,f,c
 14158  0134C8  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14159  0134CA  22DA               	addwfc	fsr2h,f,c
 14160  0134CC  006F FF78  F080    	movff	postinc2,??_put_fat
 14161  0134D2  006F FF78  F081    	movff	postinc2,??_put_fat+1
 14162  0134D8  006F FF78  F082    	movff	postinc2,??_put_fat+2
 14163  0134DE  006F FF78  F083    	movff	postinc2,??_put_fat+3
 14164  0134E4  C078  F084         	movff	put_fat@clst,??_put_fat+4
 14165  0134E8  C079  F085         	movff	put_fat@clst+1,??_put_fat+5
 14166  0134EC  C07A  F086         	movff	put_fat@clst+2,??_put_fat+6
 14167  0134F0  C07B  F087         	movff	put_fat@clst+3,??_put_fat+7
 14168  0134F4  C085  F084         	movff	??_put_fat+5,??_put_fat+4
 14169  0134F8  C086  F085         	movff	??_put_fat+6,??_put_fat+5
 14170  0134FC  C087  F086         	movff	??_put_fat+7,??_put_fat+6
 14171  013500  6B87               	clrf	(??_put_fat+7)& (0+255),b
 14172  013502  5180               	movf	??_put_fat& (0+255),w,b
 14173  013504  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14174  013506  6F72               	movwf	move_window@sector& (0+255),b
 14175  013508  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14176  01350A  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14177  01350C  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14178  01350E  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14179  013510  2186               	addwfc	(??_put_fat+6)& (0+255),w,b
 14180  013512  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14181  013514  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14182  013516  2187               	addwfc	(??_put_fat+7)& (0+255),w,b
 14183  013518  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14184  01351A  ECFC  F0C6         	call	_move_window	;wreg free
 14185  01351E  0100               	movlb	0	; () banked
 14186  013520  6F96               	movwf	put_fat@res& (0+255),b
 14187  013522                     
 14188                           ; BSR set to: 0
 14189                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 14190  013522  5196               	movf	put_fat@res& (0+255),w,b
 14191  013524  B4D8               	btfsc	status,2,c
 14192  013526  EF97  F09A         	goto	u8341
 14193  01352A  EF99  F09A         	goto	u8340
 14194  01352E                     u8341:
 14195  01352E  EF9B  F09A         	goto	l7925
 14196  013532                     u8340:
 14197  013532  EFA7  F09B         	goto	l7945
 14198  013536                     l7925:
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 14202  013536  0EFF               	movlw	255
 14203  013538  6F80               	movwf	??_put_fat& (0+255),b
 14204  01353A  0E01               	movlw	1
 14205  01353C  6F81               	movwf	(??_put_fat+1)& (0+255),b
 14206  01353E  C078  F082         	movff	put_fat@clst,??_put_fat+2
 14207  013542  C079  F083         	movff	put_fat@clst+1,??_put_fat+3
 14208  013546  90D8               	bcf	status,0,c
 14209  013548  3782               	rlcf	(??_put_fat+2)& (0+255),f,b
 14210  01354A  3783               	rlcf	(??_put_fat+3)& (0+255),f,b
 14211  01354C  5180               	movf	??_put_fat& (0+255),w,b
 14212  01354E  1782               	andwf	(??_put_fat+2)& (0+255),f,b
 14213  013550  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14214  013552  1783               	andwf	(??_put_fat+3)& (0+255),f,b
 14215  013554  C076  F084         	movff	put_fat@fs,??_put_fat+4
 14216  013558  C077  F085         	movff	put_fat@fs+1,??_put_fat+5
 14217  01355C  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14218  01355E  2784               	addwf	(??_put_fat+4)& (0+255),f,b
 14219  013560  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14220  013562  2385               	addwfc	(??_put_fat+5)& (0+255),f,b
 14221  013564  0E33               	movlw	51
 14222  013566  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14223  013568  6E01               	movwf	st_word@ptr^0,c
 14224  01356A  0E00               	movlw	0
 14225  01356C  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14226  01356E  6E02               	movwf	(st_word@ptr+1)^0,c
 14227  013570  C07C  F003         	movff	put_fat@val,st_word@val
 14228  013574  C07D  F004         	movff	put_fat@val+1,st_word@val+1
 14229  013578  ECB5  F0D2         	call	_st_word	;wreg free
 14230  01357C                     
 14231                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 14232  01357C  0100               	movlb	0	; () banked
 14233  01357E  EE20 F003          	lfsr	2,3
 14234  013582  5176               	movf	put_fat@fs& (0+255),w,b
 14235  013584  26D9               	addwf	fsr2l,f,c
 14236  013586  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14237  013588  22DA               	addwfc	fsr2h,f,c
 14238  01358A  0E01               	movlw	1
 14239  01358C  6EDF               	movwf	indf2,c
 14240                           
 14241                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 14242  01358E  EFA7  F09B         	goto	l7945
 14243  013592                     l7929:
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 14247  013592  C076  F070         	movff	put_fat@fs,move_window@fs
 14248  013596  C077  F071         	movff	put_fat@fs+1,move_window@fs+1
 14249  01359A  EE20 F023          	lfsr	2,35
 14250  01359E  5176               	movf	put_fat@fs& (0+255),w,b
 14251  0135A0  26D9               	addwf	fsr2l,f,c
 14252  0135A2  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14253  0135A4  22DA               	addwfc	fsr2h,f,c
 14254  0135A6  006F FF78  F080    	movff	postinc2,??_put_fat
 14255  0135AC  006F FF78  F081    	movff	postinc2,??_put_fat+1
 14256  0135B2  006F FF78  F082    	movff	postinc2,??_put_fat+2
 14257  0135B8  006F FF78  F083    	movff	postinc2,??_put_fat+3
 14258  0135BE  C078  F084         	movff	put_fat@clst,??_put_fat+4
 14259  0135C2  C079  F085         	movff	put_fat@clst+1,??_put_fat+5
 14260  0135C6  C07A  F086         	movff	put_fat@clst+2,??_put_fat+6
 14261  0135CA  C07B  F087         	movff	put_fat@clst+3,??_put_fat+7
 14262  0135CE  0E08               	movlw	8
 14263  0135D0  EFEF  F09A         	goto	u8350
 14264  0135D4                     u8355:
 14265  0135D4  90D8               	bcf	status,0,c
 14266  0135D6  3387               	rrcf	(??_put_fat+7)& (0+255),f,b
 14267  0135D8  3386               	rrcf	(??_put_fat+6)& (0+255),f,b
 14268  0135DA  3385               	rrcf	(??_put_fat+5)& (0+255),f,b
 14269  0135DC  3384               	rrcf	(??_put_fat+4)& (0+255),f,b
 14270  0135DE                     u8350:
 14271  0135DE  2EE8               	decfsz	wreg,f,c
 14272  0135E0  EFEA  F09A         	goto	u8355
 14273  0135E4  5180               	movf	??_put_fat& (0+255),w,b
 14274  0135E6  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14275  0135E8  6F72               	movwf	move_window@sector& (0+255),b
 14276  0135EA  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14277  0135EC  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14278  0135EE  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14279  0135F0  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14280  0135F2  2186               	addwfc	(??_put_fat+6)& (0+255),w,b
 14281  0135F4  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14282  0135F6  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14283  0135F8  2187               	addwfc	(??_put_fat+7)& (0+255),w,b
 14284  0135FA  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14285  0135FC  ECFC  F0C6         	call	_move_window	;wreg free
 14286  013600  0100               	movlb	0	; () banked
 14287  013602  6F96               	movwf	put_fat@res& (0+255),b
 14288  013604                     
 14289                           ; BSR set to: 0
 14290                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 14291  013604  5196               	movf	put_fat@res& (0+255),w,b
 14292  013606  B4D8               	btfsc	status,2,c
 14293  013608  EF08  F09B         	goto	u8361
 14294  01360C  EF0A  F09B         	goto	u8360
 14295  013610                     u8361:
 14296  013610  EF0C  F09B         	goto	l7937
 14297  013614                     u8360:
 14298  013614  EFA7  F09B         	goto	l7945
 14299  013618                     l7937:
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 14303  013618  0EFF               	movlw	255
 14304  01361A  6F80               	movwf	??_put_fat& (0+255),b
 14305  01361C  0E01               	movlw	1
 14306  01361E  6F81               	movwf	(??_put_fat+1)& (0+255),b
 14307  013620  C078  F082         	movff	put_fat@clst,??_put_fat+2
 14308  013624  C079  F083         	movff	put_fat@clst+1,??_put_fat+3
 14309  013628  90D8               	bcf	status,0,c
 14310  01362A  3782               	rlcf	(??_put_fat+2)& (0+255),f,b
 14311  01362C  3783               	rlcf	(??_put_fat+3)& (0+255),f,b
 14312  01362E  90D8               	bcf	status,0,c
 14313  013630  3782               	rlcf	(??_put_fat+2)& (0+255),f,b
 14314  013632  3783               	rlcf	(??_put_fat+3)& (0+255),f,b
 14315  013634  5180               	movf	??_put_fat& (0+255),w,b
 14316  013636  1782               	andwf	(??_put_fat+2)& (0+255),f,b
 14317  013638  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14318  01363A  1783               	andwf	(??_put_fat+3)& (0+255),f,b
 14319  01363C  C076  F084         	movff	put_fat@fs,??_put_fat+4
 14320  013640  C077  F085         	movff	put_fat@fs+1,??_put_fat+5
 14321  013644  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14322  013646  2784               	addwf	(??_put_fat+4)& (0+255),f,b
 14323  013648  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14324  01364A  2385               	addwfc	(??_put_fat+5)& (0+255),f,b
 14325  01364C  0E33               	movlw	51
 14326  01364E  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14327  013650  6E01               	movwf	ld_dword@ptr^0,c
 14328  013652  0E00               	movlw	0
 14329  013654  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14330  013656  6E02               	movwf	(ld_dword@ptr+1)^0,c
 14331  013658  ECF6  F0C8         	call	_ld_dword	;wreg free
 14332  01365C  0E00               	movlw	0
 14333  01365E  1401               	andwf	?_ld_dword^0,w,c
 14334  013660  0100               	movlb	0	; () banked
 14335  013662  6F86               	movwf	(??_put_fat+6)& (0+255),b
 14336  013664  0E00               	movlw	0
 14337  013666  1402               	andwf	(?_ld_dword+1)^0,w,c
 14338  013668  6F87               	movwf	(??_put_fat+7)& (0+255),b
 14339  01366A  0E00               	movlw	0
 14340  01366C  1403               	andwf	(?_ld_dword+2)^0,w,c
 14341  01366E  6F88               	movwf	(??_put_fat+8)& (0+255),b
 14342  013670  0EF0               	movlw	240
 14343  013672  1404               	andwf	(?_ld_dword+3)^0,w,c
 14344  013674  6F89               	movwf	(??_put_fat+9)& (0+255),b
 14345  013676  0EFF               	movlw	255
 14346  013678  157C               	andwf	put_fat@val& (0+255),w,b
 14347  01367A  6F8A               	movwf	(??_put_fat+10)& (0+255),b
 14348  01367C  0EFF               	movlw	255
 14349  01367E  157D               	andwf	(put_fat@val+1)& (0+255),w,b
 14350  013680  6F8B               	movwf	(??_put_fat+11)& (0+255),b
 14351  013682  0EFF               	movlw	255
 14352  013684  157E               	andwf	(put_fat@val+2)& (0+255),w,b
 14353  013686  6F8C               	movwf	(??_put_fat+12)& (0+255),b
 14354  013688  0E0F               	movlw	15
 14355  01368A  157F               	andwf	(put_fat@val+3)& (0+255),w,b
 14356  01368C  6F8D               	movwf	(??_put_fat+13)& (0+255),b
 14357  01368E  5186               	movf	(??_put_fat+6)& (0+255),w,b
 14358  013690  118A               	iorwf	(??_put_fat+10)& (0+255),w,b
 14359  013692  6F7C               	movwf	put_fat@val& (0+255),b
 14360  013694  5187               	movf	(??_put_fat+7)& (0+255),w,b
 14361  013696  118B               	iorwf	(??_put_fat+11)& (0+255),w,b
 14362  013698  6F7D               	movwf	(put_fat@val+1)& (0+255),b
 14363  01369A  5188               	movf	(??_put_fat+8)& (0+255),w,b
 14364  01369C  118C               	iorwf	(??_put_fat+12)& (0+255),w,b
 14365  01369E  6F7E               	movwf	(put_fat@val+2)& (0+255),b
 14366  0136A0  5189               	movf	(??_put_fat+9)& (0+255),w,b
 14367  0136A2  118D               	iorwf	(??_put_fat+13)& (0+255),w,b
 14368  0136A4  6F7F               	movwf	(put_fat@val+3)& (0+255),b
 14369  0136A6                     
 14370                           ; BSR set to: 0
 14371                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 14372  0136A6  0EFF               	movlw	255
 14373  0136A8  6F80               	movwf	??_put_fat& (0+255),b
 14374  0136AA  0E01               	movlw	1
 14375  0136AC  6F81               	movwf	(??_put_fat+1)& (0+255),b
 14376  0136AE  C078  F082         	movff	put_fat@clst,??_put_fat+2
 14377  0136B2  C079  F083         	movff	put_fat@clst+1,??_put_fat+3
 14378  0136B6  90D8               	bcf	status,0,c
 14379  0136B8  3782               	rlcf	(??_put_fat+2)& (0+255),f,b
 14380  0136BA  3783               	rlcf	(??_put_fat+3)& (0+255),f,b
 14381  0136BC  90D8               	bcf	status,0,c
 14382  0136BE  3782               	rlcf	(??_put_fat+2)& (0+255),f,b
 14383  0136C0  3783               	rlcf	(??_put_fat+3)& (0+255),f,b
 14384  0136C2  5180               	movf	??_put_fat& (0+255),w,b
 14385  0136C4  1782               	andwf	(??_put_fat+2)& (0+255),f,b
 14386  0136C6  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14387  0136C8  1783               	andwf	(??_put_fat+3)& (0+255),f,b
 14388  0136CA  C076  F084         	movff	put_fat@fs,??_put_fat+4
 14389  0136CE  C077  F085         	movff	put_fat@fs+1,??_put_fat+5
 14390  0136D2  5182               	movf	(??_put_fat+2)& (0+255),w,b
 14391  0136D4  2784               	addwf	(??_put_fat+4)& (0+255),f,b
 14392  0136D6  5183               	movf	(??_put_fat+3)& (0+255),w,b
 14393  0136D8  2385               	addwfc	(??_put_fat+5)& (0+255),f,b
 14394  0136DA  0E33               	movlw	51
 14395  0136DC  2584               	addwf	(??_put_fat+4)& (0+255),w,b
 14396  0136DE  6E01               	movwf	st_dword@ptr^0,c
 14397  0136E0  0E00               	movlw	0
 14398  0136E2  2185               	addwfc	(??_put_fat+5)& (0+255),w,b
 14399  0136E4  6E02               	movwf	(st_dword@ptr+1)^0,c
 14400  0136E6  C07C  F003         	movff	put_fat@val,st_dword@val
 14401  0136EA  C07D  F004         	movff	put_fat@val+1,st_dword@val+1
 14402  0136EE  C07E  F005         	movff	put_fat@val+2,st_dword@val+2
 14403  0136F2  C07F  F006         	movff	put_fat@val+3,st_dword@val+3
 14404  0136F6  ECCB  F0CC         	call	_st_dword	;wreg free
 14405  0136FA                     
 14406                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 14407  0136FA  0100               	movlb	0	; () banked
 14408  0136FC  EE20 F003          	lfsr	2,3
 14409  013700  5176               	movf	put_fat@fs& (0+255),w,b
 14410  013702  26D9               	addwf	fsr2l,f,c
 14411  013704  5177               	movf	(put_fat@fs+1)& (0+255),w,b
 14412  013706  22DA               	addwfc	fsr2h,f,c
 14413  013708  0E01               	movlw	1
 14414  01370A  6EDF               	movwf	indf2,c
 14415                           
 14416                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 14417  01370C  EFA7  F09B         	goto	l7945
 14418  013710                     l7943:
 14419                           
 14420                           ; BSR set to: 0
 14421  013710  0060  F1DB  FFD9   	movff	put_fat@fs,fsr2l
 14422  013716  0060  F1DF  FFDA   	movff	put_fat@fs+1,fsr2h
 14423  01371C  50DF               	movf	indf2,w,c
 14424  01371E  6F80               	movwf	??_put_fat& (0+255),b
 14425  013720  6B81               	clrf	(??_put_fat+1)& (0+255),b
 14426                           
 14427                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14428                           ; Switch size 1, requested type "simple"
 14429                           ; Number of cases is 1, Range of values is 0 to 0
 14430                           ; switch strategies available:
 14431                           ; Name         Instructions Cycles
 14432                           ; simple_byte            4     3 (average)
 14433                           ;	Chosen strategy is simple_byte
 14434  013722  5181               	movf	(??_put_fat+1)& (0+255),w,b
 14435  013724  0A00               	xorlw	0	; case 0
 14436  013726  B4D8               	btfsc	status,2,c
 14437  013728  EF98  F09B         	goto	l11861
 14438  01372C  EFA7  F09B         	goto	l7945
 14439  013730                     l11861:
 14440                           
 14441                           ; BSR set to: 0
 14442                           ; Switch size 1, requested type "simple"
 14443                           ; Number of cases is 3, Range of values is 1 to 3
 14444                           ; switch strategies available:
 14445                           ; Name         Instructions Cycles
 14446                           ; simple_byte           10     6 (average)
 14447                           ;	Chosen strategy is simple_byte
 14448  013730  5180               	movf	??_put_fat& (0+255),w,b
 14449  013732  0A01               	xorlw	1	; case 1
 14450  013734  B4D8               	btfsc	status,2,c
 14451  013736  EF18  F099         	goto	l150
 14452  01373A  0A03               	xorlw	3	; case 2
 14453  01373C  B4D8               	btfsc	status,2,c
 14454  01373E  EF5C  F09A         	goto	l7919
 14455  013742  0A01               	xorlw	1	; case 3
 14456  013744  B4D8               	btfsc	status,2,c
 14457  013746  EFC9  F09A         	goto	l7929
 14458  01374A  EFA7  F09B         	goto	l7945
 14459  01374E                     l7945:
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 14463  01374E  5196               	movf	put_fat@res& (0+255),w,b
 14464  013750                     
 14465                           ; BSR set to: 0
 14466  013750  0012               	return		;funcret
 14467  013752                     __end_of_put_fat:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _st_word *****************
 14471 ;; Defined at:
 14472 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 14475 ;;		 -> drive.win(512), drive(563), NULL(0), 
 14476 ;;  val             2    2[COMRAM] unsigned short 
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;		None
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1    wreg      void 
 14481 ;; Registers used:
 14482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;Total ram usage:        4 bytes
 14493 ;; Hardware stack levels used:    1
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_sync_fs
 14498 ;;		_put_fat
 14499 ;;		_st_clust
 14500 ;;		_f_sync
 14501 ;; This function uses a non-reentrant model
 14502 ;;
 14503                           
 14504                           	psect	text44
 14505  01A56A                     __ptext44:
 14506                           	callstack 0
 14507  01A56A                     _st_word:
 14508                           	callstack 25
 14509  01A56A                     
 14510                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 14511  01A56A  0060  F007  FFD9   	movff	st_word@ptr,fsr2l
 14512  01A570  0060  F00B  FFDA   	movff	st_word@ptr+1,fsr2h
 14513  01A576  0060  F00F  FFDF   	movff	st_word@val,indf2
 14514  01A57C  4A01               	infsnz	st_word@ptr^0,f,c
 14515  01A57E  2A02               	incf	(st_word@ptr+1)^0,f,c
 14516  01A580  5004               	movf	(st_word@val+1)^0,w,c
 14517  01A582  6E03               	movwf	st_word@val^0,c
 14518  01A584  6A04               	clrf	(st_word@val+1)^0,c
 14519  01A586                     
 14520                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 14521  01A586  0060  F007  FFD9   	movff	st_word@ptr,fsr2l
 14522  01A58C  0060  F00B  FFDA   	movff	st_word@ptr+1,fsr2h
 14523  01A592  0060  F00F  FFDF   	movff	st_word@val,indf2
 14524  01A598  4A01               	infsnz	st_word@ptr^0,f,c
 14525  01A59A  2A02               	incf	(st_word@ptr+1)^0,f,c
 14526  01A59C  0012               	return		;funcret
 14527  01A59E                     __end_of_st_word:
 14528                           	callstack 0
 14529                           
 14530 ;; *************** function _st_dword *****************
 14531 ;; Defined at:
 14532 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 14535 ;;		 -> drive.win(512), drive(563), NULL(0), 
 14536 ;;  val             4    2[COMRAM] unsigned long 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      void 
 14541 ;; Registers used:
 14542 ;;		fsr2l, fsr2h, status,2, status,0
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14548 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14551 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14552 ;;Total ram usage:        6 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; This function calls:
 14555 ;;		Nothing
 14556 ;; This function is called by:
 14557 ;;		_sync_fs
 14558 ;;		_put_fat
 14559 ;;		_f_open
 14560 ;;		_f_sync
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text45
 14565  019996                     __ptext45:
 14566                           	callstack 0
 14567  019996                     _st_dword:
 14568                           	callstack 25
 14569  019996                     
 14570                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 14571  019996  0060  F007  FFD9   	movff	st_dword@ptr,fsr2l
 14572  01999C  0060  F00B  FFDA   	movff	st_dword@ptr+1,fsr2h
 14573  0199A2  0060  F00F  FFDF   	movff	st_dword@val,indf2
 14574  0199A8  4A01               	infsnz	st_dword@ptr^0,f,c
 14575  0199AA  2A02               	incf	(st_dword@ptr+1)^0,f,c
 14576  0199AC  C004  F003         	movff	st_dword@val+1,st_dword@val
 14577  0199B0  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 14578  0199B4  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 14579  0199B8  6A06               	clrf	(st_dword@val+3)^0,c
 14580  0199BA                     
 14581                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 14582  0199BA  0060  F007  FFD9   	movff	st_dword@ptr,fsr2l
 14583  0199C0  0060  F00B  FFDA   	movff	st_dword@ptr+1,fsr2h
 14584  0199C6  0060  F00F  FFDF   	movff	st_dword@val,indf2
 14585  0199CC  4A01               	infsnz	st_dword@ptr^0,f,c
 14586  0199CE  2A02               	incf	(st_dword@ptr+1)^0,f,c
 14587  0199D0  C004  F003         	movff	st_dword@val+1,st_dword@val
 14588  0199D4  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 14589  0199D8  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 14590  0199DC  6A06               	clrf	(st_dword@val+3)^0,c
 14591  0199DE                     
 14592                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 14593  0199DE  0060  F007  FFD9   	movff	st_dword@ptr,fsr2l
 14594  0199E4  0060  F00B  FFDA   	movff	st_dword@ptr+1,fsr2h
 14595  0199EA  0060  F00F  FFDF   	movff	st_dword@val,indf2
 14596  0199F0  4A01               	infsnz	st_dword@ptr^0,f,c
 14597  0199F2  2A02               	incf	(st_dword@ptr+1)^0,f,c
 14598  0199F4  C004  F003         	movff	st_dword@val+1,st_dword@val
 14599  0199F8  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 14600  0199FC  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 14601  019A00  6A06               	clrf	(st_dword@val+3)^0,c
 14602  019A02                     
 14603                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 14604  019A02  0060  F007  FFD9   	movff	st_dword@ptr,fsr2l
 14605  019A08  0060  F00B  FFDA   	movff	st_dword@ptr+1,fsr2h
 14606  019A0E  0060  F00F  FFDF   	movff	st_dword@val,indf2
 14607  019A14  4A01               	infsnz	st_dword@ptr^0,f,c
 14608  019A16  2A02               	incf	(st_dword@ptr+1)^0,f,c
 14609  019A18  0012               	return		;funcret
 14610  019A1A                     __end_of_st_dword:
 14611                           	callstack 0
 14612                           
 14613 ;; *************** function _get_fat *****************
 14614 ;; Defined at:
 14615 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  obj             2   22[BANK0 ] PTR struct .
 14618 ;;		 -> file(546), f_chdir@dj(40), f_open@dj(40), 
 14619 ;;  clst            4   24[BANK0 ] unsigned long 
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  val             4   39[BANK0 ] unsigned long 
 14622 ;;  fs              2   47[BANK0 ] PTR struct .
 14623 ;;		 -> drive(563), NULL(0), 
 14624 ;;  bc              2   45[BANK0 ] unsigned int 
 14625 ;;  wc              2   43[BANK0 ] unsigned int 
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  4   22[BANK0 ] unsigned long 
 14628 ;; Registers used:
 14629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14636 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14638 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14639 ;;Total ram usage:       27 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:    7
 14642 ;; This function calls:
 14643 ;;		_ld_dword
 14644 ;;		_ld_word
 14645 ;;		_move_window
 14646 ;; This function is called by:
 14647 ;;		_remove_chain
 14648 ;;		_create_chain
 14649 ;;		_dir_sdi
 14650 ;;		_dir_next
 14651 ;;		_f_open
 14652 ;;		_f_read
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           	psect	text46
 14657  014A70                     __ptext46:
 14658                           	callstack 0
 14659  014A70                     _get_fat:
 14660                           	callstack 13
 14661  014A70                     
 14662                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 14663  014A70  0060  F1DB  FFD9   	movff	get_fat@obj,fsr2l
 14664  014A76  0060  F1DF  FFDA   	movff	get_fat@obj+1,fsr2h
 14665  014A7C  006F FF78  F08F    	movff	postinc2,get_fat@fs
 14666  014A82  006F FF74  F090    	movff	postdec2,get_fat@fs+1
 14667  014A88                     
 14668                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 14669  014A88  0100               	movlb	0	; () banked
 14670  014A8A  517B               	movf	(get_fat@clst+3)& (0+255),w,b
 14671  014A8C  117A               	iorwf	(get_fat@clst+2)& (0+255),w,b
 14672  014A8E  1179               	iorwf	(get_fat@clst+1)& (0+255),w,b
 14673  014A90  E109               	bnz	u8140
 14674  014A92  0E02               	movlw	2
 14675  014A94  5D78               	subwf	get_fat@clst& (0+255),w,b
 14676  014A96  A0D8               	btfss	status,0,c
 14677  014A98  EF50  F0A5         	goto	u8141
 14678  014A9C  EF52  F0A5         	goto	u8140
 14679  014AA0                     u8141:
 14680  014AA0  EF67  F0A5         	goto	l7825
 14681  014AA4                     u8140:
 14682  014AA4                     
 14683                           ; BSR set to: 0
 14684  014AA4  EE20 F017          	lfsr	2,23
 14685  014AA8  518F               	movf	get_fat@fs& (0+255),w,b
 14686  014AAA  26D9               	addwf	fsr2l,f,c
 14687  014AAC  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 14688  014AAE  22DA               	addwfc	fsr2h,f,c
 14689  014AB0  50DE               	movf	postinc2,w,c
 14690  014AB2  5D78               	subwf	get_fat@clst& (0+255),w,b
 14691  014AB4  50DE               	movf	postinc2,w,c
 14692  014AB6  5979               	subwfb	(get_fat@clst+1)& (0+255),w,b
 14693  014AB8  50DE               	movf	postinc2,w,c
 14694  014ABA  597A               	subwfb	(get_fat@clst+2)& (0+255),w,b
 14695  014ABC  50DE               	movf	postinc2,w,c
 14696  014ABE  597B               	subwfb	(get_fat@clst+3)& (0+255),w,b
 14697  014AC0  A0D8               	btfss	status,0,c
 14698  014AC2  EF65  F0A5         	goto	u8151
 14699  014AC6  EF67  F0A5         	goto	u8150
 14700  014ACA                     u8151:
 14701  014ACA  EF71  F0A5         	goto	l127
 14702  014ACE                     u8150:
 14703  014ACE                     l7825:
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 14707  014ACE  0E01               	movlw	1
 14708  014AD0  6F87               	movwf	get_fat@val& (0+255),b
 14709  014AD2  0E00               	movlw	0
 14710  014AD4  6F88               	movwf	(get_fat@val+1)& (0+255),b
 14711  014AD6  0E00               	movlw	0
 14712  014AD8  6F89               	movwf	(get_fat@val+2)& (0+255),b
 14713  014ADA  0E00               	movlw	0
 14714  014ADC  6F8A               	movwf	(get_fat@val+3)& (0+255),b
 14715                           
 14716                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 14717  014ADE  EF5D  F0A7         	goto	l130
 14718  014AE2                     l127:
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 14722  014AE2  6987               	setf	get_fat@val& (0+255),b
 14723  014AE4  6988               	setf	(get_fat@val+1)& (0+255),b
 14724  014AE6  6989               	setf	(get_fat@val+2)& (0+255),b
 14725  014AE8  698A               	setf	(get_fat@val+3)& (0+255),b
 14726                           
 14727                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 14728  014AEA  EF3E  F0A7         	goto	l7865
 14729  014AEE                     l132:
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 14733  014AEE  C078  F08D         	movff	get_fat@clst,get_fat@bc
 14734  014AF2  C079  F08E         	movff	get_fat@clst+1,get_fat@bc+1
 14735  014AF6                     
 14736                           ; BSR set to: 0
 14737  014AF6  90D8               	bcf	status,0,c
 14738  014AF8  318E               	rrcf	(get_fat@bc+1)& (0+255),w,b
 14739  014AFA  6F7D               	movwf	(??_get_fat+1)& (0+255),b
 14740  014AFC  318D               	rrcf	get_fat@bc& (0+255),w,b
 14741  014AFE  6F7C               	movwf	??_get_fat& (0+255),b
 14742  014B00  517C               	movf	??_get_fat& (0+255),w,b
 14743  014B02  278D               	addwf	get_fat@bc& (0+255),f,b
 14744  014B04  517D               	movf	(??_get_fat+1)& (0+255),w,b
 14745  014B06  238E               	addwfc	(get_fat@bc+1)& (0+255),f,b
 14746  014B08                     
 14747                           ; BSR set to: 0
 14748                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 14749  014B08  C08F  F070         	movff	get_fat@fs,move_window@fs
 14750  014B0C  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 14751  014B10  EE20 F023          	lfsr	2,35
 14752  014B14  518F               	movf	get_fat@fs& (0+255),w,b
 14753  014B16  26D9               	addwf	fsr2l,f,c
 14754  014B18  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 14755  014B1A  22DA               	addwfc	fsr2h,f,c
 14756  014B1C  006F FF78  F07C    	movff	postinc2,??_get_fat
 14757  014B22  006F FF78  F07D    	movff	postinc2,??_get_fat+1
 14758  014B28  006F FF78  F07E    	movff	postinc2,??_get_fat+2
 14759  014B2E  006F FF78  F07F    	movff	postinc2,??_get_fat+3
 14760  014B34  C08D  F080         	movff	get_fat@bc,??_get_fat+4
 14761  014B38  C08E  F081         	movff	get_fat@bc+1,??_get_fat+5
 14762  014B3C  0E09               	movlw	9
 14763  014B3E  6F82               	movwf	(??_get_fat+6)& (0+255),b
 14764  014B40                     u8165:
 14765  014B40  90D8               	bcf	status,0,c
 14766  014B42  3381               	rrcf	(??_get_fat+5)& (0+255),f,b
 14767  014B44  3380               	rrcf	(??_get_fat+4)& (0+255),f,b
 14768  014B46  2F82               	decfsz	(??_get_fat+6)& (0+255),f,b
 14769  014B48  EFA0  F0A5         	goto	u8165
 14770  014B4C  5180               	movf	(??_get_fat+4)& (0+255),w,b
 14771  014B4E  257C               	addwf	??_get_fat& (0+255),w,b
 14772  014B50  6F72               	movwf	move_window@sector& (0+255),b
 14773  014B52  5181               	movf	(??_get_fat+5)& (0+255),w,b
 14774  014B54  217D               	addwfc	(??_get_fat+1)& (0+255),w,b
 14775  014B56  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14776  014B58  0E00               	movlw	0
 14777  014B5A  217E               	addwfc	(??_get_fat+2)& (0+255),w,b
 14778  014B5C  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14779  014B5E  0E00               	movlw	0
 14780  014B60  217F               	addwfc	(??_get_fat+3)& (0+255),w,b
 14781  014B62  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14782  014B64  ECFC  F0C6         	call	_move_window	;wreg free
 14783  014B68  0900               	iorlw	0
 14784  014B6A  B4D8               	btfsc	status,2,c
 14785  014B6C  EFBA  F0A5         	goto	u8171
 14786  014B70  EFBC  F0A5         	goto	u8170
 14787  014B74                     u8171:
 14788  014B74  EFBE  F0A5         	goto	l7833
 14789  014B78                     u8170:
 14790  014B78  EF5D  F0A7         	goto	l130
 14791  014B7C                     l7833:
 14792                           
 14793                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 14794  014B7C  0EFF               	movlw	255
 14795  014B7E  0100               	movlb	0	; () banked
 14796  014B80  6F7C               	movwf	??_get_fat& (0+255),b
 14797  014B82  0E01               	movlw	1
 14798  014B84  6F7D               	movwf	(??_get_fat+1)& (0+255),b
 14799  014B86  C08D  F07E         	movff	get_fat@bc,??_get_fat+2
 14800  014B8A  C08E  F07F         	movff	get_fat@bc+1,??_get_fat+3
 14801  014B8E  517C               	movf	??_get_fat& (0+255),w,b
 14802  014B90  177E               	andwf	(??_get_fat+2)& (0+255),f,b
 14803  014B92  517D               	movf	(??_get_fat+1)& (0+255),w,b
 14804  014B94  177F               	andwf	(??_get_fat+3)& (0+255),f,b
 14805  014B96  C08F  F080         	movff	get_fat@fs,??_get_fat+4
 14806  014B9A  C090  F081         	movff	get_fat@fs+1,??_get_fat+5
 14807  014B9E  517E               	movf	(??_get_fat+2)& (0+255),w,b
 14808  014BA0  2780               	addwf	(??_get_fat+4)& (0+255),f,b
 14809  014BA2  517F               	movf	(??_get_fat+3)& (0+255),w,b
 14810  014BA4  2381               	addwfc	(??_get_fat+5)& (0+255),f,b
 14811  014BA6  0E33               	movlw	51
 14812  014BA8  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 14813  014BAA  6ED9               	movwf	fsr2l,c
 14814  014BAC  0E00               	movlw	0
 14815  014BAE  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 14816  014BB0  6EDA               	movwf	fsr2h,c
 14817  014BB2  50DF               	movf	indf2,w,c
 14818  014BB4  6F82               	movwf	(??_get_fat+6)& (0+255),b
 14819  014BB6  5182               	movf	(??_get_fat+6)& (0+255),w,b
 14820  014BB8  6F8B               	movwf	get_fat@wc& (0+255),b
 14821  014BBA  6B8C               	clrf	(get_fat@wc+1)& (0+255),b
 14822  014BBC                     
 14823                           ; BSR set to: 0
 14824  014BBC  4B8D               	infsnz	get_fat@bc& (0+255),f,b
 14825  014BBE  2B8E               	incf	(get_fat@bc+1)& (0+255),f,b
 14826  014BC0                     
 14827                           ; BSR set to: 0
 14828                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 14829  014BC0  C08F  F070         	movff	get_fat@fs,move_window@fs
 14830  014BC4  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 14831  014BC8  EE20 F023          	lfsr	2,35
 14832  014BCC  518F               	movf	get_fat@fs& (0+255),w,b
 14833  014BCE  26D9               	addwf	fsr2l,f,c
 14834  014BD0  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 14835  014BD2  22DA               	addwfc	fsr2h,f,c
 14836  014BD4  006F FF78  F07C    	movff	postinc2,??_get_fat
 14837  014BDA  006F FF78  F07D    	movff	postinc2,??_get_fat+1
 14838  014BE0  006F FF78  F07E    	movff	postinc2,??_get_fat+2
 14839  014BE6  006F FF78  F07F    	movff	postinc2,??_get_fat+3
 14840  014BEC  C08D  F080         	movff	get_fat@bc,??_get_fat+4
 14841  014BF0  C08E  F081         	movff	get_fat@bc+1,??_get_fat+5
 14842  014BF4  0E09               	movlw	9
 14843  014BF6  6F82               	movwf	(??_get_fat+6)& (0+255),b
 14844  014BF8                     u8185:
 14845  014BF8  90D8               	bcf	status,0,c
 14846  014BFA  3381               	rrcf	(??_get_fat+5)& (0+255),f,b
 14847  014BFC  3380               	rrcf	(??_get_fat+4)& (0+255),f,b
 14848  014BFE  2F82               	decfsz	(??_get_fat+6)& (0+255),f,b
 14849  014C00  EFFC  F0A5         	goto	u8185
 14850  014C04  5180               	movf	(??_get_fat+4)& (0+255),w,b
 14851  014C06  257C               	addwf	??_get_fat& (0+255),w,b
 14852  014C08  6F72               	movwf	move_window@sector& (0+255),b
 14853  014C0A  5181               	movf	(??_get_fat+5)& (0+255),w,b
 14854  014C0C  217D               	addwfc	(??_get_fat+1)& (0+255),w,b
 14855  014C0E  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14856  014C10  0E00               	movlw	0
 14857  014C12  217E               	addwfc	(??_get_fat+2)& (0+255),w,b
 14858  014C14  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14859  014C16  0E00               	movlw	0
 14860  014C18  217F               	addwfc	(??_get_fat+3)& (0+255),w,b
 14861  014C1A  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14862  014C1C  ECFC  F0C6         	call	_move_window	;wreg free
 14863  014C20  0900               	iorlw	0
 14864  014C22  B4D8               	btfsc	status,2,c
 14865  014C24  EF16  F0A6         	goto	u8191
 14866  014C28  EF18  F0A6         	goto	u8190
 14867  014C2C                     u8191:
 14868  014C2C  EF1A  F0A6         	goto	l7841
 14869  014C30                     u8190:
 14870  014C30  EF5D  F0A7         	goto	l130
 14871  014C34                     l7841:
 14872                           
 14873                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 14874  014C34  0EFF               	movlw	255
 14875  014C36  0100               	movlb	0	; () banked
 14876  014C38  6F7C               	movwf	??_get_fat& (0+255),b
 14877  014C3A  0E01               	movlw	1
 14878  014C3C  6F7D               	movwf	(??_get_fat+1)& (0+255),b
 14879  014C3E  C08D  F07E         	movff	get_fat@bc,??_get_fat+2
 14880  014C42  C08E  F07F         	movff	get_fat@bc+1,??_get_fat+3
 14881  014C46  517C               	movf	??_get_fat& (0+255),w,b
 14882  014C48  177E               	andwf	(??_get_fat+2)& (0+255),f,b
 14883  014C4A  517D               	movf	(??_get_fat+1)& (0+255),w,b
 14884  014C4C  177F               	andwf	(??_get_fat+3)& (0+255),f,b
 14885  014C4E  C08F  F080         	movff	get_fat@fs,??_get_fat+4
 14886  014C52  C090  F081         	movff	get_fat@fs+1,??_get_fat+5
 14887  014C56  517E               	movf	(??_get_fat+2)& (0+255),w,b
 14888  014C58  2780               	addwf	(??_get_fat+4)& (0+255),f,b
 14889  014C5A  517F               	movf	(??_get_fat+3)& (0+255),w,b
 14890  014C5C  2381               	addwfc	(??_get_fat+5)& (0+255),f,b
 14891  014C5E  0E33               	movlw	51
 14892  014C60  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 14893  014C62  6ED9               	movwf	fsr2l,c
 14894  014C64  0E00               	movlw	0
 14895  014C66  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 14896  014C68  6EDA               	movwf	fsr2h,c
 14897  014C6A  50DF               	movf	indf2,w,c
 14898  014C6C  6F82               	movwf	(??_get_fat+6)& (0+255),b
 14899  014C6E  5182               	movf	(??_get_fat+6)& (0+255),w,b
 14900  014C70  6F84               	movwf	(??_get_fat+8)& (0+255),b
 14901  014C72  6B83               	clrf	(??_get_fat+7)& (0+255),b
 14902  014C74  5183               	movf	(??_get_fat+7)& (0+255),w,b
 14903  014C76  138B               	iorwf	get_fat@wc& (0+255),f,b
 14904  014C78  5184               	movf	(??_get_fat+8)& (0+255),w,b
 14905  014C7A  138C               	iorwf	(get_fat@wc+1)& (0+255),f,b
 14906  014C7C                     
 14907                           ; BSR set to: 0
 14908                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 14909  014C7C  B178               	btfsc	get_fat@clst& (0+255),0,b
 14910  014C7E  EF43  F0A6         	goto	u8201
 14911  014C82  EF45  F0A6         	goto	u8200
 14912  014C86                     u8201:
 14913  014C86  EF4D  F0A6         	goto	l7847
 14914  014C8A                     u8200:
 14915  014C8A                     
 14916                           ; BSR set to: 0
 14917  014C8A  0EFF               	movlw	255
 14918  014C8C  158B               	andwf	get_fat@wc& (0+255),w,b
 14919  014C8E  6F85               	movwf	_get_fat$427& (0+255),b
 14920  014C90  0E0F               	movlw	15
 14921  014C92  158C               	andwf	(get_fat@wc+1)& (0+255),w,b
 14922  014C94  6F86               	movwf	(_get_fat$427+1)& (0+255),b
 14923  014C96  EF5D  F0A6         	goto	l7849
 14924  014C9A                     l7847:
 14925                           
 14926                           ; BSR set to: 0
 14927  014C9A  C08B  F07C         	movff	get_fat@wc,??_get_fat
 14928  014C9E  C08C  F07D         	movff	get_fat@wc+1,??_get_fat+1
 14929  014CA2  0E04               	movlw	4
 14930  014CA4  6F7E               	movwf	(??_get_fat+2)& (0+255),b
 14931  014CA6                     u8215:
 14932  014CA6  90D8               	bcf	status,0,c
 14933  014CA8  337D               	rrcf	(??_get_fat+1)& (0+255),f,b
 14934  014CAA  337C               	rrcf	??_get_fat& (0+255),f,b
 14935  014CAC  2F7E               	decfsz	(??_get_fat+2)& (0+255),f,b
 14936  014CAE  EF53  F0A6         	goto	u8215
 14937  014CB2  C07C  F085         	movff	??_get_fat,_get_fat$427
 14938  014CB6  C07D  F086         	movff	??_get_fat+1,_get_fat$427+1
 14939  014CBA                     l7849:
 14940                           
 14941                           ; BSR set to: 0
 14942  014CBA  C085  F087         	movff	_get_fat$427,get_fat@val
 14943  014CBE  C086  F088         	movff	_get_fat$427+1,get_fat@val+1
 14944  014CC2  6B89               	clrf	(get_fat@val+2)& (0+255),b
 14945  014CC4  6B8A               	clrf	(get_fat@val+3)& (0+255),b
 14946                           
 14947                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 14948  014CC6  EF5D  F0A7         	goto	l130
 14949  014CCA                     l7851:
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 14953  014CCA  C08F  F070         	movff	get_fat@fs,move_window@fs
 14954  014CCE  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 14955  014CD2  EE20 F023          	lfsr	2,35
 14956  014CD6  518F               	movf	get_fat@fs& (0+255),w,b
 14957  014CD8  26D9               	addwf	fsr2l,f,c
 14958  014CDA  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 14959  014CDC  22DA               	addwfc	fsr2h,f,c
 14960  014CDE  006F FF78  F07C    	movff	postinc2,??_get_fat
 14961  014CE4  006F FF78  F07D    	movff	postinc2,??_get_fat+1
 14962  014CEA  006F FF78  F07E    	movff	postinc2,??_get_fat+2
 14963  014CF0  006F FF78  F07F    	movff	postinc2,??_get_fat+3
 14964  014CF6  C078  F080         	movff	get_fat@clst,??_get_fat+4
 14965  014CFA  C079  F081         	movff	get_fat@clst+1,??_get_fat+5
 14966  014CFE  C07A  F082         	movff	get_fat@clst+2,??_get_fat+6
 14967  014D02  C07B  F083         	movff	get_fat@clst+3,??_get_fat+7
 14968  014D06  C081  F080         	movff	??_get_fat+5,??_get_fat+4
 14969  014D0A  C082  F081         	movff	??_get_fat+6,??_get_fat+5
 14970  014D0E  C083  F082         	movff	??_get_fat+7,??_get_fat+6
 14971  014D12  6B83               	clrf	(??_get_fat+7)& (0+255),b
 14972  014D14  517C               	movf	??_get_fat& (0+255),w,b
 14973  014D16  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 14974  014D18  6F72               	movwf	move_window@sector& (0+255),b
 14975  014D1A  517D               	movf	(??_get_fat+1)& (0+255),w,b
 14976  014D1C  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 14977  014D1E  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14978  014D20  517E               	movf	(??_get_fat+2)& (0+255),w,b
 14979  014D22  2182               	addwfc	(??_get_fat+6)& (0+255),w,b
 14980  014D24  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14981  014D26  517F               	movf	(??_get_fat+3)& (0+255),w,b
 14982  014D28  2183               	addwfc	(??_get_fat+7)& (0+255),w,b
 14983  014D2A  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14984  014D2C  ECFC  F0C6         	call	_move_window	;wreg free
 14985  014D30  0900               	iorlw	0
 14986  014D32  B4D8               	btfsc	status,2,c
 14987  014D34  EF9E  F0A6         	goto	u8221
 14988  014D38  EFA0  F0A6         	goto	u8220
 14989  014D3C                     u8221:
 14990  014D3C  EFA2  F0A6         	goto	l7855
 14991  014D40                     u8220:
 14992  014D40  EF5D  F0A7         	goto	l130
 14993  014D44                     l7855:
 14994                           
 14995                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 14996  014D44  0EFF               	movlw	255
 14997  014D46  0100               	movlb	0	; () banked
 14998  014D48  6F7C               	movwf	??_get_fat& (0+255),b
 14999  014D4A  0E01               	movlw	1
 15000  014D4C  6F7D               	movwf	(??_get_fat+1)& (0+255),b
 15001  014D4E  C078  F07E         	movff	get_fat@clst,??_get_fat+2
 15002  014D52  C079  F07F         	movff	get_fat@clst+1,??_get_fat+3
 15003  014D56  90D8               	bcf	status,0,c
 15004  014D58  377E               	rlcf	(??_get_fat+2)& (0+255),f,b
 15005  014D5A  377F               	rlcf	(??_get_fat+3)& (0+255),f,b
 15006  014D5C  517C               	movf	??_get_fat& (0+255),w,b
 15007  014D5E  177E               	andwf	(??_get_fat+2)& (0+255),f,b
 15008  014D60  517D               	movf	(??_get_fat+1)& (0+255),w,b
 15009  014D62  177F               	andwf	(??_get_fat+3)& (0+255),f,b
 15010  014D64  C08F  F080         	movff	get_fat@fs,??_get_fat+4
 15011  014D68  C090  F081         	movff	get_fat@fs+1,??_get_fat+5
 15012  014D6C  517E               	movf	(??_get_fat+2)& (0+255),w,b
 15013  014D6E  2780               	addwf	(??_get_fat+4)& (0+255),f,b
 15014  014D70  517F               	movf	(??_get_fat+3)& (0+255),w,b
 15015  014D72  2381               	addwfc	(??_get_fat+5)& (0+255),f,b
 15016  014D74  0E33               	movlw	51
 15017  014D76  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 15018  014D78  6E01               	movwf	ld_word@ptr^0,c
 15019  014D7A  0E00               	movlw	0
 15020  014D7C  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 15021  014D7E  6E02               	movwf	(ld_word@ptr+1)^0,c
 15022  014D80  EC5F  F0D2         	call	_ld_word	;wreg free
 15023  014D84  C001  F087         	movff	?_ld_word,get_fat@val
 15024  014D88  C002  F088         	movff	?_ld_word+1,get_fat@val+1
 15025  014D8C  0100               	movlb	0	; () banked
 15026  014D8E  6B89               	clrf	(get_fat@val+2)& (0+255),b
 15027  014D90  6B8A               	clrf	(get_fat@val+3)& (0+255),b
 15028                           
 15029                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 15030  014D92  EF5D  F0A7         	goto	l130
 15031  014D96                     l7857:
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 15035  014D96  C08F  F070         	movff	get_fat@fs,move_window@fs
 15036  014D9A  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 15037  014D9E  EE20 F023          	lfsr	2,35
 15038  014DA2  518F               	movf	get_fat@fs& (0+255),w,b
 15039  014DA4  26D9               	addwf	fsr2l,f,c
 15040  014DA6  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15041  014DA8  22DA               	addwfc	fsr2h,f,c
 15042  014DAA  006F FF78  F07C    	movff	postinc2,??_get_fat
 15043  014DB0  006F FF78  F07D    	movff	postinc2,??_get_fat+1
 15044  014DB6  006F FF78  F07E    	movff	postinc2,??_get_fat+2
 15045  014DBC  006F FF78  F07F    	movff	postinc2,??_get_fat+3
 15046  014DC2  C078  F080         	movff	get_fat@clst,??_get_fat+4
 15047  014DC6  C079  F081         	movff	get_fat@clst+1,??_get_fat+5
 15048  014DCA  C07A  F082         	movff	get_fat@clst+2,??_get_fat+6
 15049  014DCE  C07B  F083         	movff	get_fat@clst+3,??_get_fat+7
 15050  014DD2  0E08               	movlw	8
 15051  014DD4  EFF1  F0A6         	goto	u8230
 15052  014DD8                     u8235:
 15053  014DD8  90D8               	bcf	status,0,c
 15054  014DDA  3383               	rrcf	(??_get_fat+7)& (0+255),f,b
 15055  014DDC  3382               	rrcf	(??_get_fat+6)& (0+255),f,b
 15056  014DDE  3381               	rrcf	(??_get_fat+5)& (0+255),f,b
 15057  014DE0  3380               	rrcf	(??_get_fat+4)& (0+255),f,b
 15058  014DE2                     u8230:
 15059  014DE2  2EE8               	decfsz	wreg,f,c
 15060  014DE4  EFEC  F0A6         	goto	u8235
 15061  014DE8  517C               	movf	??_get_fat& (0+255),w,b
 15062  014DEA  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 15063  014DEC  6F72               	movwf	move_window@sector& (0+255),b
 15064  014DEE  517D               	movf	(??_get_fat+1)& (0+255),w,b
 15065  014DF0  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 15066  014DF2  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15067  014DF4  517E               	movf	(??_get_fat+2)& (0+255),w,b
 15068  014DF6  2182               	addwfc	(??_get_fat+6)& (0+255),w,b
 15069  014DF8  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15070  014DFA  517F               	movf	(??_get_fat+3)& (0+255),w,b
 15071  014DFC  2183               	addwfc	(??_get_fat+7)& (0+255),w,b
 15072  014DFE  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15073  014E00  ECFC  F0C6         	call	_move_window	;wreg free
 15074  014E04  0900               	iorlw	0
 15075  014E06  B4D8               	btfsc	status,2,c
 15076  014E08  EF08  F0A7         	goto	u8241
 15077  014E0C  EF0A  F0A7         	goto	u8240
 15078  014E10                     u8241:
 15079  014E10  EF0C  F0A7         	goto	l7861
 15080  014E14                     u8240:
 15081  014E14  EF5D  F0A7         	goto	l130
 15082  014E18                     l7861:
 15083                           
 15084                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 15085  014E18  0EFF               	movlw	255
 15086  014E1A  0100               	movlb	0	; () banked
 15087  014E1C  6F7C               	movwf	??_get_fat& (0+255),b
 15088  014E1E  0E01               	movlw	1
 15089  014E20  6F7D               	movwf	(??_get_fat+1)& (0+255),b
 15090  014E22  C078  F07E         	movff	get_fat@clst,??_get_fat+2
 15091  014E26  C079  F07F         	movff	get_fat@clst+1,??_get_fat+3
 15092  014E2A  90D8               	bcf	status,0,c
 15093  014E2C  377E               	rlcf	(??_get_fat+2)& (0+255),f,b
 15094  014E2E  377F               	rlcf	(??_get_fat+3)& (0+255),f,b
 15095  014E30  90D8               	bcf	status,0,c
 15096  014E32  377E               	rlcf	(??_get_fat+2)& (0+255),f,b
 15097  014E34  377F               	rlcf	(??_get_fat+3)& (0+255),f,b
 15098  014E36  517C               	movf	??_get_fat& (0+255),w,b
 15099  014E38  177E               	andwf	(??_get_fat+2)& (0+255),f,b
 15100  014E3A  517D               	movf	(??_get_fat+1)& (0+255),w,b
 15101  014E3C  177F               	andwf	(??_get_fat+3)& (0+255),f,b
 15102  014E3E  C08F  F080         	movff	get_fat@fs,??_get_fat+4
 15103  014E42  C090  F081         	movff	get_fat@fs+1,??_get_fat+5
 15104  014E46  517E               	movf	(??_get_fat+2)& (0+255),w,b
 15105  014E48  2780               	addwf	(??_get_fat+4)& (0+255),f,b
 15106  014E4A  517F               	movf	(??_get_fat+3)& (0+255),w,b
 15107  014E4C  2381               	addwfc	(??_get_fat+5)& (0+255),f,b
 15108  014E4E  0E33               	movlw	51
 15109  014E50  2580               	addwf	(??_get_fat+4)& (0+255),w,b
 15110  014E52  6E01               	movwf	ld_dword@ptr^0,c
 15111  014E54  0E00               	movlw	0
 15112  014E56  2181               	addwfc	(??_get_fat+5)& (0+255),w,b
 15113  014E58  6E02               	movwf	(ld_dword@ptr+1)^0,c
 15114  014E5A  ECF6  F0C8         	call	_ld_dword	;wreg free
 15115  014E5E  0EFF               	movlw	255
 15116  014E60  1401               	andwf	?_ld_dword^0,w,c
 15117  014E62  0100               	movlb	0	; () banked
 15118  014E64  6F87               	movwf	get_fat@val& (0+255),b
 15119  014E66  0EFF               	movlw	255
 15120  014E68  1402               	andwf	(?_ld_dword+1)^0,w,c
 15121  014E6A  6F88               	movwf	(get_fat@val+1)& (0+255),b
 15122  014E6C  0EFF               	movlw	255
 15123  014E6E  1403               	andwf	(?_ld_dword+2)^0,w,c
 15124  014E70  6F89               	movwf	(get_fat@val+2)& (0+255),b
 15125  014E72  0E0F               	movlw	15
 15126  014E74  1404               	andwf	(?_ld_dword+3)^0,w,c
 15127  014E76  6F8A               	movwf	(get_fat@val+3)& (0+255),b
 15128                           
 15129                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 15130  014E78  EF5D  F0A7         	goto	l130
 15131  014E7C                     l7865:
 15132                           
 15133                           ; BSR set to: 0
 15134  014E7C  0060  F23F  FFD9   	movff	get_fat@fs,fsr2l
 15135  014E82  0060  F243  FFDA   	movff	get_fat@fs+1,fsr2h
 15136  014E88  50DF               	movf	indf2,w,c
 15137  014E8A  6F7C               	movwf	??_get_fat& (0+255),b
 15138  014E8C  6B7D               	clrf	(??_get_fat+1)& (0+255),b
 15139                           
 15140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15141                           ; Switch size 1, requested type "simple"
 15142                           ; Number of cases is 1, Range of values is 0 to 0
 15143                           ; switch strategies available:
 15144                           ; Name         Instructions Cycles
 15145                           ; simple_byte            4     3 (average)
 15146                           ;	Chosen strategy is simple_byte
 15147  014E8E  517D               	movf	(??_get_fat+1)& (0+255),w,b
 15148  014E90  0A00               	xorlw	0	; case 0
 15149  014E92  B4D8               	btfsc	status,2,c
 15150  014E94  EF4E  F0A7         	goto	l11863
 15151  014E98  EF67  F0A5         	goto	l7825
 15152  014E9C                     l11863:
 15153                           
 15154                           ; BSR set to: 0
 15155                           ; Switch size 1, requested type "simple"
 15156                           ; Number of cases is 3, Range of values is 1 to 3
 15157                           ; switch strategies available:
 15158                           ; Name         Instructions Cycles
 15159                           ; simple_byte           10     6 (average)
 15160                           ;	Chosen strategy is simple_byte
 15161  014E9C  517C               	movf	??_get_fat& (0+255),w,b
 15162  014E9E  0A01               	xorlw	1	; case 1
 15163  014EA0  B4D8               	btfsc	status,2,c
 15164  014EA2  EF77  F0A5         	goto	l132
 15165  014EA6  0A03               	xorlw	3	; case 2
 15166  014EA8  B4D8               	btfsc	status,2,c
 15167  014EAA  EF65  F0A6         	goto	l7851
 15168  014EAE  0A01               	xorlw	1	; case 3
 15169  014EB0  B4D8               	btfsc	status,2,c
 15170  014EB2  EFCB  F0A6         	goto	l7857
 15171  014EB6  EF67  F0A5         	goto	l7825
 15172  014EBA                     l130:
 15173                           
 15174                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 15175  014EBA  C087  F076         	movff	get_fat@val,?_get_fat
 15176  014EBE  C088  F077         	movff	get_fat@val+1,?_get_fat+1
 15177  014EC2  C089  F078         	movff	get_fat@val+2,?_get_fat+2
 15178  014EC6  C08A  F079         	movff	get_fat@val+3,?_get_fat+3
 15179  014ECA  0012               	return		;funcret
 15180  014ECC                     __end_of_get_fat:
 15181                           	callstack 0
 15182                           
 15183 ;; *************** function _f_mount *****************
 15184 ;; Defined at:
 15185 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  fs              2  100[BANK0 ] PTR struct .
 15188 ;;		 -> drive(563), NULL(0), 
 15189 ;;  path            2  102[BANK0 ] PTR const unsigned char 
 15190 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
 15191 ;;  opt             1  104[BANK0 ] unsigned char 
 15192 ;; Auto vars:     Size  Location     Type
 15193 ;;  vol             2  110[BANK0 ] int 
 15194 ;;  cfs             2  108[BANK0 ] PTR struct .
 15195 ;;		 -> drive(563), NULL(0), 
 15196 ;;  rp              2  106[BANK0 ] PTR const unsigned char 
 15197 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
 15198 ;;  res             1  105[BANK0 ] enum E68
 15199 ;; Return value:  Size  Location     Type
 15200 ;;                  1    wreg      enum E68
 15201 ;; Registers used:
 15202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15203 ;; Tracked objects:
 15204 ;;		On entry : 0/0
 15205 ;;		On exit  : 0/0
 15206 ;;		Unchanged: 0/0
 15207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15208 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15209 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15211 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15212 ;;Total ram usage:       12 bytes
 15213 ;; Hardware stack levels used:    1
 15214 ;; Hardware stack levels required when called:    9
 15215 ;; This function calls:
 15216 ;;		_find_volume
 15217 ;;		_get_ldnumber
 15218 ;; This function is called by:
 15219 ;;		_Save_Data
 15220 ;;		_Cursor_Position
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text47
 15225  018488                     __ptext47:
 15226                           	callstack 0
 15227  018488                     _f_mount:
 15228                           	callstack 19
 15229  018488                     
 15230                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
 15231  018488  C0C6  F0CA         	movff	f_mount@path,f_mount@rp
 15232  01848C  C0C7  F0CB         	movff	f_mount@path+1,f_mount@rp+1
 15233  018490                     
 15234                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 15235  018490  0ECA               	movlw	low f_mount@rp
 15236  018492  6E01               	movwf	get_ldnumber@path^0,c
 15237  018494  0E00               	movlw	high f_mount@rp
 15238  018496  6E02               	movwf	(get_ldnumber@path+1)^0,c
 15239  018498  EC3C  F0BA         	call	_get_ldnumber	;wreg free
 15240  01849C  C001  F0CE         	movff	?_get_ldnumber,f_mount@vol
 15241  0184A0  C002  F0CF         	movff	?_get_ldnumber+1,f_mount@vol+1
 15242  0184A4                     
 15243                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 15244  0184A4  0100               	movlb	0	; () banked
 15245  0184A6  BFCF               	btfsc	(f_mount@vol+1)& (0+255),7,b
 15246  0184A8  EF5A  F0C2         	goto	u11250
 15247  0184AC  EF58  F0C2         	goto	u11251
 15248  0184B0                     u11251:
 15249  0184B0  EF5D  F0C2         	goto	l9545
 15250  0184B4                     u11250:
 15251  0184B4                     
 15252                           ; BSR set to: 0
 15253  0184B4  0E0B               	movlw	11
 15254  0184B6  EFB7  F0C2         	goto	l482
 15255  0184BA                     l9545:
 15256                           
 15257                           ; BSR set to: 0
 15258                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 15259  0184BA  90D8               	bcf	status,0,c
 15260  0184BC  35CE               	rlcf	f_mount@vol& (0+255),w,b
 15261  0184BE  6ED9               	movwf	fsr2l,c
 15262  0184C0  35CF               	rlcf	(f_mount@vol+1)& (0+255),w,b
 15263  0184C2  6EDA               	movwf	fsr2h,c
 15264  0184C4  0E39               	movlw	low _FatFs
 15265  0184C6  26D9               	addwf	fsr2l,f,c
 15266  0184C8  0E01               	movlw	high _FatFs
 15267  0184CA  22DA               	addwfc	fsr2h,f,c
 15268  0184CC  006F FF78  F0CC    	movff	postinc2,f_mount@cfs
 15269  0184D2  006F FF74  F0CD    	movff	postdec2,f_mount@cfs+1
 15270  0184D8                     
 15271                           ; BSR set to: 0
 15272                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 15273  0184D8  51CC               	movf	f_mount@cfs& (0+255),w,b
 15274  0184DA  11CD               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 15275  0184DC  B4D8               	btfsc	status,2,c
 15276  0184DE  EF73  F0C2         	goto	u11261
 15277  0184E2  EF75  F0C2         	goto	u11260
 15278  0184E6                     u11261:
 15279  0184E6  EF7D  F0C2         	goto	l9551
 15280  0184EA                     u11260:
 15281  0184EA                     
 15282                           ; BSR set to: 0
 15283                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 15284  0184EA  0060  F333  FFD9   	movff	f_mount@cfs,fsr2l
 15285  0184F0  0060  F337  FFDA   	movff	f_mount@cfs+1,fsr2h
 15286  0184F6  0E00               	movlw	0
 15287  0184F8  6EDF               	movwf	indf2,c
 15288  0184FA                     l9551:
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 15292  0184FA  51C4               	movf	f_mount@fs& (0+255),w,b
 15293  0184FC  11C5               	iorwf	(f_mount@fs+1)& (0+255),w,b
 15294  0184FE  B4D8               	btfsc	status,2,c
 15295  018500  EF84  F0C2         	goto	u11271
 15296  018504  EF86  F0C2         	goto	u11270
 15297  018508                     u11271:
 15298  018508  EF8E  F0C2         	goto	l9555
 15299  01850C                     u11270:
 15300  01850C                     
 15301                           ; BSR set to: 0
 15302                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 15303  01850C  0060  F313  FFD9   	movff	f_mount@fs,fsr2l
 15304  018512  0060  F317  FFDA   	movff	f_mount@fs+1,fsr2h
 15305  018518  0E00               	movlw	0
 15306  01851A  6EDF               	movwf	indf2,c
 15307  01851C                     l9555:
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 15311  01851C  90D8               	bcf	status,0,c
 15312  01851E  35CE               	rlcf	f_mount@vol& (0+255),w,b
 15313  018520  6ED9               	movwf	fsr2l,c
 15314  018522  35CF               	rlcf	(f_mount@vol+1)& (0+255),w,b
 15315  018524  6EDA               	movwf	fsr2h,c
 15316  018526  0E39               	movlw	low _FatFs
 15317  018528  26D9               	addwf	fsr2l,f,c
 15318  01852A  0E01               	movlw	high _FatFs
 15319  01852C  22DA               	addwfc	fsr2h,f,c
 15320  01852E  0060  F313  FFDE   	movff	f_mount@fs,postinc2
 15321  018534  0060  F317  FFDD   	movff	f_mount@fs+1,postdec2
 15322  01853A                     
 15323                           ; BSR set to: 0
 15324                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 15325  01853A  51C8               	movf	f_mount@opt& (0+255),w,b
 15326  01853C  A4D8               	btfss	status,2,c
 15327  01853E  EFA3  F0C2         	goto	u11281
 15328  018542  EFA5  F0C2         	goto	u11280
 15329  018546                     u11281:
 15330  018546  EFA8  F0C2         	goto	l9563
 15331  01854A                     u11280:
 15332  01854A                     
 15333                           ; BSR set to: 0
 15334  01854A  0E00               	movlw	0
 15335  01854C  EFB7  F0C2         	goto	l482
 15336  018550                     l9563:
 15337                           
 15338                           ; BSR set to: 0
 15339                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 15340  018550  0EC6               	movlw	low f_mount@path
 15341  018552  6F7D               	movwf	find_volume@path& (0+255),b
 15342  018554  0E00               	movlw	high f_mount@path
 15343  018556  6F7E               	movwf	(find_volume@path+1)& (0+255),b
 15344  018558  0EC4               	movlw	low f_mount@fs
 15345  01855A  6F7F               	movwf	find_volume@rfs& (0+255),b
 15346  01855C  0E00               	movlw	high f_mount@fs
 15347  01855E  6F80               	movwf	(find_volume@rfs+1)& (0+255),b
 15348  018560  0E00               	movlw	0
 15349  018562  6F81               	movwf	find_volume@mode& (0+255),b
 15350  018564  EC00  F080         	call	_find_volume	;wreg free
 15351  018568  0100               	movlb	0	; () banked
 15352  01856A  6FC9               	movwf	f_mount@res& (0+255),b
 15353  01856C                     
 15354                           ; BSR set to: 0
 15355                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 15356  01856C  51C9               	movf	f_mount@res& (0+255),w,b
 15357  01856E                     l482:
 15358                           
 15359                           ; BSR set to: 0
 15360  01856E  0012               	return		;funcret
 15361  018570                     __end_of_f_mount:
 15362                           	callstack 0
 15363                           
 15364 ;; *************** function _find_volume *****************
 15365 ;; Defined at:
 15366 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;  path            2   29[BANK0 ] PTR PTR const unsigned c
 15369 ;;		 -> f_chdir@path(2), f_open@path(2), f_mount@path(2), 
 15370 ;;  rfs             2   31[BANK0 ] PTR PTR struct .
 15371 ;;		 -> f_chdir@fs(2), f_open@fs(2), f_mount@fs(2), 
 15372 ;;  mode            1   33[BANK0 ] unsigned char 
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;  br             16   42[BANK0 ] unsigned long [4]
 15375 ;;  bsect           4   91[BANK0 ] unsigned long 
 15376 ;;  fasize          4   87[BANK0 ] unsigned long 
 15377 ;;  nclst           4   83[BANK0 ] unsigned long 
 15378 ;;  tsect           4   78[BANK0 ] unsigned long 
 15379 ;;  sysect          4   70[BANK0 ] unsigned long 
 15380 ;;  szbfat          4   64[BANK0 ] unsigned long 
 15381 ;;  fs              2   98[BANK0 ] PTR struct .
 15382 ;;		 -> drive(563), NULL(0), 
 15383 ;;  i               2   95[BANK0 ] unsigned int 
 15384 ;;  nrsv            2   76[BANK0 ] unsigned short 
 15385 ;;  vol             2   74[BANK0 ] int 
 15386 ;;  pt              2   68[BANK0 ] PTR unsigned char 
 15387 ;;		 -> drive.win(512), drive(563), NULL(0), 
 15388 ;;  fmt             1   97[BANK0 ] unsigned char 
 15389 ;;  stat            1   82[BANK0 ] unsigned char 
 15390 ;; Return value:  Size  Location     Type
 15391 ;;                  1    wreg      enum E68
 15392 ;; Registers used:
 15393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15394 ;; Tracked objects:
 15395 ;;		On entry : 0/0
 15396 ;;		On exit  : 0/0
 15397 ;;		Unchanged: 0/0
 15398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15399 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15400 ;;      Locals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15401 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15402 ;;      Totals:         0      71       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15403 ;;Total ram usage:       71 bytes
 15404 ;; Hardware stack levels used:    1
 15405 ;; Hardware stack levels required when called:    8
 15406 ;; This function calls:
 15407 ;;		___lldiv
 15408 ;;		___lmul
 15409 ;;		_check_fs
 15410 ;;		_disk_initialize
 15411 ;;		_disk_status
 15412 ;;		_get_ldnumber
 15413 ;;		_ld_dword
 15414 ;;		_ld_word
 15415 ;;		_move_window
 15416 ;; This function is called by:
 15417 ;;		_f_mount
 15418 ;;		_f_open
 15419 ;;		_f_chdir
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text48
 15424  010000                     __ptext48:
 15425                           	callstack 0
 15426  010000                     _find_volume:
 15427                           	callstack 19
 15428  010000                     
 15429                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 15430  010000  0060  F1FF  FFD9   	movff	find_volume@rfs,fsr2l
 15431  010006  0060  F203  FFDA   	movff	find_volume@rfs+1,fsr2h
 15432  01000C  0E00               	movlw	0
 15433  01000E  6EDE               	movwf	postinc2,c
 15434  010010  0E00               	movlw	0
 15435  010012  6EDD               	movwf	postdec2,c
 15436  010014                     
 15437                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 15438  010014  C07D  F001         	movff	find_volume@path,get_ldnumber@path
 15439  010018  C07E  F002         	movff	find_volume@path+1,get_ldnumber@path+1
 15440  01001C  EC3C  F0BA         	call	_get_ldnumber	;wreg free
 15441  010020  C001  F0AA         	movff	?_get_ldnumber,find_volume@vol
 15442  010024  C002  F0AB         	movff	?_get_ldnumber+1,find_volume@vol+1
 15443  010028                     
 15444                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 15445  010028  0100               	movlb	0	; () banked
 15446  01002A  BFAB               	btfsc	(find_volume@vol+1)& (0+255),7,b
 15447  01002C  EF1C  F080         	goto	u10530
 15448  010030  EF1A  F080         	goto	u10531
 15449  010034                     u10531:
 15450  010034  EF1F  F080         	goto	l9137
 15451  010038                     u10530:
 15452  010038                     
 15453                           ; BSR set to: 0
 15454  010038  0E0B               	movlw	11
 15455  01003A  EFA6  F086         	goto	l416
 15456  01003E                     l9137:
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 15460  01003E  90D8               	bcf	status,0,c
 15461  010040  35AA               	rlcf	find_volume@vol& (0+255),w,b
 15462  010042  6ED9               	movwf	fsr2l,c
 15463  010044  35AB               	rlcf	(find_volume@vol+1)& (0+255),w,b
 15464  010046  6EDA               	movwf	fsr2h,c
 15465  010048  0E39               	movlw	low _FatFs
 15466  01004A  26D9               	addwf	fsr2l,f,c
 15467  01004C  0E01               	movlw	high _FatFs
 15468  01004E  22DA               	addwfc	fsr2h,f,c
 15469  010050  006F FF78  F0C2    	movff	postinc2,find_volume@fs
 15470  010056  006F FF74  F0C3    	movff	postdec2,find_volume@fs+1
 15471  01005C                     
 15472                           ; BSR set to: 0
 15473                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 15474  01005C  51C2               	movf	find_volume@fs& (0+255),w,b
 15475  01005E  11C3               	iorwf	(find_volume@fs+1)& (0+255),w,b
 15476  010060  A4D8               	btfss	status,2,c
 15477  010062  EF35  F080         	goto	u10541
 15478  010066  EF37  F080         	goto	u10540
 15479  01006A                     u10541:
 15480  01006A  EF3A  F080         	goto	l9145
 15481  01006E                     u10540:
 15482  01006E                     
 15483                           ; BSR set to: 0
 15484  01006E  0E0C               	movlw	12
 15485  010070  EFA6  F086         	goto	l416
 15486  010074                     l9145:
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 15490  010074  0060  F1FF  FFD9   	movff	find_volume@rfs,fsr2l
 15491  01007A  0060  F203  FFDA   	movff	find_volume@rfs+1,fsr2h
 15492  010080  0060  F30B  FFDE   	movff	find_volume@fs,postinc2
 15493  010086  0060  F30F  FFDD   	movff	find_volume@fs+1,postdec2
 15494  01008C                     
 15495                           ; BSR set to: 0
 15496                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 15497  01008C  9181               	bcf	find_volume@mode& (0+255),0,b
 15498  01008E                     
 15499                           ; BSR set to: 0
 15500                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 15501  01008E  0060  F30B  FFD9   	movff	find_volume@fs,fsr2l
 15502  010094  0060  F30F  FFDA   	movff	find_volume@fs+1,fsr2h
 15503  01009A  50DF               	movf	indf2,w,c
 15504  01009C  B4D8               	btfsc	status,2,c
 15505  01009E  EF53  F080         	goto	u10551
 15506  0100A2  EF55  F080         	goto	u10550
 15507  0100A6                     u10551:
 15508  0100A6  EF7C  F080         	goto	l9167
 15509  0100AA                     u10550:
 15510  0100AA                     
 15511                           ; BSR set to: 0
 15512                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 15513  0100AA  EE20 F001          	lfsr	2,1
 15514  0100AE  51C2               	movf	find_volume@fs& (0+255),w,b
 15515  0100B0  26D9               	addwf	fsr2l,f,c
 15516  0100B2  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 15517  0100B4  22DA               	addwfc	fsr2h,f,c
 15518  0100B6  50DF               	movf	indf2,w,c
 15519  0100B8  EC0D  F0CD         	call	_disk_status
 15520  0100BC  0100               	movlb	0	; () banked
 15521  0100BE  6FB2               	movwf	find_volume@stat& (0+255),b
 15522  0100C0                     
 15523                           ; BSR set to: 0
 15524                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 15525  0100C0  B1B2               	btfsc	find_volume@stat& (0+255),0,b
 15526  0100C2  EF65  F080         	goto	u10561
 15527  0100C6  EF67  F080         	goto	u10560
 15528  0100CA                     u10561:
 15529  0100CA  EF7C  F080         	goto	l9167
 15530  0100CE                     u10560:
 15531  0100CE                     
 15532                           ; BSR set to: 0
 15533  0100CE  5181               	movf	find_volume@mode& (0+255),w,b
 15534  0100D0  B4D8               	btfsc	status,2,c
 15535  0100D2  EF6D  F080         	goto	u10571
 15536  0100D6  EF6F  F080         	goto	u10570
 15537  0100DA                     u10571:
 15538  0100DA  EF79  F080         	goto	l9163
 15539  0100DE                     u10570:
 15540  0100DE                     
 15541                           ; BSR set to: 0
 15542  0100DE  A5B2               	btfss	find_volume@stat& (0+255),2,b
 15543  0100E0  EF74  F080         	goto	u10581
 15544  0100E4  EF76  F080         	goto	u10580
 15545  0100E8                     u10581:
 15546  0100E8  EF79  F080         	goto	l9163
 15547  0100EC                     u10580:
 15548  0100EC                     l9159:
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 15552  0100EC  0E0A               	movlw	10
 15553  0100EE  EFA6  F086         	goto	l416
 15554  0100F2                     l9163:
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 15558  0100F2  0E00               	movlw	0
 15559  0100F4  EFA6  F086         	goto	l416
 15560  0100F8                     l9167:
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 15564  0100F8  0060  F30B  FFD9   	movff	find_volume@fs,fsr2l
 15565  0100FE  0060  F30F  FFDA   	movff	find_volume@fs+1,fsr2h
 15566  010104  0E00               	movlw	0
 15567  010106  6EDF               	movwf	indf2,c
 15568  010108                     
 15569                           ; BSR set to: 0
 15570                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 15571  010108  EE20 F001          	lfsr	2,1
 15572  01010C  51C2               	movf	find_volume@fs& (0+255),w,b
 15573  01010E  26D9               	addwf	fsr2l,f,c
 15574  010110  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 15575  010112  22DA               	addwfc	fsr2h,f,c
 15576  010114  0060  F2AB  FFDF   	movff	find_volume@vol,indf2
 15577  01011A                     
 15578                           ; BSR set to: 0
 15579                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 15580  01011A  EE20 F001          	lfsr	2,1
 15581  01011E  51C2               	movf	find_volume@fs& (0+255),w,b
 15582  010120  26D9               	addwf	fsr2l,f,c
 15583  010122  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 15584  010124  22DA               	addwfc	fsr2h,f,c
 15585  010126  50DF               	movf	indf2,w,c
 15586  010128  ECC8  F0D0         	call	_disk_initialize
 15587  01012C  0100               	movlb	0	; () banked
 15588  01012E  6FB2               	movwf	find_volume@stat& (0+255),b
 15589  010130                     
 15590                           ; BSR set to: 0
 15591                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 15592  010130  A1B2               	btfss	find_volume@stat& (0+255),0,b
 15593  010132  EF9D  F080         	goto	u10591
 15594  010136  EF9F  F080         	goto	u10590
 15595  01013A                     u10591:
 15596  01013A  EFA2  F080         	goto	l9179
 15597  01013E                     u10590:
 15598  01013E                     
 15599                           ; BSR set to: 0
 15600                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 15601  01013E  0E03               	movlw	3
 15602  010140  EFA6  F086         	goto	l416
 15603  010144                     l9179:
 15604                           
 15605                           ; BSR set to: 0
 15606  010144  5181               	movf	find_volume@mode& (0+255),w,b
 15607  010146  B4D8               	btfsc	status,2,c
 15608  010148  EFA8  F080         	goto	u10601
 15609  01014C  EFAA  F080         	goto	u10600
 15610  010150                     u10601:
 15611  010150  EFB3  F080         	goto	l9187
 15612  010154                     u10600:
 15613  010154                     
 15614                           ; BSR set to: 0
 15615  010154  A5B2               	btfss	find_volume@stat& (0+255),2,b
 15616  010156  EFAF  F080         	goto	u10611
 15617  01015A  EFB1  F080         	goto	u10610
 15618  01015E                     u10611:
 15619  01015E  EFB3  F080         	goto	l9187
 15620  010162                     u10610:
 15621  010162  EF76  F080         	goto	l9159
 15622  010166                     l9187:
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 15626  010166  0E00               	movlw	0
 15627  010168  6FBB               	movwf	find_volume@bsect& (0+255),b
 15628  01016A  0E00               	movlw	0
 15629  01016C  6FBC               	movwf	(find_volume@bsect+1)& (0+255),b
 15630  01016E  0E00               	movlw	0
 15631  010170  6FBD               	movwf	(find_volume@bsect+2)& (0+255),b
 15632  010172  0E00               	movlw	0
 15633  010174  6FBE               	movwf	(find_volume@bsect+3)& (0+255),b
 15634  010176                     
 15635                           ; BSR set to: 0
 15636                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 15637  010176  C0C2  F076         	movff	find_volume@fs,check_fs@fs
 15638  01017A  C0C3  F077         	movff	find_volume@fs+1,check_fs@fs+1
 15639  01017E  C0BB  F078         	movff	find_volume@bsect,check_fs@sect
 15640  010182  C0BC  F079         	movff	find_volume@bsect+1,check_fs@sect+1
 15641  010186  C0BD  F07A         	movff	find_volume@bsect+2,check_fs@sect+2
 15642  01018A  C0BE  F07B         	movff	find_volume@bsect+3,check_fs@sect+3
 15643  01018E  EC61  F0BC         	call	_check_fs	;wreg free
 15644  010192  0100               	movlb	0	; () banked
 15645  010194  6FC1               	movwf	find_volume@fmt& (0+255),b
 15646  010196                     
 15647                           ; BSR set to: 0
 15648                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 15649  010196  0E02               	movlw	2
 15650  010198  19C1               	xorwf	find_volume@fmt& (0+255),w,b
 15651  01019A  B4D8               	btfsc	status,2,c
 15652  01019C  EFD2  F080         	goto	u10621
 15653  0101A0  EFD4  F080         	goto	u10620
 15654  0101A4                     u10621:
 15655  0101A4  EFD6  F080         	goto	l9197
 15656  0101A8                     u10620:
 15657  0101A8  EFB2  F081         	goto	l9237
 15658  0101AC                     l9197:
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 15662  0101AC  0E00               	movlw	0
 15663  0101AE  6FC0               	movwf	(find_volume@i+1)& (0+255),b
 15664  0101B0  0E00               	movlw	0
 15665  0101B2  6FBF               	movwf	find_volume@i& (0+255),b
 15666  0101B4                     l9199:
 15667                           
 15668                           ; BSR set to: 0
 15669  0101B4  51C0               	movf	(find_volume@i+1)& (0+255),w,b
 15670  0101B6  E109               	bnz	u10630
 15671  0101B8  0E04               	movlw	4
 15672  0101BA  5DBF               	subwf	find_volume@i& (0+255),w,b
 15673  0101BC  A0D8               	btfss	status,0,c
 15674  0101BE  EFE3  F080         	goto	u10631
 15675  0101C2  EFE5  F080         	goto	u10630
 15676  0101C6                     u10631:
 15677  0101C6  EFE7  F080         	goto	l9203
 15678  0101CA                     u10630:
 15679  0101CA  EF4B  F081         	goto	l9217
 15680  0101CE                     l9203:
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 15684  0101CE  C0BF  F082         	movff	find_volume@i,??_find_volume
 15685  0101D2  C0C0  F083         	movff	find_volume@i+1,??_find_volume+1
 15686  0101D6  3B82               	swapf	??_find_volume& (0+255),f,b
 15687  0101D8  3B83               	swapf	(??_find_volume+1)& (0+255),f,b
 15688  0101DA  0EF0               	movlw	240
 15689  0101DC  1783               	andwf	(??_find_volume+1)& (0+255),f,b
 15690  0101DE  5182               	movf	??_find_volume& (0+255),w,b
 15691  0101E0  0B0F               	andlw	15
 15692  0101E2  1383               	iorwf	(??_find_volume+1)& (0+255),f,b
 15693  0101E4  0EF0               	movlw	240
 15694  0101E6  1782               	andwf	??_find_volume& (0+255),f,b
 15695  0101E8  C0C2  F084         	movff	find_volume@fs,??_find_volume+2
 15696  0101EC  C0C3  F085         	movff	find_volume@fs+1,??_find_volume+3
 15697  0101F0  5182               	movf	??_find_volume& (0+255),w,b
 15698  0101F2  2784               	addwf	(??_find_volume+2)& (0+255),f,b
 15699  0101F4  5183               	movf	(??_find_volume+1)& (0+255),w,b
 15700  0101F6  2385               	addwfc	(??_find_volume+3)& (0+255),f,b
 15701  0101F8  0EF1               	movlw	241
 15702  0101FA  2584               	addwf	(??_find_volume+2)& (0+255),w,b
 15703  0101FC  6FA4               	movwf	find_volume@pt& (0+255),b
 15704  0101FE  0E01               	movlw	1
 15705  010200  2185               	addwfc	(??_find_volume+3)& (0+255),w,b
 15706  010202  6FA5               	movwf	(find_volume@pt+1)& (0+255),b
 15707  010204                     
 15708                           ; BSR set to: 0
 15709                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 15710  010204  EE20 F004          	lfsr	2,4
 15711  010208  51A4               	movf	find_volume@pt& (0+255),w,b
 15712  01020A  26D9               	addwf	fsr2l,f,c
 15713  01020C  51A5               	movf	(find_volume@pt+1)& (0+255),w,b
 15714  01020E  22DA               	addwfc	fsr2h,f,c
 15715  010210  50DF               	movf	indf2,w,c
 15716  010212  A4D8               	btfss	status,2,c
 15717  010214  EF0E  F081         	goto	u10641
 15718  010218  EF10  F081         	goto	u10640
 15719  01021C                     u10641:
 15720  01021C  EF1A  F081         	goto	l9209
 15721  010220                     u10640:
 15722  010220                     
 15723                           ; BSR set to: 0
 15724  010220  0E00               	movlw	0
 15725  010222  6F9A               	movwf	_find_volume$947& (0+255),b
 15726  010224  0E00               	movlw	0
 15727  010226  6F9B               	movwf	(_find_volume$947+1)& (0+255),b
 15728  010228  0E00               	movlw	0
 15729  01022A  6F9C               	movwf	(_find_volume$947+2)& (0+255),b
 15730  01022C  0E00               	movlw	0
 15731  01022E  6F9D               	movwf	(_find_volume$947+3)& (0+255),b
 15732  010230  EF2A  F081         	goto	l9211
 15733  010234                     l9209:
 15734                           
 15735                           ; BSR set to: 0
 15736  010234  0E08               	movlw	8
 15737  010236  25A4               	addwf	find_volume@pt& (0+255),w,b
 15738  010238  6E01               	movwf	ld_dword@ptr^0,c
 15739  01023A  0E00               	movlw	0
 15740  01023C  21A5               	addwfc	(find_volume@pt+1)& (0+255),w,b
 15741  01023E  6E02               	movwf	(ld_dword@ptr+1)^0,c
 15742  010240  ECF6  F0C8         	call	_ld_dword	;wreg free
 15743  010244  C001  F09A         	movff	?_ld_dword,_find_volume$947
 15744  010248  C002  F09B         	movff	?_ld_dword+1,_find_volume$947+1
 15745  01024C  C003  F09C         	movff	?_ld_dword+2,_find_volume$947+2
 15746  010250  C004  F09D         	movff	?_ld_dword+3,_find_volume$947+3
 15747  010254                     l9211:
 15748  010254  0E8A               	movlw	low find_volume@br
 15749  010256  0100               	movlb	0	; () banked
 15750  010258  6F82               	movwf	??_find_volume& (0+255),b
 15751  01025A  0E00               	movlw	high find_volume@br
 15752  01025C  6F83               	movwf	(??_find_volume+1)& (0+255),b
 15753  01025E  90D8               	bcf	status,0,c
 15754  010260  35BF               	rlcf	find_volume@i& (0+255),w,b
 15755  010262  6ED9               	movwf	fsr2l,c
 15756  010264  35C0               	rlcf	(find_volume@i+1)& (0+255),w,b
 15757  010266  6EDA               	movwf	fsr2h,c
 15758  010268  90D8               	bcf	status,0,c
 15759  01026A  36D9               	rlcf	fsr2l,f,c
 15760  01026C  36DA               	rlcf	fsr2h,f,c
 15761  01026E  5182               	movf	??_find_volume& (0+255),w,b
 15762  010270  26D9               	addwf	fsr2l,f,c
 15763  010272  5183               	movf	(??_find_volume+1)& (0+255),w,b
 15764  010274  22DA               	addwfc	fsr2h,f,c
 15765  010276  0060  F26B  FFDE   	movff	_find_volume$947,postinc2
 15766  01027C  0060  F26F  FFDE   	movff	_find_volume$947+1,postinc2
 15767  010282  0060  F273  FFDE   	movff	_find_volume$947+2,postinc2
 15768  010288  0060  F277  FFDE   	movff	_find_volume$947+3,postinc2
 15769  01028E                     
 15770                           ; BSR set to: 0
 15771                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 15772  01028E  4BBF               	infsnz	find_volume@i& (0+255),f,b
 15773  010290  2BC0               	incf	(find_volume@i+1)& (0+255),f,b
 15774  010292  EFDA  F080         	goto	l9199
 15775  010296                     l9217:
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 15779  010296  0E00               	movlw	0
 15780  010298  6FC0               	movwf	(find_volume@i+1)& (0+255),b
 15781  01029A  0E00               	movlw	0
 15782  01029C  6FBF               	movwf	find_volume@i& (0+255),b
 15783  01029E                     
 15784                           ; BSR set to: 0
 15785                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 15786  01029E  51BF               	movf	find_volume@i& (0+255),w,b
 15787  0102A0  11C0               	iorwf	(find_volume@i+1)& (0+255),w,b
 15788  0102A2  B4D8               	btfsc	status,2,c
 15789  0102A4  EF56  F081         	goto	u10651
 15790  0102A8  EF58  F081         	goto	u10650
 15791  0102AC                     u10651:
 15792  0102AC  EF5B  F081         	goto	l9223
 15793  0102B0                     u10650:
 15794  0102B0                     
 15795                           ; BSR set to: 0
 15796  0102B0  07BF               	decf	find_volume@i& (0+255),f,b
 15797  0102B2  A0D8               	btfss	status,0,c
 15798  0102B4  07C0               	decf	(find_volume@i+1)& (0+255),f,b
 15799  0102B6                     l9223:
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 15803  0102B6  0E8A               	movlw	low find_volume@br
 15804  0102B8  6F82               	movwf	??_find_volume& (0+255),b
 15805  0102BA  0E00               	movlw	high find_volume@br
 15806  0102BC  6F83               	movwf	(??_find_volume+1)& (0+255),b
 15807  0102BE  90D8               	bcf	status,0,c
 15808  0102C0  35BF               	rlcf	find_volume@i& (0+255),w,b
 15809  0102C2  6ED9               	movwf	fsr2l,c
 15810  0102C4  35C0               	rlcf	(find_volume@i+1)& (0+255),w,b
 15811  0102C6  6EDA               	movwf	fsr2h,c
 15812  0102C8  90D8               	bcf	status,0,c
 15813  0102CA  36D9               	rlcf	fsr2l,f,c
 15814  0102CC  36DA               	rlcf	fsr2h,f,c
 15815  0102CE  5182               	movf	??_find_volume& (0+255),w,b
 15816  0102D0  26D9               	addwf	fsr2l,f,c
 15817  0102D2  5183               	movf	(??_find_volume+1)& (0+255),w,b
 15818  0102D4  22DA               	addwfc	fsr2h,f,c
 15819  0102D6  006F FF78  F0BB    	movff	postinc2,find_volume@bsect
 15820  0102DC  006F FF78  F0BC    	movff	postinc2,find_volume@bsect+1
 15821  0102E2  006F FF78  F0BD    	movff	postinc2,find_volume@bsect+2
 15822  0102E8  006F FF78  F0BE    	movff	postinc2,find_volume@bsect+3
 15823  0102EE                     
 15824                           ; BSR set to: 0
 15825                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 15826  0102EE  51BB               	movf	find_volume@bsect& (0+255),w,b
 15827  0102F0  11BC               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 15828  0102F2  11BD               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 15829  0102F4  11BE               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 15830  0102F6  A4D8               	btfss	status,2,c
 15831  0102F8  EF80  F081         	goto	u10661
 15832  0102FC  EF82  F081         	goto	u10660
 15833  010300                     u10661:
 15834  010300  EF88  F081         	goto	l9229
 15835  010304                     u10660:
 15836  010304                     
 15837                           ; BSR set to: 0
 15838  010304  0E00               	movlw	0
 15839  010306  6F9F               	movwf	(_find_volume$948+1)& (0+255),b
 15840  010308  0E03               	movlw	3
 15841  01030A  6F9E               	movwf	_find_volume$948& (0+255),b
 15842  01030C  EF9B  F081         	goto	l9231
 15843  010310                     l9229:
 15844                           
 15845                           ; BSR set to: 0
 15846  010310  C0C2  F076         	movff	find_volume@fs,check_fs@fs
 15847  010314  C0C3  F077         	movff	find_volume@fs+1,check_fs@fs+1
 15848  010318  C0BB  F078         	movff	find_volume@bsect,check_fs@sect
 15849  01031C  C0BC  F079         	movff	find_volume@bsect+1,check_fs@sect+1
 15850  010320  C0BD  F07A         	movff	find_volume@bsect+2,check_fs@sect+2
 15851  010324  C0BE  F07B         	movff	find_volume@bsect+3,check_fs@sect+3
 15852  010328  EC61  F0BC         	call	_check_fs	;wreg free
 15853  01032C  0100               	movlb	0	; () banked
 15854  01032E  6F82               	movwf	??_find_volume& (0+255),b
 15855  010330  5182               	movf	??_find_volume& (0+255),w,b
 15856  010332  6F9E               	movwf	_find_volume$948& (0+255),b
 15857  010334  6B9F               	clrf	(_find_volume$948+1)& (0+255),b
 15858  010336                     l9231:
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 15862  010336  C09E  F0C1         	movff	_find_volume$948,find_volume@fmt
 15863  01033A                     
 15864                           ; BSR set to: 0
 15865  01033A  0E01               	movlw	1
 15866  01033C  65C1               	cpfsgt	find_volume@fmt& (0+255),b
 15867  01033E  EFA3  F081         	goto	u10671
 15868  010342  EFA5  F081         	goto	u10670
 15869  010346                     u10671:
 15870  010346  EFB2  F081         	goto	l9237
 15871  01034A                     u10670:
 15872  01034A                     
 15873                           ; BSR set to: 0
 15874  01034A  4BBF               	infsnz	find_volume@i& (0+255),f,b
 15875  01034C  2BC0               	incf	(find_volume@i+1)& (0+255),f,b
 15876  01034E  51C0               	movf	(find_volume@i+1)& (0+255),w,b
 15877  010350  E109               	bnz	u10680
 15878  010352  0E04               	movlw	4
 15879  010354  5DBF               	subwf	find_volume@i& (0+255),w,b
 15880  010356  A0D8               	btfss	status,0,c
 15881  010358  EFB0  F081         	goto	u10681
 15882  01035C  EFB2  F081         	goto	u10680
 15883  010360                     u10681:
 15884  010360  EF5B  F081         	goto	l9223
 15885  010364                     u10680:
 15886  010364                     l9237:
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 15890  010364  0E04               	movlw	4
 15891  010366  19C1               	xorwf	find_volume@fmt& (0+255),w,b
 15892  010368  A4D8               	btfss	status,2,c
 15893  01036A  EFB9  F081         	goto	u10691
 15894  01036E  EFBB  F081         	goto	u10690
 15895  010372                     u10691:
 15896  010372  EFBE  F081         	goto	l9243
 15897  010376                     u10690:
 15898  010376                     
 15899                           ; BSR set to: 0
 15900  010376  0E01               	movlw	1
 15901  010378  EFA6  F086         	goto	l416
 15902  01037C                     l9243:
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 15906  01037C  0E01               	movlw	1
 15907  01037E  65C1               	cpfsgt	find_volume@fmt& (0+255),b
 15908  010380  EFC4  F081         	goto	u10701
 15909  010384  EFC6  F081         	goto	u10700
 15910  010388                     u10701:
 15911  010388  EFC9  F081         	goto	l9249
 15912  01038C                     u10700:
 15913  01038C                     l9245:
 15914  01038C  0E0D               	movlw	13
 15915  01038E  EFA6  F086         	goto	l416
 15916  010392                     l9249:
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 15920  010392  0E3E               	movlw	62
 15921  010394  25C2               	addwf	find_volume@fs& (0+255),w,b
 15922  010396  6E01               	movwf	ld_word@ptr^0,c
 15923  010398  0E00               	movlw	0
 15924  01039A  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15925  01039C  6E02               	movwf	(ld_word@ptr+1)^0,c
 15926  01039E  EC5F  F0D2         	call	_ld_word	;wreg free
 15927  0103A2  0E02               	movlw	2
 15928  0103A4  1802               	xorwf	(?_ld_word+1)^0,w,c
 15929  0103A6  1001               	iorwf	?_ld_word^0,w,c
 15930  0103A8  B4D8               	btfsc	status,2,c
 15931  0103AA  EFD9  F081         	goto	u10711
 15932  0103AE  EFDB  F081         	goto	u10710
 15933  0103B2                     u10711:
 15934  0103B2  EFDD  F081         	goto	l9255
 15935  0103B6                     u10710:
 15936  0103B6  EFC6  F081         	goto	l9245
 15937  0103BA                     l9255:
 15938                           
 15939                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 15940  0103BA  0E49               	movlw	73
 15941  0103BC  0100               	movlb	0	; () banked
 15942  0103BE  25C2               	addwf	find_volume@fs& (0+255),w,b
 15943  0103C0  6E01               	movwf	ld_word@ptr^0,c
 15944  0103C2  0E00               	movlw	0
 15945  0103C4  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15946  0103C6  6E02               	movwf	(ld_word@ptr+1)^0,c
 15947  0103C8  EC5F  F0D2         	call	_ld_word	;wreg free
 15948  0103CC  C001  F0B7         	movff	?_ld_word,find_volume@fasize
 15949  0103D0  C002  F0B8         	movff	?_ld_word+1,find_volume@fasize+1
 15950  0103D4  0100               	movlb	0	; () banked
 15951  0103D6  6BB9               	clrf	(find_volume@fasize+2)& (0+255),b
 15952  0103D8  6BBA               	clrf	(find_volume@fasize+3)& (0+255),b
 15953  0103DA                     
 15954                           ; BSR set to: 0
 15955                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 15956  0103DA  51B7               	movf	find_volume@fasize& (0+255),w,b
 15957  0103DC  11B8               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 15958  0103DE  11B9               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 15959  0103E0  11BA               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 15960  0103E2  A4D8               	btfss	status,2,c
 15961  0103E4  EFF6  F081         	goto	u10721
 15962  0103E8  EFF8  F081         	goto	u10720
 15963  0103EC                     u10721:
 15964  0103EC  EF08  F082         	goto	l9261
 15965  0103F0                     u10720:
 15966  0103F0                     
 15967                           ; BSR set to: 0
 15968  0103F0  0E57               	movlw	87
 15969  0103F2  25C2               	addwf	find_volume@fs& (0+255),w,b
 15970  0103F4  6E01               	movwf	ld_dword@ptr^0,c
 15971  0103F6  0E00               	movlw	0
 15972  0103F8  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 15973  0103FA  6E02               	movwf	(ld_dword@ptr+1)^0,c
 15974  0103FC  ECF6  F0C8         	call	_ld_dword	;wreg free
 15975  010400  C001  F0B7         	movff	?_ld_dword,find_volume@fasize
 15976  010404  C002  F0B8         	movff	?_ld_dword+1,find_volume@fasize+1
 15977  010408  C003  F0B9         	movff	?_ld_dword+2,find_volume@fasize+2
 15978  01040C  C004  F0BA         	movff	?_ld_dword+3,find_volume@fasize+3
 15979  010410                     l9261:
 15980                           
 15981                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 15982  010410  0100               	movlb	0	; () banked
 15983  010412  EE20 F01B          	lfsr	2,27
 15984  010416  51C2               	movf	find_volume@fs& (0+255),w,b
 15985  010418  26D9               	addwf	fsr2l,f,c
 15986  01041A  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 15987  01041C  22DA               	addwfc	fsr2h,f,c
 15988  01041E  0060  F2DF  FFDE   	movff	find_volume@fasize,postinc2
 15989  010424  0060  F2E3  FFDE   	movff	find_volume@fasize+1,postinc2
 15990  01042A  0060  F2E7  FFDE   	movff	find_volume@fasize+2,postinc2
 15991  010430  0060  F2EB  FFDE   	movff	find_volume@fasize+3,postinc2
 15992  010436                     
 15993                           ; BSR set to: 0
 15994                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 15995  010436  EE20 F043          	lfsr	2,67
 15996  01043A  51C2               	movf	find_volume@fs& (0+255),w,b
 15997  01043C  26D9               	addwf	fsr2l,f,c
 15998  01043E  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 15999  010440  22DA               	addwfc	fsr2h,f,c
 16000  010442  EE10 F002          	lfsr	1,2
 16001  010446  51C2               	movf	find_volume@fs& (0+255),w,b
 16002  010448  26E1               	addwf	fsr1l,f,c
 16003  01044A  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16004  01044C  22E2               	addwfc	fsr1h,f,c
 16005  01044E  006F FF7F FFE7     	movff	indf2,indf1
 16006  010454                     
 16007                           ; BSR set to: 0
 16008                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 16009  010454  EE20 F002          	lfsr	2,2
 16010  010458  51C2               	movf	find_volume@fs& (0+255),w,b
 16011  01045A  26D9               	addwf	fsr2l,f,c
 16012  01045C  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16013  01045E  22DA               	addwfc	fsr2h,f,c
 16014  010460  04DE               	decf	postinc2,w,c
 16015  010462  B4D8               	btfsc	status,2,c
 16016  010464  EF36  F082         	goto	u10731
 16017  010468  EF38  F082         	goto	u10730
 16018  01046C                     u10731:
 16019  01046C  EF49  F082         	goto	l9273
 16020  010470                     u10730:
 16021  010470                     
 16022                           ; BSR set to: 0
 16023  010470  EE20 F002          	lfsr	2,2
 16024  010474  51C2               	movf	find_volume@fs& (0+255),w,b
 16025  010476  26D9               	addwf	fsr2l,f,c
 16026  010478  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16027  01047A  22DA               	addwfc	fsr2h,f,c
 16028  01047C  0E02               	movlw	2
 16029  01047E  18DE               	xorwf	postinc2,w,c
 16030  010480  B4D8               	btfsc	status,2,c
 16031  010482  EF45  F082         	goto	u10741
 16032  010486  EF47  F082         	goto	u10740
 16033  01048A                     u10741:
 16034  01048A  EF49  F082         	goto	l9273
 16035  01048E                     u10740:
 16036  01048E  EFC6  F081         	goto	l9245
 16037  010492                     l9273:
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 16041  010492  C0B7  F001         	movff	find_volume@fasize,___lmul@multiplier
 16042  010496  C0B8  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
 16043  01049A  C0B9  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
 16044  01049E  C0BA  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
 16045  0104A2  EE20 F002          	lfsr	2,2
 16046  0104A6  51C2               	movf	find_volume@fs& (0+255),w,b
 16047  0104A8  26D9               	addwf	fsr2l,f,c
 16048  0104AA  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16049  0104AC  22DA               	addwfc	fsr2h,f,c
 16050  0104AE  50DF               	movf	indf2,w,c
 16051  0104B0  6F82               	movwf	??_find_volume& (0+255),b
 16052  0104B2  5182               	movf	??_find_volume& (0+255),w,b
 16053  0104B4  6E05               	movwf	___lmul@multiplicand^0,c
 16054  0104B6  6A06               	clrf	(___lmul@multiplicand+1)^0,c
 16055  0104B8  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 16056  0104BA  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 16057  0104BC  ECE3  F0CE         	call	___lmul	;wreg free
 16058  0104C0  C001  F0B7         	movff	?___lmul,find_volume@fasize
 16059  0104C4  C002  F0B8         	movff	?___lmul+1,find_volume@fasize+1
 16060  0104C8  C003  F0B9         	movff	?___lmul+2,find_volume@fasize+2
 16061  0104CC  C004  F0BA         	movff	?___lmul+3,find_volume@fasize+3
 16062  0104D0                     
 16063                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 16064  0104D0  0100               	movlb	0	; () banked
 16065  0104D2  EE20 F040          	lfsr	2,64
 16066  0104D6  51C2               	movf	find_volume@fs& (0+255),w,b
 16067  0104D8  26D9               	addwf	fsr2l,f,c
 16068  0104DA  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16069  0104DC  22DA               	addwfc	fsr2h,f,c
 16070  0104DE  50DF               	movf	indf2,w,c
 16071  0104E0  6F82               	movwf	??_find_volume& (0+255),b
 16072  0104E2  6B83               	clrf	(??_find_volume+1)& (0+255),b
 16073  0104E4  EE20 F009          	lfsr	2,9
 16074  0104E8  51C2               	movf	find_volume@fs& (0+255),w,b
 16075  0104EA  26D9               	addwf	fsr2l,f,c
 16076  0104EC  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16077  0104EE  22DA               	addwfc	fsr2h,f,c
 16078  0104F0  0060  F20B  FFDE   	movff	??_find_volume,postinc2
 16079  0104F6  0060  F20F  FFDD   	movff	??_find_volume+1,postdec2
 16080  0104FC                     
 16081                           ; BSR set to: 0
 16082                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 16083  0104FC  EE20 F009          	lfsr	2,9
 16084  010500  51C2               	movf	find_volume@fs& (0+255),w,b
 16085  010502  26D9               	addwf	fsr2l,f,c
 16086  010504  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16087  010506  22DA               	addwfc	fsr2h,f,c
 16088  010508  50DE               	movf	postinc2,w,c
 16089  01050A  10DE               	iorwf	postinc2,w,c
 16090  01050C  B4D8               	btfsc	status,2,c
 16091  01050E  EF8B  F082         	goto	u10751
 16092  010512  EF8D  F082         	goto	u10750
 16093  010516                     u10751:
 16094  010516  EFC6  F081         	goto	l9245
 16095  01051A                     u10750:
 16096  01051A                     
 16097                           ; BSR set to: 0
 16098  01051A  EE20 F009          	lfsr	2,9
 16099  01051E  51C2               	movf	find_volume@fs& (0+255),w,b
 16100  010520  26D9               	addwf	fsr2l,f,c
 16101  010522  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16102  010524  22DA               	addwfc	fsr2h,f,c
 16103  010526  006F FF78  F082    	movff	postinc2,??_find_volume
 16104  01052C  006F FF74  F083    	movff	postdec2,??_find_volume+1
 16105  010532  0EFF               	movlw	255
 16106  010534  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16107  010536  0EFF               	movlw	255
 16108  010538  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16109  01053A  EE20 F009          	lfsr	2,9
 16110  01053E  51C2               	movf	find_volume@fs& (0+255),w,b
 16111  010540  26D9               	addwf	fsr2l,f,c
 16112  010542  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16113  010544  22DA               	addwfc	fsr2h,f,c
 16114  010546  006F FF78  F086    	movff	postinc2,??_find_volume+4
 16115  01054C  006F FF74  F087    	movff	postdec2,??_find_volume+5
 16116  010552  5184               	movf	(??_find_volume+2)& (0+255),w,b
 16117  010554  2786               	addwf	(??_find_volume+4)& (0+255),f,b
 16118  010556  5185               	movf	(??_find_volume+3)& (0+255),w,b
 16119  010558  2387               	addwfc	(??_find_volume+5)& (0+255),f,b
 16120  01055A  5182               	movf	??_find_volume& (0+255),w,b
 16121  01055C  1786               	andwf	(??_find_volume+4)& (0+255),f,b
 16122  01055E  5183               	movf	(??_find_volume+1)& (0+255),w,b
 16123  010560  1787               	andwf	(??_find_volume+5)& (0+255),f,b
 16124  010562  5186               	movf	(??_find_volume+4)& (0+255),w,b
 16125  010564  1187               	iorwf	(??_find_volume+5)& (0+255),w,b
 16126  010566  B4D8               	btfsc	status,2,c
 16127  010568  EFB8  F082         	goto	u10761
 16128  01056C  EFBA  F082         	goto	u10760
 16129  010570                     u10761:
 16130  010570  EFBC  F082         	goto	l9285
 16131  010574                     u10760:
 16132  010574  EFC6  F081         	goto	l9245
 16133  010578                     l9285:
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 16137  010578  0E44               	movlw	68
 16138  01057A  25C2               	addwf	find_volume@fs& (0+255),w,b
 16139  01057C  6E01               	movwf	ld_word@ptr^0,c
 16140  01057E  0E00               	movlw	0
 16141  010580  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16142  010582  6E02               	movwf	(ld_word@ptr+1)^0,c
 16143  010584  EC5F  F0D2         	call	_ld_word	;wreg free
 16144  010588  0100               	movlb	0	; () banked
 16145  01058A  EE20 F007          	lfsr	2,7
 16146  01058E  51C2               	movf	find_volume@fs& (0+255),w,b
 16147  010590  26D9               	addwf	fsr2l,f,c
 16148  010592  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16149  010594  22DA               	addwfc	fsr2h,f,c
 16150  010596  0060  F007  FFDE   	movff	?_ld_word,postinc2
 16151  01059C  0060  F00B  FFDD   	movff	?_ld_word+1,postdec2
 16152  0105A2                     
 16153                           ; BSR set to: 0
 16154                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 16155  0105A2  EE20 F007          	lfsr	2,7
 16156  0105A6  51C2               	movf	find_volume@fs& (0+255),w,b
 16157  0105A8  26D9               	addwf	fsr2l,f,c
 16158  0105AA  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16159  0105AC  22DA               	addwfc	fsr2h,f,c
 16160  0105AE  006F FF78  F082    	movff	postinc2,??_find_volume
 16161  0105B4  006F FF74  F083    	movff	postdec2,??_find_volume+1
 16162  0105BA  0E0F               	movlw	15
 16163  0105BC  1782               	andwf	??_find_volume& (0+255),f,b
 16164  0105BE  0E00               	movlw	0
 16165  0105C0  1783               	andwf	(??_find_volume+1)& (0+255),f,b
 16166  0105C2  5182               	movf	??_find_volume& (0+255),w,b
 16167  0105C4  1183               	iorwf	(??_find_volume+1)& (0+255),w,b
 16168  0105C6  B4D8               	btfsc	status,2,c
 16169  0105C8  EFE8  F082         	goto	u10771
 16170  0105CC  EFEA  F082         	goto	u10770
 16171  0105D0                     u10771:
 16172  0105D0  EFEC  F082         	goto	l9293
 16173  0105D4                     u10770:
 16174  0105D4  EFC6  F081         	goto	l9245
 16175  0105D8                     l9293:
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 16179  0105D8  0E46               	movlw	70
 16180  0105DA  25C2               	addwf	find_volume@fs& (0+255),w,b
 16181  0105DC  6E01               	movwf	ld_word@ptr^0,c
 16182  0105DE  0E00               	movlw	0
 16183  0105E0  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16184  0105E2  6E02               	movwf	(ld_word@ptr+1)^0,c
 16185  0105E4  EC5F  F0D2         	call	_ld_word	;wreg free
 16186  0105E8  C001  F0AE         	movff	?_ld_word,find_volume@tsect
 16187  0105EC  C002  F0AF         	movff	?_ld_word+1,find_volume@tsect+1
 16188  0105F0  0100               	movlb	0	; () banked
 16189  0105F2  6BB0               	clrf	(find_volume@tsect+2)& (0+255),b
 16190  0105F4  6BB1               	clrf	(find_volume@tsect+3)& (0+255),b
 16191  0105F6                     
 16192                           ; BSR set to: 0
 16193                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 16194  0105F6  51AE               	movf	find_volume@tsect& (0+255),w,b
 16195  0105F8  11AF               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 16196  0105FA  11B0               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 16197  0105FC  11B1               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 16198  0105FE  A4D8               	btfss	status,2,c
 16199  010600  EF04  F083         	goto	u10781
 16200  010604  EF06  F083         	goto	u10780
 16201  010608                     u10781:
 16202  010608  EF16  F083         	goto	l450
 16203  01060C                     u10780:
 16204  01060C                     
 16205                           ; BSR set to: 0
 16206  01060C  0E53               	movlw	83
 16207  01060E  25C2               	addwf	find_volume@fs& (0+255),w,b
 16208  010610  6E01               	movwf	ld_dword@ptr^0,c
 16209  010612  0E00               	movlw	0
 16210  010614  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16211  010616  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16212  010618  ECF6  F0C8         	call	_ld_dword	;wreg free
 16213  01061C  C001  F0AE         	movff	?_ld_dword,find_volume@tsect
 16214  010620  C002  F0AF         	movff	?_ld_dword+1,find_volume@tsect+1
 16215  010624  C003  F0B0         	movff	?_ld_dword+2,find_volume@tsect+2
 16216  010628  C004  F0B1         	movff	?_ld_dword+3,find_volume@tsect+3
 16217  01062C                     l450:
 16218                           
 16219                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 16220  01062C  0E41               	movlw	65
 16221  01062E  0100               	movlb	0	; () banked
 16222  010630  25C2               	addwf	find_volume@fs& (0+255),w,b
 16223  010632  6E01               	movwf	ld_word@ptr^0,c
 16224  010634  0E00               	movlw	0
 16225  010636  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16226  010638  6E02               	movwf	(ld_word@ptr+1)^0,c
 16227  01063A  EC5F  F0D2         	call	_ld_word	;wreg free
 16228  01063E  C001  F0AC         	movff	?_ld_word,find_volume@nrsv
 16229  010642  C002  F0AD         	movff	?_ld_word+1,find_volume@nrsv+1
 16230  010646                     
 16231                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 16232  010646  0100               	movlb	0	; () banked
 16233  010648  51AC               	movf	find_volume@nrsv& (0+255),w,b
 16234  01064A  11AD               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 16235  01064C  A4D8               	btfss	status,2,c
 16236  01064E  EF2B  F083         	goto	u10791
 16237  010652  EF2D  F083         	goto	u10790
 16238  010656                     u10791:
 16239  010656  EF2F  F083         	goto	l9305
 16240  01065A                     u10790:
 16241  01065A  EFC6  F081         	goto	l9245
 16242  01065E                     l9305:
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 16246  01065E  EE20 F007          	lfsr	2,7
 16247  010662  51C2               	movf	find_volume@fs& (0+255),w,b
 16248  010664  26D9               	addwf	fsr2l,f,c
 16249  010666  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16250  010668  22DA               	addwfc	fsr2h,f,c
 16251  01066A  006F FF78  F082    	movff	postinc2,??_find_volume
 16252  010670  006F FF74  F083    	movff	postdec2,??_find_volume+1
 16253  010676  0E04               	movlw	4
 16254  010678  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16255  01067A                     u10805:
 16256  01067A  90D8               	bcf	status,0,c
 16257  01067C  3383               	rrcf	(??_find_volume+1)& (0+255),f,b
 16258  01067E  3382               	rrcf	??_find_volume& (0+255),f,b
 16259  010680  2F84               	decfsz	(??_find_volume+2)& (0+255),f,b
 16260  010682  EF3D  F083         	goto	u10805
 16261  010686  51AC               	movf	find_volume@nrsv& (0+255),w,b
 16262  010688  2582               	addwf	??_find_volume& (0+255),w,b
 16263  01068A  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16264  01068C  51AD               	movf	(find_volume@nrsv+1)& (0+255),w,b
 16265  01068E  2183               	addwfc	(??_find_volume+1)& (0+255),w,b
 16266  010690  6F86               	movwf	(??_find_volume+4)& (0+255),b
 16267  010692  6B87               	clrf	(??_find_volume+5)& (0+255),b
 16268  010694  B0D8               	btfsc	status,0,c
 16269  010696  2B87               	incf	(??_find_volume+5)& (0+255),f,b
 16270  010698  6B88               	clrf	(??_find_volume+6)& (0+255),b
 16271  01069A  51B7               	movf	find_volume@fasize& (0+255),w,b
 16272  01069C  2585               	addwf	(??_find_volume+3)& (0+255),w,b
 16273  01069E  6FA6               	movwf	find_volume@sysect& (0+255),b
 16274  0106A0  51B8               	movf	(find_volume@fasize+1)& (0+255),w,b
 16275  0106A2  2186               	addwfc	(??_find_volume+4)& (0+255),w,b
 16276  0106A4  6FA7               	movwf	(find_volume@sysect+1)& (0+255),b
 16277  0106A6  51B9               	movf	(find_volume@fasize+2)& (0+255),w,b
 16278  0106A8  2187               	addwfc	(??_find_volume+5)& (0+255),w,b
 16279  0106AA  6FA8               	movwf	(find_volume@sysect+2)& (0+255),b
 16280  0106AC  51BA               	movf	(find_volume@fasize+3)& (0+255),w,b
 16281  0106AE  2188               	addwfc	(??_find_volume+6)& (0+255),w,b
 16282  0106B0  6FA9               	movwf	(find_volume@sysect+3)& (0+255),b
 16283  0106B2                     
 16284                           ; BSR set to: 0
 16285                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 16286  0106B2  51A6               	movf	find_volume@sysect& (0+255),w,b
 16287  0106B4  5DAE               	subwf	find_volume@tsect& (0+255),w,b
 16288  0106B6  51A7               	movf	(find_volume@sysect+1)& (0+255),w,b
 16289  0106B8  59AF               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 16290  0106BA  51A8               	movf	(find_volume@sysect+2)& (0+255),w,b
 16291  0106BC  59B0               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 16292  0106BE  51A9               	movf	(find_volume@sysect+3)& (0+255),w,b
 16293  0106C0  59B1               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 16294  0106C2  B0D8               	btfsc	status,0,c
 16295  0106C4  EF66  F083         	goto	u10811
 16296  0106C8  EF68  F083         	goto	u10810
 16297  0106CC                     u10811:
 16298  0106CC  EF6A  F083         	goto	l9313
 16299  0106D0                     u10810:
 16300  0106D0  EFC6  F081         	goto	l9245
 16301  0106D4                     l9313:
 16302                           
 16303                           ; BSR set to: 0
 16304                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 16305  0106D4  51A6               	movf	find_volume@sysect& (0+255),w,b
 16306  0106D6  5DAE               	subwf	find_volume@tsect& (0+255),w,b
 16307  0106D8  6E01               	movwf	___lldiv@dividend^0,c
 16308  0106DA  51A7               	movf	(find_volume@sysect+1)& (0+255),w,b
 16309  0106DC  59AF               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 16310  0106DE  6E02               	movwf	(___lldiv@dividend+1)^0,c
 16311  0106E0  51A8               	movf	(find_volume@sysect+2)& (0+255),w,b
 16312  0106E2  59B0               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 16313  0106E4  6E03               	movwf	(___lldiv@dividend+2)^0,c
 16314  0106E6  51A9               	movf	(find_volume@sysect+3)& (0+255),w,b
 16315  0106E8  59B1               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 16316  0106EA  6E04               	movwf	(___lldiv@dividend+3)^0,c
 16317  0106EC  EE20 F009          	lfsr	2,9
 16318  0106F0  51C2               	movf	find_volume@fs& (0+255),w,b
 16319  0106F2  26D9               	addwf	fsr2l,f,c
 16320  0106F4  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16321  0106F6  22DA               	addwfc	fsr2h,f,c
 16322  0106F8  006F FF78  F082    	movff	postinc2,??_find_volume
 16323  0106FE  006F FF74  F083    	movff	postdec2,??_find_volume+1
 16324  010704  C082  F005         	movff	??_find_volume,___lldiv@divisor
 16325  010708  C083  F006         	movff	??_find_volume+1,___lldiv@divisor+1
 16326  01070C  6A07               	clrf	(___lldiv@divisor+2)^0,c
 16327  01070E  6A08               	clrf	(___lldiv@divisor+3)^0,c
 16328  010710  ECFC  F0C9         	call	___lldiv	;wreg free
 16329  010714  C001  F0B3         	movff	?___lldiv,find_volume@nclst
 16330  010718  C002  F0B4         	movff	?___lldiv+1,find_volume@nclst+1
 16331  01071C  C003  F0B5         	movff	?___lldiv+2,find_volume@nclst+2
 16332  010720  C004  F0B6         	movff	?___lldiv+3,find_volume@nclst+3
 16333  010724                     
 16334                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 16335  010724  0100               	movlb	0	; () banked
 16336  010726  51B3               	movf	find_volume@nclst& (0+255),w,b
 16337  010728  11B4               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 16338  01072A  11B5               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16339  01072C  11B6               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 16340  01072E  A4D8               	btfss	status,2,c
 16341  010730  EF9C  F083         	goto	u10821
 16342  010734  EF9E  F083         	goto	u10820
 16343  010738                     u10821:
 16344  010738  EFA0  F083         	goto	l9321
 16345  01073C                     u10820:
 16346  01073C  EFC6  F081         	goto	l9245
 16347  010740                     l9321:
 16348                           
 16349                           ; BSR set to: 0
 16350                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 16351  010740  0E00               	movlw	0
 16352  010742  6FC1               	movwf	find_volume@fmt& (0+255),b
 16353  010744                     
 16354                           ; BSR set to: 0
 16355                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 16356  010744  0EF6               	movlw	246
 16357  010746  5DB3               	subwf	find_volume@nclst& (0+255),w,b
 16358  010748  0EFF               	movlw	255
 16359  01074A  59B4               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16360  01074C  0EFF               	movlw	255
 16361  01074E  59B5               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 16362  010750  0E0F               	movlw	15
 16363  010752  59B6               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 16364  010754  B0D8               	btfsc	status,0,c
 16365  010756  EFAF  F083         	goto	u10831
 16366  01075A  EFB1  F083         	goto	u10830
 16367  01075E                     u10831:
 16368  01075E  EFB3  F083         	goto	l9327
 16369  010762                     u10830:
 16370  010762                     
 16371                           ; BSR set to: 0
 16372  010762  0E03               	movlw	3
 16373  010764  6FC1               	movwf	find_volume@fmt& (0+255),b
 16374  010766                     l9327:
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 16378  010766  51B6               	movf	(find_volume@nclst+3)& (0+255),w,b
 16379  010768  11B5               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16380  01076A  E109               	bnz	u10841
 16381  01076C  0EF6               	movlw	246
 16382  01076E  5DB3               	subwf	find_volume@nclst& (0+255),w,b
 16383  010770  0EFF               	movlw	255
 16384  010772  59B4               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16385  010774  B0D8               	btfsc	status,0,c
 16386  010776  EFBF  F083         	goto	u10841
 16387  01077A  EFC1  F083         	goto	u10840
 16388  01077E                     u10841:
 16389  01077E  EFC3  F083         	goto	l9331
 16390  010782                     u10840:
 16391  010782                     
 16392                           ; BSR set to: 0
 16393  010782  0E02               	movlw	2
 16394  010784  6FC1               	movwf	find_volume@fmt& (0+255),b
 16395  010786                     l9331:
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 16399  010786  51B6               	movf	(find_volume@nclst+3)& (0+255),w,b
 16400  010788  11B5               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 16401  01078A  E109               	bnz	u10851
 16402  01078C  0EF6               	movlw	246
 16403  01078E  5DB3               	subwf	find_volume@nclst& (0+255),w,b
 16404  010790  0E0F               	movlw	15
 16405  010792  59B4               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 16406  010794  B0D8               	btfsc	status,0,c
 16407  010796  EFCF  F083         	goto	u10851
 16408  01079A  EFD1  F083         	goto	u10850
 16409  01079E                     u10851:
 16410  01079E  EFD3  F083         	goto	l456
 16411  0107A2                     u10850:
 16412  0107A2                     
 16413                           ; BSR set to: 0
 16414  0107A2  0E01               	movlw	1
 16415  0107A4  6FC1               	movwf	find_volume@fmt& (0+255),b
 16416  0107A6                     l456:
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 16420  0107A6  51C1               	movf	find_volume@fmt& (0+255),w,b
 16421  0107A8  A4D8               	btfss	status,2,c
 16422  0107AA  EFD9  F083         	goto	u10861
 16423  0107AE  EFDB  F083         	goto	u10860
 16424  0107B2                     u10861:
 16425  0107B2  EFDD  F083         	goto	l9339
 16426  0107B6                     u10860:
 16427  0107B6  EFC6  F081         	goto	l9245
 16428  0107BA                     l9339:
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 16432  0107BA  0E02               	movlw	2
 16433  0107BC  25B3               	addwf	find_volume@nclst& (0+255),w,b
 16434  0107BE  6F82               	movwf	??_find_volume& (0+255),b
 16435  0107C0  0E00               	movlw	0
 16436  0107C2  21B4               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 16437  0107C4  6F83               	movwf	(??_find_volume+1)& (0+255),b
 16438  0107C6  0E00               	movlw	0
 16439  0107C8  21B5               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 16440  0107CA  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16441  0107CC  0E00               	movlw	0
 16442  0107CE  21B6               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 16443  0107D0  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16444  0107D2  EE20 F017          	lfsr	2,23
 16445  0107D6  51C2               	movf	find_volume@fs& (0+255),w,b
 16446  0107D8  26D9               	addwf	fsr2l,f,c
 16447  0107DA  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16448  0107DC  22DA               	addwfc	fsr2h,f,c
 16449  0107DE  0060  F20B  FFDE   	movff	??_find_volume,postinc2
 16450  0107E4  0060  F20F  FFDE   	movff	??_find_volume+1,postinc2
 16451  0107EA  0060  F213  FFDE   	movff	??_find_volume+2,postinc2
 16452  0107F0  0060  F217  FFDE   	movff	??_find_volume+3,postinc2
 16453                           
 16454                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 16455  0107F6  EE20 F01F          	lfsr	2,31
 16456  0107FA  51C2               	movf	find_volume@fs& (0+255),w,b
 16457  0107FC  26D9               	addwf	fsr2l,f,c
 16458  0107FE  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16459  010800  22DA               	addwfc	fsr2h,f,c
 16460  010802  0060  F2EF  FFDE   	movff	find_volume@bsect,postinc2
 16461  010808  0060  F2F3  FFDE   	movff	find_volume@bsect+1,postinc2
 16462  01080E  0060  F2F7  FFDE   	movff	find_volume@bsect+2,postinc2
 16463  010814  0060  F2FB  FFDE   	movff	find_volume@bsect+3,postinc2
 16464                           
 16465                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 16466  01081A  51AC               	movf	find_volume@nrsv& (0+255),w,b
 16467  01081C  25BB               	addwf	find_volume@bsect& (0+255),w,b
 16468  01081E  6F82               	movwf	??_find_volume& (0+255),b
 16469  010820  51AD               	movf	(find_volume@nrsv+1)& (0+255),w,b
 16470  010822  21BC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16471  010824  6F83               	movwf	(??_find_volume+1)& (0+255),b
 16472  010826  0E00               	movlw	0
 16473  010828  21BD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16474  01082A  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16475  01082C  0E00               	movlw	0
 16476  01082E  21BE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16477  010830  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16478  010832  EE20 F023          	lfsr	2,35
 16479  010836  51C2               	movf	find_volume@fs& (0+255),w,b
 16480  010838  26D9               	addwf	fsr2l,f,c
 16481  01083A  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16482  01083C  22DA               	addwfc	fsr2h,f,c
 16483  01083E  0060  F20B  FFDE   	movff	??_find_volume,postinc2
 16484  010844  0060  F20F  FFDE   	movff	??_find_volume+1,postinc2
 16485  01084A  0060  F213  FFDE   	movff	??_find_volume+2,postinc2
 16486  010850  0060  F217  FFDE   	movff	??_find_volume+3,postinc2
 16487                           
 16488                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 16489  010856  51A6               	movf	find_volume@sysect& (0+255),w,b
 16490  010858  25BB               	addwf	find_volume@bsect& (0+255),w,b
 16491  01085A  6F82               	movwf	??_find_volume& (0+255),b
 16492  01085C  51A7               	movf	(find_volume@sysect+1)& (0+255),w,b
 16493  01085E  21BC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16494  010860  6F83               	movwf	(??_find_volume+1)& (0+255),b
 16495  010862  51A8               	movf	(find_volume@sysect+2)& (0+255),w,b
 16496  010864  21BD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16497  010866  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16498  010868  51A9               	movf	(find_volume@sysect+3)& (0+255),w,b
 16499  01086A  21BE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16500  01086C  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16501  01086E  EE20 F02B          	lfsr	2,43
 16502  010872  51C2               	movf	find_volume@fs& (0+255),w,b
 16503  010874  26D9               	addwf	fsr2l,f,c
 16504  010876  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16505  010878  22DA               	addwfc	fsr2h,f,c
 16506  01087A  0060  F20B  FFDE   	movff	??_find_volume,postinc2
 16507  010880  0060  F20F  FFDE   	movff	??_find_volume+1,postinc2
 16508  010886  0060  F213  FFDE   	movff	??_find_volume+2,postinc2
 16509  01088C  0060  F217  FFDE   	movff	??_find_volume+3,postinc2
 16510  010892                     
 16511                           ; BSR set to: 0
 16512                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 16513  010892  0E03               	movlw	3
 16514  010894  19C1               	xorwf	find_volume@fmt& (0+255),w,b
 16515  010896  A4D8               	btfss	status,2,c
 16516  010898  EF50  F084         	goto	u10871
 16517  01089C  EF52  F084         	goto	u10870
 16518  0108A0                     u10871:
 16519  0108A0  EFB7  F084         	goto	l9359
 16520  0108A4                     u10870:
 16521  0108A4                     
 16522                           ; BSR set to: 0
 16523                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 16524  0108A4  0E5D               	movlw	93
 16525  0108A6  25C2               	addwf	find_volume@fs& (0+255),w,b
 16526  0108A8  6E01               	movwf	ld_word@ptr^0,c
 16527  0108AA  0E00               	movlw	0
 16528  0108AC  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16529  0108AE  6E02               	movwf	(ld_word@ptr+1)^0,c
 16530  0108B0  EC5F  F0D2         	call	_ld_word	;wreg free
 16531  0108B4  5001               	movf	?_ld_word^0,w,c
 16532  0108B6  1002               	iorwf	(?_ld_word+1)^0,w,c
 16533  0108B8  B4D8               	btfsc	status,2,c
 16534  0108BA  EF61  F084         	goto	u10881
 16535  0108BE  EF63  F084         	goto	u10880
 16536  0108C2                     u10881:
 16537  0108C2  EF65  F084         	goto	l9349
 16538  0108C6                     u10880:
 16539  0108C6  EFC6  F081         	goto	l9245
 16540  0108CA                     l9349:
 16541                           
 16542                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 16543  0108CA  0100               	movlb	0	; () banked
 16544  0108CC  EE20 F007          	lfsr	2,7
 16545  0108D0  51C2               	movf	find_volume@fs& (0+255),w,b
 16546  0108D2  26D9               	addwf	fsr2l,f,c
 16547  0108D4  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16548  0108D6  22DA               	addwfc	fsr2h,f,c
 16549  0108D8  50DE               	movf	postinc2,w,c
 16550  0108DA  10DE               	iorwf	postinc2,w,c
 16551  0108DC  B4D8               	btfsc	status,2,c
 16552  0108DE  EF73  F084         	goto	u10891
 16553  0108E2  EF75  F084         	goto	u10890
 16554  0108E6                     u10891:
 16555  0108E6  EF77  F084         	goto	l9355
 16556  0108EA                     u10890:
 16557  0108EA  EFC6  F081         	goto	l9245
 16558  0108EE                     l9355:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 16562  0108EE  0E5F               	movlw	95
 16563  0108F0  25C2               	addwf	find_volume@fs& (0+255),w,b
 16564  0108F2  6E01               	movwf	ld_dword@ptr^0,c
 16565  0108F4  0E00               	movlw	0
 16566  0108F6  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16567  0108F8  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16568  0108FA  ECF6  F0C8         	call	_ld_dword	;wreg free
 16569  0108FE  0100               	movlb	0	; () banked
 16570  010900  EE20 F027          	lfsr	2,39
 16571  010904  51C2               	movf	find_volume@fs& (0+255),w,b
 16572  010906  26D9               	addwf	fsr2l,f,c
 16573  010908  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16574  01090A  22DA               	addwfc	fsr2h,f,c
 16575  01090C  0060  F007  FFDE   	movff	?_ld_dword,postinc2
 16576  010912  0060  F00B  FFDE   	movff	?_ld_dword+1,postinc2
 16577  010918  0060  F00F  FFDE   	movff	?_ld_dword+2,postinc2
 16578  01091E  0060  F013  FFDE   	movff	?_ld_dword+3,postinc2
 16579  010924                     
 16580                           ; BSR set to: 0
 16581                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 16582  010924  EE20 F017          	lfsr	2,23
 16583  010928  51C2               	movf	find_volume@fs& (0+255),w,b
 16584  01092A  26D9               	addwf	fsr2l,f,c
 16585  01092C  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16586  01092E  22DA               	addwfc	fsr2h,f,c
 16587  010930  006F FF78  F082    	movff	postinc2,??_find_volume
 16588  010936  006F FF78  F083    	movff	postinc2,??_find_volume+1
 16589  01093C  006F FF78  F084    	movff	postinc2,??_find_volume+2
 16590  010942  006F FF78  F085    	movff	postinc2,??_find_volume+3
 16591  010948  0E02               	movlw	2
 16592  01094A                     u10905:
 16593  01094A  90D8               	bcf	status,0,c
 16594  01094C  3782               	rlcf	??_find_volume& (0+255),f,b
 16595  01094E  3783               	rlcf	(??_find_volume+1)& (0+255),f,b
 16596  010950  3784               	rlcf	(??_find_volume+2)& (0+255),f,b
 16597  010952  3785               	rlcf	(??_find_volume+3)& (0+255),f,b
 16598  010954  2EE8               	decfsz	wreg,f,c
 16599  010956  EFA5  F084         	goto	u10905
 16600  01095A  C082  F0A0         	movff	??_find_volume,find_volume@szbfat
 16601  01095E  C083  F0A1         	movff	??_find_volume+1,find_volume@szbfat+1
 16602  010962  C084  F0A2         	movff	??_find_volume+2,find_volume@szbfat+2
 16603  010966  C085  F0A3         	movff	??_find_volume+3,find_volume@szbfat+3
 16604                           
 16605                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 16606  01096A  EF6A  F085         	goto	l461
 16607  01096E                     l9359:
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 16611  01096E  EE20 F007          	lfsr	2,7
 16612  010972  51C2               	movf	find_volume@fs& (0+255),w,b
 16613  010974  26D9               	addwf	fsr2l,f,c
 16614  010976  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16615  010978  22DA               	addwfc	fsr2h,f,c
 16616  01097A  50DE               	movf	postinc2,w,c
 16617  01097C  10DE               	iorwf	postinc2,w,c
 16618  01097E  A4D8               	btfss	status,2,c
 16619  010980  EFC4  F084         	goto	u10911
 16620  010984  EFC6  F084         	goto	u10910
 16621  010988                     u10911:
 16622  010988  EFC8  F084         	goto	l9365
 16623  01098C                     u10910:
 16624  01098C  EFC6  F081         	goto	l9245
 16625  010990                     l9365:
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 16629  010990  EE20 F023          	lfsr	2,35
 16630  010994  51C2               	movf	find_volume@fs& (0+255),w,b
 16631  010996  26D9               	addwf	fsr2l,f,c
 16632  010998  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16633  01099A  22DA               	addwfc	fsr2h,f,c
 16634  01099C  006F FF78  F082    	movff	postinc2,??_find_volume
 16635  0109A2  006F FF78  F083    	movff	postinc2,??_find_volume+1
 16636  0109A8  006F FF78  F084    	movff	postinc2,??_find_volume+2
 16637  0109AE  006F FF78  F085    	movff	postinc2,??_find_volume+3
 16638  0109B4  51B7               	movf	find_volume@fasize& (0+255),w,b
 16639  0109B6  2582               	addwf	??_find_volume& (0+255),w,b
 16640  0109B8  6F86               	movwf	(??_find_volume+4)& (0+255),b
 16641  0109BA  51B8               	movf	(find_volume@fasize+1)& (0+255),w,b
 16642  0109BC  2183               	addwfc	(??_find_volume+1)& (0+255),w,b
 16643  0109BE  6F87               	movwf	(??_find_volume+5)& (0+255),b
 16644  0109C0  51B9               	movf	(find_volume@fasize+2)& (0+255),w,b
 16645  0109C2  2184               	addwfc	(??_find_volume+2)& (0+255),w,b
 16646  0109C4  6F88               	movwf	(??_find_volume+6)& (0+255),b
 16647  0109C6  51BA               	movf	(find_volume@fasize+3)& (0+255),w,b
 16648  0109C8  2185               	addwfc	(??_find_volume+3)& (0+255),w,b
 16649  0109CA  6F89               	movwf	(??_find_volume+7)& (0+255),b
 16650  0109CC  EE20 F027          	lfsr	2,39
 16651  0109D0  51C2               	movf	find_volume@fs& (0+255),w,b
 16652  0109D2  26D9               	addwf	fsr2l,f,c
 16653  0109D4  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16654  0109D6  22DA               	addwfc	fsr2h,f,c
 16655  0109D8  0060  F21B  FFDE   	movff	??_find_volume+4,postinc2
 16656  0109DE  0060  F21F  FFDE   	movff	??_find_volume+5,postinc2
 16657  0109E4  0060  F223  FFDE   	movff	??_find_volume+6,postinc2
 16658  0109EA  0060  F227  FFDE   	movff	??_find_volume+7,postinc2
 16659  0109F0                     
 16660                           ; BSR set to: 0
 16661                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 16662  0109F0  0E02               	movlw	2
 16663  0109F2  19C1               	xorwf	find_volume@fmt& (0+255),w,b
 16664  0109F4  B4D8               	btfsc	status,2,c
 16665  0109F6  EFFF  F084         	goto	u10921
 16666  0109FA  EF01  F085         	goto	u10920
 16667  0109FE                     u10921:
 16668  0109FE  EF4F  F085         	goto	l9371
 16669  010A02                     u10920:
 16670  010A02                     
 16671                           ; BSR set to: 0
 16672  010A02  EE20 F017          	lfsr	2,23
 16673  010A06  51C2               	movf	find_volume@fs& (0+255),w,b
 16674  010A08  26D9               	addwf	fsr2l,f,c
 16675  010A0A  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16676  010A0C  22DA               	addwfc	fsr2h,f,c
 16677  010A0E  006F FF78  F082    	movff	postinc2,??_find_volume
 16678  010A14  006F FF78  F083    	movff	postinc2,??_find_volume+1
 16679  010A1A  006F FF78  F084    	movff	postinc2,??_find_volume+2
 16680  010A20  006F FF78  F085    	movff	postinc2,??_find_volume+3
 16681  010A26  0E01               	movlw	1
 16682  010A28  1582               	andwf	??_find_volume& (0+255),w,b
 16683  010A2A  6F86               	movwf	(??_find_volume+4)& (0+255),b
 16684  010A2C  0E00               	movlw	0
 16685  010A2E  1583               	andwf	(??_find_volume+1)& (0+255),w,b
 16686  010A30  6F87               	movwf	(??_find_volume+5)& (0+255),b
 16687  010A32  0E00               	movlw	0
 16688  010A34  1584               	andwf	(??_find_volume+2)& (0+255),w,b
 16689  010A36  6F88               	movwf	(??_find_volume+6)& (0+255),b
 16690  010A38  0E00               	movlw	0
 16691  010A3A  1585               	andwf	(??_find_volume+3)& (0+255),w,b
 16692  010A3C  6F89               	movwf	(??_find_volume+7)& (0+255),b
 16693  010A3E  EE20 F017          	lfsr	2,23
 16694  010A42  51C2               	movf	find_volume@fs& (0+255),w,b
 16695  010A44  26D9               	addwf	fsr2l,f,c
 16696  010A46  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16697  010A48  22DA               	addwfc	fsr2h,f,c
 16698  010A4A  006F FF78  F001    	movff	postinc2,___lmul@multiplier
 16699  010A50  006F FF78  F002    	movff	postinc2,___lmul@multiplier+1
 16700  010A56  006F FF78  F003    	movff	postinc2,___lmul@multiplier+2
 16701  010A5C  006F FF78  F004    	movff	postinc2,___lmul@multiplier+3
 16702  010A62  0E03               	movlw	3
 16703  010A64  6E05               	movwf	___lmul@multiplicand^0,c
 16704  010A66  0E00               	movlw	0
 16705  010A68  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 16706  010A6A  0E00               	movlw	0
 16707  010A6C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 16708  010A6E  0E00               	movlw	0
 16709  010A70  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 16710  010A72  ECE3  F0CE         	call	___lmul	;wreg free
 16711  010A76  90D8               	bcf	status,0,c
 16712  010A78  3204               	rrcf	(?___lmul+3)^0,f,c
 16713  010A7A  3203               	rrcf	(?___lmul+2)^0,f,c
 16714  010A7C  3202               	rrcf	(?___lmul+1)^0,f,c
 16715  010A7E  3201               	rrcf	?___lmul^0,f,c
 16716  010A80  0100               	movlb	0	; () banked
 16717  010A82  5186               	movf	(??_find_volume+4)& (0+255),w,b
 16718  010A84  2401               	addwf	?___lmul^0,w,c
 16719  010A86  6FA0               	movwf	find_volume@szbfat& (0+255),b
 16720  010A88  5187               	movf	(??_find_volume+5)& (0+255),w,b
 16721  010A8A  2002               	addwfc	(?___lmul+1)^0,w,c
 16722  010A8C  6FA1               	movwf	(find_volume@szbfat+1)& (0+255),b
 16723  010A8E  5188               	movf	(??_find_volume+6)& (0+255),w,b
 16724  010A90  2003               	addwfc	(?___lmul+2)^0,w,c
 16725  010A92  6FA2               	movwf	(find_volume@szbfat+2)& (0+255),b
 16726  010A94  5189               	movf	(??_find_volume+7)& (0+255),w,b
 16727  010A96  2004               	addwfc	(?___lmul+3)^0,w,c
 16728  010A98  6FA3               	movwf	(find_volume@szbfat+3)& (0+255),b
 16729  010A9A  EF6A  F085         	goto	l461
 16730  010A9E                     l9371:
 16731                           
 16732                           ; BSR set to: 0
 16733  010A9E  EE20 F017          	lfsr	2,23
 16734  010AA2  51C2               	movf	find_volume@fs& (0+255),w,b
 16735  010AA4  26D9               	addwf	fsr2l,f,c
 16736  010AA6  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16737  010AA8  22DA               	addwfc	fsr2h,f,c
 16738  010AAA  006F FF78  F082    	movff	postinc2,??_find_volume
 16739  010AB0  006F FF78  F083    	movff	postinc2,??_find_volume+1
 16740  010AB6  006F FF78  F084    	movff	postinc2,??_find_volume+2
 16741  010ABC  006F FF78  F085    	movff	postinc2,??_find_volume+3
 16742  010AC2  90D8               	bcf	status,0,c
 16743  010AC4  3582               	rlcf	??_find_volume& (0+255),w,b
 16744  010AC6  6FA0               	movwf	find_volume@szbfat& (0+255),b
 16745  010AC8  3583               	rlcf	(??_find_volume+1)& (0+255),w,b
 16746  010ACA  6FA1               	movwf	(find_volume@szbfat+1)& (0+255),b
 16747  010ACC  3584               	rlcf	(??_find_volume+2)& (0+255),w,b
 16748  010ACE  6FA2               	movwf	(find_volume@szbfat+2)& (0+255),b
 16749  010AD0  3585               	rlcf	(??_find_volume+3)& (0+255),w,b
 16750  010AD2  6FA3               	movwf	(find_volume@szbfat+3)& (0+255),b
 16751  010AD4                     l461:
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 16755  010AD4  0EFF               	movlw	255
 16756  010AD6  25A0               	addwf	find_volume@szbfat& (0+255),w,b
 16757  010AD8  6F82               	movwf	??_find_volume& (0+255),b
 16758  010ADA  0E01               	movlw	1
 16759  010ADC  21A1               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 16760  010ADE  6F83               	movwf	(??_find_volume+1)& (0+255),b
 16761  010AE0  0E00               	movlw	0
 16762  010AE2  21A2               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 16763  010AE4  6F84               	movwf	(??_find_volume+2)& (0+255),b
 16764  010AE6  0E00               	movlw	0
 16765  010AE8  21A3               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 16766  010AEA  6F85               	movwf	(??_find_volume+3)& (0+255),b
 16767  010AEC  0E0A               	movlw	10
 16768  010AEE  EF7E  F085         	goto	u10930
 16769  010AF2                     u10935:
 16770  010AF2  90D8               	bcf	status,0,c
 16771  010AF4  3385               	rrcf	(??_find_volume+3)& (0+255),f,b
 16772  010AF6  3384               	rrcf	(??_find_volume+2)& (0+255),f,b
 16773  010AF8  3383               	rrcf	(??_find_volume+1)& (0+255),f,b
 16774  010AFA  3382               	rrcf	??_find_volume& (0+255),f,b
 16775  010AFC                     u10930:
 16776  010AFC  2EE8               	decfsz	wreg,f,c
 16777  010AFE  EF79  F085         	goto	u10935
 16778  010B02  EE20 F01B          	lfsr	2,27
 16779  010B06  51C2               	movf	find_volume@fs& (0+255),w,b
 16780  010B08  26D9               	addwf	fsr2l,f,c
 16781  010B0A  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16782  010B0C  22DA               	addwfc	fsr2h,f,c
 16783  010B0E  5182               	movf	??_find_volume& (0+255),w,b
 16784  010B10  5CDE               	subwf	postinc2,w,c
 16785  010B12  5183               	movf	(??_find_volume+1)& (0+255),w,b
 16786  010B14  58DE               	subwfb	postinc2,w,c
 16787  010B16  5184               	movf	(??_find_volume+2)& (0+255),w,b
 16788  010B18  58DE               	subwfb	postinc2,w,c
 16789  010B1A  5185               	movf	(??_find_volume+3)& (0+255),w,b
 16790  010B1C  58DE               	subwfb	postinc2,w,c
 16791  010B1E  B0D8               	btfsc	status,0,c
 16792  010B20  EF94  F085         	goto	u10941
 16793  010B24  EF96  F085         	goto	u10940
 16794  010B28                     u10941:
 16795  010B28  EF98  F085         	goto	l9377
 16796  010B2C                     u10940:
 16797  010B2C  EFC6  F081         	goto	l9245
 16798  010B30                     l9377:
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 16802  010B30  EE20 F00F          	lfsr	2,15
 16803  010B34  51C2               	movf	find_volume@fs& (0+255),w,b
 16804  010B36  26D9               	addwf	fsr2l,f,c
 16805  010B38  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16806  010B3A  22DA               	addwfc	fsr2h,f,c
 16807  010B3C  0EFF               	movlw	255
 16808  010B3E  6EDE               	movwf	postinc2,c
 16809  010B40  0EFF               	movlw	255
 16810  010B42  6EDE               	movwf	postinc2,c
 16811  010B44  0EFF               	movlw	255
 16812  010B46  6EDE               	movwf	postinc2,c
 16813  010B48  0EFF               	movlw	255
 16814  010B4A  6EDD               	movwf	postdec2,c
 16815  010B4C  52DD               	movf	postdec2,f,c
 16816  010B4E  52DD               	movf	postdec2,f,c
 16817  010B50  EE10 F00B          	lfsr	1,11
 16818  010B54  51C2               	movf	find_volume@fs& (0+255),w,b
 16819  010B56  26E1               	addwf	fsr1l,f,c
 16820  010B58  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16821  010B5A  22E2               	addwfc	fsr1h,f,c
 16822  010B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 16823  010B62  006F FF7B FFE6     	movff	postinc2,postinc1
 16824  010B68  006F FF7B FFE6     	movff	postinc2,postinc1
 16825  010B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 16826  010B74                     
 16827                           ; BSR set to: 0
 16828                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 16829  010B74  EE20 F004          	lfsr	2,4
 16830  010B78  51C2               	movf	find_volume@fs& (0+255),w,b
 16831  010B7A  26D9               	addwf	fsr2l,f,c
 16832  010B7C  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16833  010B7E  22DA               	addwfc	fsr2h,f,c
 16834  010B80  0E80               	movlw	128
 16835  010B82  6EDF               	movwf	indf2,c
 16836  010B84                     
 16837                           ; BSR set to: 0
 16838                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 16839  010B84  0E03               	movlw	3
 16840  010B86  19C1               	xorwf	find_volume@fmt& (0+255),w,b
 16841  010B88  A4D8               	btfss	status,2,c
 16842  010B8A  EFC9  F085         	goto	u10951
 16843  010B8E  EFCB  F085         	goto	u10950
 16844  010B92                     u10951:
 16845  010B92  EF81  F086         	goto	l9397
 16846  010B96                     u10950:
 16847  010B96                     
 16848                           ; BSR set to: 0
 16849  010B96  0E63               	movlw	99
 16850  010B98  25C2               	addwf	find_volume@fs& (0+255),w,b
 16851  010B9A  6E01               	movwf	ld_word@ptr^0,c
 16852  010B9C  0E00               	movlw	0
 16853  010B9E  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16854  010BA0  6E02               	movwf	(ld_word@ptr+1)^0,c
 16855  010BA2  EC5F  F0D2         	call	_ld_word	;wreg free
 16856  010BA6  0401               	decf	?_ld_word^0,w,c
 16857  010BA8  1002               	iorwf	(?_ld_word+1)^0,w,c
 16858  010BAA  A4D8               	btfss	status,2,c
 16859  010BAC  EFDA  F085         	goto	u10961
 16860  010BB0  EFDC  F085         	goto	u10960
 16861  010BB4                     u10961:
 16862  010BB4  EF81  F086         	goto	l9397
 16863  010BB8                     u10960:
 16864  010BB8  C0C2  F070         	movff	find_volume@fs,move_window@fs
 16865  010BBC  C0C3  F071         	movff	find_volume@fs+1,move_window@fs+1
 16866  010BC0  0E01               	movlw	1
 16867  010BC2  0100               	movlb	0	; () banked
 16868  010BC4  25BB               	addwf	find_volume@bsect& (0+255),w,b
 16869  010BC6  6F72               	movwf	move_window@sector& (0+255),b
 16870  010BC8  0E00               	movlw	0
 16871  010BCA  21BC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 16872  010BCC  6F73               	movwf	(move_window@sector+1)& (0+255),b
 16873  010BCE  0E00               	movlw	0
 16874  010BD0  21BD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 16875  010BD2  6F74               	movwf	(move_window@sector+2)& (0+255),b
 16876  010BD4  0E00               	movlw	0
 16877  010BD6  21BE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 16878  010BD8  6F75               	movwf	(move_window@sector+3)& (0+255),b
 16879  010BDA  ECFC  F0C6         	call	_move_window	;wreg free
 16880  010BDE  0900               	iorlw	0
 16881  010BE0  A4D8               	btfss	status,2,c
 16882  010BE2  EFF5  F085         	goto	u10971
 16883  010BE6  EFF7  F085         	goto	u10970
 16884  010BEA                     u10971:
 16885  010BEA  EF81  F086         	goto	l9397
 16886  010BEE                     u10970:
 16887  010BEE                     
 16888                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 16889  010BEE  0100               	movlb	0	; () banked
 16890  010BF0  EE20 F004          	lfsr	2,4
 16891  010BF4  51C2               	movf	find_volume@fs& (0+255),w,b
 16892  010BF6  26D9               	addwf	fsr2l,f,c
 16893  010BF8  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16894  010BFA  22DA               	addwfc	fsr2h,f,c
 16895  010BFC  0E00               	movlw	0
 16896  010BFE  6EDF               	movwf	indf2,c
 16897  010C00                     
 16898                           ; BSR set to: 0
 16899                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 16900  010C00  0E31               	movlw	49
 16901  010C02  25C2               	addwf	find_volume@fs& (0+255),w,b
 16902  010C04  6E01               	movwf	ld_word@ptr^0,c
 16903  010C06  0E02               	movlw	2
 16904  010C08  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16905  010C0A  6E02               	movwf	(ld_word@ptr+1)^0,c
 16906  010C0C  EC5F  F0D2         	call	_ld_word	;wreg free
 16907  010C10  0E55               	movlw	85
 16908  010C12  1801               	xorwf	?_ld_word^0,w,c
 16909  010C14  E107               	bnz	u10981
 16910  010C16  0EAA               	movlw	170
 16911  010C18  1802               	xorwf	(?_ld_word+1)^0,w,c
 16912  010C1A  A4D8               	btfss	status,2,c
 16913  010C1C  EF12  F086         	goto	u10981
 16914  010C20  EF14  F086         	goto	u10980
 16915  010C24                     u10981:
 16916  010C24  EF81  F086         	goto	l9397
 16917  010C28                     u10980:
 16918  010C28  0E33               	movlw	51
 16919  010C2A  0100               	movlb	0	; () banked
 16920  010C2C  25C2               	addwf	find_volume@fs& (0+255),w,b
 16921  010C2E  6E01               	movwf	ld_dword@ptr^0,c
 16922  010C30  0E00               	movlw	0
 16923  010C32  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16924  010C34  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16925  010C36  ECF6  F0C8         	call	_ld_dword	;wreg free
 16926  010C3A  0E52               	movlw	82
 16927  010C3C  1801               	xorwf	?_ld_dword^0,w,c
 16928  010C3E  E10D               	bnz	u10991
 16929  010C40  0E52               	movlw	82
 16930  010C42  1802               	xorwf	(?_ld_dword+1)^0,w,c
 16931  010C44  E10A               	bnz	u10991
 16932  010C46  0E61               	movlw	97
 16933  010C48  1803               	xorwf	(?_ld_dword+2)^0,w,c
 16934  010C4A  E107               	bnz	u10991
 16935  010C4C  0E41               	movlw	65
 16936  010C4E  1804               	xorwf	(?_ld_dword+3)^0,w,c
 16937  010C50  A4D8               	btfss	status,2,c
 16938  010C52  EF2D  F086         	goto	u10991
 16939  010C56  EF2F  F086         	goto	u10990
 16940  010C5A                     u10991:
 16941  010C5A  EF81  F086         	goto	l9397
 16942  010C5E                     u10990:
 16943  010C5E  0E17               	movlw	23
 16944  010C60  0100               	movlb	0	; () banked
 16945  010C62  25C2               	addwf	find_volume@fs& (0+255),w,b
 16946  010C64  6E01               	movwf	ld_dword@ptr^0,c
 16947  010C66  0E02               	movlw	2
 16948  010C68  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16949  010C6A  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16950  010C6C  ECF6  F0C8         	call	_ld_dword	;wreg free
 16951  010C70  0E72               	movlw	114
 16952  010C72  1801               	xorwf	?_ld_dword^0,w,c
 16953  010C74  E10D               	bnz	u11001
 16954  010C76  0E72               	movlw	114
 16955  010C78  1802               	xorwf	(?_ld_dword+1)^0,w,c
 16956  010C7A  E10A               	bnz	u11001
 16957  010C7C  0E41               	movlw	65
 16958  010C7E  1803               	xorwf	(?_ld_dword+2)^0,w,c
 16959  010C80  E107               	bnz	u11001
 16960  010C82  0E61               	movlw	97
 16961  010C84  1804               	xorwf	(?_ld_dword+3)^0,w,c
 16962  010C86  A4D8               	btfss	status,2,c
 16963  010C88  EF48  F086         	goto	u11001
 16964  010C8C  EF4A  F086         	goto	u11000
 16965  010C90                     u11001:
 16966  010C90  EF81  F086         	goto	l9397
 16967  010C94                     u11000:
 16968  010C94                     
 16969                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 16970  010C94  0E1B               	movlw	27
 16971  010C96  0100               	movlb	0	; () banked
 16972  010C98  25C2               	addwf	find_volume@fs& (0+255),w,b
 16973  010C9A  6E01               	movwf	ld_dword@ptr^0,c
 16974  010C9C  0E02               	movlw	2
 16975  010C9E  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16976  010CA0  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16977  010CA2  ECF6  F0C8         	call	_ld_dword	;wreg free
 16978  010CA6  0100               	movlb	0	; () banked
 16979  010CA8  EE20 F00F          	lfsr	2,15
 16980  010CAC  51C2               	movf	find_volume@fs& (0+255),w,b
 16981  010CAE  26D9               	addwf	fsr2l,f,c
 16982  010CB0  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 16983  010CB2  22DA               	addwfc	fsr2h,f,c
 16984  010CB4  0060  F007  FFDE   	movff	?_ld_dword,postinc2
 16985  010CBA  0060  F00B  FFDE   	movff	?_ld_dword+1,postinc2
 16986  010CC0  0060  F00F  FFDE   	movff	?_ld_dword+2,postinc2
 16987  010CC6  0060  F013  FFDE   	movff	?_ld_dword+3,postinc2
 16988                           
 16989                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 16990  010CCC  0E1F               	movlw	31
 16991  010CCE  25C2               	addwf	find_volume@fs& (0+255),w,b
 16992  010CD0  6E01               	movwf	ld_dword@ptr^0,c
 16993  010CD2  0E02               	movlw	2
 16994  010CD4  21C3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 16995  010CD6  6E02               	movwf	(ld_dword@ptr+1)^0,c
 16996  010CD8  ECF6  F0C8         	call	_ld_dword	;wreg free
 16997  010CDC  0100               	movlb	0	; () banked
 16998  010CDE  EE20 F00B          	lfsr	2,11
 16999  010CE2  51C2               	movf	find_volume@fs& (0+255),w,b
 17000  010CE4  26D9               	addwf	fsr2l,f,c
 17001  010CE6  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 17002  010CE8  22DA               	addwfc	fsr2h,f,c
 17003  010CEA  0060  F007  FFDE   	movff	?_ld_dword,postinc2
 17004  010CF0  0060  F00B  FFDE   	movff	?_ld_dword+1,postinc2
 17005  010CF6  0060  F00F  FFDE   	movff	?_ld_dword+2,postinc2
 17006  010CFC  0060  F013  FFDE   	movff	?_ld_dword+3,postinc2
 17007  010D02                     l9397:
 17008                           
 17009                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 17010  010D02  0060  F30B  FFD9   	movff	find_volume@fs,fsr2l
 17011  010D08  0060  F30F  FFDA   	movff	find_volume@fs+1,fsr2h
 17012  010D0E  0060  F307  FFDF   	movff	find_volume@fmt,indf2
 17013  010D14                     
 17014                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 17015  010D14  0101               	movlb	1	; () banked
 17016  010D16  4B37               	infsnz	_Fsid& (0+255),f,b
 17017  010D18  2B38               	incf	(_Fsid+1)& (0+255),f,b
 17018  010D1A  0100               	movlb	0	; () banked
 17019  010D1C  EE20 F005          	lfsr	2,5
 17020  010D20  51C2               	movf	find_volume@fs& (0+255),w,b
 17021  010D22  26D9               	addwf	fsr2l,f,c
 17022  010D24  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 17023  010D26  22DA               	addwfc	fsr2h,f,c
 17024  010D28  0060  F4DF  FFDE   	movff	_Fsid,postinc2
 17025  010D2E  0060  F4E3  FFDD   	movff	_Fsid+1,postdec2
 17026  010D34                     
 17027                           ; BSR set to: 0
 17028                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 17029  010D34  EE20 F013          	lfsr	2,19
 17030  010D38  51C2               	movf	find_volume@fs& (0+255),w,b
 17031  010D3A  26D9               	addwf	fsr2l,f,c
 17032  010D3C  51C3               	movf	(find_volume@fs+1)& (0+255),w,b
 17033  010D3E  22DA               	addwfc	fsr2h,f,c
 17034  010D40  6ADE               	clrf	postinc2,c
 17035  010D42  6ADE               	clrf	postinc2,c
 17036  010D44  6ADE               	clrf	postinc2,c
 17037  010D46  6ADD               	clrf	postdec2,c
 17038  010D48  EF79  F080         	goto	l9163
 17039  010D4C                     l416:
 17040  010D4C  0012               	return		;funcret
 17041  010D4E                     __end_of_find_volume:
 17042                           	callstack 0
 17043                           
 17044 ;; *************** function _ld_dword *****************
 17045 ;; Defined at:
 17046 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 17049 ;;		 -> drive.win(512), drive(563), NULL(0), 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  rv              4    9[COMRAM] unsigned long 
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  4    0[COMRAM] unsigned long 
 17054 ;; Registers used:
 17055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17056 ;; Tracked objects:
 17057 ;;		On entry : 0/0
 17058 ;;		On exit  : 0/0
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17062 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17063 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17064 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17065 ;;Total ram usage:       13 bytes
 17066 ;; Hardware stack levels used:    1
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_get_fat
 17071 ;;		_put_fat
 17072 ;;		_find_volume
 17073 ;;		_f_open
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text49
 17078  0191EC                     __ptext49:
 17079                           	callstack 0
 17080  0191EC                     _ld_dword:
 17081                           	callstack 26
 17082  0191EC                     
 17083                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 17084  0191EC  EE20 F003          	lfsr	2,3
 17085  0191F0  5001               	movf	ld_dword@ptr^0,w,c
 17086  0191F2  26D9               	addwf	fsr2l,f,c
 17087  0191F4  5002               	movf	(ld_dword@ptr+1)^0,w,c
 17088  0191F6  22DA               	addwfc	fsr2h,f,c
 17089  0191F8  50DF               	movf	indf2,w,c
 17090  0191FA  6E05               	movwf	??_ld_dword^0,c
 17091  0191FC  5005               	movf	??_ld_dword^0,w,c
 17092  0191FE  6E0A               	movwf	ld_dword@rv^0,c
 17093  019200  6A0B               	clrf	(ld_dword@rv+1)^0,c
 17094  019202  6A0C               	clrf	(ld_dword@rv+2)^0,c
 17095  019204  6A0D               	clrf	(ld_dword@rv+3)^0,c
 17096                           
 17097                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 17098  019206  EE20 F002          	lfsr	2,2
 17099  01920A  5001               	movf	ld_dword@ptr^0,w,c
 17100  01920C  26D9               	addwf	fsr2l,f,c
 17101  01920E  5002               	movf	(ld_dword@ptr+1)^0,w,c
 17102  019210  22DA               	addwfc	fsr2h,f,c
 17103  019212  50DF               	movf	indf2,w,c
 17104  019214  6E05               	movwf	??_ld_dword^0,c
 17105  019216  5005               	movf	??_ld_dword^0,w,c
 17106  019218  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 17107  01921C  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 17108  019220  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 17109  019224  6A06               	clrf	(??_ld_dword+1)^0,c
 17110  019226  1006               	iorwf	(??_ld_dword+1)^0,w,c
 17111  019228  6E0A               	movwf	ld_dword@rv^0,c
 17112  01922A  5007               	movf	(??_ld_dword+2)^0,w,c
 17113  01922C  6E0B               	movwf	(ld_dword@rv+1)^0,c
 17114  01922E  5008               	movf	(??_ld_dword+3)^0,w,c
 17115  019230  6E0C               	movwf	(ld_dword@rv+2)^0,c
 17116  019232  5009               	movf	(??_ld_dword+4)^0,w,c
 17117  019234  6E0D               	movwf	(ld_dword@rv+3)^0,c
 17118                           
 17119                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 17120  019236  EE20 F001          	lfsr	2,1
 17121  01923A  5001               	movf	ld_dword@ptr^0,w,c
 17122  01923C  26D9               	addwf	fsr2l,f,c
 17123  01923E  5002               	movf	(ld_dword@ptr+1)^0,w,c
 17124  019240  22DA               	addwfc	fsr2h,f,c
 17125  019242  50DF               	movf	indf2,w,c
 17126  019244  6E05               	movwf	??_ld_dword^0,c
 17127  019246  5005               	movf	??_ld_dword^0,w,c
 17128  019248  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 17129  01924C  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 17130  019250  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 17131  019254  6A06               	clrf	(??_ld_dword+1)^0,c
 17132  019256  1006               	iorwf	(??_ld_dword+1)^0,w,c
 17133  019258  6E0A               	movwf	ld_dword@rv^0,c
 17134  01925A  5007               	movf	(??_ld_dword+2)^0,w,c
 17135  01925C  6E0B               	movwf	(ld_dword@rv+1)^0,c
 17136  01925E  5008               	movf	(??_ld_dword+3)^0,w,c
 17137  019260  6E0C               	movwf	(ld_dword@rv+2)^0,c
 17138  019262  5009               	movf	(??_ld_dword+4)^0,w,c
 17139  019264  6E0D               	movwf	(ld_dword@rv+3)^0,c
 17140                           
 17141                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 17142  019266  0060  F007  FFD9   	movff	ld_dword@ptr,fsr2l
 17143  01926C  0060  F00B  FFDA   	movff	ld_dword@ptr+1,fsr2h
 17144  019272  50DF               	movf	indf2,w,c
 17145  019274  6E05               	movwf	??_ld_dword^0,c
 17146  019276  5005               	movf	??_ld_dword^0,w,c
 17147  019278  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 17148  01927C  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 17149  019280  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 17150  019284  6A06               	clrf	(??_ld_dword+1)^0,c
 17151  019286  1006               	iorwf	(??_ld_dword+1)^0,w,c
 17152  019288  6E0A               	movwf	ld_dword@rv^0,c
 17153  01928A  5007               	movf	(??_ld_dword+2)^0,w,c
 17154  01928C  6E0B               	movwf	(ld_dword@rv+1)^0,c
 17155  01928E  5008               	movf	(??_ld_dword+3)^0,w,c
 17156  019290  6E0C               	movwf	(ld_dword@rv+2)^0,c
 17157  019292  5009               	movf	(??_ld_dword+4)^0,w,c
 17158  019294  6E0D               	movwf	(ld_dword@rv+3)^0,c
 17159  019296                     
 17160                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 17161  019296  C00A  F001         	movff	ld_dword@rv,?_ld_dword
 17162  01929A  C00B  F002         	movff	ld_dword@rv+1,?_ld_dword+1
 17163  01929E  C00C  F003         	movff	ld_dword@rv+2,?_ld_dword+2
 17164  0192A2  C00D  F004         	movff	ld_dword@rv+3,?_ld_dword+3
 17165  0192A6  0012               	return		;funcret
 17166  0192A8                     __end_of_ld_dword:
 17167                           	callstack 0
 17168                           
 17169 ;; *************** function _get_ldnumber *****************
 17170 ;; Defined at:
 17171 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 17174 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 17175 ;;		 -> f_mount@rp(2), 
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;  tp              2   13[COMRAM] PTR const unsigned char 
 17178 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
 17179 ;;  vol             2   11[COMRAM] int 
 17180 ;;  tt              2    8[COMRAM] PTR const unsigned char 
 17181 ;;		 -> STR_76(3), STR_8(8), STR_7(3), 
 17182 ;;  i               2    6[COMRAM] int 
 17183 ;;  tc              1   10[COMRAM] unsigned char 
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  2    0[COMRAM] int 
 17186 ;; Registers used:
 17187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17194 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17196 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17197 ;;Total ram usage:       15 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; This function calls:
 17200 ;;		Nothing
 17201 ;; This function is called by:
 17202 ;;		_find_volume
 17203 ;;		_f_mount
 17204 ;;		_f_chdrive
 17205 ;; This function uses a non-reentrant model
 17206 ;;
 17207                           
 17208                           	psect	text50
 17209  017478                     __ptext50:
 17210                           	callstack 0
 17211  017478                     _get_ldnumber:
 17212                           	callstack 27
 17213  017478                     
 17214                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 17215  017478  680C               	setf	get_ldnumber@vol^0,c
 17216  01747A  680D               	setf	(get_ldnumber@vol+1)^0,c
 17217  01747C                     
 17218                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 17219  01747C  0060  F007  FFD9   	movff	get_ldnumber@path,fsr2l
 17220  017482  0060  F00B  FFDA   	movff	get_ldnumber@path+1,fsr2h
 17221  017488  006F FF78  F00E    	movff	postinc2,get_ldnumber@tp
 17222  01748E  006F FF74  F00F    	movff	postdec2,get_ldnumber@tp+1
 17223  017494  C00E  F009         	movff	get_ldnumber@tp,get_ldnumber@tt
 17224  017498  C00F  F00A         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 17225  01749C                     
 17226                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 17227  01749C  500E               	movf	get_ldnumber@tp^0,w,c
 17228  01749E  100F               	iorwf	(get_ldnumber@tp+1)^0,w,c
 17229  0174A0  A4D8               	btfss	status,2,c
 17230  0174A2  EF55  F0BA         	goto	u9981
 17231  0174A6  EF57  F0BA         	goto	u9980
 17232  0174AA                     u9981:
 17233  0174AA  EF5B  F0BA         	goto	l8797
 17234  0174AE                     u9980:
 17235  0174AE  6801               	setf	?_get_ldnumber^0,c
 17236  0174B0  6802               	setf	(?_get_ldnumber+1)^0,c
 17237  0174B2  EFF7  F0BA         	goto	l391
 17238  0174B6                     l8797:
 17239  0174B6  0060  F027  FFF6   	movff	get_ldnumber@tt,tblptrl
 17240  0174BC  0060  F02B  FFF7   	movff	get_ldnumber@tt+1,tblptrh
 17241  0174C2                     	if	0	;tblptru may be non-zero
 17242  0174C2                     	endif
 17243  0174C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17244  0174C2  0E00               	movlw	low (__mediumconst shr (0+16))
 17245  0174C4  6EF8               	movwf	tblptru,c
 17246  0174C6                     	endif
 17247  0174C6  0008               	tblrd		*
 17248  0174C8  006F FFD4  F00B    	movff	tablat,get_ldnumber@tc
 17249  0174CE  4A09               	infsnz	get_ldnumber@tt^0,f,c
 17250  0174D0  2A0A               	incf	(get_ldnumber@tt+1)^0,f,c
 17251  0174D2  0E20               	movlw	32
 17252  0174D4  640B               	cpfsgt	get_ldnumber@tc^0,c
 17253  0174D6  EF6F  F0BA         	goto	u9991
 17254  0174DA  EF71  F0BA         	goto	u9990
 17255  0174DE                     u9991:
 17256  0174DE  EF7A  F0BA         	goto	l8809
 17257  0174E2                     u9990:
 17258  0174E2  0E3A               	movlw	58
 17259  0174E4  180B               	xorwf	get_ldnumber@tc^0,w,c
 17260  0174E6  A4D8               	btfss	status,2,c
 17261  0174E8  EF78  F0BA         	goto	u10001
 17262  0174EC  EF7A  F0BA         	goto	u10000
 17263  0174F0                     u10001:
 17264  0174F0  EF5B  F0BA         	goto	l8797
 17265  0174F4                     u10000:
 17266  0174F4                     l8809:
 17267                           
 17268                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 17269  0174F4  0E3A               	movlw	58
 17270  0174F6  180B               	xorwf	get_ldnumber@tc^0,w,c
 17271  0174F8  A4D8               	btfss	status,2,c
 17272  0174FA  EF81  F0BA         	goto	u10011
 17273  0174FE  EF83  F0BA         	goto	u10010
 17274  017502                     u10011:
 17275  017502  EFF0  F0BA         	goto	l400
 17276  017506                     u10010:
 17277  017506                     
 17278                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 17279  017506  0E00               	movlw	0
 17280  017508  6E08               	movwf	(get_ldnumber@i+1)^0,c
 17281  01750A  0E01               	movlw	1
 17282  01750C  6E07               	movwf	get_ldnumber@i^0,c
 17283  01750E                     
 17284                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 17285  01750E  0060  F03B  FFF6   	movff	get_ldnumber@tp,tblptrl
 17286  017514  0060  F03F  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17287  01751A                     	if	0	;tblptru may be non-zero
 17288  01751A                     	endif
 17289  01751A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17290  01751A  0E00               	movlw	low (__mediumconst shr (0+16))
 17291  01751C  6EF8               	movwf	tblptru,c
 17292  01751E                     	endif
 17293  01751E  0E2F               	movlw	47
 17294  017520  0008               	tblrd		*
 17295  017522  64F5               	cpfsgt	tablat,c
 17296  017524  EF96  F0BA         	goto	u10021
 17297  017528  EF98  F0BA         	goto	u10020
 17298  01752C                     u10021:
 17299  01752C  EFCD  F0BA         	goto	l8821
 17300  017530                     u10020:
 17301  017530  0060  F03B  FFF6   	movff	get_ldnumber@tp,tblptrl
 17302  017536  0060  F03F  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17303  01753C                     	if	0	;tblptru may be non-zero
 17304  01753C                     	endif
 17305  01753C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17306  01753C  0E00               	movlw	low (__mediumconst shr (0+16))
 17307  01753E  6EF8               	movwf	tblptru,c
 17308  017540                     	endif
 17309  017540  0E3A               	movlw	58
 17310  017542  0008               	tblrd		*
 17311  017544  60F5               	cpfslt	tablat,c
 17312  017546  EFA7  F0BA         	goto	u10031
 17313  01754A  EFA9  F0BA         	goto	u10030
 17314  01754E                     u10031:
 17315  01754E  EFCD  F0BA         	goto	l8821
 17316  017552                     u10030:
 17317  017552  0E02               	movlw	2
 17318  017554  240E               	addwf	get_ldnumber@tp^0,w,c
 17319  017556  6E03               	movwf	??_get_ldnumber^0,c
 17320  017558  0E00               	movlw	0
 17321  01755A  200F               	addwfc	(get_ldnumber@tp+1)^0,w,c
 17322  01755C  6E04               	movwf	(??_get_ldnumber+1)^0,c
 17323  01755E  5009               	movf	get_ldnumber@tt^0,w,c
 17324  017560  1803               	xorwf	??_get_ldnumber^0,w,c
 17325  017562  E107               	bnz	u10041
 17326  017564  500A               	movf	(get_ldnumber@tt+1)^0,w,c
 17327  017566  1804               	xorwf	(??_get_ldnumber+1)^0,w,c
 17328  017568  A4D8               	btfss	status,2,c
 17329  01756A  EFB9  F0BA         	goto	u10041
 17330  01756E  EFBB  F0BA         	goto	u10040
 17331  017572                     u10041:
 17332  017572  EFCD  F0BA         	goto	l8821
 17333  017576                     u10040:
 17334  017576                     
 17335                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 17336  017576  0060  F03B  FFF6   	movff	get_ldnumber@tp,tblptrl
 17337  01757C  0060  F03F  FFF7   	movff	get_ldnumber@tp+1,tblptrh
 17338  017582                     	if	0	;tblptru may be non-zero
 17339  017582                     	endif
 17340  017582                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17341  017582  0E00               	movlw	low (__mediumconst shr (0+16))
 17342  017584  6EF8               	movwf	tblptru,c
 17343  017586                     	endif
 17344  017586  0008               	tblrd		*
 17345  017588  006F FFD4  F003    	movff	tablat,??_get_ldnumber
 17346  01758E  0ED0               	movlw	208
 17347  017590  2403               	addwf	??_get_ldnumber^0,w,c
 17348  017592  6E07               	movwf	get_ldnumber@i^0,c
 17349  017594  6A08               	clrf	(get_ldnumber@i+1)^0,c
 17350  017596  0EFF               	movlw	255
 17351  017598  2208               	addwfc	(get_ldnumber@i+1)^0,f,c
 17352  01759A                     l8821:
 17353                           
 17354                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 17355  01759A  BE08               	btfsc	(get_ldnumber@i+1)^0,7,c
 17356  01759C  EFDA  F0BA         	goto	u10050
 17357  0175A0  5008               	movf	(get_ldnumber@i+1)^0,w,c
 17358  0175A2  E106               	bnz	u10051
 17359  0175A4  0407               	decf	get_ldnumber@i^0,w,c
 17360  0175A6  B0D8               	btfsc	status,0,c
 17361  0175A8  EFD8  F0BA         	goto	u10051
 17362  0175AC  EFDA  F0BA         	goto	u10050
 17363  0175B0                     u10051:
 17364  0175B0  EFEA  F0BA         	goto	l8827
 17365  0175B4                     u10050:
 17366  0175B4                     
 17367                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 17368  0175B4  C007  F00C         	movff	get_ldnumber@i,get_ldnumber@vol
 17369  0175B8  C008  F00D         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 17370  0175BC                     
 17371                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 17372  0175BC  0060  F007  FFD9   	movff	get_ldnumber@path,fsr2l
 17373  0175C2  0060  F00B  FFDA   	movff	get_ldnumber@path+1,fsr2h
 17374  0175C8  0060  F027  FFDE   	movff	get_ldnumber@tt,postinc2
 17375  0175CE  0060  F02B  FFDD   	movff	get_ldnumber@tt+1,postdec2
 17376  0175D4                     l8827:
 17377                           
 17378                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 17379  0175D4  C00C  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 17380  0175D8  C00D  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 17381  0175DC  EFF7  F0BA         	goto	l391
 17382  0175E0                     l400:
 17383                           
 17384                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 17385  0175E0  C13E  F00C         	movff	_CurrVol,get_ldnumber@vol
 17386  0175E4  6A0D               	clrf	(get_ldnumber@vol+1)^0,c
 17387                           
 17388                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 17389  0175E6  C00C  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 17390  0175EA  C00D  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 17391  0175EE                     l391:
 17392  0175EE  0012               	return		;funcret
 17393  0175F0                     __end_of_get_ldnumber:
 17394                           	callstack 0
 17395                           
 17396 ;; *************** function _disk_status *****************
 17397 ;; Defined at:
 17398 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  pdrv            1    wreg     unsigned char 
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;  pdrv            1    2[COMRAM] unsigned char 
 17403 ;;  stat            1    3[COMRAM] unsigned char 
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      unsigned char 
 17406 ;; Registers used:
 17407 ;;		wreg, status,2, status,0, cstack
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17417 ;;Total ram usage:        4 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:    1
 17420 ;; This function calls:
 17421 ;;		_SD_SPI_IsMediaInitialized
 17422 ;;		_SD_SPI_IsMediaPresent
 17423 ;;		_SD_SPI_IsWriteProtected
 17424 ;; This function is called by:
 17425 ;;		_find_volume
 17426 ;;		_validate
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text51
 17431  019A1A                     __ptext51:
 17432                           	callstack 0
 17433  019A1A                     _disk_status:
 17434                           	callstack 25
 17435                           
 17436                           ;incstack = 0
 17437                           ;disk_status@pdrv stored from wreg
 17438  019A1A  6E03               	movwf	disk_status@pdrv^0,c
 17439  019A1C                     
 17440                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 17441  019A1C  0E01               	movlw	1
 17442  019A1E  6E04               	movwf	disk_status@stat^0,c
 17443                           
 17444                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 17445  019A20  EF38  F0CD         	goto	l8883
 17446  019A24                     l8869:
 17447                           
 17448                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 17449  019A24  ECE6  F0D3         	call	_SD_SPI_IsMediaPresent	;wreg free
 17450  019A28  0900               	iorlw	0
 17451  019A2A  A4D8               	btfss	status,2,c
 17452  019A2C  EF1A  F0CD         	goto	u10131
 17453  019A30  EF1C  F0CD         	goto	u10130
 17454  019A34                     u10131:
 17455  019A34  EF20  F0CD         	goto	l8873
 17456  019A38                     u10130:
 17457  019A38                     
 17458                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 17459  019A38  0E02               	movlw	2
 17460  019A3A  6E04               	movwf	disk_status@stat^0,c
 17461                           
 17462                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 17463  019A3C  EF2B  F0CD         	goto	l8877
 17464  019A40                     l8873:
 17465  019A40  EC83  F0D3         	call	_SD_SPI_IsMediaInitialized	;wreg free
 17466  019A44  06E8               	decf	wreg,f,c
 17467  019A46  A4D8               	btfss	status,2,c
 17468  019A48  EF28  F0CD         	goto	u10141
 17469  019A4C  EF2A  F0CD         	goto	u10140
 17470  019A50                     u10141:
 17471  019A50  EF2B  F0CD         	goto	l8877
 17472  019A54                     u10140:
 17473  019A54                     
 17474                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 17475  019A54  9004               	bcf	disk_status@stat^0,0,c
 17476  019A56                     l8877:
 17477                           
 17478                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 17479  019A56  ECE4  F0D3         	call	_SD_SPI_IsWriteProtected	;wreg free
 17480  019A5A  06E8               	decf	wreg,f,c
 17481  019A5C  A4D8               	btfss	status,2,c
 17482  019A5E  EF33  F0CD         	goto	u10151
 17483  019A62  EF35  F0CD         	goto	u10150
 17484  019A66                     u10151:
 17485  019A66  EF49  F0CD         	goto	l8885
 17486  019A6A                     u10150:
 17487  019A6A                     
 17488                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 17489  019A6A  8404               	bsf	disk_status@stat^0,2,c
 17490  019A6C  EF49  F0CD         	goto	l8885
 17491  019A70                     l8883:
 17492  019A70  5003               	movf	disk_status@pdrv^0,w,c
 17493  019A72  6E01               	movwf	??_disk_status^0,c
 17494  019A74  6A02               	clrf	(??_disk_status+1)^0,c
 17495                           
 17496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17497                           ; Switch size 1, requested type "simple"
 17498                           ; Number of cases is 1, Range of values is 0 to 0
 17499                           ; switch strategies available:
 17500                           ; Name         Instructions Cycles
 17501                           ; simple_byte            4     3 (average)
 17502                           ;	Chosen strategy is simple_byte
 17503  019A76  5002               	movf	(??_disk_status+1)^0,w,c
 17504  019A78  0A00               	xorlw	0	; case 0
 17505  019A7A  B4D8               	btfsc	status,2,c
 17506  019A7C  EF42  F0CD         	goto	l11865
 17507  019A80  EF49  F0CD         	goto	l8885
 17508  019A84                     l11865:
 17509                           
 17510                           ; Switch size 1, requested type "simple"
 17511                           ; Number of cases is 1, Range of values is 0 to 0
 17512                           ; switch strategies available:
 17513                           ; Name         Instructions Cycles
 17514                           ; simple_byte            4     3 (average)
 17515                           ;	Chosen strategy is simple_byte
 17516  019A84  5001               	movf	??_disk_status^0,w,c
 17517  019A86  0A00               	xorlw	0	; case 0
 17518  019A88  B4D8               	btfsc	status,2,c
 17519  019A8A  EF12  F0CD         	goto	l8869
 17520  019A8E  EF49  F0CD         	goto	l8885
 17521  019A92                     l8885:
 17522                           
 17523                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 17524  019A92  5004               	movf	disk_status@stat^0,w,c
 17525  019A94  0012               	return		;funcret
 17526  019A96                     __end_of_disk_status:
 17527                           	callstack 0
 17528                           
 17529 ;; *************** function _SD_SPI_IsWriteProtected *****************
 17530 ;; Defined at:
 17531 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      _Bool 
 17538 ;; Registers used:
 17539 ;;		wreg
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;Total ram usage:        0 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_disk_status
 17555 ;; This function uses a non-reentrant model
 17556 ;;
 17557                           
 17558                           	psect	text52
 17559  01A7C8                     __ptext52:
 17560                           	callstack 0
 17561  01A7C8                     _SD_SPI_IsWriteProtected:
 17562                           	callstack 25
 17563  01A7C8                     
 17564                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 17565  01A7C8  0E00               	movlw	0
 17566  01A7CA  0012               	return		;funcret
 17567  01A7CC                     __end_of_SD_SPI_IsWriteProtected:
 17568                           	callstack 0
 17569                           
 17570 ;; *************** function _SD_SPI_IsMediaPresent *****************
 17571 ;; Defined at:
 17572 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17573 ;; Parameters:    Size  Location     Type
 17574 ;;		None
 17575 ;; Auto vars:     Size  Location     Type
 17576 ;;		None
 17577 ;; Return value:  Size  Location     Type
 17578 ;;                  1    wreg      _Bool 
 17579 ;; Registers used:
 17580 ;;		wreg
 17581 ;; Tracked objects:
 17582 ;;		On entry : 0/0
 17583 ;;		On exit  : 0/0
 17584 ;;		Unchanged: 0/0
 17585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17590 ;;Total ram usage:        0 bytes
 17591 ;; Hardware stack levels used:    1
 17592 ;; This function calls:
 17593 ;;		Nothing
 17594 ;; This function is called by:
 17595 ;;		_disk_status
 17596 ;;		_Save_Data
 17597 ;; This function uses a non-reentrant model
 17598 ;;
 17599                           
 17600                           	psect	text53
 17601  01A7CC                     __ptext53:
 17602                           	callstack 0
 17603  01A7CC                     _SD_SPI_IsMediaPresent:
 17604                           	callstack 25
 17605  01A7CC                     
 17606                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 17607  01A7CC  0E01               	movlw	1
 17608  01A7CE  0012               	return		;funcret
 17609  01A7D0                     __end_of_SD_SPI_IsMediaPresent:
 17610                           	callstack 0
 17611                           
 17612 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 17613 ;; Defined at:
 17614 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;		None
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      _Bool 
 17621 ;; Registers used:
 17622 ;;		wreg, status,2
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17632 ;;Total ram usage:        0 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; This function calls:
 17635 ;;		Nothing
 17636 ;; This function is called by:
 17637 ;;		_disk_status
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641                           	psect	text54
 17642  01A706                     __ptext54:
 17643                           	callstack 0
 17644  01A706                     _SD_SPI_IsMediaInitialized:
 17645                           	callstack 25
 17646  01A706                     
 17647                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 17648  01A706  0101               	movlb	1	; () banked
 17649  01A708  51D6               	movf	(_mediaInformation+3)& (0+255),w,b
 17650  01A70A  A4D8               	btfss	status,2,c
 17651  01A70C  EF8A  F0D3         	goto	u9051
 17652  01A710  EF8D  F0D3         	goto	u9050
 17653  01A714                     u9051:
 17654  01A714  0E01               	movlw	1
 17655  01A716  EF8E  F0D3         	goto	u9060
 17656  01A71A                     u9050:
 17657  01A71A  0E00               	movlw	0
 17658  01A71C                     u9060:
 17659  01A71C                     
 17660                           ; BSR set to: 1
 17661  01A71C  0012               	return		;funcret
 17662  01A71E                     __end_of_SD_SPI_IsMediaInitialized:
 17663                           	callstack 0
 17664                           
 17665 ;; *************** function _disk_initialize *****************
 17666 ;; Defined at:
 17667 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 17668 ;; Parameters:    Size  Location     Type
 17669 ;;  pdrv            1    wreg     unsigned char 
 17670 ;; Auto vars:     Size  Location     Type
 17671 ;;  pdrv            1   85[COMRAM] unsigned char 
 17672 ;;  stat            1   86[COMRAM] unsigned char 
 17673 ;; Return value:  Size  Location     Type
 17674 ;;                  1    wreg      unsigned char 
 17675 ;; Registers used:
 17676 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17677 ;; Tracked objects:
 17678 ;;		On entry : 0/0
 17679 ;;		On exit  : 0/0
 17680 ;;		Unchanged: 0/0
 17681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17686 ;;Total ram usage:        4 bytes
 17687 ;; Hardware stack levels used:    1
 17688 ;; Hardware stack levels required when called:    3
 17689 ;; This function calls:
 17690 ;;		_SD_SPI_MediaInitialize
 17691 ;; This function is called by:
 17692 ;;		_find_volume
 17693 ;; This function uses a non-reentrant model
 17694 ;;
 17695                           
 17696                           	psect	text55
 17697  01A190                     __ptext55:
 17698                           	callstack 0
 17699  01A190                     _disk_initialize:
 17700                           	callstack 23
 17701                           
 17702                           ; BSR set to: 1
 17703                           ;incstack = 0
 17704                           ;disk_initialize@pdrv stored from wreg
 17705  01A190  6E56               	movwf	disk_initialize@pdrv^0,c
 17706  01A192                     
 17707                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 17708  01A192  0E01               	movlw	1
 17709  01A194  6E57               	movwf	disk_initialize@stat^0,c
 17710                           
 17711                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 17712  01A196  EFDF  F0D0         	goto	l8903
 17713  01A19A                     l8895:
 17714                           
 17715                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 17716  01A19A  ECDB  F08E         	call	_SD_SPI_MediaInitialize	;wreg free
 17717  01A19E  06E8               	decf	wreg,f,c
 17718  01A1A0  A4D8               	btfss	status,2,c
 17719  01A1A2  EFD5  F0D0         	goto	u10161
 17720  01A1A6  EFD7  F0D0         	goto	u10160
 17721  01A1AA                     u10161:
 17722  01A1AA  EFDB  F0D0         	goto	l8899
 17723  01A1AE                     u10160:
 17724  01A1AE                     
 17725                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 17726  01A1AE  0E00               	movlw	0
 17727  01A1B0  6E57               	movwf	disk_initialize@stat^0,c
 17728                           
 17729                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 17730  01A1B2  EFF0  F0D0         	goto	l8905
 17731  01A1B6                     l8899:
 17732                           
 17733                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 17734  01A1B6  0E01               	movlw	1
 17735  01A1B8  6E57               	movwf	disk_initialize@stat^0,c
 17736  01A1BA  EFF0  F0D0         	goto	l8905
 17737  01A1BE                     l8903:
 17738  01A1BE  5056               	movf	disk_initialize@pdrv^0,w,c
 17739  01A1C0  6E54               	movwf	??_disk_initialize^0,c
 17740  01A1C2  6A55               	clrf	(??_disk_initialize+1)^0,c
 17741                           
 17742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17743                           ; Switch size 1, requested type "simple"
 17744                           ; Number of cases is 1, Range of values is 0 to 0
 17745                           ; switch strategies available:
 17746                           ; Name         Instructions Cycles
 17747                           ; simple_byte            4     3 (average)
 17748                           ;	Chosen strategy is simple_byte
 17749  01A1C4  5055               	movf	(??_disk_initialize+1)^0,w,c
 17750  01A1C6  0A00               	xorlw	0	; case 0
 17751  01A1C8  B4D8               	btfsc	status,2,c
 17752  01A1CA  EFE9  F0D0         	goto	l11867
 17753  01A1CE  EFF0  F0D0         	goto	l8905
 17754  01A1D2                     l11867:
 17755                           
 17756                           ; Switch size 1, requested type "simple"
 17757                           ; Number of cases is 1, Range of values is 0 to 0
 17758                           ; switch strategies available:
 17759                           ; Name         Instructions Cycles
 17760                           ; simple_byte            4     3 (average)
 17761                           ;	Chosen strategy is simple_byte
 17762  01A1D2  5054               	movf	??_disk_initialize^0,w,c
 17763  01A1D4  0A00               	xorlw	0	; case 0
 17764  01A1D6  B4D8               	btfsc	status,2,c
 17765  01A1D8  EFCD  F0D0         	goto	l8895
 17766  01A1DC  EFF0  F0D0         	goto	l8905
 17767  01A1E0                     l8905:
 17768                           
 17769                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 17770  01A1E0  5057               	movf	disk_initialize@stat^0,w,c
 17771  01A1E2  0012               	return		;funcret
 17772  01A1E4                     __end_of_disk_initialize:
 17773                           	callstack 0
 17774                           
 17775 ;; *************** function _SD_SPI_MediaInitialize *****************
 17776 ;; Defined at:
 17777 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  CSDResponse    20   44[COMRAM] unsigned char [20]
 17782 ;;  response        5   76[COMRAM] struct .
 17783 ;;  c_size          4   72[COMRAM] unsigned long 
 17784 ;;  timeout         2   81[COMRAM] unsigned short 
 17785 ;;  count           1   71[COMRAM] unsigned char 
 17786 ;;  block_len       1   70[COMRAM] unsigned char 
 17787 ;;  index           1   69[COMRAM] unsigned char 
 17788 ;;  c_size_mult     1   68[COMRAM] unsigned char 
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      _Bool 
 17791 ;; Registers used:
 17792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17799 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17800 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17801 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;Total ram usage:       50 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; Hardware stack levels required when called:    2
 17805 ;; This function calls:
 17806 ;;		_SDFAST_open
 17807 ;;		_SDSLOW_open
 17808 ;;		_SD_SPI_DelayMilliseconds
 17809 ;;		_SD_SendCmd
 17810 ;;		_SPI1_Close
 17811 ;;		_SPI1_ExchangeByte
 17812 ;;		___lmul
 17813 ;; This function is called by:
 17814 ;;		_disk_initialize
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           	psect	text56
 17819  011DB6                     __ptext56:
 17820                           	callstack 0
 17821  011DB6                     _SD_SPI_MediaInitialize:
 17822                           	callstack 23
 17823  011DB6                     
 17824                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 17825  011DB6  0E00               	movlw	0
 17826  011DB8  0101               	movlb	1	; () banked
 17827  011DBA  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 17828                           
 17829                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 17830  011DBC  0E00               	movlw	0
 17831  011DBE  6FD3               	movwf	_mediaInformation& (0+255),b
 17832                           
 17833                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 17834  011DC0  0E00               	movlw	0
 17835  011DC2  6FD7               	movwf	(_mediaInformation+4)& (0+255),b
 17836  011DC4  0E00               	movlw	0
 17837  011DC6  6FD8               	movwf	(_mediaInformation+5)& (0+255),b
 17838  011DC8  0E00               	movlw	0
 17839  011DCA  6FD9               	movwf	(_mediaInformation+6)& (0+255),b
 17840  011DCC  0E00               	movlw	0
 17841  011DCE  6FDA               	movwf	(_mediaInformation+7)& (0+255),b
 17842                           
 17843                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 17844  011DD0  0E00               	movlw	0
 17845  011DD2  6FDB               	movwf	(_mediaInformation+8)& (0+255),b
 17846  011DD4                     
 17847                           ; BSR set to: 1
 17848  011DD4  8ABA               	bsf	186,5,c	;volatile
 17849  011DD6                     
 17850                           ; BSR set to: 1
 17851                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 17852  011DD6  0EA9               	movlw	low (_spiMaster+33)
 17853  011DD8  6EF6               	movwf	tblptrl,c
 17854  011DDA  0EFE               	movlw	high (_spiMaster+33)
 17855  011DDC  6EF7               	movwf	tblptrh,c
 17856  011DDE                     	if	0	;tblptru may be non-zero
 17857  011DDE                     	endif
 17858  011DDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17859  011DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 17860  011DE0  6EF8               	movwf	tblptru,c
 17861  011DE2                     	endif
 17862  011DE2  D802               	call	u9078
 17863  011DE4  EF01  F08F         	goto	u9079
 17864  011DE8                     u9078:
 17865  011DE8  0005               	push	
 17866  011DEA  6EFA               	movwf	pclath,c
 17867  011DEC  0009               	tblrd		*+
 17868  011DEE  50F5               	movf	tablat,w,c
 17869  011DF0  6EFD               	movwf	tosl,c
 17870  011DF2  0009               	tblrd		*+
 17871  011DF4  50F5               	movf	tablat,w,c
 17872  011DF6  6EFE               	movwf	tosh,c
 17873  011DF8  0009               	tblrd		*+
 17874  011DFA  50F5               	movf	tablat,w,c
 17875  011DFC  6EFF               	movwf	tosu,c
 17876  011DFE  50FA               	movf	pclath,w,c
 17877  011E00  0012               	return		;indir
 17878  011E02                     u9079:
 17879  011E02  0900               	iorlw	0
 17880  011E04  A4D8               	btfss	status,2,c
 17881  011E06  EF07  F08F         	goto	u9081
 17882  011E0A  EF09  F08F         	goto	u9080
 17883  011E0E                     u9081:
 17884  011E0E  EF0C  F08F         	goto	l8341
 17885  011E12                     u9080:
 17886  011E12                     l8337:
 17887                           
 17888                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 17889  011E12  0E00               	movlw	0
 17890  011E14  EFB9  F092         	goto	l756
 17891  011E18                     l8341:
 17892                           
 17893                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 17894  011E18  0E1E               	movlw	30
 17895  011E1A  ECE2  F0CF         	call	_SD_SPI_DelayMilliseconds
 17896  011E1E                     
 17897                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 17898  011E1E  0E00               	movlw	0
 17899  011E20  6E53               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 17900  011E22  0E64               	movlw	100
 17901  011E24  6E52               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 17902  011E26                     l8345:
 17903  011E26  8ABA               	bsf	186,5,c	;volatile
 17904  011E28                     
 17905                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 17906  011E28  0E8E               	movlw	low (_spiMaster+6)
 17907  011E2A  6EF6               	movwf	tblptrl,c
 17908  011E2C  0EFE               	movlw	high (_spiMaster+6)
 17909  011E2E  6EF7               	movwf	tblptrh,c
 17910  011E30                     	if	0	;tblptru may be non-zero
 17911  011E30                     	endif
 17912  011E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17913  011E30  0E00               	movlw	low (__mediumconst shr (0+16))
 17914  011E32  6EF8               	movwf	tblptru,c
 17915  011E34                     	endif
 17916  011E34  D802               	call	u9098
 17917  011E36  EF2B  F08F         	goto	u9099
 17918  011E3A                     u9098:
 17919  011E3A  0005               	push	
 17920  011E3C  6EFA               	movwf	pclath,c
 17921  011E3E  0009               	tblrd		*+
 17922  011E40  50F5               	movf	tablat,w,c
 17923  011E42  6EFD               	movwf	tosl,c
 17924  011E44  0009               	tblrd		*+
 17925  011E46  50F5               	movf	tablat,w,c
 17926  011E48  6EFE               	movwf	tosh,c
 17927  011E4A  0009               	tblrd		*+
 17928  011E4C  50F5               	movf	tablat,w,c
 17929  011E4E  6EFF               	movwf	tosu,c
 17930  011E50  50FA               	movf	pclath,w,c
 17931  011E52  0EFF               	movlw	255
 17932  011E54  0012               	return		;indir
 17933  011E56                     u9099:
 17934  011E56  9ABA               	bcf	186,5,c	;volatile
 17935  011E58                     
 17936                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 17937  011E58  0652               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 17938  011E5A  A0D8               	btfss	status,0,c
 17939  011E5C  0653               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 17940  011E5E                     
 17941                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 17942  011E5E  0E00               	movlw	0
 17943  011E60  6E0C               	movwf	SD_SendCmd@address^0,c
 17944  011E62  0E00               	movlw	0
 17945  011E64  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 17946  011E66  0E00               	movlw	0
 17947  011E68  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 17948  011E6A  0E00               	movlw	0
 17949  011E6C  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 17950  011E6E  0E00               	movlw	0
 17951  011E70  ECBB  F0A0         	call	_SD_SendCmd
 17952  011E74  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 17953  011E78  0E04               	movlw	4
 17954  011E7A                     u9101:
 17955  011E7A  006F FFAF FFDB     	movff	plusw0,plusw2
 17956  011E80  06E8               	decf	wreg,f,c
 17957  011E82  E2FB               	bc	u9101
 17958  011E84                     
 17959                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 17960  011E84  044D               	decf	SD_SPI_MediaInitialize@response^0,w,c
 17961  011E86  B4D8               	btfsc	status,2,c
 17962  011E88  EF48  F08F         	goto	u9111
 17963  011E8C  EF4A  F08F         	goto	u9110
 17964  011E90                     u9111:
 17965  011E90  EF53  F08F         	goto	l8359
 17966  011E94                     u9110:
 17967  011E94  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 17968  011E96  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 17969  011E98  A4D8               	btfss	status,2,c
 17970  011E9A  EF51  F08F         	goto	u9121
 17971  011E9E  EF53  F08F         	goto	u9120
 17972  011EA2                     u9121:
 17973  011EA2  EF13  F08F         	goto	l8345
 17974  011EA6                     u9120:
 17975  011EA6                     l8359:
 17976                           
 17977                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 17978  011EA6  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 17979  011EA8  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 17980  011EAA  A4D8               	btfss	status,2,c
 17981  011EAC  EF5A  F08F         	goto	u9131
 17982  011EB0  EF5C  F08F         	goto	u9130
 17983  011EB4                     u9131:
 17984  011EB4  EFB7  F08F         	goto	l8383
 17985  011EB8                     u9130:
 17986  011EB8  8ABA               	bsf	186,5,c	;volatile
 17987  011EBA                     
 17988                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 17989  011EBA  0E8E               	movlw	low (_spiMaster+6)
 17990  011EBC  6EF6               	movwf	tblptrl,c
 17991  011EBE  0EFE               	movlw	high (_spiMaster+6)
 17992  011EC0  6EF7               	movwf	tblptrh,c
 17993  011EC2                     	if	0	;tblptru may be non-zero
 17994  011EC2                     	endif
 17995  011EC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17996  011EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 17997  011EC4  6EF8               	movwf	tblptru,c
 17998  011EC6                     	endif
 17999  011EC6  D802               	call	u9148
 18000  011EC8  EF74  F08F         	goto	u9149
 18001  011ECC                     u9148:
 18002  011ECC  0005               	push	
 18003  011ECE  6EFA               	movwf	pclath,c
 18004  011ED0  0009               	tblrd		*+
 18005  011ED2  50F5               	movf	tablat,w,c
 18006  011ED4  6EFD               	movwf	tosl,c
 18007  011ED6  0009               	tblrd		*+
 18008  011ED8  50F5               	movf	tablat,w,c
 18009  011EDA  6EFE               	movwf	tosh,c
 18010  011EDC  0009               	tblrd		*+
 18011  011EDE  50F5               	movf	tablat,w,c
 18012  011EE0  6EFF               	movwf	tosu,c
 18013  011EE2  50FA               	movf	pclath,w,c
 18014  011EE4  0EFF               	movlw	255
 18015  011EE6  0012               	return		;indir
 18016  011EE8                     u9149:
 18017  011EE8  9ABA               	bcf	186,5,c	;volatile
 18018  011EEA                     
 18019                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 18020  011EEA  0E00               	movlw	0
 18021  011EEC  6E0C               	movwf	SD_SendCmd@address^0,c
 18022  011EEE  0E00               	movlw	0
 18023  011EF0  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18024  011EF2  0E00               	movlw	0
 18025  011EF4  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18026  011EF6  0E00               	movlw	0
 18027  011EF8  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18028  011EFA  0E05               	movlw	5
 18029  011EFC  ECBB  F0A0         	call	_SD_SendCmd
 18030  011F00                     
 18031                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 18032  011F00  0E00               	movlw	0
 18033  011F02  6E0C               	movwf	SD_SendCmd@address^0,c
 18034  011F04  0E00               	movlw	0
 18035  011F06  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18036  011F08  0E00               	movlw	0
 18037  011F0A  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18038  011F0C  0E00               	movlw	0
 18039  011F0E  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18040  011F10  0E00               	movlw	0
 18041  011F12  ECBB  F0A0         	call	_SD_SendCmd
 18042  011F16  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18043  011F1A  0E04               	movlw	4
 18044  011F1C                     u9151:
 18045  011F1C  006F FFAF FFDB     	movff	plusw0,plusw2
 18046  011F22  06E8               	decf	wreg,f,c
 18047  011F24  E2FB               	bc	u9151
 18048  011F26                     
 18049                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 18050  011F26  044D               	decf	SD_SPI_MediaInitialize@response^0,w,c
 18051  011F28  B4D8               	btfsc	status,2,c
 18052  011F2A  EF99  F08F         	goto	u9161
 18053  011F2E  EF9B  F08F         	goto	u9160
 18054  011F32                     u9161:
 18055  011F32  EFB7  F08F         	goto	l8383
 18056  011F36                     u9160:
 18057  011F36                     
 18058                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18059  011F36  0E02               	movlw	2
 18060  011F38  0101               	movlb	1	; () banked
 18061  011F3A  6FD3               	movwf	_mediaInformation& (0+255),b
 18062  011F3C                     
 18063                           ; BSR set to: 1
 18064  011F3C  8ABA               	bsf	186,5,c	;volatile
 18065  011F3E                     
 18066                           ; BSR set to: 1
 18067                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 18068  011F3E  0E88               	movlw	low _spiMaster
 18069  011F40  6EF6               	movwf	tblptrl,c
 18070  011F42                     	if	1	;There is more than 1 active tblptr byte
 18071  011F42  0EFE               	movlw	high _spiMaster
 18072  011F44  6EF7               	movwf	tblptrh,c
 18073  011F46                     	endif
 18074  011F46                     	if	1	;There are 3 active tblptr bytes
 18075  011F46  0E00               	movlw	low (_spiMaster shr (0+16))
 18076  011F48  6EF8               	movwf	tblptru,c
 18077  011F4A                     	endif
 18078  011F4A  D802               	call	u9178
 18079  011F4C  EFB5  F08F         	goto	u9179
 18080  011F50                     u9178:
 18081  011F50  0005               	push	
 18082  011F52  6EFA               	movwf	pclath,c
 18083  011F54  0009               	tblrd		*+
 18084  011F56  50F5               	movf	tablat,w,c
 18085  011F58  6EFD               	movwf	tosl,c
 18086  011F5A  0009               	tblrd		*+
 18087  011F5C  50F5               	movf	tablat,w,c
 18088  011F5E  6EFE               	movwf	tosh,c
 18089  011F60  0009               	tblrd		*+
 18090  011F62  50F5               	movf	tablat,w,c
 18091  011F64  6EFF               	movwf	tosu,c
 18092  011F66  50FA               	movf	pclath,w,c
 18093  011F68  0012               	return		;indir
 18094  011F6A                     u9179:
 18095  011F6A  EF09  F08F         	goto	l8337
 18096  011F6E                     l8383:
 18097                           
 18098                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 18099  011F6E  0EAA               	movlw	170
 18100  011F70  6E0C               	movwf	SD_SendCmd@address^0,c
 18101  011F72  0E01               	movlw	1
 18102  011F74  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18103  011F76  0E00               	movlw	0
 18104  011F78  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18105  011F7A  0E00               	movlw	0
 18106  011F7C  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18107  011F7E  0E02               	movlw	2
 18108  011F80  ECBB  F0A0         	call	_SD_SendCmd
 18109  011F84  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18110  011F88  0E04               	movlw	4
 18111  011F8A                     u9181:
 18112  011F8A  006F FFAF FFDB     	movff	plusw0,plusw2
 18113  011F90  06E8               	decf	wreg,f,c
 18114  011F92  E2FB               	bc	u9181
 18115  011F94                     
 18116                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 18117  011F94  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response+1
 18118  011F98  0EFF               	movlw	255
 18119  011F9A  14DE               	andwf	postinc2,w,c
 18120  011F9C  6E22               	movwf	??_SD_SPI_MediaInitialize^0,c
 18121  011F9E  0E0F               	movlw	15
 18122  011FA0  14DE               	andwf	postinc2,w,c
 18123  011FA2  6E23               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 18124  011FA4  0E00               	movlw	0
 18125  011FA6  14DE               	andwf	postinc2,w,c
 18126  011FA8  6E24               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 18127  011FAA  0E00               	movlw	0
 18128  011FAC  14DE               	andwf	postinc2,w,c
 18129  011FAE  6E25               	movwf	(??_SD_SPI_MediaInitialize+3)^0,c
 18130  011FB0  0EAA               	movlw	170
 18131  011FB2  1822               	xorwf	??_SD_SPI_MediaInitialize^0,w,c
 18132  011FB4  E108               	bnz	u9191
 18133  011FB6  0423               	decf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18134  011FB8  1024               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 18135  011FBA  1025               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 18136  011FBC  A4D8               	btfss	status,2,c
 18137  011FBE  EFE3  F08F         	goto	u9191
 18138  011FC2  EFE5  F08F         	goto	u9190
 18139  011FC6                     u9191:
 18140  011FC6  EF60  F090         	goto	l8419
 18141  011FCA                     u9190:
 18142  011FCA  B44D               	btfsc	SD_SPI_MediaInitialize@response^0,2,c
 18143  011FCC  EFEA  F08F         	goto	u9201
 18144  011FD0  EFEC  F08F         	goto	u9200
 18145  011FD4                     u9201:
 18146  011FD4  EF60  F090         	goto	l8419
 18147  011FD8                     u9200:
 18148  011FD8  0E00               	movlw	0
 18149  011FDA  6E0C               	movwf	SD_SendCmd@address^0,c
 18150  011FDC  0E00               	movlw	0
 18151  011FDE  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18152  011FE0  0E00               	movlw	0
 18153  011FE2  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18154  011FE4  0E00               	movlw	0
 18155  011FE6  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18156  011FE8  0E10               	movlw	16
 18157  011FEA  ECBB  F0A0         	call	_SD_SendCmd
 18158  011FEE                     
 18159                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 18160  011FEE  0E00               	movlw	0
 18161  011FF0  6E53               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 18162  011FF2  0E00               	movlw	0
 18163  011FF4  6E52               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 18164  011FF6                     l8397:
 18165                           
 18166                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 18167  011FF6  0E00               	movlw	0
 18168  011FF8  6E0C               	movwf	SD_SendCmd@address^0,c
 18169  011FFA  0E00               	movlw	0
 18170  011FFC  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18171  011FFE  0E00               	movlw	0
 18172  012000  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18173  012002  0E00               	movlw	0
 18174  012004  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18175  012006  0E0F               	movlw	15
 18176  012008  ECBB  F0A0         	call	_SD_SendCmd
 18177                           
 18178                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 18179  01200C  0E00               	movlw	0
 18180  01200E  6E0C               	movwf	SD_SendCmd@address^0,c
 18181  012010  0E00               	movlw	0
 18182  012012  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18183  012014  0E00               	movlw	0
 18184  012016  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18185  012018  0E40               	movlw	64
 18186  01201A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18187  01201C  0E12               	movlw	18
 18188  01201E  ECBB  F0A0         	call	_SD_SendCmd
 18189  012022  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18190  012026  0E04               	movlw	4
 18191  012028                     u9211:
 18192  012028  006F FFAF FFDB     	movff	plusw0,plusw2
 18193  01202E  06E8               	decf	wreg,f,c
 18194  012030  E2FB               	bc	u9211
 18195  012032                     
 18196                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 18197  012032  504D               	movf	SD_SPI_MediaInitialize@response^0,w,c
 18198  012034  A4D8               	btfss	status,2,c
 18199  012036  EF1F  F090         	goto	u9221
 18200  01203A  EF21  F090         	goto	u9220
 18201  01203E                     u9221:
 18202  01203E  EF23  F090         	goto	l8403
 18203  012042                     u9220:
 18204  012042  EF2F  F090         	goto	l8407
 18205  012046                     l8403:
 18206                           
 18207                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 18208  012046  4A52               	infsnz	SD_SPI_MediaInitialize@timeout^0,f,c
 18209  012048  2A53               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 18210  01204A  2852               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 18211  01204C  E106               	bnz	u9231
 18212  01204E  2853               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18213  012050  A4D8               	btfss	status,2,c
 18214  012052  EF2D  F090         	goto	u9231
 18215  012056  EF2F  F090         	goto	u9230
 18216  01205A                     u9231:
 18217  01205A  EFFB  F08F         	goto	l8397
 18218  01205E                     u9230:
 18219  01205E                     l8407:
 18220                           
 18221                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 18222  01205E  2852               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 18223  012060  E106               	bnz	u9241
 18224  012062  2853               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18225  012064  A4D8               	btfss	status,2,c
 18226  012066  EF37  F090         	goto	u9241
 18227  01206A  EF39  F090         	goto	u9240
 18228  01206E                     u9241:
 18229  01206E  EF3C  F090         	goto	l8411
 18230  012072                     u9240:
 18231  012072                     
 18232                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18233  012072  0E02               	movlw	2
 18234  012074  0101               	movlb	1	; () banked
 18235  012076  6FD3               	movwf	_mediaInformation& (0+255),b
 18236  012078                     l8411:
 18237                           
 18238                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 18239  012078  0E00               	movlw	0
 18240  01207A  6E0C               	movwf	SD_SendCmd@address^0,c
 18241  01207C  0E00               	movlw	0
 18242  01207E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18243  012080  0E00               	movlw	0
 18244  012082  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18245  012084  0E00               	movlw	0
 18246  012086  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18247  012088  0E10               	movlw	16
 18248  01208A  ECBB  F0A0         	call	_SD_SendCmd
 18249  01208E  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18250  012092  0E04               	movlw	4
 18251  012094                     u9251:
 18252  012094  006F FFAF FFDB     	movff	plusw0,plusw2
 18253  01209A  06E8               	decf	wreg,f,c
 18254  01209C  E2FB               	bc	u9251
 18255  01209E                     
 18256                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 18257  01209E  AC51               	btfss	(SD_SPI_MediaInitialize@response+4)^0,6,c
 18258  0120A0  EF54  F090         	goto	u9261
 18259  0120A4  EF56  F090         	goto	u9260
 18260  0120A8                     u9261:
 18261  0120A8  EF5B  F090         	goto	l8417
 18262  0120AC                     u9260:
 18263  0120AC                     
 18264                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 18265  0120AC  0E01               	movlw	1
 18266  0120AE  0101               	movlb	1	; () banked
 18267  0120B0  6FDB               	movwf	(_mediaInformation+8)& (0+255),b
 18268                           
 18269                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 18270  0120B2  EF9E  F090         	goto	l793
 18271  0120B6                     l8417:
 18272                           
 18273                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 18274  0120B6  0E00               	movlw	0
 18275  0120B8  0101               	movlb	1	; () banked
 18276  0120BA  6FDB               	movwf	(_mediaInformation+8)& (0+255),b
 18277  0120BC  EF9E  F090         	goto	l793
 18278  0120C0                     l8419:
 18279                           
 18280                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 18281  0120C0  0E01               	movlw	1
 18282  0120C2  ECE2  F0CF         	call	_SD_SPI_DelayMilliseconds
 18283  0120C6  9ABA               	bcf	186,5,c	;volatile
 18284  0120C8                     
 18285                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 18286  0120C8  0E00               	movlw	0
 18287  0120CA  0101               	movlb	1	; () banked
 18288  0120CC  6FDB               	movwf	(_mediaInformation+8)& (0+255),b
 18289  0120CE                     
 18290                           ; BSR set to: 1
 18291                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 18292  0120CE  0E1F               	movlw	31
 18293  0120D0  6E53               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 18294  0120D2  6852               	setf	SD_SPI_MediaInitialize@timeout^0,c
 18295  0120D4                     l8427:
 18296                           
 18297                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 18298  0120D4  0E00               	movlw	0
 18299  0120D6  6E0C               	movwf	SD_SendCmd@address^0,c
 18300  0120D8  0E00               	movlw	0
 18301  0120DA  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18302  0120DC  0E00               	movlw	0
 18303  0120DE  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18304  0120E0  0E00               	movlw	0
 18305  0120E2  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18306  0120E4  0E01               	movlw	1
 18307  0120E6  ECBB  F0A0         	call	_SD_SendCmd
 18308  0120EA  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18309  0120EE  0E04               	movlw	4
 18310  0120F0                     u9271:
 18311  0120F0  006F FFAF FFDB     	movff	plusw0,plusw2
 18312  0120F6  06E8               	decf	wreg,f,c
 18313  0120F8  E2FB               	bc	u9271
 18314  0120FA                     
 18315                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 18316  0120FA  0652               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 18317  0120FC  A0D8               	btfss	status,0,c
 18318  0120FE  0653               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 18319  012100                     
 18320                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 18321  012100  504D               	movf	SD_SPI_MediaInitialize@response^0,w,c
 18322  012102  B4D8               	btfsc	status,2,c
 18323  012104  EF86  F090         	goto	u9281
 18324  012108  EF88  F090         	goto	u9280
 18325  01210C                     u9281:
 18326  01210C  EF91  F090         	goto	l8435
 18327  012110                     u9280:
 18328  012110  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 18329  012112  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18330  012114  A4D8               	btfss	status,2,c
 18331  012116  EF8F  F090         	goto	u9291
 18332  01211A  EF91  F090         	goto	u9290
 18333  01211E                     u9291:
 18334  01211E  EF6A  F090         	goto	l8427
 18335  012122                     u9290:
 18336  012122                     l8435:
 18337                           
 18338                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 18339  012122  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 18340  012124  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18341  012126  A4D8               	btfss	status,2,c
 18342  012128  EF98  F090         	goto	u9301
 18343  01212C  EF9A  F090         	goto	u9300
 18344  012130                     u9301:
 18345  012130  EF9E  F090         	goto	l793
 18346  012134                     u9300:
 18347  012134                     
 18348                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18349  012134  0E02               	movlw	2
 18350  012136  0101               	movlb	1	; () banked
 18351  012138  6FD3               	movwf	_mediaInformation& (0+255),b
 18352  01213A                     
 18353                           ; BSR set to: 1
 18354  01213A  8ABA               	bsf	186,5,c	;volatile
 18355  01213C                     l793:
 18356  01213C  8ABA               	bsf	186,5,c	;volatile
 18357  01213E                     
 18358                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 18359  01213E  0E88               	movlw	low _spiMaster
 18360  012140  6EF6               	movwf	tblptrl,c
 18361  012142                     	if	1	;There is more than 1 active tblptr byte
 18362  012142  0EFE               	movlw	high _spiMaster
 18363  012144  6EF7               	movwf	tblptrh,c
 18364  012146                     	endif
 18365  012146                     	if	1	;There are 3 active tblptr bytes
 18366  012146  0E00               	movlw	low (_spiMaster shr (0+16))
 18367  012148  6EF8               	movwf	tblptru,c
 18368  01214A                     	endif
 18369  01214A  D802               	call	u9318
 18370  01214C  EFB5  F090         	goto	u9319
 18371  012150                     u9318:
 18372  012150  0005               	push	
 18373  012152  6EFA               	movwf	pclath,c
 18374  012154  0009               	tblrd		*+
 18375  012156  50F5               	movf	tablat,w,c
 18376  012158  6EFD               	movwf	tosl,c
 18377  01215A  0009               	tblrd		*+
 18378  01215C  50F5               	movf	tablat,w,c
 18379  01215E  6EFE               	movwf	tosh,c
 18380  012160  0009               	tblrd		*+
 18381  012162  50F5               	movf	tablat,w,c
 18382  012164  6EFF               	movwf	tosu,c
 18383  012166  50FA               	movf	pclath,w,c
 18384  012168  0012               	return		;indir
 18385  01216A                     u9319:
 18386  01216A                     
 18387                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 18388  01216A  0E8B               	movlw	low (_spiMaster+3)
 18389  01216C  6EF6               	movwf	tblptrl,c
 18390  01216E  0EFE               	movlw	high (_spiMaster+3)
 18391  012170  6EF7               	movwf	tblptrh,c
 18392  012172                     	if	0	;tblptru may be non-zero
 18393  012172                     	endif
 18394  012172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18395  012172  0E00               	movlw	low (__mediumconst shr (0+16))
 18396  012174  6EF8               	movwf	tblptru,c
 18397  012176                     	endif
 18398  012176  D802               	call	u9328
 18399  012178  EFCB  F090         	goto	u9329
 18400  01217C                     u9328:
 18401  01217C  0005               	push	
 18402  01217E  6EFA               	movwf	pclath,c
 18403  012180  0009               	tblrd		*+
 18404  012182  50F5               	movf	tablat,w,c
 18405  012184  6EFD               	movwf	tosl,c
 18406  012186  0009               	tblrd		*+
 18407  012188  50F5               	movf	tablat,w,c
 18408  01218A  6EFE               	movwf	tosh,c
 18409  01218C  0009               	tblrd		*+
 18410  01218E  50F5               	movf	tablat,w,c
 18411  012190  6EFF               	movwf	tosu,c
 18412  012192  50FA               	movf	pclath,w,c
 18413  012194  0012               	return		;indir
 18414  012196                     u9329:
 18415  012196  0900               	iorlw	0
 18416  012198  A4D8               	btfss	status,2,c
 18417  01219A  EFD1  F090         	goto	u9331
 18418  01219E  EFD3  F090         	goto	u9330
 18419  0121A2                     u9331:
 18420  0121A2  EFD5  F090         	goto	l796
 18421  0121A6                     u9330:
 18422  0121A6  EF09  F08F         	goto	l8337
 18423  0121AA                     l796:
 18424  0121AA  9ABA               	bcf	186,5,c	;volatile
 18425  0121AC                     
 18426                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 18427  0121AC  0E00               	movlw	0
 18428  0121AE  6E53               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 18429  0121B0  0E14               	movlw	20
 18430  0121B2  6E52               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 18431  0121B4                     l8451:
 18432                           
 18433                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 18434  0121B4  0E00               	movlw	0
 18435  0121B6  6E0C               	movwf	SD_SendCmd@address^0,c
 18436  0121B8  0E00               	movlw	0
 18437  0121BA  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18438  0121BC  0E00               	movlw	0
 18439  0121BE  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18440  0121C0  0E00               	movlw	0
 18441  0121C2  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18442  0121C4  0E03               	movlw	3
 18443  0121C6  ECBB  F0A0         	call	_SD_SendCmd
 18444  0121CA  EE20  F04D         	lfsr	2,SD_SPI_MediaInitialize@response
 18445  0121CE  0E04               	movlw	4
 18446  0121D0                     u9341:
 18447  0121D0  006F FFAF FFDB     	movff	plusw0,plusw2
 18448  0121D6  06E8               	decf	wreg,f,c
 18449  0121D8  E2FB               	bc	u9341
 18450  0121DA                     
 18451                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 18452  0121DA  0652               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 18453  0121DC  A0D8               	btfss	status,0,c
 18454  0121DE  0653               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 18455  0121E0                     
 18456                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 18457  0121E0  504D               	movf	SD_SPI_MediaInitialize@response^0,w,c
 18458  0121E2  B4D8               	btfsc	status,2,c
 18459  0121E4  EFF6  F090         	goto	u9351
 18460  0121E8  EFF8  F090         	goto	u9350
 18461  0121EC                     u9351:
 18462  0121EC  EF01  F091         	goto	l8459
 18463  0121F0                     u9350:
 18464  0121F0  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 18465  0121F2  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18466  0121F4  A4D8               	btfss	status,2,c
 18467  0121F6  EFFF  F090         	goto	u9361
 18468  0121FA  EF01  F091         	goto	u9360
 18469  0121FE                     u9361:
 18470  0121FE  EFDA  F090         	goto	l8451
 18471  012202                     u9360:
 18472  012202                     l8459:
 18473                           
 18474                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 18475  012202  5052               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 18476  012204  1053               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 18477  012206  A4D8               	btfss	status,2,c
 18478  012208  EF08  F091         	goto	u9371
 18479  01220C  EF0A  F091         	goto	u9370
 18480  012210                     u9371:
 18481  012210  EF26  F091         	goto	l8471
 18482  012214                     u9370:
 18483  012214                     
 18484                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 18485  012214  0E02               	movlw	2
 18486  012216  0101               	movlb	1	; () banked
 18487  012218  6FD3               	movwf	_mediaInformation& (0+255),b
 18488  01221A                     
 18489                           ; BSR set to: 1
 18490  01221A  8ABA               	bsf	186,5,c	;volatile
 18491  01221C                     
 18492                           ; BSR set to: 1
 18493                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 18494  01221C  0E88               	movlw	low _spiMaster
 18495  01221E  6EF6               	movwf	tblptrl,c
 18496  012220                     	if	1	;There is more than 1 active tblptr byte
 18497  012220  0EFE               	movlw	high _spiMaster
 18498  012222  6EF7               	movwf	tblptrh,c
 18499  012224                     	endif
 18500  012224                     	if	1	;There are 3 active tblptr bytes
 18501  012224  0E00               	movlw	low (_spiMaster shr (0+16))
 18502  012226  6EF8               	movwf	tblptru,c
 18503  012228                     	endif
 18504  012228  D802               	call	u9388
 18505  01222A  EF24  F091         	goto	u9389
 18506  01222E                     u9388:
 18507  01222E  0005               	push	
 18508  012230  6EFA               	movwf	pclath,c
 18509  012232  0009               	tblrd		*+
 18510  012234  50F5               	movf	tablat,w,c
 18511  012236  6EFD               	movwf	tosl,c
 18512  012238  0009               	tblrd		*+
 18513  01223A  50F5               	movf	tablat,w,c
 18514  01223C  6EFE               	movwf	tosh,c
 18515  01223E  0009               	tblrd		*+
 18516  012240  50F5               	movf	tablat,w,c
 18517  012242  6EFF               	movwf	tosu,c
 18518  012244  50FA               	movf	pclath,w,c
 18519  012246  0012               	return		;indir
 18520  012248                     u9389:
 18521  012248  EF09  F08F         	goto	l8337
 18522  01224C                     l8471:
 18523                           
 18524                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 18525  01224C  0E00               	movlw	0
 18526  01224E  6E46               	movwf	SD_SPI_MediaInitialize@index^0,c
 18527                           
 18528                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 18529  012250  0E00               	movlw	0
 18530  012252  6E48               	movwf	SD_SPI_MediaInitialize@count^0,c
 18531  012254                     l8477:
 18532                           
 18533                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 18534  012254  0E2D               	movlw	low SD_SPI_MediaInitialize@CSDResponse
 18535  012256  2446               	addwf	SD_SPI_MediaInitialize@index^0,w,c
 18536  012258  6ED9               	movwf	fsr2l,c
 18537  01225A  6ADA               	clrf	fsr2h,c
 18538  01225C  0E00               	movlw	high SD_SPI_MediaInitialize@CSDResponse
 18539  01225E  22DA               	addwfc	fsr2h,f,c
 18540  012260  0E8E               	movlw	low (_spiMaster+6)
 18541  012262  6EF6               	movwf	tblptrl,c
 18542  012264  0EFE               	movlw	high (_spiMaster+6)
 18543  012266  6EF7               	movwf	tblptrh,c
 18544  012268                     	if	0	;tblptru may be non-zero
 18545  012268                     	endif
 18546  012268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18547  012268  0E00               	movlw	low (__mediumconst shr (0+16))
 18548  01226A  6EF8               	movwf	tblptru,c
 18549  01226C                     	endif
 18550  01226C  D802               	call	u9398
 18551  01226E  EF47  F091         	goto	u9399
 18552  012272                     u9398:
 18553  012272  0005               	push	
 18554  012274  6EFA               	movwf	pclath,c
 18555  012276  0009               	tblrd		*+
 18556  012278  50F5               	movf	tablat,w,c
 18557  01227A  6EFD               	movwf	tosl,c
 18558  01227C  0009               	tblrd		*+
 18559  01227E  50F5               	movf	tablat,w,c
 18560  012280  6EFE               	movwf	tosh,c
 18561  012282  0009               	tblrd		*+
 18562  012284  50F5               	movf	tablat,w,c
 18563  012286  6EFF               	movwf	tosu,c
 18564  012288  50FA               	movf	pclath,w,c
 18565  01228A  0EFF               	movlw	255
 18566  01228C  0012               	return		;indir
 18567  01228E                     u9399:
 18568  01228E  6EDF               	movwf	indf2,c
 18569  012290                     
 18570                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 18571  012290  2A46               	incf	SD_SPI_MediaInitialize@index^0,f,c
 18572  012292                     
 18573                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 18574  012292  5048               	movf	SD_SPI_MediaInitialize@count^0,w,c
 18575  012294  A4D8               	btfss	status,2,c
 18576  012296  EF4F  F091         	goto	u9401
 18577  01229A  EF51  F091         	goto	u9400
 18578  01229E                     u9401:
 18579  01229E  EF5C  F091         	goto	l8487
 18580  0122A2                     u9400:
 18581  0122A2  0EFE               	movlw	254
 18582  0122A4  182D               	xorwf	SD_SPI_MediaInitialize@CSDResponse^0,w,c
 18583  0122A6  A4D8               	btfss	status,2,c
 18584  0122A8  EF58  F091         	goto	u9411
 18585  0122AC  EF5A  F091         	goto	u9410
 18586  0122B0                     u9411:
 18587  0122B0  EF5C  F091         	goto	l8487
 18588  0122B4                     u9410:
 18589  0122B4                     
 18590                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 18591  0122B4  0E00               	movlw	0
 18592  0122B6  6E46               	movwf	SD_SPI_MediaInitialize@index^0,c
 18593  0122B8                     l8487:
 18594                           
 18595                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 18596  0122B8  2A48               	incf	SD_SPI_MediaInitialize@count^0,f,c
 18597  0122BA  0E13               	movlw	19
 18598  0122BC  6448               	cpfsgt	SD_SPI_MediaInitialize@count^0,c
 18599  0122BE  EF63  F091         	goto	u9421
 18600  0122C2  EF65  F091         	goto	u9420
 18601  0122C6                     u9421:
 18602  0122C6  EF2A  F091         	goto	l8477
 18603  0122CA                     u9420:
 18604  0122CA                     
 18605                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 18606  0122CA  0E02               	movlw	2
 18607  0122CC  0101               	movlb	1	; () banked
 18608  0122CE  6FD5               	movwf	(_mediaInformation+2)& (0+255),b
 18609  0122D0  0E00               	movlw	0
 18610  0122D2  6FD4               	movwf	(_mediaInformation+1)& (0+255),b
 18611  0122D4                     
 18612                           ; BSR set to: 1
 18613                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 18614  0122D4  C02D  F022         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 18615  0122D8  0EC0               	movlw	192
 18616  0122DA  1622               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 18617  0122DC  B4D8               	btfsc	status,2,c
 18618  0122DE  EF73  F091         	goto	u9431
 18619  0122E2  EF75  F091         	goto	u9430
 18620  0122E6                     u9431:
 18621  0122E6  EFBB  F091         	goto	l8497
 18622  0122EA                     u9430:
 18623  0122EA                     
 18624                           ; BSR set to: 1
 18625                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 18626  0122EA  5035               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 18627  0122EC  6E23               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 18628  0122EE  6A22               	clrf	??_SD_SPI_MediaInitialize^0,c
 18629  0122F0  C034  F024         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 18630  0122F4  0E3F               	movlw	63
 18631  0122F6  1624               	andwf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 18632  0122F8  C024  F025         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 18633  0122FC  6A26               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 18634  0122FE  6A27               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 18635  012300  6A28               	clrf	(??_SD_SPI_MediaInitialize+6)^0,c
 18636  012302  C026  F028         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 18637  012306  C025  F027         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 18638  01230A  6A26               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 18639  01230C  6A25               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 18640  01230E  5022               	movf	??_SD_SPI_MediaInitialize^0,w,c
 18641  012310  1025               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 18642  012312  6E29               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 18643  012314  5023               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18644  012316  1026               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 18645  012318  6E2A               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 18646  01231A  0E00               	movlw	0
 18647  01231C  1027               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 18648  01231E  6E2B               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 18649  012320  0E00               	movlw	0
 18650  012322  1028               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 18651  012324  6E2C               	movwf	(??_SD_SPI_MediaInitialize+10)^0,c
 18652  012326  5036               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)^0,w,c
 18653  012328  1029               	iorwf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 18654  01232A  6E49               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 18655  01232C  502A               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 18656  01232E  6E4A               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 18657  012330  502B               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 18658  012332  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 18659  012334  502C               	movf	(??_SD_SPI_MediaInitialize+10)^0,w,c
 18660  012336  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 18661                           
 18662                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 18663  012338  C049  F022         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 18664  01233C  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 18665  012340  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 18666  012344  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 18667  012348  0E0A               	movlw	10
 18668  01234A                     u9445:
 18669  01234A  90D8               	bcf	status,0,c
 18670  01234C  3622               	rlcf	??_SD_SPI_MediaInitialize^0,f,c
 18671  01234E  3623               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 18672  012350  3624               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 18673  012352  3625               	rlcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 18674  012354  2EE8               	decfsz	wreg,f,c
 18675  012356  EFA5  F091         	goto	u9445
 18676  01235A  0EFF               	movlw	255
 18677  01235C  2422               	addwf	??_SD_SPI_MediaInitialize^0,w,c
 18678  01235E  6FD7               	movwf	(_mediaInformation+4)& (0+255),b
 18679  012360  0E03               	movlw	3
 18680  012362  2023               	addwfc	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18681  012364  6FD8               	movwf	(_mediaInformation+5)& (0+255),b
 18682  012366  0E00               	movlw	0
 18683  012368  2024               	addwfc	(??_SD_SPI_MediaInitialize+2)^0,w,c
 18684  01236A  6FD9               	movwf	(_mediaInformation+6)& (0+255),b
 18685  01236C  0E00               	movlw	0
 18686  01236E  2025               	addwfc	(??_SD_SPI_MediaInitialize+3)^0,w,c
 18687  012370  6FDA               	movwf	(_mediaInformation+7)& (0+255),b
 18688                           
 18689                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 18690  012372  EF68  F092         	goto	l8503
 18691  012376                     l8497:
 18692                           
 18693                           ; BSR set to: 1
 18694                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 18695  012376  5034               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)^0,w,c
 18696  012378  6E23               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 18697  01237A  6A22               	clrf	??_SD_SPI_MediaInitialize^0,c
 18698  01237C  C033  F024         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 18699  012380  6A25               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 18700  012382  6A26               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 18701  012384  6A27               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 18702  012386  C025  F027         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 18703  01238A  C024  F026         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 18704  01238E  6A25               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 18705  012390  6A24               	clrf	(??_SD_SPI_MediaInitialize+2)^0,c
 18706  012392  5022               	movf	??_SD_SPI_MediaInitialize^0,w,c
 18707  012394  1024               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 18708  012396  6E28               	movwf	(??_SD_SPI_MediaInitialize+6)^0,c
 18709  012398  5023               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18710  01239A  1025               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 18711  01239C  6E29               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 18712  01239E  0E00               	movlw	0
 18713  0123A0  1026               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 18714  0123A2  6E2A               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 18715  0123A4  0E00               	movlw	0
 18716  0123A6  1027               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 18717  0123A8  6E2B               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 18718  0123AA  5035               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 18719  0123AC  1028               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 18720  0123AE  6E49               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 18721  0123B0  5029               	movf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 18722  0123B2  6E4A               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 18723  0123B4  502A               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 18724  0123B6  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 18725  0123B8  502B               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 18726  0123BA  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 18727                           
 18728                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 18729  0123BC  0EC0               	movlw	192
 18730  0123BE  1649               	andwf	SD_SPI_MediaInitialize@c_size^0,f,c
 18731  0123C0  0EFF               	movlw	255
 18732  0123C2  164A               	andwf	(SD_SPI_MediaInitialize@c_size+1)^0,f,c
 18733  0123C4  0E03               	movlw	3
 18734  0123C6  164B               	andwf	(SD_SPI_MediaInitialize@c_size+2)^0,f,c
 18735  0123C8  0E00               	movlw	0
 18736  0123CA  164C               	andwf	(SD_SPI_MediaInitialize@c_size+3)^0,f,c
 18737                           
 18738                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 18739  0123CC  C049  F022         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 18740  0123D0  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 18741  0123D4  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 18742  0123D8  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 18743  0123DC  0E07               	movlw	7
 18744  0123DE  EFF6  F091         	goto	u9450
 18745  0123E2                     u9455:
 18746  0123E2  90D8               	bcf	status,0,c
 18747  0123E4  3225               	rrcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 18748  0123E6  3224               	rrcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 18749  0123E8  3223               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 18750  0123EA  3222               	rrcf	??_SD_SPI_MediaInitialize^0,f,c
 18751  0123EC                     u9450:
 18752  0123EC  2EE8               	decfsz	wreg,f,c
 18753  0123EE  EFF1  F091         	goto	u9455
 18754  0123F2  C022  F049         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 18755  0123F6  C023  F04A         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 18756  0123FA  C024  F04B         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 18757  0123FE  C025  F04C         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 18758                           
 18759                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 18760  012402  C036  F022         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 18761  012406  0E03               	movlw	3
 18762  012408  1622               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 18763  01240A  6A23               	clrf	(??_SD_SPI_MediaInitialize+1)^0,c
 18764  01240C  AE37               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)^0,7,c
 18765  01240E  D001               	bra	u9465
 18766  012410  2A23               	incf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 18767  012412                     u9465:
 18768  012412  3023               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18769  012414  3422               	rlcf	??_SD_SPI_MediaInitialize^0,w,c
 18770  012416  6E45               	movwf	SD_SPI_MediaInitialize@c_size_mult^0,c
 18771                           
 18772                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 18773  012418  5032               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)^0,w,c
 18774  01241A  0B0F               	andlw	15
 18775  01241C  6E47               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 18776                           
 18777                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 18778  01241E  C047  F022         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 18779  012422  0EF7               	movlw	-9
 18780  012424  2622               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 18781  012426  0E01               	movlw	1
 18782  012428  6E23               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 18783  01242A  2A22               	incf	??_SD_SPI_MediaInitialize^0,f,c
 18784  01242C  EF1A  F092         	goto	u9474
 18785  012430                     u9475:
 18786  012430  90D8               	bcf	status,0,c
 18787  012432  3623               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 18788  012434                     u9474:
 18789  012434  2E22               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 18790  012436  EF18  F092         	goto	u9475
 18791  01243A  5023               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 18792  01243C  6E47               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 18793  01243E                     
 18794                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 18795  01243E  0E01               	movlw	1
 18796  012440  2449               	addwf	SD_SPI_MediaInitialize@c_size^0,w,c
 18797  012442  6E01               	movwf	___lmul@multiplier^0,c
 18798  012444  0E00               	movlw	0
 18799  012446  204A               	addwfc	(SD_SPI_MediaInitialize@c_size+1)^0,w,c
 18800  012448  6E02               	movwf	(___lmul@multiplier+1)^0,c
 18801  01244A  0E00               	movlw	0
 18802  01244C  204B               	addwfc	(SD_SPI_MediaInitialize@c_size+2)^0,w,c
 18803  01244E  6E03               	movwf	(___lmul@multiplier+2)^0,c
 18804  012450  0E00               	movlw	0
 18805  012452  204C               	addwfc	(SD_SPI_MediaInitialize@c_size+3)^0,w,c
 18806  012454  6E04               	movwf	(___lmul@multiplier+3)^0,c
 18807  012456  C045  F022         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 18808  01245A  0E02               	movlw	2
 18809  01245C  2622               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 18810  01245E  0E01               	movlw	1
 18811  012460  6E23               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 18812  012462  0E00               	movlw	0
 18813  012464  6E24               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 18814  012466  2A22               	incf	??_SD_SPI_MediaInitialize^0,f,c
 18815  012468  EF39  F092         	goto	u9484
 18816  01246C                     u9485:
 18817  01246C  90D8               	bcf	status,0,c
 18818  01246E  3623               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 18819  012470  3624               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 18820  012472                     u9484:
 18821  012472  2E22               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 18822  012474  EF36  F092         	goto	u9485
 18823  012478  C023  F005         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 18824  01247C  C024  F006         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 18825  012480  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 18826  012482  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 18827  012484  ECE3  F0CE         	call	___lmul
 18828  012488  C001  F041         	movff	?___lmul,_SD_SPI_MediaInitialize$3995
 18829  01248C  C002  F042         	movff	?___lmul+1,_SD_SPI_MediaInitialize$3995+1
 18830  012490  C003  F043         	movff	?___lmul+2,_SD_SPI_MediaInitialize$3995+2
 18831  012494  C004  F044         	movff	?___lmul+3,_SD_SPI_MediaInitialize$3995+3
 18832  012498                     
 18833                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 18834  012498  C041  F001         	movff	_SD_SPI_MediaInitialize$3995,___lmul@multiplier
 18835  01249C  C042  F002         	movff	_SD_SPI_MediaInitialize$3995+1,___lmul@multiplier+1
 18836  0124A0  C043  F003         	movff	_SD_SPI_MediaInitialize$3995+2,___lmul@multiplier+2
 18837  0124A4  C044  F004         	movff	_SD_SPI_MediaInitialize$3995+3,___lmul@multiplier+3
 18838  0124A8  5047               	movf	SD_SPI_MediaInitialize@block_len^0,w,c
 18839  0124AA  6E05               	movwf	___lmul@multiplicand^0,c
 18840  0124AC  6A06               	clrf	(___lmul@multiplicand+1)^0,c
 18841  0124AE  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 18842  0124B0  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 18843  0124B2  ECE3  F0CE         	call	___lmul	;wreg free
 18844  0124B6  0EFF               	movlw	255
 18845  0124B8  2401               	addwf	?___lmul^0,w,c
 18846  0124BA  0101               	movlb	1	; () banked
 18847  0124BC  6FD7               	movwf	(_mediaInformation+4)& (0+255),b
 18848  0124BE  0EFF               	movlw	255
 18849  0124C0  2002               	addwfc	(?___lmul+1)^0,w,c
 18850  0124C2  6FD8               	movwf	(_mediaInformation+5)& (0+255),b
 18851  0124C4  0EFF               	movlw	255
 18852  0124C6  2003               	addwfc	(?___lmul+2)^0,w,c
 18853  0124C8  6FD9               	movwf	(_mediaInformation+6)& (0+255),b
 18854  0124CA  0EFF               	movlw	255
 18855  0124CC  2004               	addwfc	(?___lmul+3)^0,w,c
 18856  0124CE  6FDA               	movwf	(_mediaInformation+7)& (0+255),b
 18857  0124D0                     l8503:
 18858                           
 18859                           ; BSR set to: 1
 18860                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 18861  0124D0  0E00               	movlw	0
 18862  0124D2  6E0C               	movwf	SD_SendCmd@address^0,c
 18863  0124D4  0E00               	movlw	0
 18864  0124D6  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18865  0124D8  0E00               	movlw	0
 18866  0124DA  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18867  0124DC  0E00               	movlw	0
 18868  0124DE  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18869  0124E0  0E11               	movlw	17
 18870  0124E2  ECBB  F0A0         	call	_SD_SendCmd
 18871  0124E6                     
 18872                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 18873  0124E6  C1D4  F00C         	movff	_mediaInformation+1,SD_SendCmd@address
 18874  0124EA  C1D5  F00D         	movff	_mediaInformation+2,SD_SendCmd@address+1
 18875  0124EE  6A0E               	clrf	(SD_SendCmd@address+2)^0,c
 18876  0124F0  6A0F               	clrf	(SD_SendCmd@address+3)^0,c
 18877  0124F2  0E07               	movlw	7
 18878  0124F4  ECBB  F0A0         	call	_SD_SendCmd
 18879  0124F8  8ABA               	bsf	186,5,c	;volatile
 18880  0124FA                     
 18881                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 18882  0124FA  0101               	movlb	1	; () banked
 18883  0124FC  51D3               	movf	_mediaInformation& (0+255),w,b
 18884  0124FE  A4D8               	btfss	status,2,c
 18885  012500  EF84  F092         	goto	u9491
 18886  012504  EF86  F092         	goto	u9490
 18887  012508                     u9491:
 18888  012508  EFA1  F092         	goto	l8519
 18889  01250C                     u9490:
 18890  01250C                     
 18891                           ; BSR set to: 1
 18892                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 18893  01250C  0E01               	movlw	1
 18894  01250E  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 18895  012510                     
 18896                           ; BSR set to: 1
 18897                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 18898  012510  0E88               	movlw	low _spiMaster
 18899  012512  6EF6               	movwf	tblptrl,c
 18900  012514                     	if	1	;There is more than 1 active tblptr byte
 18901  012514  0EFE               	movlw	high _spiMaster
 18902  012516  6EF7               	movwf	tblptrh,c
 18903  012518                     	endif
 18904  012518                     	if	1	;There are 3 active tblptr bytes
 18905  012518  0E00               	movlw	low (_spiMaster shr (0+16))
 18906  01251A  6EF8               	movwf	tblptru,c
 18907  01251C                     	endif
 18908  01251C  D802               	call	u9508
 18909  01251E  EF9E  F092         	goto	u9509
 18910  012522                     u9508:
 18911  012522  0005               	push	
 18912  012524  6EFA               	movwf	pclath,c
 18913  012526  0009               	tblrd		*+
 18914  012528  50F5               	movf	tablat,w,c
 18915  01252A  6EFD               	movwf	tosl,c
 18916  01252C  0009               	tblrd		*+
 18917  01252E  50F5               	movf	tablat,w,c
 18918  012530  6EFE               	movwf	tosh,c
 18919  012532  0009               	tblrd		*+
 18920  012534  50F5               	movf	tablat,w,c
 18921  012536  6EFF               	movwf	tosu,c
 18922  012538  50FA               	movf	pclath,w,c
 18923  01253A  0012               	return		;indir
 18924  01253C                     u9509:
 18925  01253C                     
 18926                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 18927  01253C  0E01               	movlw	1
 18928  01253E  EFB9  F092         	goto	l756
 18929  012542                     l8519:
 18930                           
 18931                           ; BSR set to: 1
 18932                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 18933  012542  0E88               	movlw	low _spiMaster
 18934  012544  6EF6               	movwf	tblptrl,c
 18935  012546                     	if	1	;There is more than 1 active tblptr byte
 18936  012546  0EFE               	movlw	high _spiMaster
 18937  012548  6EF7               	movwf	tblptrh,c
 18938  01254A                     	endif
 18939  01254A                     	if	1	;There are 3 active tblptr bytes
 18940  01254A  0E00               	movlw	low (_spiMaster shr (0+16))
 18941  01254C  6EF8               	movwf	tblptru,c
 18942  01254E                     	endif
 18943  01254E  D802               	call	u9518
 18944  012550  EFB7  F092         	goto	u9519
 18945  012554                     u9518:
 18946  012554  0005               	push	
 18947  012556  6EFA               	movwf	pclath,c
 18948  012558  0009               	tblrd		*+
 18949  01255A  50F5               	movf	tablat,w,c
 18950  01255C  6EFD               	movwf	tosl,c
 18951  01255E  0009               	tblrd		*+
 18952  012560  50F5               	movf	tablat,w,c
 18953  012562  6EFE               	movwf	tosh,c
 18954  012564  0009               	tblrd		*+
 18955  012566  50F5               	movf	tablat,w,c
 18956  012568  6EFF               	movwf	tosu,c
 18957  01256A  50FA               	movf	pclath,w,c
 18958  01256C  0012               	return		;indir
 18959  01256E                     u9519:
 18960  01256E  EF09  F08F         	goto	l8337
 18961  012572                     l756:
 18962  012572  0012               	return		;funcret
 18963  012574                     __end_of_SD_SPI_MediaInitialize:
 18964                           	callstack 0
 18965                           
 18966 ;; *************** function ___lmul *****************
 18967 ;; Defined at:
 18968 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
 18969 ;; Parameters:    Size  Location     Type
 18970 ;;  multiplier      4    0[COMRAM] unsigned long 
 18971 ;;  multiplicand    4    4[COMRAM] unsigned long 
 18972 ;; Auto vars:     Size  Location     Type
 18973 ;;  product         4    8[COMRAM] unsigned long 
 18974 ;; Return value:  Size  Location     Type
 18975 ;;                  4    0[COMRAM] unsigned long 
 18976 ;; Registers used:
 18977 ;;		wreg, status,2, status,0
 18978 ;; Tracked objects:
 18979 ;;		On entry : 0/0
 18980 ;;		On exit  : 0/0
 18981 ;;		Unchanged: 0/0
 18982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18983 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18986 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18987 ;;Total ram usage:       12 bytes
 18988 ;; Hardware stack levels used:    1
 18989 ;; This function calls:
 18990 ;;		Nothing
 18991 ;; This function is called by:
 18992 ;;		_clst2sect
 18993 ;;		_find_volume
 18994 ;;		_SD_SPI_MediaInitialize
 18995 ;; This function uses a non-reentrant model
 18996 ;;
 18997                           
 18998                           	psect	text57
 18999  019DC6                     __ptext57:
 19000                           	callstack 0
 19001  019DC6                     ___lmul:
 19002                           	callstack 24
 19003  019DC6  0E00               	movlw	0
 19004  019DC8  6E09               	movwf	___lmul@product^0,c
 19005  019DCA  0E00               	movlw	0
 19006  019DCC  6E0A               	movwf	(___lmul@product+1)^0,c
 19007  019DCE  0E00               	movlw	0
 19008  019DD0  6E0B               	movwf	(___lmul@product+2)^0,c
 19009  019DD2  0E00               	movlw	0
 19010  019DD4  6E0C               	movwf	(___lmul@product+3)^0,c
 19011  019DD6                     l7791:
 19012  019DD6  A001               	btfss	___lmul@multiplier^0,0,c
 19013  019DD8  EFF0  F0CE         	goto	u8101
 19014  019DDC  EFF2  F0CE         	goto	u8100
 19015  019DE0                     u8101:
 19016  019DE0  EFFA  F0CE         	goto	l7795
 19017  019DE4                     u8100:
 19018  019DE4  5005               	movf	___lmul@multiplicand^0,w,c
 19019  019DE6  2609               	addwf	___lmul@product^0,f,c
 19020  019DE8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 19021  019DEA  220A               	addwfc	(___lmul@product+1)^0,f,c
 19022  019DEC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 19023  019DEE  220B               	addwfc	(___lmul@product+2)^0,f,c
 19024  019DF0  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 19025  019DF2  220C               	addwfc	(___lmul@product+3)^0,f,c
 19026  019DF4                     l7795:
 19027  019DF4  90D8               	bcf	status,0,c
 19028  019DF6  3605               	rlcf	___lmul@multiplicand^0,f,c
 19029  019DF8  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 19030  019DFA  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 19031  019DFC  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 19032  019DFE  90D8               	bcf	status,0,c
 19033  019E00  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 19034  019E02  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 19035  019E04  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 19036  019E06  3201               	rrcf	___lmul@multiplier^0,f,c
 19037  019E08  5001               	movf	___lmul@multiplier^0,w,c
 19038  019E0A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 19039  019E0C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 19040  019E0E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 19041  019E10  A4D8               	btfss	status,2,c
 19042  019E12  EF0D  F0CF         	goto	u8111
 19043  019E16  EF0F  F0CF         	goto	u8110
 19044  019E1A                     u8111:
 19045  019E1A  EFEB  F0CE         	goto	l7791
 19046  019E1E                     u8110:
 19047  019E1E  C009  F001         	movff	___lmul@product,?___lmul
 19048  019E22  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 19049  019E26  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 19050  019E2A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 19051  019E2E  0012               	return		;funcret
 19052  019E30                     __end_of___lmul:
 19053                           	callstack 0
 19054                           
 19055 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 19056 ;; Defined at:
 19057 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;  milliseconds    1    wreg     unsigned char 
 19060 ;; Auto vars:     Size  Location     Type
 19061 ;;  milliseconds    1    3[COMRAM] unsigned char 
 19062 ;;  timeout         2    1[COMRAM] unsigned short 
 19063 ;; Return value:  Size  Location     Type
 19064 ;;                  1    wreg      void 
 19065 ;; Registers used:
 19066 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19067 ;; Tracked objects:
 19068 ;;		On entry : 0/0
 19069 ;;		On exit  : 0/0
 19070 ;;		Unchanged: 0/0
 19071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19075 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19076 ;;Total ram usage:        3 bytes
 19077 ;; Hardware stack levels used:    1
 19078 ;; Hardware stack levels required when called:    1
 19079 ;; This function calls:
 19080 ;;		_SPI1_ExchangeByte
 19081 ;; This function is called by:
 19082 ;;		_SD_SPI_MediaInitialize
 19083 ;; This function uses a non-reentrant model
 19084 ;;
 19085                           
 19086                           	psect	text58
 19087  019FC4                     __ptext58:
 19088                           	callstack 0
 19089  019FC4                     _SD_SPI_DelayMilliseconds:
 19090                           	callstack 23
 19091                           
 19092                           ;incstack = 0
 19093                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 19094  019FC4  6E04               	movwf	SD_SPI_DelayMilliseconds@milliseconds^0,c
 19095  019FC6                     
 19096                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 19097  019FC6  5004               	movf	SD_SPI_DelayMilliseconds@milliseconds^0,w,c
 19098  019FC8  0D32               	mullw	50
 19099  019FCA  006F FFCC  F002    	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 19100  019FD0  006F FFD0  F003    	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 19101  019FD6  8ABA               	bsf	186,5,c	;volatile
 19102  019FD8  EF05  F0D0         	goto	l8103
 19103  019FDC                     l8101:
 19104                           
 19105                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 19106  019FDC  0E8E               	movlw	low (_spiMaster+6)
 19107  019FDE  6EF6               	movwf	tblptrl,c
 19108  019FE0  0EFE               	movlw	high (_spiMaster+6)
 19109  019FE2  6EF7               	movwf	tblptrh,c
 19110  019FE4                     	if	0	;tblptru may be non-zero
 19111  019FE4                     	endif
 19112  019FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19113  019FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 19114  019FE6  6EF8               	movwf	tblptru,c
 19115  019FE8                     	endif
 19116  019FE8  D802               	call	u8688
 19117  019FEA  EF05  F0D0         	goto	u8689
 19118  019FEE                     u8688:
 19119  019FEE  0005               	push	
 19120  019FF0  6EFA               	movwf	pclath,c
 19121  019FF2  0009               	tblrd		*+
 19122  019FF4  50F5               	movf	tablat,w,c
 19123  019FF6  6EFD               	movwf	tosl,c
 19124  019FF8  0009               	tblrd		*+
 19125  019FFA  50F5               	movf	tablat,w,c
 19126  019FFC  6EFE               	movwf	tosh,c
 19127  019FFE  0009               	tblrd		*+
 19128  01A000  50F5               	movf	tablat,w,c
 19129  01A002  6EFF               	movwf	tosu,c
 19130  01A004  50FA               	movf	pclath,w,c
 19131  01A006  0EFF               	movlw	255
 19132  01A008  0012               	return		;indir
 19133  01A00A                     u8689:
 19134  01A00A                     l8103:
 19135                           
 19136                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 19137  01A00A  0602               	decf	SD_SPI_DelayMilliseconds@timeout^0,f,c
 19138  01A00C  A0D8               	btfss	status,0,c
 19139  01A00E  0603               	decf	(SD_SPI_DelayMilliseconds@timeout+1)^0,f,c
 19140  01A010  2802               	incf	SD_SPI_DelayMilliseconds@timeout^0,w,c
 19141  01A012  E106               	bnz	u8691
 19142  01A014  2803               	incf	(SD_SPI_DelayMilliseconds@timeout+1)^0,w,c
 19143  01A016  A4D8               	btfss	status,2,c
 19144  01A018  EF10  F0D0         	goto	u8691
 19145  01A01C  EF12  F0D0         	goto	u8690
 19146  01A020                     u8691:
 19147  01A020  EFEE  F0CF         	goto	l8101
 19148  01A024                     u8690:
 19149  01A024  0012               	return		;funcret
 19150  01A026                     __end_of_SD_SPI_DelayMilliseconds:
 19151                           	callstack 0
 19152                           
 19153 ;; *************** function _check_fs *****************
 19154 ;; Defined at:
 19155 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 19156 ;; Parameters:    Size  Location     Type
 19157 ;;  fs              2   22[BANK0 ] PTR struct .
 19158 ;;		 -> drive(563), NULL(0), 
 19159 ;;  sect            4   24[BANK0 ] unsigned long 
 19160 ;; Auto vars:     Size  Location     Type
 19161 ;;		None
 19162 ;; Return value:  Size  Location     Type
 19163 ;;                  1    wreg      unsigned char 
 19164 ;; Registers used:
 19165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19166 ;; Tracked objects:
 19167 ;;		On entry : 0/0
 19168 ;;		On exit  : 0/0
 19169 ;;		Unchanged: 0/0
 19170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19171 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19174 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19175 ;;Total ram usage:        7 bytes
 19176 ;; Hardware stack levels used:    1
 19177 ;; Hardware stack levels required when called:    7
 19178 ;; This function calls:
 19179 ;;		_ld_word
 19180 ;;		_mem_cmp
 19181 ;;		_move_window
 19182 ;; This function is called by:
 19183 ;;		_find_volume
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187                           	psect	text59
 19188  0178C2                     __ptext59:
 19189                           	callstack 0
 19190  0178C2                     _check_fs:
 19191                           	callstack 19
 19192  0178C2                     
 19193                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 19194  0178C2  0100               	movlb	0	; () banked
 19195  0178C4  EE20 F003          	lfsr	2,3
 19196  0178C8  5176               	movf	check_fs@fs& (0+255),w,b
 19197  0178CA  26D9               	addwf	fsr2l,f,c
 19198  0178CC  5177               	movf	(check_fs@fs+1)& (0+255),w,b
 19199  0178CE  22DA               	addwfc	fsr2h,f,c
 19200  0178D0  0E00               	movlw	0
 19201  0178D2  6EDF               	movwf	indf2,c
 19202  0178D4  EE20 F02F          	lfsr	2,47
 19203  0178D8  5176               	movf	check_fs@fs& (0+255),w,b
 19204  0178DA  26D9               	addwf	fsr2l,f,c
 19205  0178DC  5177               	movf	(check_fs@fs+1)& (0+255),w,b
 19206  0178DE  22DA               	addwfc	fsr2h,f,c
 19207  0178E0  0EFF               	movlw	255
 19208  0178E2  6EDE               	movwf	postinc2,c
 19209  0178E4  0EFF               	movlw	255
 19210  0178E6  6EDE               	movwf	postinc2,c
 19211  0178E8  0EFF               	movlw	255
 19212  0178EA  6EDE               	movwf	postinc2,c
 19213  0178EC  0EFF               	movlw	255
 19214  0178EE  6EDD               	movwf	postdec2,c
 19215  0178F0                     
 19216                           ; BSR set to: 0
 19217                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 19218  0178F0  C076  F070         	movff	check_fs@fs,move_window@fs
 19219  0178F4  C077  F071         	movff	check_fs@fs+1,move_window@fs+1
 19220  0178F8  C078  F072         	movff	check_fs@sect,move_window@sector
 19221  0178FC  C079  F073         	movff	check_fs@sect+1,move_window@sector+1
 19222  017900  C07A  F074         	movff	check_fs@sect+2,move_window@sector+2
 19223  017904  C07B  F075         	movff	check_fs@sect+3,move_window@sector+3
 19224  017908  ECFC  F0C6         	call	_move_window
 19225  01790C  0900               	iorlw	0
 19226  01790E  B4D8               	btfsc	status,2,c
 19227  017910  EF8C  F0BC         	goto	u10061
 19228  017914  EF8E  F0BC         	goto	u10060
 19229  017918                     u10061:
 19230  017918  EF91  F0BC         	goto	l8839
 19231  01791C                     u10060:
 19232  01791C  0E04               	movlw	4
 19233  01791E  EF10  F0BD         	goto	l406
 19234  017922                     l8839:
 19235                           
 19236                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 19237  017922  0E31               	movlw	49
 19238  017924  0100               	movlb	0	; () banked
 19239  017926  2576               	addwf	check_fs@fs& (0+255),w,b
 19240  017928  6E01               	movwf	ld_word@ptr^0,c
 19241  01792A  0E02               	movlw	2
 19242  01792C  2177               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19243  01792E  6E02               	movwf	(ld_word@ptr+1)^0,c
 19244  017930  EC5F  F0D2         	call	_ld_word	;wreg free
 19245  017934  0E55               	movlw	85
 19246  017936  1801               	xorwf	?_ld_word^0,w,c
 19247  017938  E109               	bnz	u10070
 19248  01793A  0EAA               	movlw	170
 19249  01793C  1802               	xorwf	(?_ld_word+1)^0,w,c
 19250  01793E  B4D8               	btfsc	status,2,c
 19251  017940  EFA4  F0BC         	goto	u10071
 19252  017944  EFA6  F0BC         	goto	u10070
 19253  017948                     u10071:
 19254  017948  EFA9  F0BC         	goto	l8845
 19255  01794C                     u10070:
 19256  01794C  0E03               	movlw	3
 19257  01794E  EF10  F0BD         	goto	l406
 19258  017952                     l8845:
 19259                           
 19260                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 19261  017952  0100               	movlb	0	; () banked
 19262  017954  EE20 F033          	lfsr	2,51
 19263  017958  5176               	movf	check_fs@fs& (0+255),w,b
 19264  01795A  26D9               	addwf	fsr2l,f,c
 19265  01795C  5177               	movf	(check_fs@fs+1)& (0+255),w,b
 19266  01795E  22DA               	addwfc	fsr2h,f,c
 19267  017960  0EE9               	movlw	233
 19268  017962  18DE               	xorwf	postinc2,w,c
 19269  017964  B4D8               	btfsc	status,2,c
 19270  017966  EFB7  F0BC         	goto	u10081
 19271  01796A  EFB9  F0BC         	goto	u10080
 19272  01796E                     u10081:
 19273  01796E  EFD7  F0BC         	goto	l8851
 19274  017972                     u10080:
 19275  017972                     
 19276                           ; BSR set to: 0
 19277  017972  EE20 F033          	lfsr	2,51
 19278  017976  5176               	movf	check_fs@fs& (0+255),w,b
 19279  017978  26D9               	addwf	fsr2l,f,c
 19280  01797A  5177               	movf	(check_fs@fs+1)& (0+255),w,b
 19281  01797C  22DA               	addwfc	fsr2h,f,c
 19282  01797E  0EEB               	movlw	235
 19283  017980  18DE               	xorwf	postinc2,w,c
 19284  017982  B4D8               	btfsc	status,2,c
 19285  017984  EFC6  F0BC         	goto	u10091
 19286  017988  EFC8  F0BC         	goto	u10090
 19287  01798C                     u10091:
 19288  01798C  EFD7  F0BC         	goto	l8851
 19289  017990                     u10090:
 19290  017990                     
 19291                           ; BSR set to: 0
 19292  017990  EE20 F033          	lfsr	2,51
 19293  017994  5176               	movf	check_fs@fs& (0+255),w,b
 19294  017996  26D9               	addwf	fsr2l,f,c
 19295  017998  5177               	movf	(check_fs@fs+1)& (0+255),w,b
 19296  01799A  22DA               	addwfc	fsr2h,f,c
 19297  01799C  0EE8               	movlw	232
 19298  01799E  18DE               	xorwf	postinc2,w,c
 19299  0179A0  A4D8               	btfss	status,2,c
 19300  0179A2  EFD5  F0BC         	goto	u10101
 19301  0179A6  EFD7  F0BC         	goto	u10100
 19302  0179AA                     u10101:
 19303  0179AA  EF0F  F0BD         	goto	l8863
 19304  0179AE                     u10100:
 19305  0179AE                     l8851:
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 19309  0179AE  0E69               	movlw	105
 19310  0179B0  2576               	addwf	check_fs@fs& (0+255),w,b
 19311  0179B2  6E01               	movwf	mem_cmp@dst^0,c
 19312  0179B4  0E00               	movlw	0
 19313  0179B6  2177               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19314  0179B8  6E02               	movwf	(mem_cmp@dst+1)^0,c
 19315  0179BA  0EF5               	movlw	low STR_3
 19316  0179BC  6E03               	movwf	mem_cmp@src^0,c
 19317  0179BE  0EFF               	movlw	high STR_3
 19318  0179C0  6E04               	movwf	(mem_cmp@src+1)^0,c
 19319  0179C2  0E00               	movlw	0
 19320  0179C4  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 19321  0179C6  0E03               	movlw	3
 19322  0179C8  6E05               	movwf	mem_cmp@cnt^0,c
 19323  0179CA  EC99  F0CA         	call	_mem_cmp	;wreg free
 19324  0179CE  5001               	movf	?_mem_cmp^0,w,c
 19325  0179D0  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 19326  0179D2  A4D8               	btfss	status,2,c
 19327  0179D4  EFEE  F0BC         	goto	u10111
 19328  0179D8  EFF0  F0BC         	goto	u10110
 19329  0179DC                     u10111:
 19330  0179DC  EFF3  F0BC         	goto	l8857
 19331  0179E0                     u10110:
 19332  0179E0                     l8853:
 19333  0179E0  0E00               	movlw	0
 19334  0179E2  EF10  F0BD         	goto	l406
 19335  0179E6                     l8857:
 19336                           
 19337                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 19338  0179E6  0E85               	movlw	133
 19339  0179E8  0100               	movlb	0	; () banked
 19340  0179EA  2576               	addwf	check_fs@fs& (0+255),w,b
 19341  0179EC  6E01               	movwf	mem_cmp@dst^0,c
 19342  0179EE  0E00               	movlw	0
 19343  0179F0  2177               	addwfc	(check_fs@fs+1)& (0+255),w,b
 19344  0179F2  6E02               	movwf	(mem_cmp@dst+1)^0,c
 19345  0179F4  0ED6               	movlw	low STR_5
 19346  0179F6  6E03               	movwf	mem_cmp@src^0,c
 19347  0179F8  0EFF               	movlw	high STR_5
 19348  0179FA  6E04               	movwf	(mem_cmp@src+1)^0,c
 19349  0179FC  0E00               	movlw	0
 19350  0179FE  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 19351  017A00  0E05               	movlw	5
 19352  017A02  6E05               	movwf	mem_cmp@cnt^0,c
 19353  017A04  EC99  F0CA         	call	_mem_cmp	;wreg free
 19354  017A08  5001               	movf	?_mem_cmp^0,w,c
 19355  017A0A  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 19356  017A0C  A4D8               	btfss	status,2,c
 19357  017A0E  EF0B  F0BD         	goto	u10121
 19358  017A12  EF0D  F0BD         	goto	u10120
 19359  017A16                     u10121:
 19360  017A16  EF0F  F0BD         	goto	l8863
 19361  017A1A                     u10120:
 19362  017A1A  EFF0  F0BC         	goto	l8853
 19363  017A1E                     l8863:
 19364                           
 19365                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 19366  017A1E  0E02               	movlw	2
 19367  017A20                     l406:
 19368  017A20  0012               	return		;funcret
 19369  017A22                     __end_of_check_fs:
 19370                           	callstack 0
 19371                           
 19372 ;; *************** function _move_window *****************
 19373 ;; Defined at:
 19374 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 19375 ;; Parameters:    Size  Location     Type
 19376 ;;  fs              2   16[BANK0 ] PTR struct .
 19377 ;;		 -> drive(563), NULL(0), 
 19378 ;;  sector          4   18[BANK0 ] unsigned long 
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;  res             1   94[COMRAM] enum E68
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      enum E68
 19383 ;; Registers used:
 19384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19385 ;; Tracked objects:
 19386 ;;		On entry : 0/0
 19387 ;;		On exit  : 0/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19393 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19394 ;;Total ram usage:       11 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; Hardware stack levels required when called:    6
 19397 ;; This function calls:
 19398 ;;		_disk_read
 19399 ;;		_sync_window
 19400 ;; This function is called by:
 19401 ;;		_get_fat
 19402 ;;		_put_fat
 19403 ;;		_dir_alloc
 19404 ;;		_dir_find
 19405 ;;		_dir_register
 19406 ;;		_check_fs
 19407 ;;		_find_volume
 19408 ;;		_f_open
 19409 ;;		_f_sync
 19410 ;; This function uses a non-reentrant model
 19411 ;;
 19412                           
 19413                           	psect	text60
 19414  018DF8                     __ptext60:
 19415                           	callstack 0
 19416  018DF8                     _move_window:
 19417                           	callstack 20
 19418  018DF8                     
 19419                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 19420  018DF8  0E00               	movlw	0
 19421  018DFA  6E5F               	movwf	move_window@res^0,c
 19422  018DFC                     
 19423                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 19424  018DFC  0100               	movlb	0	; () banked
 19425  018DFE  EE20 F02F          	lfsr	2,47
 19426  018E02  5170               	movf	move_window@fs& (0+255),w,b
 19427  018E04  26D9               	addwf	fsr2l,f,c
 19428  018E06  5171               	movf	(move_window@fs+1)& (0+255),w,b
 19429  018E08  22DA               	addwfc	fsr2h,f,c
 19430  018E0A  5172               	movf	move_window@sector& (0+255),w,b
 19431  018E0C  18DE               	xorwf	postinc2,w,c
 19432  018E0E  E10F               	bnz	u8070
 19433  018E10  5173               	movf	(move_window@sector+1)& (0+255),w,b
 19434  018E12  18DE               	xorwf	postinc2,w,c
 19435  018E14  E10C               	bnz	u8070
 19436  018E16  5174               	movf	(move_window@sector+2)& (0+255),w,b
 19437  018E18  18DE               	xorwf	postinc2,w,c
 19438  018E1A  E109               	bnz	u8070
 19439  018E1C  5175               	movf	(move_window@sector+3)& (0+255),w,b
 19440  018E1E  18DE               	xorwf	postinc2,w,c
 19441  018E20  B4D8               	btfsc	status,2,c
 19442  018E22  EF15  F0C7         	goto	u8071
 19443  018E26  EF17  F0C7         	goto	u8070
 19444  018E2A                     u8071:
 19445  018E2A  EF64  F0C7         	goto	l7785
 19446  018E2E                     u8070:
 19447  018E2E                     
 19448                           ; BSR set to: 0
 19449                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 19450  018E2E  C070  F058         	movff	move_window@fs,sync_window@fs
 19451  018E32  C071  F059         	movff	move_window@fs+1,sync_window@fs+1
 19452  018E36  EC55  F0B5         	call	_sync_window	;wreg free
 19453  018E3A  6E5F               	movwf	move_window@res^0,c
 19454  018E3C                     
 19455                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 19456  018E3C  505F               	movf	move_window@res^0,w,c
 19457  018E3E  A4D8               	btfss	status,2,c
 19458  018E40  EF24  F0C7         	goto	u8081
 19459  018E44  EF26  F0C7         	goto	u8080
 19460  018E48                     u8081:
 19461  018E48  EF64  F0C7         	goto	l7785
 19462  018E4C                     u8080:
 19463  018E4C                     
 19464                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 19465  018E4C  0E33               	movlw	51
 19466  018E4E  0100               	movlb	0	; () banked
 19467  018E50  2570               	addwf	move_window@fs& (0+255),w,b
 19468  018E52  6E49               	movwf	disk_read@buff^0,c
 19469  018E54  0E00               	movlw	0
 19470  018E56  2171               	addwfc	(move_window@fs+1)& (0+255),w,b
 19471  018E58  6E4A               	movwf	(disk_read@buff+1)^0,c
 19472  018E5A  C072  F04B         	movff	move_window@sector,disk_read@sector
 19473  018E5E  C073  F04C         	movff	move_window@sector+1,disk_read@sector+1
 19474  018E62  C074  F04D         	movff	move_window@sector+2,disk_read@sector+2
 19475  018E66  C075  F04E         	movff	move_window@sector+3,disk_read@sector+3
 19476  018E6A  0E00               	movlw	0
 19477  018E6C  6E50               	movwf	(disk_read@count+1)^0,c
 19478  018E6E  0E01               	movlw	1
 19479  018E70  6E4F               	movwf	disk_read@count^0,c
 19480  018E72  EE20 F001          	lfsr	2,1
 19481  018E76  5170               	movf	move_window@fs& (0+255),w,b
 19482  018E78  26D9               	addwf	fsr2l,f,c
 19483  018E7A  5171               	movf	(move_window@fs+1)& (0+255),w,b
 19484  018E7C  22DA               	addwfc	fsr2h,f,c
 19485  018E7E  50DF               	movf	indf2,w,c
 19486  018E80  EC3A  F0CE         	call	_disk_read
 19487  018E84  0900               	iorlw	0
 19488  018E86  B4D8               	btfsc	status,2,c
 19489  018E88  EF48  F0C7         	goto	u8091
 19490  018E8C  EF4A  F0C7         	goto	u8090
 19491  018E90                     u8091:
 19492  018E90  EF51  F0C7         	goto	l7783
 19493  018E94                     u8090:
 19494  018E94                     
 19495                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 19496  018E94  0100               	movlb	0	; () banked
 19497  018E96  6972               	setf	move_window@sector& (0+255),b
 19498  018E98  6973               	setf	(move_window@sector+1)& (0+255),b
 19499  018E9A  6974               	setf	(move_window@sector+2)& (0+255),b
 19500  018E9C  6975               	setf	(move_window@sector+3)& (0+255),b
 19501  018E9E                     
 19502                           ; BSR set to: 0
 19503                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 19504  018E9E  0E01               	movlw	1
 19505  018EA0  6E5F               	movwf	move_window@res^0,c
 19506  018EA2                     l7783:
 19507                           
 19508                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 19509  018EA2  0100               	movlb	0	; () banked
 19510  018EA4  EE20 F02F          	lfsr	2,47
 19511  018EA8  5170               	movf	move_window@fs& (0+255),w,b
 19512  018EAA  26D9               	addwf	fsr2l,f,c
 19513  018EAC  5171               	movf	(move_window@fs+1)& (0+255),w,b
 19514  018EAE  22DA               	addwfc	fsr2h,f,c
 19515  018EB0  0060  F1CB  FFDE   	movff	move_window@sector,postinc2
 19516  018EB6  0060  F1CF  FFDE   	movff	move_window@sector+1,postinc2
 19517  018EBC  0060  F1D3  FFDE   	movff	move_window@sector+2,postinc2
 19518  018EC2  0060  F1D7  FFDE   	movff	move_window@sector+3,postinc2
 19519  018EC8                     l7785:
 19520                           
 19521                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 19522  018EC8  505F               	movf	move_window@res^0,w,c
 19523  018ECA  0012               	return		;funcret
 19524  018ECC                     __end_of_move_window:
 19525                           	callstack 0
 19526                           
 19527 ;; *************** function _sync_window *****************
 19528 ;; Defined at:
 19529 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 19530 ;; Parameters:    Size  Location     Type
 19531 ;;  fs              2   87[COMRAM] PTR struct .
 19532 ;;		 -> drive(563), NULL(0), 
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;  res             1   89[COMRAM] enum E68
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      enum E68
 19537 ;; Registers used:
 19538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19546 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19547 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19548 ;;Total ram usage:       19 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    5
 19551 ;; This function calls:
 19552 ;;		_disk_write
 19553 ;; This function is called by:
 19554 ;;		_move_window
 19555 ;;		_sync_fs
 19556 ;;		_dir_clear
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           	psect	text61
 19561  016AAA                     __ptext61:
 19562                           	callstack 0
 19563  016AAA                     _sync_window:
 19564                           	callstack 20
 19565  016AAA                     
 19566                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 19567  016AAA  0E00               	movlw	0
 19568  016AAC  6E5A               	movwf	sync_window@res^0,c
 19569  016AAE                     
 19570                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 19571  016AAE  EE20 F003          	lfsr	2,3
 19572  016AB2  5058               	movf	sync_window@fs^0,w,c
 19573  016AB4  26D9               	addwf	fsr2l,f,c
 19574  016AB6  5059               	movf	(sync_window@fs+1)^0,w,c
 19575  016AB8  22DA               	addwfc	fsr2h,f,c
 19576  016ABA  50DF               	movf	indf2,w,c
 19577  016ABC  B4D8               	btfsc	status,2,c
 19578  016ABE  EF63  F0B5         	goto	u8021
 19579  016AC2  EF65  F0B5         	goto	u8020
 19580  016AC6                     u8021:
 19581  016AC6  EF36  F0B6         	goto	l103
 19582  016ACA                     u8020:
 19583  016ACA                     
 19584                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 19585  016ACA  0E33               	movlw	51
 19586  016ACC  2458               	addwf	sync_window@fs^0,w,c
 19587  016ACE  6E4C               	movwf	disk_write@buff^0,c
 19588  016AD0  0E00               	movlw	0
 19589  016AD2  2059               	addwfc	(sync_window@fs+1)^0,w,c
 19590  016AD4  6E4D               	movwf	(disk_write@buff+1)^0,c
 19591  016AD6  EE20 F02F          	lfsr	2,47
 19592  016ADA  5058               	movf	sync_window@fs^0,w,c
 19593  016ADC  26D9               	addwf	fsr2l,f,c
 19594  016ADE  5059               	movf	(sync_window@fs+1)^0,w,c
 19595  016AE0  22DA               	addwfc	fsr2h,f,c
 19596  016AE2  006F FF78  F04E    	movff	postinc2,disk_write@sector
 19597  016AE8  006F FF78  F04F    	movff	postinc2,disk_write@sector+1
 19598  016AEE  006F FF78  F050    	movff	postinc2,disk_write@sector+2
 19599  016AF4  006F FF78  F051    	movff	postinc2,disk_write@sector+3
 19600  016AFA  0E00               	movlw	0
 19601  016AFC  6E53               	movwf	(disk_write@count+1)^0,c
 19602  016AFE  0E01               	movlw	1
 19603  016B00  6E52               	movwf	disk_write@count^0,c
 19604  016B02  EE20 F001          	lfsr	2,1
 19605  016B06  5058               	movf	sync_window@fs^0,w,c
 19606  016B08  26D9               	addwf	fsr2l,f,c
 19607  016B0A  5059               	movf	(sync_window@fs+1)^0,w,c
 19608  016B0C  22DA               	addwfc	fsr2h,f,c
 19609  016B0E  50DF               	movf	indf2,w,c
 19610  016B10  EC00  F0CE         	call	_disk_write
 19611  016B14  0900               	iorlw	0
 19612  016B16  A4D8               	btfss	status,2,c
 19613  016B18  EF90  F0B5         	goto	u8031
 19614  016B1C  EF92  F0B5         	goto	u8030
 19615  016B20                     u8031:
 19616  016B20  EF34  F0B6         	goto	l7705
 19617  016B24                     u8030:
 19618  016B24                     
 19619                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 19620  016B24  EE20 F003          	lfsr	2,3
 19621  016B28  5058               	movf	sync_window@fs^0,w,c
 19622  016B2A  26D9               	addwf	fsr2l,f,c
 19623  016B2C  5059               	movf	(sync_window@fs+1)^0,w,c
 19624  016B2E  22DA               	addwfc	fsr2h,f,c
 19625  016B30  0E00               	movlw	0
 19626  016B32  6EDF               	movwf	indf2,c
 19627  016B34                     
 19628                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 19629  016B34  EE20 F01B          	lfsr	2,27
 19630  016B38  5058               	movf	sync_window@fs^0,w,c
 19631  016B3A  26D9               	addwf	fsr2l,f,c
 19632  016B3C  5059               	movf	(sync_window@fs+1)^0,w,c
 19633  016B3E  22DA               	addwfc	fsr2h,f,c
 19634  016B40  EE10 F023          	lfsr	1,35
 19635  016B44  5058               	movf	sync_window@fs^0,w,c
 19636  016B46  26E1               	addwf	fsr1l,f,c
 19637  016B48  5059               	movf	(sync_window@fs+1)^0,w,c
 19638  016B4A  22E2               	addwfc	fsr1h,f,c
 19639  016B4C  006F FF98  F064    	movff	postinc1,??_sync_window+4
 19640  016B52  006F FF98  F065    	movff	postinc1,??_sync_window+5
 19641  016B58  006F FF98  F066    	movff	postinc1,??_sync_window+6
 19642  016B5E  006F FF98  F067    	movff	postinc1,??_sync_window+7
 19643  016B64  EE10 F02F          	lfsr	1,47
 19644  016B68  5058               	movf	sync_window@fs^0,w,c
 19645  016B6A  26E1               	addwf	fsr1l,f,c
 19646  016B6C  5059               	movf	(sync_window@fs+1)^0,w,c
 19647  016B6E  22E2               	addwfc	fsr1h,f,c
 19648  016B70  006F FF98  F068    	movff	postinc1,??_sync_window+8
 19649  016B76  006F FF98  F069    	movff	postinc1,??_sync_window+9
 19650  016B7C  006F FF98  F06A    	movff	postinc1,??_sync_window+10
 19651  016B82  006F FF98  F06B    	movff	postinc1,??_sync_window+11
 19652  016B88  0100               	movlb	0	; () banked
 19653  016B8A  5164               	movf	(??_sync_window+4)& (0+255),w,b
 19654  016B8C  5D68               	subwf	(??_sync_window+8)& (0+255),w,b
 19655  016B8E  6F6C               	movwf	(??_sync_window+12)& (0+255),b
 19656  016B90  5165               	movf	(??_sync_window+5)& (0+255),w,b
 19657  016B92  5969               	subwfb	(??_sync_window+9)& (0+255),w,b
 19658  016B94  6F6D               	movwf	(??_sync_window+13)& (0+255),b
 19659  016B96  5166               	movf	(??_sync_window+6)& (0+255),w,b
 19660  016B98  596A               	subwfb	(??_sync_window+10)& (0+255),w,b
 19661  016B9A  6F6E               	movwf	(??_sync_window+14)& (0+255),b
 19662  016B9C  5167               	movf	(??_sync_window+7)& (0+255),w,b
 19663  016B9E  596B               	subwfb	(??_sync_window+11)& (0+255),w,b
 19664  016BA0  6F6F               	movwf	(??_sync_window+15)& (0+255),b
 19665  016BA2  50DE               	movf	postinc2,w,c
 19666  016BA4  5D6C               	subwf	(??_sync_window+12)& (0+255),w,b
 19667  016BA6  50DE               	movf	postinc2,w,c
 19668  016BA8  596D               	subwfb	(??_sync_window+13)& (0+255),w,b
 19669  016BAA  50DE               	movf	postinc2,w,c
 19670  016BAC  596E               	subwfb	(??_sync_window+14)& (0+255),w,b
 19671  016BAE  50DE               	movf	postinc2,w,c
 19672  016BB0  596F               	subwfb	(??_sync_window+15)& (0+255),w,b
 19673  016BB2  B0D8               	btfsc	status,0,c
 19674  016BB4  EFDE  F0B5         	goto	u8041
 19675  016BB8  EFE0  F0B5         	goto	u8040
 19676  016BBC                     u8041:
 19677  016BBC  EF36  F0B6         	goto	l103
 19678  016BC0                     u8040:
 19679  016BC0                     
 19680                           ; BSR set to: 0
 19681                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 19682  016BC0  EE20 F002          	lfsr	2,2
 19683  016BC4  5058               	movf	sync_window@fs^0,w,c
 19684  016BC6  26D9               	addwf	fsr2l,f,c
 19685  016BC8  5059               	movf	(sync_window@fs+1)^0,w,c
 19686  016BCA  22DA               	addwfc	fsr2h,f,c
 19687  016BCC  0E02               	movlw	2
 19688  016BCE  18DE               	xorwf	postinc2,w,c
 19689  016BD0  A4D8               	btfss	status,2,c
 19690  016BD2  EFED  F0B5         	goto	u8051
 19691  016BD6  EFEF  F0B5         	goto	u8050
 19692  016BDA                     u8051:
 19693  016BDA  EF36  F0B6         	goto	l103
 19694  016BDE                     u8050:
 19695  016BDE                     
 19696                           ; BSR set to: 0
 19697  016BDE  0E33               	movlw	51
 19698  016BE0  2458               	addwf	sync_window@fs^0,w,c
 19699  016BE2  6E4C               	movwf	disk_write@buff^0,c
 19700  016BE4  0E00               	movlw	0
 19701  016BE6  2059               	addwfc	(sync_window@fs+1)^0,w,c
 19702  016BE8  6E4D               	movwf	(disk_write@buff+1)^0,c
 19703  016BEA  EE20 F01B          	lfsr	2,27
 19704  016BEE  5058               	movf	sync_window@fs^0,w,c
 19705  016BF0  26D9               	addwf	fsr2l,f,c
 19706  016BF2  5059               	movf	(sync_window@fs+1)^0,w,c
 19707  016BF4  22DA               	addwfc	fsr2h,f,c
 19708  016BF6  006F FF78  F060    	movff	postinc2,??_sync_window
 19709  016BFC  006F FF78  F061    	movff	postinc2,??_sync_window+1
 19710  016C02  006F FF78  F062    	movff	postinc2,??_sync_window+2
 19711  016C08  006F FF78  F063    	movff	postinc2,??_sync_window+3
 19712  016C0E  EE20 F02F          	lfsr	2,47
 19713  016C12  5058               	movf	sync_window@fs^0,w,c
 19714  016C14  26D9               	addwf	fsr2l,f,c
 19715  016C16  5059               	movf	(sync_window@fs+1)^0,w,c
 19716  016C18  22DA               	addwfc	fsr2h,f,c
 19717  016C1A  006F FF78  F064    	movff	postinc2,??_sync_window+4
 19718  016C20  006F FF78  F065    	movff	postinc2,??_sync_window+5
 19719  016C26  006F FF78  F066    	movff	postinc2,??_sync_window+6
 19720  016C2C  006F FF78  F067    	movff	postinc2,??_sync_window+7
 19721  016C32  5160               	movf	??_sync_window& (0+255),w,b
 19722  016C34  2564               	addwf	(??_sync_window+4)& (0+255),w,b
 19723  016C36  6E4E               	movwf	disk_write@sector^0,c
 19724  016C38  5161               	movf	(??_sync_window+1)& (0+255),w,b
 19725  016C3A  2165               	addwfc	(??_sync_window+5)& (0+255),w,b
 19726  016C3C  6E4F               	movwf	(disk_write@sector+1)^0,c
 19727  016C3E  5162               	movf	(??_sync_window+2)& (0+255),w,b
 19728  016C40  2166               	addwfc	(??_sync_window+6)& (0+255),w,b
 19729  016C42  6E50               	movwf	(disk_write@sector+2)^0,c
 19730  016C44  5163               	movf	(??_sync_window+3)& (0+255),w,b
 19731  016C46  2167               	addwfc	(??_sync_window+7)& (0+255),w,b
 19732  016C48  6E51               	movwf	(disk_write@sector+3)^0,c
 19733  016C4A  0E00               	movlw	0
 19734  016C4C  6E53               	movwf	(disk_write@count+1)^0,c
 19735  016C4E  0E01               	movlw	1
 19736  016C50  6E52               	movwf	disk_write@count^0,c
 19737  016C52  EE20 F001          	lfsr	2,1
 19738  016C56  5058               	movf	sync_window@fs^0,w,c
 19739  016C58  26D9               	addwf	fsr2l,f,c
 19740  016C5A  5059               	movf	(sync_window@fs+1)^0,w,c
 19741  016C5C  22DA               	addwfc	fsr2h,f,c
 19742  016C5E  50DF               	movf	indf2,w,c
 19743  016C60  EC00  F0CE         	call	_disk_write
 19744  016C64  EF36  F0B6         	goto	l103
 19745  016C68                     l7705:
 19746                           
 19747                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 19748  016C68  0E01               	movlw	1
 19749  016C6A  6E5A               	movwf	sync_window@res^0,c
 19750  016C6C                     l103:
 19751                           
 19752                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 19753  016C6C  505A               	movf	sync_window@res^0,w,c
 19754  016C6E  0012               	return		;funcret
 19755  016C70                     __end_of_sync_window:
 19756                           	callstack 0
 19757                           
 19758 ;; *************** function _disk_write *****************
 19759 ;; Defined at:
 19760 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;  pdrv            1    wreg     unsigned char 
 19763 ;;  buff            2   75[COMRAM] PTR const unsigned char 
 19764 ;;		 -> drive.win(512), file.buf(512), savedMessage(12), file(546), 
 19765 ;;		 -> drive(563), Save_Data@newLine(3), NULL(0), 
 19766 ;;  sector          4   77[COMRAM] unsigned long 
 19767 ;;  count           2   81[COMRAM] unsigned int 
 19768 ;; Auto vars:     Size  Location     Type
 19769 ;;  pdrv            1   85[COMRAM] unsigned char 
 19770 ;;  res             1   86[COMRAM] enum E12
 19771 ;; Return value:  Size  Location     Type
 19772 ;;                  1    wreg      enum E208
 19773 ;; Registers used:
 19774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19775 ;; Tracked objects:
 19776 ;;		On entry : 0/0
 19777 ;;		On exit  : 0/0
 19778 ;;		Unchanged: 0/0
 19779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19780 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19783 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19784 ;;Total ram usage:       12 bytes
 19785 ;; Hardware stack levels used:    1
 19786 ;; Hardware stack levels required when called:    4
 19787 ;; This function calls:
 19788 ;;		_SD_SPI_SectorWrite
 19789 ;; This function is called by:
 19790 ;;		_sync_window
 19791 ;;		_sync_fs
 19792 ;;		_dir_clear
 19793 ;;		_f_write
 19794 ;;		_f_sync
 19795 ;;		_f_read
 19796 ;; This function uses a non-reentrant model
 19797 ;;
 19798                           
 19799                           	psect	text62
 19800  019C00                     __ptext62:
 19801                           	callstack 0
 19802  019C00                     _disk_write:
 19803                           	callstack 20
 19804                           
 19805                           ;incstack = 0
 19806                           ;disk_write@pdrv stored from wreg
 19807  019C00  6E56               	movwf	disk_write@pdrv^0,c
 19808  019C02                     
 19809                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 19810  019C02  0E04               	movlw	4
 19811  019C04  6E57               	movwf	disk_write@res^0,c
 19812                           
 19813                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 19814  019C06  EF27  F0CE         	goto	l7645
 19815  019C0A                     l7637:
 19816                           
 19817                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 19818  019C0A  C04E  F031         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 19819  019C0E  C04F  F032         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 19820  019C12  C050  F033         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 19821  019C16  C051  F034         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 19822  019C1A  C04C  F035         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 19823  019C1E  C04D  F036         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 19824  019C22  C052  F037         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 19825  019C26  C053  F038         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 19826  019C2A  EC06  F0BF         	call	_SD_SPI_SectorWrite	;wreg free
 19827  019C2E  06E8               	decf	wreg,f,c
 19828  019C30  A4D8               	btfss	status,2,c
 19829  019C32  EF1D  F0CE         	goto	u7941
 19830  019C36  EF1F  F0CE         	goto	u7940
 19831  019C3A                     u7941:
 19832  019C3A  EF23  F0CE         	goto	l7641
 19833  019C3E                     u7940:
 19834  019C3E                     
 19835                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 19836  019C3E  0E00               	movlw	0
 19837  019C40  6E57               	movwf	disk_write@res^0,c
 19838                           
 19839                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 19840  019C42  EF38  F0CE         	goto	l7647
 19841  019C46                     l7641:
 19842                           
 19843                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 19844  019C46  0E01               	movlw	1
 19845  019C48  6E57               	movwf	disk_write@res^0,c
 19846  019C4A  EF38  F0CE         	goto	l7647
 19847  019C4E                     l7645:
 19848  019C4E  5056               	movf	disk_write@pdrv^0,w,c
 19849  019C50  6E54               	movwf	??_disk_write^0,c
 19850  019C52  6A55               	clrf	(??_disk_write+1)^0,c
 19851                           
 19852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19853                           ; Switch size 1, requested type "simple"
 19854                           ; Number of cases is 1, Range of values is 0 to 0
 19855                           ; switch strategies available:
 19856                           ; Name         Instructions Cycles
 19857                           ; simple_byte            4     3 (average)
 19858                           ;	Chosen strategy is simple_byte
 19859  019C54  5055               	movf	(??_disk_write+1)^0,w,c
 19860  019C56  0A00               	xorlw	0	; case 0
 19861  019C58  B4D8               	btfsc	status,2,c
 19862  019C5A  EF31  F0CE         	goto	l11869
 19863  019C5E  EF38  F0CE         	goto	l7647
 19864  019C62                     l11869:
 19865                           
 19866                           ; Switch size 1, requested type "simple"
 19867                           ; Number of cases is 1, Range of values is 0 to 0
 19868                           ; switch strategies available:
 19869                           ; Name         Instructions Cycles
 19870                           ; simple_byte            4     3 (average)
 19871                           ;	Chosen strategy is simple_byte
 19872  019C62  5054               	movf	??_disk_write^0,w,c
 19873  019C64  0A00               	xorlw	0	; case 0
 19874  019C66  B4D8               	btfsc	status,2,c
 19875  019C68  EF05  F0CE         	goto	l7637
 19876  019C6C  EF38  F0CE         	goto	l7647
 19877  019C70                     l7647:
 19878                           
 19879                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 19880  019C70  5057               	movf	disk_write@res^0,w,c
 19881  019C72  0012               	return		;funcret
 19882  019C74                     __end_of_disk_write:
 19883                           	callstack 0
 19884                           
 19885 ;; *************** function _SD_SPI_SectorWrite *****************
 19886 ;; Defined at:
 19887 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;  sector_addre    4   48[COMRAM] unsigned long 
 19890 ;;  buffer          2   52[COMRAM] PTR const unsigned char 
 19891 ;;		 -> drive.win(512), file.buf(512), savedMessage(12), file(546), 
 19892 ;;		 -> drive(563), Save_Data@newLine(3), NULL(0), 
 19893 ;;  sector_count    2   54[COMRAM] unsigned short 
 19894 ;; Auto vars:     Size  Location     Type
 19895 ;;  info           13   62[COMRAM] struct SD_ASYNC_IO
 19896 ;;  i               2   60[COMRAM] unsigned short 
 19897 ;;  status          1   59[COMRAM] unsigned char 
 19898 ;;  result          1   58[COMRAM] _Bool 
 19899 ;; Return value:  Size  Location     Type
 19900 ;;                  1    wreg      _Bool 
 19901 ;; Registers used:
 19902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19903 ;; Tracked objects:
 19904 ;;		On entry : 0/0
 19905 ;;		On exit  : 0/0
 19906 ;;		Unchanged: 0/0
 19907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19908 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19909 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19911 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19912 ;;Total ram usage:       27 bytes
 19913 ;; Hardware stack levels used:    1
 19914 ;; Hardware stack levels required when called:    3
 19915 ;; This function calls:
 19916 ;;		_SDFAST_open
 19917 ;;		_SDSLOW_open
 19918 ;;		_SD_SPI_AsyncWriteTasks
 19919 ;;		_SPI1_Close
 19920 ;; This function is called by:
 19921 ;;		_disk_write
 19922 ;; This function uses a non-reentrant model
 19923 ;;
 19924                           
 19925                           	psect	text63
 19926  017E0C                     __ptext63:
 19927                           	callstack 0
 19928  017E0C                     _SD_SPI_SectorWrite:
 19929                           	callstack 20
 19930  017E0C                     
 19931                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 19932  017E0C  0E00               	movlw	0
 19933  017E0E  6E3B               	movwf	SD_SPI_SectorWrite@result^0,c
 19934                           
 19935                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 19936  017E10  0E00               	movlw	0
 19937  017E12  6E3E               	movwf	(SD_SPI_SectorWrite@i+1)^0,c
 19938  017E14  0E00               	movlw	0
 19939  017E16  6E3D               	movwf	SD_SPI_SectorWrite@i^0,c
 19940  017E18  EF91  F0BF         	goto	l7487
 19941  017E1C                     l7459:
 19942                           
 19943                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 19944  017E1C  0E02               	movlw	2
 19945  017E1E  6E40               	movwf	(SD_SPI_SectorWrite@info+1)^0,c
 19946  017E20  0E00               	movlw	0
 19947  017E22  6E3F               	movwf	SD_SPI_SectorWrite@info^0,c
 19948                           
 19949                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 19950  017E24  0E00               	movlw	0
 19951  017E26  6E41               	movwf	(SD_SPI_SectorWrite@info+2)^0,c
 19952  017E28  0E02               	movlw	2
 19953  017E2A  6E42               	movwf	(SD_SPI_SectorWrite@info+3)^0,c
 19954  017E2C  0E00               	movlw	0
 19955  017E2E  6E43               	movwf	(SD_SPI_SectorWrite@info+4)^0,c
 19956  017E30  0E00               	movlw	0
 19957  017E32  6E44               	movwf	(SD_SPI_SectorWrite@info+5)^0,c
 19958  017E34                     
 19959                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 19960  017E34  C03D  F039         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 19961  017E38  C03E  F03A         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 19962  017E3C  0E09               	movlw	9
 19963  017E3E                     u7675:
 19964  017E3E  90D8               	bcf	status,0,c
 19965  017E40  3639               	rlcf	??_SD_SPI_SectorWrite^0,f,c
 19966  017E42  363A               	rlcf	(??_SD_SPI_SectorWrite+1)^0,f,c
 19967  017E44  2EE8               	decfsz	wreg,f,c
 19968  017E46  EF1F  F0BF         	goto	u7675
 19969  017E4A  5039               	movf	??_SD_SPI_SectorWrite^0,w,c
 19970  017E4C  2435               	addwf	SD_SPI_SectorWrite@buffer^0,w,c
 19971  017E4E  6E45               	movwf	(SD_SPI_SectorWrite@info+6)^0,c
 19972  017E50  503A               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 19973  017E52  2036               	addwfc	(SD_SPI_SectorWrite@buffer+1)^0,w,c
 19974  017E54  6E46               	movwf	(SD_SPI_SectorWrite@info+7)^0,c
 19975  017E56                     
 19976                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 19977  017E56  503D               	movf	SD_SPI_SectorWrite@i^0,w,c
 19978  017E58  2431               	addwf	SD_SPI_SectorWrite@sector_address^0,w,c
 19979  017E5A  6E47               	movwf	(SD_SPI_SectorWrite@info+8)^0,c
 19980  017E5C  503E               	movf	(SD_SPI_SectorWrite@i+1)^0,w,c
 19981  017E5E  2032               	addwfc	(SD_SPI_SectorWrite@sector_address+1)^0,w,c
 19982  017E60  6E48               	movwf	(SD_SPI_SectorWrite@info+9)^0,c
 19983  017E62  0E00               	movlw	0
 19984  017E64  2033               	addwfc	(SD_SPI_SectorWrite@sector_address+2)^0,w,c
 19985  017E66  6E49               	movwf	(SD_SPI_SectorWrite@info+10)^0,c
 19986  017E68  0E00               	movlw	0
 19987  017E6A  2034               	addwfc	(SD_SPI_SectorWrite@sector_address+3)^0,w,c
 19988  017E6C  6E4A               	movwf	(SD_SPI_SectorWrite@info+11)^0,c
 19989                           
 19990                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 19991  017E6E  0E01               	movlw	1
 19992  017E70  6E4B               	movwf	(SD_SPI_SectorWrite@info+12)^0,c
 19993  017E72                     
 19994                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 19995  017E72  0E8B               	movlw	low (_spiMaster+3)
 19996  017E74  6EF6               	movwf	tblptrl,c
 19997  017E76  0EFE               	movlw	high (_spiMaster+3)
 19998  017E78  6EF7               	movwf	tblptrh,c
 19999  017E7A                     	if	0	;tblptru may be non-zero
 20000  017E7A                     	endif
 20001  017E7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20002  017E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 20003  017E7C  6EF8               	movwf	tblptru,c
 20004  017E7E                     	endif
 20005  017E7E  D802               	call	u7688
 20006  017E80  EF4F  F0BF         	goto	u7689
 20007  017E84                     u7688:
 20008  017E84  0005               	push	
 20009  017E86  6EFA               	movwf	pclath,c
 20010  017E88  0009               	tblrd		*+
 20011  017E8A  50F5               	movf	tablat,w,c
 20012  017E8C  6EFD               	movwf	tosl,c
 20013  017E8E  0009               	tblrd		*+
 20014  017E90  50F5               	movf	tablat,w,c
 20015  017E92  6EFE               	movwf	tosh,c
 20016  017E94  0009               	tblrd		*+
 20017  017E96  50F5               	movf	tablat,w,c
 20018  017E98  6EFF               	movwf	tosu,c
 20019  017E9A  50FA               	movf	pclath,w,c
 20020  017E9C  0012               	return		;indir
 20021  017E9E                     u7689:
 20022  017E9E  0900               	iorlw	0
 20023  017EA0  A4D8               	btfss	status,2,c
 20024  017EA2  EF55  F0BF         	goto	u7691
 20025  017EA6  EF57  F0BF         	goto	u7690
 20026  017EAA                     u7691:
 20027  017EAA  EF5A  F0BF         	goto	l726
 20028  017EAE                     u7690:
 20029  017EAE                     
 20030                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 20031  017EAE  0E00               	movlw	0
 20032  017EB0  EF9D  F0BF         	goto	l725
 20033  017EB4                     l726:
 20034  017EB4  9ABA               	bcf	186,5,c	;volatile
 20035  017EB6                     l7471:
 20036                           
 20037                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 20038  017EB6  0E3F               	movlw	low SD_SPI_SectorWrite@info
 20039  017EB8  6E22               	movwf	SD_SPI_AsyncWriteTasks@info^0,c
 20040  017EBA  0E00               	movlw	high SD_SPI_SectorWrite@info
 20041  017EBC  6E23               	movwf	(SD_SPI_AsyncWriteTasks@info+1)^0,c
 20042  017EBE  ECBA  F092         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 20043  017EC2  6E3C               	movwf	SD_SPI_SectorWrite@status^0,c
 20044  017EC4                     
 20045                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 20046  017EC4  503C               	movf	SD_SPI_SectorWrite@status^0,w,c
 20047  017EC6  A4D8               	btfss	status,2,c
 20048  017EC8  EF68  F0BF         	goto	u7701
 20049  017ECC  EF6A  F0BF         	goto	u7700
 20050  017ED0                     u7701:
 20051  017ED0  EF6E  F0BF         	goto	l7479
 20052  017ED4                     u7700:
 20053  017ED4                     
 20054                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 20055  017ED4  0E01               	movlw	1
 20056  017ED6  6E3B               	movwf	SD_SPI_SectorWrite@result^0,c
 20057                           
 20058                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 20059  017ED8  EF78  F0BF         	goto	l734
 20060  017EDC                     l7479:
 20061  017EDC  283C               	incf	SD_SPI_SectorWrite@status^0,w,c
 20062  017EDE  A4D8               	btfss	status,2,c
 20063  017EE0  EF74  F0BF         	goto	u7711
 20064  017EE4  EF76  F0BF         	goto	u7710
 20065  017EE8                     u7711:
 20066  017EE8  EF5B  F0BF         	goto	l7471
 20067  017EEC                     u7710:
 20068  017EEC                     
 20069                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 20070  017EEC  0E00               	movlw	0
 20071  017EEE  6E3B               	movwf	SD_SPI_SectorWrite@result^0,c
 20072  017EF0                     l734:
 20073  017EF0  8ABA               	bsf	186,5,c	;volatile
 20074  017EF2                     
 20075                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 20076  017EF2  0E88               	movlw	low _spiMaster
 20077  017EF4  6EF6               	movwf	tblptrl,c
 20078  017EF6                     	if	1	;There is more than 1 active tblptr byte
 20079  017EF6  0EFE               	movlw	high _spiMaster
 20080  017EF8  6EF7               	movwf	tblptrh,c
 20081  017EFA                     	endif
 20082  017EFA                     	if	1	;There are 3 active tblptr bytes
 20083  017EFA  0E00               	movlw	low (_spiMaster shr (0+16))
 20084  017EFC  6EF8               	movwf	tblptru,c
 20085  017EFE                     	endif
 20086  017EFE  D802               	call	u7728
 20087  017F00  EF8F  F0BF         	goto	u7729
 20088  017F04                     u7728:
 20089  017F04  0005               	push	
 20090  017F06  6EFA               	movwf	pclath,c
 20091  017F08  0009               	tblrd		*+
 20092  017F0A  50F5               	movf	tablat,w,c
 20093  017F0C  6EFD               	movwf	tosl,c
 20094  017F0E  0009               	tblrd		*+
 20095  017F10  50F5               	movf	tablat,w,c
 20096  017F12  6EFE               	movwf	tosh,c
 20097  017F14  0009               	tblrd		*+
 20098  017F16  50F5               	movf	tablat,w,c
 20099  017F18  6EFF               	movwf	tosu,c
 20100  017F1A  50FA               	movf	pclath,w,c
 20101  017F1C  0012               	return		;indir
 20102  017F1E                     u7729:
 20103  017F1E                     
 20104                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 20105  017F1E  4A3D               	infsnz	SD_SPI_SectorWrite@i^0,f,c
 20106  017F20  2A3E               	incf	(SD_SPI_SectorWrite@i+1)^0,f,c
 20107  017F22                     l7487:
 20108  017F22  5037               	movf	SD_SPI_SectorWrite@sector_count^0,w,c
 20109  017F24  5C3D               	subwf	SD_SPI_SectorWrite@i^0,w,c
 20110  017F26  5038               	movf	(SD_SPI_SectorWrite@sector_count+1)^0,w,c
 20111  017F28  583E               	subwfb	(SD_SPI_SectorWrite@i+1)^0,w,c
 20112  017F2A  A0D8               	btfss	status,0,c
 20113  017F2C  EF9A  F0BF         	goto	u7731
 20114  017F30  EF9C  F0BF         	goto	u7730
 20115  017F34                     u7731:
 20116  017F34  EF0E  F0BF         	goto	l7459
 20117  017F38                     u7730:
 20118  017F38                     
 20119                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 20120  017F38  503B               	movf	SD_SPI_SectorWrite@result^0,w,c
 20121  017F3A                     l725:
 20122  017F3A  0012               	return		;funcret
 20123  017F3C                     __end_of_SD_SPI_SectorWrite:
 20124                           	callstack 0
 20125                           
 20126 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 20127 ;; Defined at:
 20128 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;  info            2   33[COMRAM] PTR struct SD_ASYNC_IO
 20131 ;;		 -> SD_SPI_SectorWrite@info(13), 
 20132 ;; Auto vars:     Size  Location     Type
 20133 ;;  response        5   39[COMRAM] struct .
 20134 ;;  preEraseBloc    4   44[COMRAM] unsigned long 
 20135 ;; Return value:  Size  Location     Type
 20136 ;;                  1    wreg      unsigned char 
 20137 ;; Registers used:
 20138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20139 ;; Tracked objects:
 20140 ;;		On entry : 0/0
 20141 ;;		On exit  : 0/0
 20142 ;;		Unchanged: 0/0
 20143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20145 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20147 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20148 ;;Total ram usage:       15 bytes
 20149 ;; Hardware stack levels used:    1
 20150 ;; Hardware stack levels required when called:    2
 20151 ;; This function calls:
 20152 ;;		_SD_SendCmd
 20153 ;;		_SPI1_ExchangeBlock
 20154 ;;		_SPI1_ExchangeByte
 20155 ;; This function is called by:
 20156 ;;		_SD_SPI_SectorWrite
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           	psect	text64
 20161  012574                     __ptext64:
 20162                           	callstack 0
 20163  012574                     _SD_SPI_AsyncWriteTasks:
 20164                           	callstack 20
 20165  012574                     
 20166                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 20167  012574  EFDD  F095         	goto	l7415
 20168  012578                     l7229:
 20169                           
 20170                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 20171  012578  0E00               	movlw	0
 20172  01257A  EF08  F096         	goto	l862
 20173  01257E                     l7233:
 20174                           
 20175                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 20176  01257E  0E02               	movlw	2
 20177  012580  0101               	movlb	1	; () banked
 20178  012582  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 20179                           
 20180                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 20181  012584  0E02               	movlw	2
 20182  012586  6F34               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 20183  012588  0E00               	movlw	0
 20184  01258A  6F33               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 20185  01258C                     
 20186                           ; BSR set to: 1
 20187                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 20188  01258C  0060  F08B  FFD9   	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 20189  012592  0060  F08F  FFDA   	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 20190  012598  EE10  F100         	lfsr	1,_ioInfo
 20191  01259C  0E0C               	movlw	12
 20192  01259E                     u7281:
 20193  01259E  006F FF6F FFE3     	movff	plusw2,plusw1
 20194  0125A4  06E8               	decf	wreg,f,c
 20195  0125A6  E2FB               	bc	u7281
 20196  0125A8                     
 20197                           ; BSR set to: 1
 20198                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 20199  0125A8  5105               	movf	(_ioInfo+5)& (0+255),w,b
 20200  0125AA  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 20201  0125AC  E108               	bnz	u7291
 20202  0125AE  0502               	decf	(_ioInfo+2)& (0+255),w,b
 20203  0125B0  0E02               	movlw	2
 20204  0125B2  5903               	subwfb	(_ioInfo+3)& (0+255),w,b
 20205  0125B4  B0D8               	btfsc	status,0,c
 20206  0125B6  EFDF  F092         	goto	u7291
 20207  0125BA  EFE1  F092         	goto	u7290
 20208  0125BE                     u7291:
 20209  0125BE  EFE5  F092         	goto	l7241
 20210  0125C2                     u7290:
 20211  0125C2                     
 20212                           ; BSR set to: 1
 20213                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 20214  0125C2  0E0A               	movlw	10
 20215  0125C4  6F3B               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 20216                           
 20217                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 20218  0125C6  EF39  F093         	goto	l7255
 20219  0125CA                     l7241:
 20220                           
 20221                           ; BSR set to: 1
 20222                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 20223  0125CA  0E0B               	movlw	11
 20224  0125CC  6F3B               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 20225  0125CE                     
 20226                           ; BSR set to: 1
 20227                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 20228  0125CE  C102  F024         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 20229  0125D2  C103  F025         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 20230  0125D6  C104  F026         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 20231  0125DA  C105  F027         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 20232  0125DE  0E0A               	movlw	10
 20233  0125E0  EFF7  F092         	goto	u7300
 20234  0125E4                     u7305:
 20235  0125E4  90D8               	bcf	status,0,c
 20236  0125E6  3227               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)^0,f,c
 20237  0125E8  3226               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)^0,f,c
 20238  0125EA  3225               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)^0,f,c
 20239  0125EC  3224               	rrcf	??_SD_SPI_AsyncWriteTasks^0,f,c
 20240  0125EE                     u7300:
 20241  0125EE  2EE8               	decfsz	wreg,f,c
 20242  0125F0  EFF2  F092         	goto	u7305
 20243  0125F4  C024  F02D         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 20244  0125F8  C025  F02E         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 20245  0125FC  C026  F02F         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 20246  012600  C027  F030         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 20247  012604                     
 20248                           ; BSR set to: 1
 20249                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 20250  012604  502D               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,w,c
 20251  012606  102E               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,w,c
 20252  012608  102F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,w,c
 20253  01260A  1030               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,w,c
 20254  01260C  A4D8               	btfss	status,2,c
 20255  01260E  EF0B  F093         	goto	u7311
 20256  012612  EF0D  F093         	goto	u7310
 20257  012616                     u7311:
 20258  012616  EF13  F093         	goto	l7249
 20259  01261A                     u7310:
 20260  01261A                     
 20261                           ; BSR set to: 1
 20262                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 20263  01261A  0E01               	movlw	1
 20264  01261C  262D               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,f,c
 20265  01261E  0E00               	movlw	0
 20266  012620  222E               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,f,c
 20267  012622  222F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,f,c
 20268  012624  2230               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,f,c
 20269  012626                     l7249:
 20270                           
 20271                           ; BSR set to: 1
 20272                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 20273  012626  0E00               	movlw	0
 20274  012628  6E0C               	movwf	SD_SendCmd@address^0,c
 20275  01262A  0E00               	movlw	0
 20276  01262C  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 20277  01262E  0E00               	movlw	0
 20278  012630  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 20279  012632  0E00               	movlw	0
 20280  012634  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 20281  012636  0E0F               	movlw	15
 20282  012638  ECBB  F0A0         	call	_SD_SendCmd
 20283  01263C  EE20  F028         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 20284  012640  0E04               	movlw	4
 20285  012642                     u7321:
 20286  012642  006F FFAF FFDB     	movff	plusw0,plusw2
 20287  012648  06E8               	decf	wreg,f,c
 20288  01264A  E2FB               	bc	u7321
 20289  01264C                     
 20290                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 20291  01264C  5028               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 20292  01264E  A4D8               	btfss	status,2,c
 20293  012650  EF2C  F093         	goto	u7331
 20294  012654  EF2E  F093         	goto	u7330
 20295  012658                     u7331:
 20296  012658  EF39  F093         	goto	l7255
 20297  01265C                     u7330:
 20298  01265C                     
 20299                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 20300  01265C  C02D  F00C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 20301  012660  C02E  F00D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 20302  012664  C02F  F00E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 20303  012668  C030  F00F         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 20304  01266C  0E13               	movlw	19
 20305  01266E  ECBB  F0A0         	call	_SD_SendCmd
 20306  012672                     l7255:
 20307                           
 20308                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 20309  012672  0101               	movlb	1	; () banked
 20310  012674  51DB               	movf	(_mediaInformation+8)& (0+255),w,b
 20311  012676  A4D8               	btfss	status,2,c
 20312  012678  EF40  F093         	goto	u7341
 20313  01267C  EF42  F093         	goto	u7340
 20314  012680                     u7341:
 20315  012680  EF4B  F093         	goto	l7259
 20316  012684                     u7340:
 20317  012684                     
 20318                           ; BSR set to: 1
 20319                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 20320  012684  0E09               	movlw	9
 20321  012686                     u7355:
 20322  012686  90D8               	bcf	status,0,c
 20323  012688  3708               	rlcf	(_ioInfo+8)& (0+255),f,b
 20324  01268A  3709               	rlcf	(_ioInfo+9)& (0+255),f,b
 20325  01268C  370A               	rlcf	(_ioInfo+10)& (0+255),f,b
 20326  01268E  370B               	rlcf	(_ioInfo+11)& (0+255),f,b
 20327  012690  2EE8               	decfsz	wreg,f,c
 20328  012692  EF43  F093         	goto	u7355
 20329  012696                     l7259:
 20330                           
 20331                           ; BSR set to: 1
 20332                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 20333  012696  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 20334  01269A  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 20335  01269E  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 20336  0126A2  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 20337  0126A6  513B               	movf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 20338  0126A8  ECBB  F0A0         	call	_SD_SendCmd
 20339  0126AC  EE20  F028         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 20340  0126B0  0E04               	movlw	4
 20341  0126B2                     u7361:
 20342  0126B2  006F FFAF FFDB     	movff	plusw0,plusw2
 20343  0126B8  06E8               	decf	wreg,f,c
 20344  0126BA  E2FB               	bc	u7361
 20345  0126BC                     
 20346                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 20347  0126BC  5028               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 20348  0126BE  B4D8               	btfsc	status,2,c
 20349  0126C0  EF64  F093         	goto	u7371
 20350  0126C4  EF66  F093         	goto	u7370
 20351  0126C8                     u7371:
 20352  0126C8  EF71  F093         	goto	l7271
 20353  0126CC                     u7370:
 20354  0126CC                     
 20355                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 20356  0126CC  EE20 F00C          	lfsr	2,12
 20357  0126D0  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20358  0126D2  26D9               	addwf	fsr2l,f,c
 20359  0126D4  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20360  0126D6  22DA               	addwfc	fsr2h,f,c
 20361  0126D8  0EFF               	movlw	255
 20362  0126DA  6EDF               	movwf	indf2,c
 20363  0126DC                     l7265:
 20364                           
 20365                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 20366  0126DC  0EFF               	movlw	255
 20367  0126DE  EF08  F096         	goto	l862
 20368  0126E2                     l7271:
 20369                           
 20370                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 20371  0126E2  EE20 F00C          	lfsr	2,12
 20372  0126E6  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20373  0126E8  26D9               	addwf	fsr2l,f,c
 20374  0126EA  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20375  0126EC  22DA               	addwfc	fsr2h,f,c
 20376  0126EE  0E02               	movlw	2
 20377  0126F0  6EDF               	movwf	indf2,c
 20378  0126F2                     l7273:
 20379                           
 20380                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 20381  0126F2  0E02               	movlw	2
 20382  0126F4  EF08  F096         	goto	l862
 20383  0126F8                     l7277:
 20384                           
 20385                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 20386  0126F8  0E02               	movlw	2
 20387  0126FA  0101               	movlb	1	; () banked
 20388  0126FC  1934               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 20389  0126FE  1133               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 20390  012700  A4D8               	btfss	status,2,c
 20391  012702  EF85  F093         	goto	u7381
 20392  012706  EF87  F093         	goto	u7380
 20393  01270A                     u7381:
 20394  01270A  EFC0  F093         	goto	l7285
 20395  01270E                     u7380:
 20396  01270E                     
 20397                           ; BSR set to: 1
 20398                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 20399  01270E  0E0B               	movlw	11
 20400  012710  193B               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 20401  012712  A4D8               	btfss	status,2,c
 20402  012714  EF8E  F093         	goto	u7391
 20403  012718  EF90  F093         	goto	u7390
 20404  01271C                     u7391:
 20405  01271C  EFA9  F093         	goto	l7283
 20406  012720                     u7390:
 20407  012720                     
 20408                           ; BSR set to: 1
 20409                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 20410  012720  0E8E               	movlw	low (_spiMaster+6)
 20411  012722  6EF6               	movwf	tblptrl,c
 20412  012724  0EFE               	movlw	high (_spiMaster+6)
 20413  012726  6EF7               	movwf	tblptrh,c
 20414  012728                     	if	0	;tblptru may be non-zero
 20415  012728                     	endif
 20416  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20417  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 20418  01272A  6EF8               	movwf	tblptru,c
 20419  01272C                     	endif
 20420  01272C  D802               	call	u7408
 20421  01272E  EFA7  F093         	goto	u7409
 20422  012732                     u7408:
 20423  012732  0005               	push	
 20424  012734  6EFA               	movwf	pclath,c
 20425  012736  0009               	tblrd		*+
 20426  012738  50F5               	movf	tablat,w,c
 20427  01273A  6EFD               	movwf	tosl,c
 20428  01273C  0009               	tblrd		*+
 20429  01273E  50F5               	movf	tablat,w,c
 20430  012740  6EFE               	movwf	tosh,c
 20431  012742  0009               	tblrd		*+
 20432  012744  50F5               	movf	tablat,w,c
 20433  012746  6EFF               	movwf	tosu,c
 20434  012748  50FA               	movf	pclath,w,c
 20435  01274A  0EFC               	movlw	252
 20436  01274C  0012               	return		;indir
 20437  01274E                     u7409:
 20438                           
 20439                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 20440  01274E  EFC0  F093         	goto	l7285
 20441  012752                     l7283:
 20442                           
 20443                           ; BSR set to: 1
 20444                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 20445  012752  0E8E               	movlw	low (_spiMaster+6)
 20446  012754  6EF6               	movwf	tblptrl,c
 20447  012756  0EFE               	movlw	high (_spiMaster+6)
 20448  012758  6EF7               	movwf	tblptrh,c
 20449  01275A                     	if	0	;tblptru may be non-zero
 20450  01275A                     	endif
 20451  01275A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20452  01275A  0E00               	movlw	low (__mediumconst shr (0+16))
 20453  01275C  6EF8               	movwf	tblptru,c
 20454  01275E                     	endif
 20455  01275E  D802               	call	u7418
 20456  012760  EFC0  F093         	goto	u7419
 20457  012764                     u7418:
 20458  012764  0005               	push	
 20459  012766  6EFA               	movwf	pclath,c
 20460  012768  0009               	tblrd		*+
 20461  01276A  50F5               	movf	tablat,w,c
 20462  01276C  6EFD               	movwf	tosl,c
 20463  01276E  0009               	tblrd		*+
 20464  012770  50F5               	movf	tablat,w,c
 20465  012772  6EFE               	movwf	tosh,c
 20466  012774  0009               	tblrd		*+
 20467  012776  50F5               	movf	tablat,w,c
 20468  012778  6EFF               	movwf	tosu,c
 20469  01277A  50FA               	movf	pclath,w,c
 20470  01277C  0EFE               	movlw	254
 20471  01277E  0012               	return		;indir
 20472  012780                     u7419:
 20473  012780                     l7285:
 20474                           
 20475                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 20476  012780  0060  F08B  FFD9   	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 20477  012786  0060  F08F  FFDA   	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 20478  01278C  006F FF78  F100    	movff	postinc2,_ioInfo
 20479  012792  006F FF74  F101    	movff	postdec2,_ioInfo+1
 20480  012798                     
 20481                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 20482  012798  EE20 F006          	lfsr	2,6
 20483  01279C  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20484  01279E  26D9               	addwf	fsr2l,f,c
 20485  0127A0  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20486  0127A2  22DA               	addwfc	fsr2h,f,c
 20487  0127A4  006F FF78  F106    	movff	postinc2,_ioInfo+6
 20488  0127AA  006F FF74  F107    	movff	postdec2,_ioInfo+7
 20489  0127B0                     
 20490                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 20491  0127B0  0101               	movlb	1	; () banked
 20492  0127B2  5100               	movf	_ioInfo& (0+255),w,b
 20493  0127B4  6E24               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 20494  0127B6  5101               	movf	(_ioInfo+1)& (0+255),w,b
 20495  0127B8  6E25               	movwf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 20496  0127BA  6A26               	clrf	(??_SD_SPI_AsyncWriteTasks+2)^0,c
 20497  0127BC  6A27               	clrf	(??_SD_SPI_AsyncWriteTasks+3)^0,c
 20498  0127BE  5024               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 20499  0127C0  5F02               	subwf	(_ioInfo+2)& (0+255),f,b
 20500  0127C2  5025               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 20501  0127C4  5B03               	subwfb	(_ioInfo+3)& (0+255),f,b
 20502  0127C6  5026               	movf	(??_SD_SPI_AsyncWriteTasks+2)^0,w,c
 20503  0127C8  5B04               	subwfb	(_ioInfo+4)& (0+255),f,b
 20504  0127CA  5027               	movf	(??_SD_SPI_AsyncWriteTasks+3)^0,w,c
 20505  0127CC  5B05               	subwfb	(_ioInfo+5)& (0+255),f,b
 20506  0127CE                     
 20507                           ; BSR set to: 1
 20508                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 20509  0127CE  5100               	movf	_ioInfo& (0+255),w,b
 20510  0127D0  5F33               	subwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),f,b
 20511  0127D2  5101               	movf	(_ioInfo+1)& (0+255),w,b
 20512  0127D4  5B34               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),f,b
 20513  0127D6                     
 20514                           ; BSR set to: 1
 20515                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 20516  0127D6  C106  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 20517  0127DA  C107  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 20518  0127DE  C100  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 20519  0127E2  C101  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 20520  0127E6  0E91               	movlw	low (_spiMaster+9)
 20521  0127E8  6EF6               	movwf	tblptrl,c
 20522  0127EA  0EFE               	movlw	high (_spiMaster+9)
 20523  0127EC  6EF7               	movwf	tblptrh,c
 20524  0127EE                     	if	0	;tblptru may be non-zero
 20525  0127EE                     	endif
 20526  0127EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20527  0127EE  0E00               	movlw	low (__mediumconst shr (0+16))
 20528  0127F0  6EF8               	movwf	tblptru,c
 20529  0127F2                     	endif
 20530  0127F2  D802               	call	u7428
 20531  0127F4  EF09  F094         	goto	u7429
 20532  0127F8                     u7428:
 20533  0127F8  0005               	push	
 20534  0127FA  6EFA               	movwf	pclath,c
 20535  0127FC  0009               	tblrd		*+
 20536  0127FE  50F5               	movf	tablat,w,c
 20537  012800  6EFD               	movwf	tosl,c
 20538  012802  0009               	tblrd		*+
 20539  012804  50F5               	movf	tablat,w,c
 20540  012806  6EFE               	movwf	tosh,c
 20541  012808  0009               	tblrd		*+
 20542  01280A  50F5               	movf	tablat,w,c
 20543  01280C  6EFF               	movwf	tosu,c
 20544  01280E  50FA               	movf	pclath,w,c
 20545  012810  0012               	return		;indir
 20546  012812                     u7429:
 20547  012812                     
 20548                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 20549  012812  0101               	movlb	1	; () banked
 20550  012814  5133               	movf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 20551  012816  1134               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 20552  012818  A4D8               	btfss	status,2,c
 20553  01281A  EF11  F094         	goto	u7431
 20554  01281E  EF13  F094         	goto	u7430
 20555  012822                     u7431:
 20556  012822  EF79  F093         	goto	l7273
 20557  012826                     u7430:
 20558  012826                     
 20559                           ; BSR set to: 1
 20560                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 20561  012826  0E02               	movlw	2
 20562  012828  6F34               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 20563  01282A  0E00               	movlw	0
 20564  01282C  6F33               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 20565  01282E                     
 20566                           ; BSR set to: 1
 20567                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 20568  01282E  0E8E               	movlw	low (_spiMaster+6)
 20569  012830  6EF6               	movwf	tblptrl,c
 20570  012832  0EFE               	movlw	high (_spiMaster+6)
 20571  012834  6EF7               	movwf	tblptrh,c
 20572  012836                     	if	0	;tblptru may be non-zero
 20573  012836                     	endif
 20574  012836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20575  012836  0E00               	movlw	low (__mediumconst shr (0+16))
 20576  012838  6EF8               	movwf	tblptru,c
 20577  01283A                     	endif
 20578  01283A  D802               	call	u7448
 20579  01283C  EF2E  F094         	goto	u7449
 20580  012840                     u7448:
 20581  012840  0005               	push	
 20582  012842  6EFA               	movwf	pclath,c
 20583  012844  0009               	tblrd		*+
 20584  012846  50F5               	movf	tablat,w,c
 20585  012848  6EFD               	movwf	tosl,c
 20586  01284A  0009               	tblrd		*+
 20587  01284C  50F5               	movf	tablat,w,c
 20588  01284E  6EFE               	movwf	tosh,c
 20589  012850  0009               	tblrd		*+
 20590  012852  50F5               	movf	tablat,w,c
 20591  012854  6EFF               	movwf	tosu,c
 20592  012856  50FA               	movf	pclath,w,c
 20593  012858  0EFF               	movlw	255
 20594  01285A  0012               	return		;indir
 20595  01285C                     u7449:
 20596  01285C                     
 20597                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 20598  01285C  0E8E               	movlw	low (_spiMaster+6)
 20599  01285E  6EF6               	movwf	tblptrl,c
 20600  012860  0EFE               	movlw	high (_spiMaster+6)
 20601  012862  6EF7               	movwf	tblptrh,c
 20602  012864                     	if	0	;tblptru may be non-zero
 20603  012864                     	endif
 20604  012864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20605  012864  0E00               	movlw	low (__mediumconst shr (0+16))
 20606  012866  6EF8               	movwf	tblptru,c
 20607  012868                     	endif
 20608  012868  D802               	call	u7458
 20609  01286A  EF45  F094         	goto	u7459
 20610  01286E                     u7458:
 20611  01286E  0005               	push	
 20612  012870  6EFA               	movwf	pclath,c
 20613  012872  0009               	tblrd		*+
 20614  012874  50F5               	movf	tablat,w,c
 20615  012876  6EFD               	movwf	tosl,c
 20616  012878  0009               	tblrd		*+
 20617  01287A  50F5               	movf	tablat,w,c
 20618  01287C  6EFE               	movwf	tosh,c
 20619  01287E  0009               	tblrd		*+
 20620  012880  50F5               	movf	tablat,w,c
 20621  012882  6EFF               	movwf	tosu,c
 20622  012884  50FA               	movf	pclath,w,c
 20623  012886  0EFF               	movlw	255
 20624  012888  0012               	return		;indir
 20625  01288A                     u7459:
 20626  01288A                     
 20627                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 20628  01288A  0E8E               	movlw	low (_spiMaster+6)
 20629  01288C  6EF6               	movwf	tblptrl,c
 20630  01288E  0EFE               	movlw	high (_spiMaster+6)
 20631  012890  6EF7               	movwf	tblptrh,c
 20632  012892                     	if	0	;tblptru may be non-zero
 20633  012892                     	endif
 20634  012892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20635  012892  0E00               	movlw	low (__mediumconst shr (0+16))
 20636  012894  6EF8               	movwf	tblptru,c
 20637  012896                     	endif
 20638  012896  D802               	call	u7468
 20639  012898  EF5C  F094         	goto	u7469
 20640  01289C                     u7468:
 20641  01289C  0005               	push	
 20642  01289E  6EFA               	movwf	pclath,c
 20643  0128A0  0009               	tblrd		*+
 20644  0128A2  50F5               	movf	tablat,w,c
 20645  0128A4  6EFD               	movwf	tosl,c
 20646  0128A6  0009               	tblrd		*+
 20647  0128A8  50F5               	movf	tablat,w,c
 20648  0128AA  6EFE               	movwf	tosh,c
 20649  0128AC  0009               	tblrd		*+
 20650  0128AE  50F5               	movf	tablat,w,c
 20651  0128B0  6EFF               	movwf	tosu,c
 20652  0128B2  50FA               	movf	pclath,w,c
 20653  0128B4  0EFF               	movlw	255
 20654  0128B6  0012               	return		;indir
 20655  0128B8                     u7469:
 20656  0128B8  0B1F               	andlw	31
 20657  0128BA  0A05               	xorlw	5
 20658  0128BC  B4D8               	btfsc	status,2,c
 20659  0128BE  EF63  F094         	goto	u7471
 20660  0128C2  EF65  F094         	goto	u7470
 20661  0128C6                     u7471:
 20662  0128C6  EF70  F094         	goto	l7311
 20663  0128CA                     u7470:
 20664  0128CA                     
 20665                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 20666  0128CA  EE20 F00C          	lfsr	2,12
 20667  0128CE  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20668  0128D0  26D9               	addwf	fsr2l,f,c
 20669  0128D2  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20670  0128D4  22DA               	addwfc	fsr2h,f,c
 20671  0128D6  0EFE               	movlw	254
 20672  0128D8  6EDF               	movwf	indf2,c
 20673  0128DA                     l7307:
 20674                           
 20675                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 20676  0128DA  0E03               	movlw	3
 20677  0128DC  EF08  F096         	goto	l862
 20678  0128E0                     l7311:
 20679                           
 20680                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 20681  0128E0  EE20 F00C          	lfsr	2,12
 20682  0128E4  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20683  0128E6  26D9               	addwf	fsr2l,f,c
 20684  0128E8  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20685  0128EA  22DA               	addwfc	fsr2h,f,c
 20686  0128EC  0E03               	movlw	3
 20687  0128EE  6EDF               	movwf	indf2,c
 20688  0128F0                     
 20689                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 20690  0128F0  0E00               	movlw	0
 20691  0128F2  0101               	movlb	1	; () banked
 20692  0128F4  6F19               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 20693  0128F6  0E00               	movlw	0
 20694  0128F8  6F1A               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 20695  0128FA  0E0A               	movlw	10
 20696  0128FC  6F1B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 20697  0128FE  0E00               	movlw	0
 20698  012900  6F1C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 20699  012902  EF6D  F094         	goto	l7307
 20700  012906                     l7323:
 20701                           
 20702                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 20703  012906  0101               	movlb	1	; () banked
 20704  012908  5119               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 20705  01290A  111A               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 20706  01290C  111B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 20707  01290E  111C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 20708  012910  B4D8               	btfsc	status,2,c
 20709  012912  EF8D  F094         	goto	u7481
 20710  012916  EF8F  F094         	goto	u7480
 20711  01291A                     u7481:
 20712  01291A  EF4F  F095         	goto	l7371
 20713  01291E                     u7480:
 20714  01291E                     
 20715                           ; BSR set to: 1
 20716                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 20717  01291E  0719               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 20718  012920  0E00               	movlw	0
 20719  012922  5B1A               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 20720  012924  5B1B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 20721  012926  5B1C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 20722  012928                     
 20723                           ; BSR set to: 1
 20724                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 20725  012928  0E8E               	movlw	low (_spiMaster+6)
 20726  01292A  6EF6               	movwf	tblptrl,c
 20727  01292C  0EFE               	movlw	high (_spiMaster+6)
 20728  01292E  6EF7               	movwf	tblptrh,c
 20729  012930                     	if	0	;tblptru may be non-zero
 20730  012930                     	endif
 20731  012930                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20732  012930  0E00               	movlw	low (__mediumconst shr (0+16))
 20733  012932  6EF8               	movwf	tblptru,c
 20734  012934                     	endif
 20735  012934  D802               	call	u7498
 20736  012936  EFAB  F094         	goto	u7499
 20737  01293A                     u7498:
 20738  01293A  0005               	push	
 20739  01293C  6EFA               	movwf	pclath,c
 20740  01293E  0009               	tblrd		*+
 20741  012940  50F5               	movf	tablat,w,c
 20742  012942  6EFD               	movwf	tosl,c
 20743  012944  0009               	tblrd		*+
 20744  012946  50F5               	movf	tablat,w,c
 20745  012948  6EFE               	movwf	tosh,c
 20746  01294A  0009               	tblrd		*+
 20747  01294C  50F5               	movf	tablat,w,c
 20748  01294E  6EFF               	movwf	tosu,c
 20749  012950  50FA               	movf	pclath,w,c
 20750  012952  0EFF               	movlw	255
 20751  012954  0012               	return		;indir
 20752  012956                     u7499:
 20753  012956                     
 20754                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 20755  012956  0E8E               	movlw	low (_spiMaster+6)
 20756  012958  6EF6               	movwf	tblptrl,c
 20757  01295A  0EFE               	movlw	high (_spiMaster+6)
 20758  01295C  6EF7               	movwf	tblptrh,c
 20759  01295E                     	if	0	;tblptru may be non-zero
 20760  01295E                     	endif
 20761  01295E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20762  01295E  0E00               	movlw	low (__mediumconst shr (0+16))
 20763  012960  6EF8               	movwf	tblptru,c
 20764  012962                     	endif
 20765  012962  D802               	call	u7508
 20766  012964  EFC2  F094         	goto	u7509
 20767  012968                     u7508:
 20768  012968  0005               	push	
 20769  01296A  6EFA               	movwf	pclath,c
 20770  01296C  0009               	tblrd		*+
 20771  01296E  50F5               	movf	tablat,w,c
 20772  012970  6EFD               	movwf	tosl,c
 20773  012972  0009               	tblrd		*+
 20774  012974  50F5               	movf	tablat,w,c
 20775  012976  6EFE               	movwf	tosh,c
 20776  012978  0009               	tblrd		*+
 20777  01297A  50F5               	movf	tablat,w,c
 20778  01297C  6EFF               	movwf	tosu,c
 20779  01297E  50FA               	movf	pclath,w,c
 20780  012980  0EFF               	movlw	255
 20781  012982  0012               	return		;indir
 20782  012984                     u7509:
 20783  012984  0101               	movlb	1	; () banked
 20784  012986  6F3C               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 20785  012988                     
 20786                           ; BSR set to: 1
 20787                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 20788  012988  513C               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 20789  01298A  B4D8               	btfsc	status,2,c
 20790  01298C  EFCA  F094         	goto	u7511
 20791  012990  EFCC  F094         	goto	u7510
 20792  012994                     u7511:
 20793  012994  EF6D  F094         	goto	l7307
 20794  012998                     u7510:
 20795  012998                     
 20796                           ; BSR set to: 1
 20797                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 20798  012998  5102               	movf	(_ioInfo+2)& (0+255),w,b
 20799  01299A  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 20800  01299C  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 20801  01299E  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 20802  0129A0  A4D8               	btfss	status,2,c
 20803  0129A2  EFD5  F094         	goto	u7521
 20804  0129A6  EFD7  F094         	goto	u7520
 20805  0129AA                     u7521:
 20806  0129AA  EF45  F095         	goto	l7359
 20807  0129AE                     u7520:
 20808  0129AE                     
 20809                           ; BSR set to: 1
 20810                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 20811  0129AE  0E00               	movlw	0
 20812  0129B0  6F19               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 20813  0129B2  0E00               	movlw	0
 20814  0129B4  6F1A               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 20815  0129B6  0E0A               	movlw	10
 20816  0129B8  6F1B               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 20817  0129BA  0E00               	movlw	0
 20818  0129BC  6F1C               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 20819  0129BE                     
 20820                           ; BSR set to: 1
 20821                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 20822  0129BE  0E0B               	movlw	11
 20823  0129C0  193B               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 20824  0129C2  A4D8               	btfss	status,2,c
 20825  0129C4  EFE6  F094         	goto	u7531
 20826  0129C8  EFE8  F094         	goto	u7530
 20827  0129CC                     u7531:
 20828  0129CC  EF20  F095         	goto	l883
 20829  0129D0                     u7530:
 20830  0129D0                     
 20831                           ; BSR set to: 1
 20832                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 20833  0129D0  0E8E               	movlw	low (_spiMaster+6)
 20834  0129D2  6EF6               	movwf	tblptrl,c
 20835  0129D4  0EFE               	movlw	high (_spiMaster+6)
 20836  0129D6  6EF7               	movwf	tblptrh,c
 20837  0129D8                     	if	0	;tblptru may be non-zero
 20838  0129D8                     	endif
 20839  0129D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20840  0129D8  0E00               	movlw	low (__mediumconst shr (0+16))
 20841  0129DA  6EF8               	movwf	tblptru,c
 20842  0129DC                     	endif
 20843  0129DC  D802               	call	u7548
 20844  0129DE  EFFF  F094         	goto	u7549
 20845  0129E2                     u7548:
 20846  0129E2  0005               	push	
 20847  0129E4  6EFA               	movwf	pclath,c
 20848  0129E6  0009               	tblrd		*+
 20849  0129E8  50F5               	movf	tablat,w,c
 20850  0129EA  6EFD               	movwf	tosl,c
 20851  0129EC  0009               	tblrd		*+
 20852  0129EE  50F5               	movf	tablat,w,c
 20853  0129F0  6EFE               	movwf	tosh,c
 20854  0129F2  0009               	tblrd		*+
 20855  0129F4  50F5               	movf	tablat,w,c
 20856  0129F6  6EFF               	movwf	tosu,c
 20857  0129F8  50FA               	movf	pclath,w,c
 20858  0129FA  0EFD               	movlw	253
 20859  0129FC  0012               	return		;indir
 20860  0129FE                     u7549:
 20861                           
 20862                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 20863  0129FE  0E8E               	movlw	low (_spiMaster+6)
 20864  012A00  6EF6               	movwf	tblptrl,c
 20865  012A02  0EFE               	movlw	high (_spiMaster+6)
 20866  012A04  6EF7               	movwf	tblptrh,c
 20867  012A06                     	if	0	;tblptru may be non-zero
 20868  012A06                     	endif
 20869  012A06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20870  012A06  0E00               	movlw	low (__mediumconst shr (0+16))
 20871  012A08  6EF8               	movwf	tblptru,c
 20872  012A0A                     	endif
 20873  012A0A  D802               	call	u7558
 20874  012A0C  EF16  F095         	goto	u7559
 20875  012A10                     u7558:
 20876  012A10  0005               	push	
 20877  012A12  6EFA               	movwf	pclath,c
 20878  012A14  0009               	tblrd		*+
 20879  012A16  50F5               	movf	tablat,w,c
 20880  012A18  6EFD               	movwf	tosl,c
 20881  012A1A  0009               	tblrd		*+
 20882  012A1C  50F5               	movf	tablat,w,c
 20883  012A1E  6EFE               	movwf	tosh,c
 20884  012A20  0009               	tblrd		*+
 20885  012A22  50F5               	movf	tablat,w,c
 20886  012A24  6EFF               	movwf	tosu,c
 20887  012A26  50FA               	movf	pclath,w,c
 20888  012A28  0EFF               	movlw	255
 20889  012A2A  0012               	return		;indir
 20890  012A2C                     u7559:
 20891  012A2C                     
 20892                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 20893  012A2C  EE20 F00C          	lfsr	2,12
 20894  012A30  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20895  012A32  26D9               	addwf	fsr2l,f,c
 20896  012A34  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20897  012A36  22DA               	addwfc	fsr2h,f,c
 20898  012A38  0E04               	movlw	4
 20899  012A3A  6EDF               	movwf	indf2,c
 20900  012A3C  EF6D  F094         	goto	l7307
 20901  012A40                     l883:
 20902                           
 20903                           ; BSR set to: 1
 20904  012A40  8ABA               	bsf	186,5,c	;volatile
 20905  012A42                     
 20906                           ; BSR set to: 1
 20907                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 20908  012A42  0E8E               	movlw	low (_spiMaster+6)
 20909  012A44  6EF6               	movwf	tblptrl,c
 20910  012A46  0EFE               	movlw	high (_spiMaster+6)
 20911  012A48  6EF7               	movwf	tblptrh,c
 20912  012A4A                     	if	0	;tblptru may be non-zero
 20913  012A4A                     	endif
 20914  012A4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20915  012A4A  0E00               	movlw	low (__mediumconst shr (0+16))
 20916  012A4C  6EF8               	movwf	tblptru,c
 20917  012A4E                     	endif
 20918  012A4E  D802               	call	u7568
 20919  012A50  EF38  F095         	goto	u7569
 20920  012A54                     u7568:
 20921  012A54  0005               	push	
 20922  012A56  6EFA               	movwf	pclath,c
 20923  012A58  0009               	tblrd		*+
 20924  012A5A  50F5               	movf	tablat,w,c
 20925  012A5C  6EFD               	movwf	tosl,c
 20926  012A5E  0009               	tblrd		*+
 20927  012A60  50F5               	movf	tablat,w,c
 20928  012A62  6EFE               	movwf	tosh,c
 20929  012A64  0009               	tblrd		*+
 20930  012A66  50F5               	movf	tablat,w,c
 20931  012A68  6EFF               	movwf	tosu,c
 20932  012A6A  50FA               	movf	pclath,w,c
 20933  012A6C  0EFF               	movlw	255
 20934  012A6E  0012               	return		;indir
 20935  012A70                     u7569:
 20936  012A70                     
 20937                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 20938  012A70  EE20 F00C          	lfsr	2,12
 20939  012A74  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20940  012A76  26D9               	addwf	fsr2l,f,c
 20941  012A78  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20942  012A7A  22DA               	addwfc	fsr2h,f,c
 20943  012A7C  0E00               	movlw	0
 20944  012A7E  6EDF               	movwf	indf2,c
 20945  012A80                     l7353:
 20946                           
 20947                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 20948  012A80  0E01               	movlw	1
 20949  012A82  0101               	movlb	1	; () banked
 20950  012A84  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 20951  012A86  EFBC  F092         	goto	l7229
 20952  012A8A                     l7359:
 20953                           
 20954                           ; BSR set to: 1
 20955                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 20956  012A8A  EE20 F00C          	lfsr	2,12
 20957  012A8E  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20958  012A90  26D9               	addwf	fsr2l,f,c
 20959  012A92  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20960  012A94  22DA               	addwfc	fsr2h,f,c
 20961  012A96  0E02               	movlw	2
 20962  012A98  6EDF               	movwf	indf2,c
 20963  012A9A  EF79  F093         	goto	l7273
 20964  012A9E                     l7371:
 20965                           
 20966                           ; BSR set to: 1
 20967                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 20968  012A9E  EE20 F00C          	lfsr	2,12
 20969  012AA2  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 20970  012AA4  26D9               	addwf	fsr2l,f,c
 20971  012AA6  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 20972  012AA8  22DA               	addwfc	fsr2h,f,c
 20973  012AAA  0EFE               	movlw	254
 20974  012AAC  6EDF               	movwf	indf2,c
 20975  012AAE  EF6D  F094         	goto	l7307
 20976  012AB2                     l7377:
 20977                           
 20978                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 20979  012AB2  0101               	movlb	1	; () banked
 20980  012AB4  5119               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 20981  012AB6  111A               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 20982  012AB8  111B               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 20983  012ABA  111C               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 20984  012ABC  B4D8               	btfsc	status,2,c
 20985  012ABE  EF63  F095         	goto	u7571
 20986  012AC2  EF65  F095         	goto	u7570
 20987  012AC6                     u7571:
 20988  012AC6  EFAD  F095         	goto	l7399
 20989  012ACA                     u7570:
 20990  012ACA                     
 20991                           ; BSR set to: 1
 20992                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 20993  012ACA  0719               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 20994  012ACC  0E00               	movlw	0
 20995  012ACE  5B1A               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 20996  012AD0  5B1B               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 20997  012AD2  5B1C               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 20998  012AD4                     
 20999                           ; BSR set to: 1
 21000                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 21001  012AD4  0E8E               	movlw	low (_spiMaster+6)
 21002  012AD6  6EF6               	movwf	tblptrl,c
 21003  012AD8  0EFE               	movlw	high (_spiMaster+6)
 21004  012ADA  6EF7               	movwf	tblptrh,c
 21005  012ADC                     	if	0	;tblptru may be non-zero
 21006  012ADC                     	endif
 21007  012ADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21008  012ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 21009  012ADE  6EF8               	movwf	tblptru,c
 21010  012AE0                     	endif
 21011  012AE0  D802               	call	u7588
 21012  012AE2  EF81  F095         	goto	u7589
 21013  012AE6                     u7588:
 21014  012AE6  0005               	push	
 21015  012AE8  6EFA               	movwf	pclath,c
 21016  012AEA  0009               	tblrd		*+
 21017  012AEC  50F5               	movf	tablat,w,c
 21018  012AEE  6EFD               	movwf	tosl,c
 21019  012AF0  0009               	tblrd		*+
 21020  012AF2  50F5               	movf	tablat,w,c
 21021  012AF4  6EFE               	movwf	tosh,c
 21022  012AF6  0009               	tblrd		*+
 21023  012AF8  50F5               	movf	tablat,w,c
 21024  012AFA  6EFF               	movwf	tosu,c
 21025  012AFC  50FA               	movf	pclath,w,c
 21026  012AFE  0EFF               	movlw	255
 21027  012B00  0012               	return		;indir
 21028  012B02                     u7589:
 21029  012B02  0101               	movlb	1	; () banked
 21030  012B04  6F3C               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 21031  012B06                     
 21032                           ; BSR set to: 1
 21033                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 21034  012B06  513C               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 21035  012B08  B4D8               	btfsc	status,2,c
 21036  012B0A  EF89  F095         	goto	u7591
 21037  012B0E  EF8B  F095         	goto	u7590
 21038  012B12                     u7591:
 21039  012B12  EF6D  F094         	goto	l7307
 21040  012B16                     u7590:
 21041  012B16                     
 21042                           ; BSR set to: 1
 21043  012B16  8ABA               	bsf	186,5,c	;volatile
 21044  012B18                     
 21045                           ; BSR set to: 1
 21046                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 21047  012B18  0E8E               	movlw	low (_spiMaster+6)
 21048  012B1A  6EF6               	movwf	tblptrl,c
 21049  012B1C  0EFE               	movlw	high (_spiMaster+6)
 21050  012B1E  6EF7               	movwf	tblptrh,c
 21051  012B20                     	if	0	;tblptru may be non-zero
 21052  012B20                     	endif
 21053  012B20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21054  012B20  0E00               	movlw	low (__mediumconst shr (0+16))
 21055  012B22  6EF8               	movwf	tblptru,c
 21056  012B24                     	endif
 21057  012B24  D802               	call	u7608
 21058  012B26  EFA3  F095         	goto	u7609
 21059  012B2A                     u7608:
 21060  012B2A  0005               	push	
 21061  012B2C  6EFA               	movwf	pclath,c
 21062  012B2E  0009               	tblrd		*+
 21063  012B30  50F5               	movf	tablat,w,c
 21064  012B32  6EFD               	movwf	tosl,c
 21065  012B34  0009               	tblrd		*+
 21066  012B36  50F5               	movf	tablat,w,c
 21067  012B38  6EFE               	movwf	tosh,c
 21068  012B3A  0009               	tblrd		*+
 21069  012B3C  50F5               	movf	tablat,w,c
 21070  012B3E  6EFF               	movwf	tosu,c
 21071  012B40  50FA               	movf	pclath,w,c
 21072  012B42  0EFF               	movlw	255
 21073  012B44  0012               	return		;indir
 21074  012B46                     u7609:
 21075  012B46                     
 21076                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 21077  012B46  EE20 F00C          	lfsr	2,12
 21078  012B4A  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 21079  012B4C  26D9               	addwf	fsr2l,f,c
 21080  012B4E  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 21081  012B50  22DA               	addwfc	fsr2h,f,c
 21082  012B52  0E00               	movlw	0
 21083  012B54  6EDF               	movwf	indf2,c
 21084  012B56  EF40  F095         	goto	l7353
 21085  012B5A                     l7399:
 21086                           
 21087                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 21088  012B5A  0E00               	movlw	0
 21089  012B5C  6E0C               	movwf	SD_SendCmd@address^0,c
 21090  012B5E  0E00               	movlw	0
 21091  012B60  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 21092  012B62  0E00               	movlw	0
 21093  012B64  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 21094  012B66  0E00               	movlw	0
 21095  012B68  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 21096  012B6A  0E05               	movlw	5
 21097  012B6C  ECBB  F0A0         	call	_SD_SendCmd
 21098  012B70  8ABA               	bsf	186,5,c	;volatile
 21099  012B72                     
 21100                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 21101  012B72  0E8E               	movlw	low (_spiMaster+6)
 21102  012B74  6EF6               	movwf	tblptrl,c
 21103  012B76  0EFE               	movlw	high (_spiMaster+6)
 21104  012B78  6EF7               	movwf	tblptrh,c
 21105  012B7A                     	if	0	;tblptru may be non-zero
 21106  012B7A                     	endif
 21107  012B7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21108  012B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 21109  012B7C  6EF8               	movwf	tblptru,c
 21110  012B7E                     	endif
 21111  012B7E  D802               	call	u7618
 21112  012B80  EFD0  F095         	goto	u7619
 21113  012B84                     u7618:
 21114  012B84  0005               	push	
 21115  012B86  6EFA               	movwf	pclath,c
 21116  012B88  0009               	tblrd		*+
 21117  012B8A  50F5               	movf	tablat,w,c
 21118  012B8C  6EFD               	movwf	tosl,c
 21119  012B8E  0009               	tblrd		*+
 21120  012B90  50F5               	movf	tablat,w,c
 21121  012B92  6EFE               	movwf	tosh,c
 21122  012B94  0009               	tblrd		*+
 21123  012B96  50F5               	movf	tablat,w,c
 21124  012B98  6EFF               	movwf	tosu,c
 21125  012B9A  50FA               	movf	pclath,w,c
 21126  012B9C  0EFF               	movlw	255
 21127  012B9E  0012               	return		;indir
 21128  012BA0                     u7619:
 21129  012BA0                     
 21130                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 21131  012BA0  EE20 F00C          	lfsr	2,12
 21132  012BA4  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 21133  012BA6  26D9               	addwf	fsr2l,f,c
 21134  012BA8  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 21135  012BAA  22DA               	addwfc	fsr2h,f,c
 21136  012BAC  0EFF               	movlw	255
 21137  012BAE  6EDF               	movwf	indf2,c
 21138  012BB0                     l7407:
 21139                           
 21140                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 21141  012BB0  0E01               	movlw	1
 21142  012BB2  0101               	movlb	1	; () banked
 21143  012BB4  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 21144  012BB6  EF6E  F093         	goto	l7265
 21145  012BBA                     l7415:
 21146  012BBA  EE20 F00C          	lfsr	2,12
 21147  012BBE  5022               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 21148  012BC0  26D9               	addwf	fsr2l,f,c
 21149  012BC2  5023               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 21150  012BC4  22DA               	addwfc	fsr2h,f,c
 21151  012BC6  50DF               	movf	indf2,w,c
 21152  012BC8  6E24               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 21153  012BCA  6A25               	clrf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 21154                           
 21155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21156                           ; Switch size 1, requested type "simple"
 21157                           ; Number of cases is 1, Range of values is 0 to 0
 21158                           ; switch strategies available:
 21159                           ; Name         Instructions Cycles
 21160                           ; simple_byte            4     3 (average)
 21161                           ;	Chosen strategy is simple_byte
 21162  012BCC  5025               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 21163  012BCE  0A00               	xorlw	0	; case 0
 21164  012BD0  B4D8               	btfsc	status,2,c
 21165  012BD2  EFED  F095         	goto	l11871
 21166  012BD6  EFD8  F095         	goto	l7407
 21167  012BDA                     l11871:
 21168                           
 21169                           ; Switch size 1, requested type "simple"
 21170                           ; Number of cases is 6, Range of values is 0 to 254
 21171                           ; switch strategies available:
 21172                           ; Name         Instructions Cycles
 21173                           ; simple_byte           19    10 (average)
 21174                           ;	Chosen strategy is simple_byte
 21175  012BDA  5024               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 21176  012BDC  0A00               	xorlw	0	; case 0
 21177  012BDE  B4D8               	btfsc	status,2,c
 21178  012BE0  EFBC  F092         	goto	l7229
 21179  012BE4  0A01               	xorlw	1	; case 1
 21180  012BE6  B4D8               	btfsc	status,2,c
 21181  012BE8  EFBF  F092         	goto	l7233
 21182  012BEC  0A03               	xorlw	3	; case 2
 21183  012BEE  B4D8               	btfsc	status,2,c
 21184  012BF0  EF7C  F093         	goto	l7277
 21185  012BF4  0A01               	xorlw	1	; case 3
 21186  012BF6  B4D8               	btfsc	status,2,c
 21187  012BF8  EF83  F094         	goto	l7323
 21188  012BFC  0A07               	xorlw	7	; case 4
 21189  012BFE  B4D8               	btfsc	status,2,c
 21190  012C00  EF59  F095         	goto	l7377
 21191  012C04  0AFA               	xorlw	250	; case 254
 21192  012C06  B4D8               	btfsc	status,2,c
 21193  012C08  EFAD  F095         	goto	l7399
 21194  012C0C  EFD8  F095         	goto	l7407
 21195  012C10                     l862:
 21196  012C10  0012               	return		;funcret
 21197  012C12                     __end_of_SD_SPI_AsyncWriteTasks:
 21198                           	callstack 0
 21199                           
 21200 ;; *************** function _disk_read *****************
 21201 ;; Defined at:
 21202 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  pdrv            1    wreg     unsigned char 
 21205 ;;  buff            2   72[COMRAM] PTR unsigned char 
 21206 ;;		 -> file(546), drive(563), NULL(0), 
 21207 ;;  sector          4   74[COMRAM] unsigned long 
 21208 ;;  count           2   78[COMRAM] unsigned int 
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;  pdrv            1   82[COMRAM] unsigned char 
 21211 ;;  res             1   83[COMRAM] enum E12
 21212 ;; Return value:  Size  Location     Type
 21213 ;;                  1    wreg      enum E208
 21214 ;; Registers used:
 21215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21216 ;; Tracked objects:
 21217 ;;		On entry : 0/0
 21218 ;;		On exit  : 0/0
 21219 ;;		Unchanged: 0/0
 21220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21221 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21224 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21225 ;;Total ram usage:       12 bytes
 21226 ;; Hardware stack levels used:    1
 21227 ;; Hardware stack levels required when called:    4
 21228 ;; This function calls:
 21229 ;;		_SD_SPI_SectorRead
 21230 ;; This function is called by:
 21231 ;;		_move_window
 21232 ;;		_f_open
 21233 ;;		_f_write
 21234 ;;		_f_read
 21235 ;; This function uses a non-reentrant model
 21236 ;;
 21237                           
 21238                           	psect	text65
 21239  019C74                     __ptext65:
 21240                           	callstack 0
 21241  019C74                     _disk_read:
 21242                           	callstack 21
 21243                           
 21244                           ;incstack = 0
 21245                           ;disk_read@pdrv stored from wreg
 21246  019C74  6E53               	movwf	disk_read@pdrv^0,c
 21247  019C76                     
 21248                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 21249  019C76  0E04               	movlw	4
 21250  019C78  6E54               	movwf	disk_read@res^0,c
 21251                           
 21252                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 21253  019C7A  EF61  F0CE         	goto	l7719
 21254  019C7E                     l7711:
 21255                           
 21256                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 21257  019C7E  C04B  F02E         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 21258  019C82  C04C  F02F         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 21259  019C86  C04D  F030         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 21260  019C8A  C04E  F031         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 21261  019C8E  C049  F032         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 21262  019C92  C04A  F033         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 21263  019C96  C04F  F034         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 21264  019C9A  C050  F035         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 21265  019C9E  EC9E  F0BF         	call	_SD_SPI_SectorRead
 21266  019CA2  06E8               	decf	wreg,f,c
 21267  019CA4  A4D8               	btfss	status,2,c
 21268  019CA6  EF57  F0CE         	goto	u8061
 21269  019CAA  EF59  F0CE         	goto	u8060
 21270  019CAE                     u8061:
 21271  019CAE  EF5D  F0CE         	goto	l7715
 21272  019CB2                     u8060:
 21273  019CB2                     
 21274                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 21275  019CB2  0E00               	movlw	0
 21276  019CB4  6E54               	movwf	disk_read@res^0,c
 21277                           
 21278                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 21279  019CB6  EF72  F0CE         	goto	l7721
 21280  019CBA                     l7715:
 21281                           
 21282                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 21283  019CBA  0E01               	movlw	1
 21284  019CBC  6E54               	movwf	disk_read@res^0,c
 21285  019CBE  EF72  F0CE         	goto	l7721
 21286  019CC2                     l7719:
 21287  019CC2  5053               	movf	disk_read@pdrv^0,w,c
 21288  019CC4  6E51               	movwf	??_disk_read^0,c
 21289  019CC6  6A52               	clrf	(??_disk_read+1)^0,c
 21290                           
 21291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21292                           ; Switch size 1, requested type "simple"
 21293                           ; Number of cases is 1, Range of values is 0 to 0
 21294                           ; switch strategies available:
 21295                           ; Name         Instructions Cycles
 21296                           ; simple_byte            4     3 (average)
 21297                           ;	Chosen strategy is simple_byte
 21298  019CC8  5052               	movf	(??_disk_read+1)^0,w,c
 21299  019CCA  0A00               	xorlw	0	; case 0
 21300  019CCC  B4D8               	btfsc	status,2,c
 21301  019CCE  EF6B  F0CE         	goto	l11873
 21302  019CD2  EF72  F0CE         	goto	l7721
 21303  019CD6                     l11873:
 21304                           
 21305                           ; Switch size 1, requested type "simple"
 21306                           ; Number of cases is 1, Range of values is 0 to 0
 21307                           ; switch strategies available:
 21308                           ; Name         Instructions Cycles
 21309                           ; simple_byte            4     3 (average)
 21310                           ;	Chosen strategy is simple_byte
 21311  019CD6  5051               	movf	??_disk_read^0,w,c
 21312  019CD8  0A00               	xorlw	0	; case 0
 21313  019CDA  B4D8               	btfsc	status,2,c
 21314  019CDC  EF3F  F0CE         	goto	l7711
 21315  019CE0  EF72  F0CE         	goto	l7721
 21316  019CE4                     l7721:
 21317                           
 21318                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 21319  019CE4  5054               	movf	disk_read@res^0,w,c
 21320  019CE6  0012               	return		;funcret
 21321  019CE8                     __end_of_disk_read:
 21322                           	callstack 0
 21323                           
 21324 ;; *************** function _SD_SPI_SectorRead *****************
 21325 ;; Defined at:
 21326 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21327 ;; Parameters:    Size  Location     Type
 21328 ;;  sector_addre    4   45[COMRAM] unsigned long 
 21329 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21330 ;;		 -> file(546), drive(563), NULL(0), 
 21331 ;;  sector_count    2   51[COMRAM] unsigned short 
 21332 ;; Auto vars:     Size  Location     Type
 21333 ;;  info           13   59[COMRAM] struct SD_ASYNC_IO
 21334 ;;  i               2   57[COMRAM] unsigned short 
 21335 ;;  status          1   56[COMRAM] unsigned char 
 21336 ;;  result          1   55[COMRAM] _Bool 
 21337 ;; Return value:  Size  Location     Type
 21338 ;;                  1    wreg      _Bool 
 21339 ;; Registers used:
 21340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21341 ;; Tracked objects:
 21342 ;;		On entry : 0/0
 21343 ;;		On exit  : 0/0
 21344 ;;		Unchanged: 0/0
 21345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21346 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21347 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21349 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;Total ram usage:       27 bytes
 21351 ;; Hardware stack levels used:    1
 21352 ;; Hardware stack levels required when called:    3
 21353 ;; This function calls:
 21354 ;;		_SDFAST_open
 21355 ;;		_SDSLOW_open
 21356 ;;		_SD_SPI_AsyncReadTasks
 21357 ;;		_SPI1_Close
 21358 ;; This function is called by:
 21359 ;;		_disk_read
 21360 ;; This function uses a non-reentrant model
 21361 ;;
 21362                           
 21363                           	psect	text66
 21364  017F3C                     __ptext66:
 21365                           	callstack 0
 21366  017F3C                     _SD_SPI_SectorRead:
 21367                           	callstack 21
 21368  017F3C                     
 21369                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 21370  017F3C  0E00               	movlw	0
 21371  017F3E  6E38               	movwf	SD_SPI_SectorRead@result^0,c
 21372                           
 21373                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 21374  017F40  0E00               	movlw	0
 21375  017F42  6E3B               	movwf	(SD_SPI_SectorRead@i+1)^0,c
 21376  017F44  0E00               	movlw	0
 21377  017F46  6E3A               	movwf	SD_SPI_SectorRead@i^0,c
 21378  017F48  EF29  F0C0         	goto	l7685
 21379  017F4C                     l7657:
 21380                           
 21381                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 21382  017F4C  0E02               	movlw	2
 21383  017F4E  6E3D               	movwf	(SD_SPI_SectorRead@info+1)^0,c
 21384  017F50  0E00               	movlw	0
 21385  017F52  6E3C               	movwf	SD_SPI_SectorRead@info^0,c
 21386                           
 21387                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 21388  017F54  0E00               	movlw	0
 21389  017F56  6E3E               	movwf	(SD_SPI_SectorRead@info+2)^0,c
 21390  017F58  0E02               	movlw	2
 21391  017F5A  6E3F               	movwf	(SD_SPI_SectorRead@info+3)^0,c
 21392  017F5C  0E00               	movlw	0
 21393  017F5E  6E40               	movwf	(SD_SPI_SectorRead@info+4)^0,c
 21394  017F60  0E00               	movlw	0
 21395  017F62  6E41               	movwf	(SD_SPI_SectorRead@info+5)^0,c
 21396  017F64                     
 21397                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 21398  017F64  C03A  F036         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 21399  017F68  C03B  F037         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 21400  017F6C  0E09               	movlw	9
 21401  017F6E                     u7955:
 21402  017F6E  90D8               	bcf	status,0,c
 21403  017F70  3636               	rlcf	??_SD_SPI_SectorRead^0,f,c
 21404  017F72  3637               	rlcf	(??_SD_SPI_SectorRead+1)^0,f,c
 21405  017F74  2EE8               	decfsz	wreg,f,c
 21406  017F76  EFB7  F0BF         	goto	u7955
 21407  017F7A  5036               	movf	??_SD_SPI_SectorRead^0,w,c
 21408  017F7C  2432               	addwf	SD_SPI_SectorRead@buffer^0,w,c
 21409  017F7E  6E42               	movwf	(SD_SPI_SectorRead@info+6)^0,c
 21410  017F80  5037               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 21411  017F82  2033               	addwfc	(SD_SPI_SectorRead@buffer+1)^0,w,c
 21412  017F84  6E43               	movwf	(SD_SPI_SectorRead@info+7)^0,c
 21413  017F86                     
 21414                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 21415  017F86  503A               	movf	SD_SPI_SectorRead@i^0,w,c
 21416  017F88  242E               	addwf	SD_SPI_SectorRead@sector_address^0,w,c
 21417  017F8A  6E44               	movwf	(SD_SPI_SectorRead@info+8)^0,c
 21418  017F8C  503B               	movf	(SD_SPI_SectorRead@i+1)^0,w,c
 21419  017F8E  202F               	addwfc	(SD_SPI_SectorRead@sector_address+1)^0,w,c
 21420  017F90  6E45               	movwf	(SD_SPI_SectorRead@info+9)^0,c
 21421  017F92  0E00               	movlw	0
 21422  017F94  2030               	addwfc	(SD_SPI_SectorRead@sector_address+2)^0,w,c
 21423  017F96  6E46               	movwf	(SD_SPI_SectorRead@info+10)^0,c
 21424  017F98  0E00               	movlw	0
 21425  017F9A  2031               	addwfc	(SD_SPI_SectorRead@sector_address+3)^0,w,c
 21426  017F9C  6E47               	movwf	(SD_SPI_SectorRead@info+11)^0,c
 21427                           
 21428                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 21429  017F9E  0E01               	movlw	1
 21430  017FA0  6E48               	movwf	(SD_SPI_SectorRead@info+12)^0,c
 21431  017FA2                     
 21432                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 21433  017FA2  0E8B               	movlw	low (_spiMaster+3)
 21434  017FA4  6EF6               	movwf	tblptrl,c
 21435  017FA6  0EFE               	movlw	high (_spiMaster+3)
 21436  017FA8  6EF7               	movwf	tblptrh,c
 21437  017FAA                     	if	0	;tblptru may be non-zero
 21438  017FAA                     	endif
 21439  017FAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21440  017FAA  0E00               	movlw	low (__mediumconst shr (0+16))
 21441  017FAC  6EF8               	movwf	tblptru,c
 21442  017FAE                     	endif
 21443  017FAE  D802               	call	u7968
 21444  017FB0  EFE7  F0BF         	goto	u7969
 21445  017FB4                     u7968:
 21446  017FB4  0005               	push	
 21447  017FB6  6EFA               	movwf	pclath,c
 21448  017FB8  0009               	tblrd		*+
 21449  017FBA  50F5               	movf	tablat,w,c
 21450  017FBC  6EFD               	movwf	tosl,c
 21451  017FBE  0009               	tblrd		*+
 21452  017FC0  50F5               	movf	tablat,w,c
 21453  017FC2  6EFE               	movwf	tosh,c
 21454  017FC4  0009               	tblrd		*+
 21455  017FC6  50F5               	movf	tablat,w,c
 21456  017FC8  6EFF               	movwf	tosu,c
 21457  017FCA  50FA               	movf	pclath,w,c
 21458  017FCC  0012               	return		;indir
 21459  017FCE                     u7969:
 21460  017FCE  0900               	iorlw	0
 21461  017FD0  A4D8               	btfss	status,2,c
 21462  017FD2  EFED  F0BF         	goto	u7971
 21463  017FD6  EFEF  F0BF         	goto	u7970
 21464  017FDA                     u7971:
 21465  017FDA  EFF2  F0BF         	goto	l709
 21466  017FDE                     u7970:
 21467  017FDE                     
 21468                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 21469  017FDE  0E00               	movlw	0
 21470  017FE0  EF35  F0C0         	goto	l708
 21471  017FE4                     l709:
 21472  017FE4  9ABA               	bcf	186,5,c	;volatile
 21473  017FE6                     l7669:
 21474                           
 21475                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 21476  017FE6  0E3C               	movlw	low SD_SPI_SectorRead@info
 21477  017FE8  6E22               	movwf	SD_SPI_AsyncReadTasks@info^0,c
 21478  017FEA  0E00               	movlw	high SD_SPI_SectorRead@info
 21479  017FEC  6E23               	movwf	(SD_SPI_AsyncReadTasks@info+1)^0,c
 21480  017FEE  EC66  F0A7         	call	_SD_SPI_AsyncReadTasks	;wreg free
 21481  017FF2  6E39               	movwf	SD_SPI_SectorRead@status^0,c
 21482  017FF4                     
 21483                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 21484  017FF4  5039               	movf	SD_SPI_SectorRead@status^0,w,c
 21485  017FF6  A4D8               	btfss	status,2,c
 21486  017FF8  EF00  F0C0         	goto	u7981
 21487  017FFC  EF02  F0C0         	goto	u7980
 21488  018000                     u7981:
 21489  018000  EF06  F0C0         	goto	l7677
 21490  018004                     u7980:
 21491  018004                     
 21492                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 21493  018004  0E01               	movlw	1
 21494  018006  6E38               	movwf	SD_SPI_SectorRead@result^0,c
 21495                           
 21496                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 21497  018008  EF10  F0C0         	goto	l717
 21498  01800C                     l7677:
 21499  01800C  2839               	incf	SD_SPI_SectorRead@status^0,w,c
 21500  01800E  A4D8               	btfss	status,2,c
 21501  018010  EF0C  F0C0         	goto	u7991
 21502  018014  EF0E  F0C0         	goto	u7990
 21503  018018                     u7991:
 21504  018018  EFF3  F0BF         	goto	l7669
 21505  01801C                     u7990:
 21506  01801C                     
 21507                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 21508  01801C  0E00               	movlw	0
 21509  01801E  6E38               	movwf	SD_SPI_SectorRead@result^0,c
 21510  018020                     l717:
 21511  018020  8ABA               	bsf	186,5,c	;volatile
 21512  018022                     
 21513                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 21514  018022  0E88               	movlw	low _spiMaster
 21515  018024  6EF6               	movwf	tblptrl,c
 21516  018026                     	if	1	;There is more than 1 active tblptr byte
 21517  018026  0EFE               	movlw	high _spiMaster
 21518  018028  6EF7               	movwf	tblptrh,c
 21519  01802A                     	endif
 21520  01802A                     	if	1	;There are 3 active tblptr bytes
 21521  01802A  0E00               	movlw	low (_spiMaster shr (0+16))
 21522  01802C  6EF8               	movwf	tblptru,c
 21523  01802E                     	endif
 21524  01802E  D802               	call	u8008
 21525  018030  EF27  F0C0         	goto	u8009
 21526  018034                     u8008:
 21527  018034  0005               	push	
 21528  018036  6EFA               	movwf	pclath,c
 21529  018038  0009               	tblrd		*+
 21530  01803A  50F5               	movf	tablat,w,c
 21531  01803C  6EFD               	movwf	tosl,c
 21532  01803E  0009               	tblrd		*+
 21533  018040  50F5               	movf	tablat,w,c
 21534  018042  6EFE               	movwf	tosh,c
 21535  018044  0009               	tblrd		*+
 21536  018046  50F5               	movf	tablat,w,c
 21537  018048  6EFF               	movwf	tosu,c
 21538  01804A  50FA               	movf	pclath,w,c
 21539  01804C  0012               	return		;indir
 21540  01804E                     u8009:
 21541  01804E                     
 21542                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 21543  01804E  4A3A               	infsnz	SD_SPI_SectorRead@i^0,f,c
 21544  018050  2A3B               	incf	(SD_SPI_SectorRead@i+1)^0,f,c
 21545  018052                     l7685:
 21546  018052  5034               	movf	SD_SPI_SectorRead@sector_count^0,w,c
 21547  018054  5C3A               	subwf	SD_SPI_SectorRead@i^0,w,c
 21548  018056  5035               	movf	(SD_SPI_SectorRead@sector_count+1)^0,w,c
 21549  018058  583B               	subwfb	(SD_SPI_SectorRead@i+1)^0,w,c
 21550  01805A  A0D8               	btfss	status,0,c
 21551  01805C  EF32  F0C0         	goto	u8011
 21552  018060  EF34  F0C0         	goto	u8010
 21553  018064                     u8011:
 21554  018064  EFA6  F0BF         	goto	l7657
 21555  018068                     u8010:
 21556  018068                     
 21557                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 21558  018068  5038               	movf	SD_SPI_SectorRead@result^0,w,c
 21559  01806A                     l708:
 21560  01806A  0012               	return		;funcret
 21561  01806C                     __end_of_SD_SPI_SectorRead:
 21562                           	callstack 0
 21563                           
 21564 ;; *************** function _SPI1_Close *****************
 21565 ;; Defined at:
 21566 ;;		line 97 in file "mcc_generated_files/spi1.c"
 21567 ;; Parameters:    Size  Location     Type
 21568 ;;		None
 21569 ;; Auto vars:     Size  Location     Type
 21570 ;;		None
 21571 ;; Return value:  Size  Location     Type
 21572 ;;                  1    wreg      void 
 21573 ;; Registers used:
 21574 ;;		None
 21575 ;; Tracked objects:
 21576 ;;		On entry : 0/0
 21577 ;;		On exit  : 0/0
 21578 ;;		Unchanged: 0/0
 21579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;Total ram usage:        0 bytes
 21585 ;; Hardware stack levels used:    1
 21586 ;; This function calls:
 21587 ;;		Nothing
 21588 ;; This function is called by:
 21589 ;;		_SD_SPI_SectorWrite
 21590 ;;		_SD_SPI_SectorRead
 21591 ;;		_SD_SPI_MediaInitialize
 21592 ;; This function uses a non-reentrant model
 21593 ;;
 21594                           
 21595                           	psect	text67
 21596  01A7C2                     __ptext67:
 21597                           	callstack 0
 21598  01A7C2                     _SPI1_Close:
 21599                           	callstack 22
 21600  01A7C2                     
 21601                           ;mcc_generated_files/spi1.c: 99:     SPI1CON0bits.EN = 0;
 21602  01A7C2  013D               	movlb	61	; () banked
 21603  01A7C4  9F14               	bcf	20,7,b	;volatile
 21604  01A7C6                     
 21605                           ; BSR set to: 61
 21606  01A7C6  0012               	return		;funcret
 21607  01A7C8                     __end_of_SPI1_Close:
 21608                           	callstack 0
 21609                           
 21610 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 21611 ;; Defined at:
 21612 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21613 ;; Parameters:    Size  Location     Type
 21614 ;;  info            2   33[COMRAM] PTR struct SD_ASYNC_IO
 21615 ;;		 -> SD_SPI_SectorRead@info(13), 
 21616 ;; Auto vars:     Size  Location     Type
 21617 ;;  response        5   39[COMRAM] struct .
 21618 ;;  bData           1   44[COMRAM] unsigned char 
 21619 ;; Return value:  Size  Location     Type
 21620 ;;                  1    wreg      unsigned char 
 21621 ;; Registers used:
 21622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21623 ;; Tracked objects:
 21624 ;;		On entry : 0/0
 21625 ;;		On exit  : 0/0
 21626 ;;		Unchanged: 0/0
 21627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21629 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21631 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21632 ;;Total ram usage:       12 bytes
 21633 ;; Hardware stack levels used:    1
 21634 ;; Hardware stack levels required when called:    2
 21635 ;; This function calls:
 21636 ;;		_SD_SendCmd
 21637 ;;		_SPI1_ExchangeBlock
 21638 ;;		_SPI1_ExchangeByte
 21639 ;;		_memset
 21640 ;; This function is called by:
 21641 ;;		_SD_SPI_SectorRead
 21642 ;; This function uses a non-reentrant model
 21643 ;;
 21644                           
 21645                           	psect	text68
 21646  014ECC                     __ptext68:
 21647                           	callstack 0
 21648  014ECC                     _SD_SPI_AsyncReadTasks:
 21649                           	callstack 21
 21650  014ECC                     
 21651                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 21652  014ECC  EF65  F0A9         	goto	l7627
 21653  014ED0                     l7495:
 21654                           
 21655                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 21656  014ED0  0E00               	movlw	0
 21657  014ED2  EF90  F0A9         	goto	l823
 21658  014ED6                     l7499:
 21659                           
 21660                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 21661  014ED6  0E02               	movlw	2
 21662  014ED8  0101               	movlb	1	; () banked
 21663  014EDA  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 21664                           
 21665                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 21666  014EDC  0E02               	movlw	2
 21667  014EDE  6F36               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 21668  014EE0  0E00               	movlw	0
 21669  014EE2  6F35               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 21670  014EE4                     
 21671                           ; BSR set to: 1
 21672                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 21673  014EE4  0060  F08B  FFD9   	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 21674  014EEA  0060  F08F  FFDA   	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 21675  014EF0  EE10  F100         	lfsr	1,_ioInfo
 21676  014EF4  0E0C               	movlw	12
 21677  014EF6                     u7741:
 21678  014EF6  006F FF6F FFE3     	movff	plusw2,plusw1
 21679  014EFC  06E8               	decf	wreg,f,c
 21680  014EFE  E2FB               	bc	u7741
 21681  014F00                     
 21682                           ; BSR set to: 1
 21683                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 21684  014F00  51DB               	movf	(_mediaInformation+8)& (0+255),w,b
 21685  014F02  A4D8               	btfss	status,2,c
 21686  014F04  EF86  F0A7         	goto	u7751
 21687  014F08  EF88  F0A7         	goto	u7750
 21688  014F0C                     u7751:
 21689  014F0C  EF91  F0A7         	goto	l825
 21690  014F10                     u7750:
 21691  014F10                     
 21692                           ; BSR set to: 1
 21693                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 21694  014F10  0E09               	movlw	9
 21695  014F12                     u7765:
 21696  014F12  90D8               	bcf	status,0,c
 21697  014F14  3708               	rlcf	(_ioInfo+8)& (0+255),f,b
 21698  014F16  3709               	rlcf	(_ioInfo+9)& (0+255),f,b
 21699  014F18  370A               	rlcf	(_ioInfo+10)& (0+255),f,b
 21700  014F1A  370B               	rlcf	(_ioInfo+11)& (0+255),f,b
 21701  014F1C  2EE8               	decfsz	wreg,f,c
 21702  014F1E  EF89  F0A7         	goto	u7765
 21703  014F22                     l825:
 21704                           
 21705                           ; BSR set to: 1
 21706                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 21707  014F22  5105               	movf	(_ioInfo+5)& (0+255),w,b
 21708  014F24  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 21709  014F26  E108               	bnz	u7771
 21710  014F28  0502               	decf	(_ioInfo+2)& (0+255),w,b
 21711  014F2A  0E02               	movlw	2
 21712  014F2C  5903               	subwfb	(_ioInfo+3)& (0+255),w,b
 21713  014F2E  B0D8               	btfsc	status,0,c
 21714  014F30  EF9C  F0A7         	goto	u7771
 21715  014F34  EF9E  F0A7         	goto	u7770
 21716  014F38                     u7771:
 21717  014F38  EFB5  F0A7         	goto	l7511
 21718  014F3C                     u7770:
 21719  014F3C                     
 21720                           ; BSR set to: 1
 21721                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 21722  014F3C  0E01               	movlw	1
 21723  014F3E  6F3D               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 21724  014F40                     
 21725                           ; BSR set to: 1
 21726                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 21727  014F40  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 21728  014F44  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 21729  014F48  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 21730  014F4C  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 21731  014F50  0E08               	movlw	8
 21732  014F52  ECBB  F0A0         	call	_SD_SendCmd
 21733  014F56  EE20  F028         	lfsr	2,SD_SPI_AsyncReadTasks@response
 21734  014F5A  0E04               	movlw	4
 21735  014F5C                     u7781:
 21736  014F5C  006F FFAF FFDB     	movff	plusw0,plusw2
 21737  014F62  06E8               	decf	wreg,f,c
 21738  014F64  E2FB               	bc	u7781
 21739                           
 21740                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 21741  014F66  EFCA  F0A7         	goto	l7515
 21742  014F6A                     l7511:
 21743                           
 21744                           ; BSR set to: 1
 21745                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 21746  014F6A  0E00               	movlw	0
 21747  014F6C  6F3D               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 21748  014F6E                     
 21749                           ; BSR set to: 1
 21750                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 21751  014F6E  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 21752  014F72  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 21753  014F76  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 21754  014F7A  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 21755  014F7E  0E09               	movlw	9
 21756  014F80  ECBB  F0A0         	call	_SD_SendCmd
 21757  014F84  EE20  F028         	lfsr	2,SD_SPI_AsyncReadTasks@response
 21758  014F88  0E04               	movlw	4
 21759  014F8A                     u7791:
 21760  014F8A  006F FFAF FFDB     	movff	plusw0,plusw2
 21761  014F90  06E8               	decf	wreg,f,c
 21762  014F92  E2FB               	bc	u7791
 21763  014F94                     l7515:
 21764                           
 21765                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 21766  014F94  5028               	movf	SD_SPI_AsyncReadTasks@response^0,w,c
 21767  014F96  B4D8               	btfsc	status,2,c
 21768  014F98  EFD0  F0A7         	goto	u7801
 21769  014F9C  EFD2  F0A7         	goto	u7800
 21770  014FA0                     u7801:
 21771  014FA0  EFDD  F0A7         	goto	l7523
 21772  014FA4                     u7800:
 21773  014FA4                     
 21774                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 21775  014FA4  EE20 F00C          	lfsr	2,12
 21776  014FA8  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21777  014FAA  26D9               	addwf	fsr2l,f,c
 21778  014FAC  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21779  014FAE  22DA               	addwfc	fsr2h,f,c
 21780  014FB0  0EFE               	movlw	254
 21781  014FB2  6EDF               	movwf	indf2,c
 21782  014FB4                     l7519:
 21783                           
 21784                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 21785  014FB4  0E01               	movlw	1
 21786  014FB6  EF90  F0A9         	goto	l823
 21787  014FBA                     l7523:
 21788                           
 21789                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 21790  014FBA  0E00               	movlw	0
 21791  014FBC  0101               	movlb	1	; () banked
 21792  014FBE  6F1D               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 21793  014FC0  0E00               	movlw	0
 21794  014FC2  6F1E               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 21795  014FC4  0E04               	movlw	4
 21796  014FC6  6F1F               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 21797  014FC8  0E00               	movlw	0
 21798  014FCA  6F20               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 21799  014FCC                     
 21800                           ; BSR set to: 1
 21801                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 21802  014FCC  EE20 F00C          	lfsr	2,12
 21803  014FD0  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21804  014FD2  26D9               	addwf	fsr2l,f,c
 21805  014FD4  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21806  014FD6  22DA               	addwfc	fsr2h,f,c
 21807  014FD8  0E03               	movlw	3
 21808  014FDA  6EDF               	movwf	indf2,c
 21809  014FDC  EFDA  F0A7         	goto	l7519
 21810  014FE0                     l7531:
 21811                           
 21812                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 21813  014FE0  0101               	movlb	1	; () banked
 21814  014FE2  511D               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 21815  014FE4  111E               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 21816  014FE6  111F               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 21817  014FE8  1120               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 21818  014FEA  B4D8               	btfsc	status,2,c
 21819  014FEC  EFFA  F0A7         	goto	u7811
 21820  014FF0  EFFC  F0A7         	goto	u7810
 21821  014FF4                     u7811:
 21822  014FF4  EF3F  F0A8         	goto	l7559
 21823  014FF8                     u7810:
 21824  014FF8                     
 21825                           ; BSR set to: 1
 21826                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 21827  014FF8  071D               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 21828  014FFA  0E00               	movlw	0
 21829  014FFC  5B1E               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 21830  014FFE  5B1F               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 21831  015000  5B20               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 21832  015002                     
 21833                           ; BSR set to: 1
 21834                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 21835  015002  0E8E               	movlw	low (_spiMaster+6)
 21836  015004  6EF6               	movwf	tblptrl,c
 21837  015006  0EFE               	movlw	high (_spiMaster+6)
 21838  015008  6EF7               	movwf	tblptrh,c
 21839  01500A                     	if	0	;tblptru may be non-zero
 21840  01500A                     	endif
 21841  01500A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21842  01500A  0E00               	movlw	low (__mediumconst shr (0+16))
 21843  01500C  6EF8               	movwf	tblptru,c
 21844  01500E                     	endif
 21845  01500E  D802               	call	u7828
 21846  015010  EF18  F0A8         	goto	u7829
 21847  015014                     u7828:
 21848  015014  0005               	push	
 21849  015016  6EFA               	movwf	pclath,c
 21850  015018  0009               	tblrd		*+
 21851  01501A  50F5               	movf	tablat,w,c
 21852  01501C  6EFD               	movwf	tosl,c
 21853  01501E  0009               	tblrd		*+
 21854  015020  50F5               	movf	tablat,w,c
 21855  015022  6EFE               	movwf	tosh,c
 21856  015024  0009               	tblrd		*+
 21857  015026  50F5               	movf	tablat,w,c
 21858  015028  6EFF               	movwf	tosu,c
 21859  01502A  50FA               	movf	pclath,w,c
 21860  01502C  0EFF               	movlw	255
 21861  01502E  0012               	return		;indir
 21862  015030                     u7829:
 21863  015030  6E2D               	movwf	SD_SPI_AsyncReadTasks@bData^0,c
 21864  015032                     
 21865                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 21866  015032  282D               	incf	SD_SPI_AsyncReadTasks@bData^0,w,c
 21867  015034  B4D8               	btfsc	status,2,c
 21868  015036  EF1F  F0A8         	goto	u7831
 21869  01503A  EF21  F0A8         	goto	u7830
 21870  01503E                     u7831:
 21871  01503E  EFDA  F0A7         	goto	l7519
 21872  015042                     u7830:
 21873  015042                     
 21874                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 21875  015042  0EFE               	movlw	254
 21876  015044  182D               	xorwf	SD_SPI_AsyncReadTasks@bData^0,w,c
 21877  015046  A4D8               	btfss	status,2,c
 21878  015048  EF28  F0A8         	goto	u7841
 21879  01504C  EF2A  F0A8         	goto	u7840
 21880  015050                     u7841:
 21881  015050  EF35  F0A8         	goto	l7549
 21882  015054                     u7840:
 21883  015054                     
 21884                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 21885  015054  EE20 F00C          	lfsr	2,12
 21886  015058  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21887  01505A  26D9               	addwf	fsr2l,f,c
 21888  01505C  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21889  01505E  22DA               	addwfc	fsr2h,f,c
 21890  015060  0E02               	movlw	2
 21891  015062  6EDF               	movwf	indf2,c
 21892  015064                     l7543:
 21893                           
 21894                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 21895  015064  0E02               	movlw	2
 21896  015066  EF90  F0A9         	goto	l823
 21897  01506A                     l7549:
 21898                           
 21899                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 21900  01506A  EE20 F00C          	lfsr	2,12
 21901  01506E  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21902  015070  26D9               	addwf	fsr2l,f,c
 21903  015072  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21904  015074  22DA               	addwfc	fsr2h,f,c
 21905  015076  0EFE               	movlw	254
 21906  015078  6EDF               	movwf	indf2,c
 21907  01507A  EFDA  F0A7         	goto	l7519
 21908  01507E                     l7559:
 21909                           
 21910                           ; BSR set to: 1
 21911                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 21912  01507E  EE20 F00C          	lfsr	2,12
 21913  015082  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21914  015084  26D9               	addwf	fsr2l,f,c
 21915  015086  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21916  015088  22DA               	addwfc	fsr2h,f,c
 21917  01508A  0EFE               	movlw	254
 21918  01508C  6EDF               	movwf	indf2,c
 21919  01508E  EFDA  F0A7         	goto	l7519
 21920  015092                     l7565:
 21921                           
 21922                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 21923  015092  0101               	movlb	1	; () banked
 21924  015094  5102               	movf	(_ioInfo+2)& (0+255),w,b
 21925  015096  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 21926  015098  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 21927  01509A  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 21928  01509C  B4D8               	btfsc	status,2,c
 21929  01509E  EF53  F0A8         	goto	u7851
 21930  0150A2  EF55  F0A8         	goto	u7850
 21931  0150A6                     u7851:
 21932  0150A6  EFFC  F0A8         	goto	l7595
 21933  0150AA                     u7850:
 21934  0150AA                     
 21935                           ; BSR set to: 1
 21936                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 21937  0150AA  0060  F08B  FFD9   	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 21938  0150B0  0060  F08F  FFDA   	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 21939  0150B6  006F FF78  F100    	movff	postinc2,_ioInfo
 21940  0150BC  006F FF74  F101    	movff	postdec2,_ioInfo+1
 21941  0150C2                     
 21942                           ; BSR set to: 1
 21943                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 21944  0150C2  EE20 F006          	lfsr	2,6
 21945  0150C6  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 21946  0150C8  26D9               	addwf	fsr2l,f,c
 21947  0150CA  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 21948  0150CC  22DA               	addwfc	fsr2h,f,c
 21949  0150CE  006F FF78  F106    	movff	postinc2,_ioInfo+6
 21950  0150D4  006F FF74  F107    	movff	postdec2,_ioInfo+7
 21951                           
 21952                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 21953  0150DA  5100               	movf	_ioInfo& (0+255),w,b
 21954  0150DC  6E24               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 21955  0150DE  5101               	movf	(_ioInfo+1)& (0+255),w,b
 21956  0150E0  6E25               	movwf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 21957  0150E2  6A26               	clrf	(??_SD_SPI_AsyncReadTasks+2)^0,c
 21958  0150E4  6A27               	clrf	(??_SD_SPI_AsyncReadTasks+3)^0,c
 21959  0150E6  5024               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 21960  0150E8  5F02               	subwf	(_ioInfo+2)& (0+255),f,b
 21961  0150EA  5025               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 21962  0150EC  5B03               	subwfb	(_ioInfo+3)& (0+255),f,b
 21963  0150EE  5026               	movf	(??_SD_SPI_AsyncReadTasks+2)^0,w,c
 21964  0150F0  5B04               	subwfb	(_ioInfo+4)& (0+255),f,b
 21965  0150F2  5027               	movf	(??_SD_SPI_AsyncReadTasks+3)^0,w,c
 21966  0150F4  5B05               	subwfb	(_ioInfo+5)& (0+255),f,b
 21967                           
 21968                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 21969  0150F6  5100               	movf	_ioInfo& (0+255),w,b
 21970  0150F8  5F35               	subwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),f,b
 21971  0150FA  5101               	movf	(_ioInfo+1)& (0+255),w,b
 21972  0150FC  5B36               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),f,b
 21973  0150FE                     
 21974                           ; BSR set to: 1
 21975                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 21976  0150FE  C106  F001         	movff	_ioInfo+6,memset@dest
 21977  015102  C107  F002         	movff	_ioInfo+7,memset@dest+1
 21978  015106  0E00               	movlw	0
 21979  015108  6E04               	movwf	(memset@c+1)^0,c
 21980  01510A  6803               	setf	memset@c^0,c
 21981  01510C  C100  F005         	movff	_ioInfo,memset@n
 21982  015110  C101  F006         	movff	_ioInfo+1,memset@n+1
 21983  015114  ECB0  F0B8         	call	_memset
 21984  015118                     
 21985                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 21986  015118  C106  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 21987  01511C  C107  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 21988  015120  C100  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 21989  015124  C101  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 21990  015128  0E91               	movlw	low (_spiMaster+9)
 21991  01512A  6EF6               	movwf	tblptrl,c
 21992  01512C  0EFE               	movlw	high (_spiMaster+9)
 21993  01512E  6EF7               	movwf	tblptrh,c
 21994  015130                     	if	0	;tblptru may be non-zero
 21995  015130                     	endif
 21996  015130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21997  015130  0E00               	movlw	low (__mediumconst shr (0+16))
 21998  015132  6EF8               	movwf	tblptru,c
 21999  015134                     	endif
 22000  015134  D802               	call	u7868
 22001  015136  EFAA  F0A8         	goto	u7869
 22002  01513A                     u7868:
 22003  01513A  0005               	push	
 22004  01513C  6EFA               	movwf	pclath,c
 22005  01513E  0009               	tblrd		*+
 22006  015140  50F5               	movf	tablat,w,c
 22007  015142  6EFD               	movwf	tosl,c
 22008  015144  0009               	tblrd		*+
 22009  015146  50F5               	movf	tablat,w,c
 22010  015148  6EFE               	movwf	tosh,c
 22011  01514A  0009               	tblrd		*+
 22012  01514C  50F5               	movf	tablat,w,c
 22013  01514E  6EFF               	movwf	tosu,c
 22014  015150  50FA               	movf	pclath,w,c
 22015  015152  0012               	return		;indir
 22016  015154                     u7869:
 22017  015154                     
 22018                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 22019  015154  0101               	movlb	1	; () banked
 22020  015156  5135               	movf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),w,b
 22021  015158  1136               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),w,b
 22022  01515A  A4D8               	btfss	status,2,c
 22023  01515C  EFB2  F0A8         	goto	u7871
 22024  015160  EFB4  F0A8         	goto	u7870
 22025  015164                     u7871:
 22026  015164  EF32  F0A8         	goto	l7543
 22027  015168                     u7870:
 22028  015168                     
 22029                           ; BSR set to: 1
 22030                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22031  015168  0E8E               	movlw	low (_spiMaster+6)
 22032  01516A  6EF6               	movwf	tblptrl,c
 22033  01516C  0EFE               	movlw	high (_spiMaster+6)
 22034  01516E  6EF7               	movwf	tblptrh,c
 22035  015170                     	if	0	;tblptru may be non-zero
 22036  015170                     	endif
 22037  015170                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22038  015170  0E00               	movlw	low (__mediumconst shr (0+16))
 22039  015172  6EF8               	movwf	tblptru,c
 22040  015174                     	endif
 22041  015174  D802               	call	u7888
 22042  015176  EFCB  F0A8         	goto	u7889
 22043  01517A                     u7888:
 22044  01517A  0005               	push	
 22045  01517C  6EFA               	movwf	pclath,c
 22046  01517E  0009               	tblrd		*+
 22047  015180  50F5               	movf	tablat,w,c
 22048  015182  6EFD               	movwf	tosl,c
 22049  015184  0009               	tblrd		*+
 22050  015186  50F5               	movf	tablat,w,c
 22051  015188  6EFE               	movwf	tosh,c
 22052  01518A  0009               	tblrd		*+
 22053  01518C  50F5               	movf	tablat,w,c
 22054  01518E  6EFF               	movwf	tosu,c
 22055  015190  50FA               	movf	pclath,w,c
 22056  015192  0EFF               	movlw	255
 22057  015194  0012               	return		;indir
 22058  015196                     u7889:
 22059                           
 22060                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 22061  015196  0E8E               	movlw	low (_spiMaster+6)
 22062  015198  6EF6               	movwf	tblptrl,c
 22063  01519A  0EFE               	movlw	high (_spiMaster+6)
 22064  01519C  6EF7               	movwf	tblptrh,c
 22065  01519E                     	if	0	;tblptru may be non-zero
 22066  01519E                     	endif
 22067  01519E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22068  01519E  0E00               	movlw	low (__mediumconst shr (0+16))
 22069  0151A0  6EF8               	movwf	tblptru,c
 22070  0151A2                     	endif
 22071  0151A2  D802               	call	u7898
 22072  0151A4  EFE2  F0A8         	goto	u7899
 22073  0151A8                     u7898:
 22074  0151A8  0005               	push	
 22075  0151AA  6EFA               	movwf	pclath,c
 22076  0151AC  0009               	tblrd		*+
 22077  0151AE  50F5               	movf	tablat,w,c
 22078  0151B0  6EFD               	movwf	tosl,c
 22079  0151B2  0009               	tblrd		*+
 22080  0151B4  50F5               	movf	tablat,w,c
 22081  0151B6  6EFE               	movwf	tosh,c
 22082  0151B8  0009               	tblrd		*+
 22083  0151BA  50F5               	movf	tablat,w,c
 22084  0151BC  6EFF               	movwf	tosu,c
 22085  0151BE  50FA               	movf	pclath,w,c
 22086  0151C0  0EFF               	movlw	255
 22087  0151C2  0012               	return		;indir
 22088  0151C4                     u7899:
 22089  0151C4                     
 22090                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 22091  0151C4  0101               	movlb	1	; () banked
 22092  0151C6  5102               	movf	(_ioInfo+2)& (0+255),w,b
 22093  0151C8  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 22094  0151CA  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 22095  0151CC  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 22096  0151CE  B4D8               	btfsc	status,2,c
 22097  0151D0  EFEC  F0A8         	goto	u7901
 22098  0151D4  EFEE  F0A8         	goto	u7900
 22099  0151D8                     u7901:
 22100  0151D8  EFF6  F0A8         	goto	l7583
 22101  0151DC                     u7900:
 22102  0151DC                     
 22103                           ; BSR set to: 1
 22104                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 22105  0151DC  EE20 F00C          	lfsr	2,12
 22106  0151E0  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 22107  0151E2  26D9               	addwf	fsr2l,f,c
 22108  0151E4  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 22109  0151E6  22DA               	addwfc	fsr2h,f,c
 22110  0151E8  0E03               	movlw	3
 22111  0151EA  6EDF               	movwf	indf2,c
 22112  0151EC                     l7583:
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 22116  0151EC  0E02               	movlw	2
 22117  0151EE  6F36               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 22118  0151F0  0E00               	movlw	0
 22119  0151F2  6F35               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 22120  0151F4  EFDA  F0A7         	goto	l7519
 22121  0151F8                     l7595:
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 22125  0151F8  513D               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),w,b
 22126  0151FA  A4D8               	btfss	status,2,c
 22127  0151FC  EF02  F0A9         	goto	u7911
 22128  015200  EF04  F0A9         	goto	u7910
 22129  015204                     u7911:
 22130  015204  EF0F  F0A9         	goto	l7599
 22131  015208                     u7910:
 22132  015208                     
 22133                           ; BSR set to: 1
 22134                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 22135  015208  0E00               	movlw	0
 22136  01520A  6E0C               	movwf	SD_SendCmd@address^0,c
 22137  01520C  0E00               	movlw	0
 22138  01520E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 22139  015210  0E00               	movlw	0
 22140  015212  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 22141  015214  0E00               	movlw	0
 22142  015216  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 22143  015218  0E05               	movlw	5
 22144  01521A  ECBB  F0A0         	call	_SD_SendCmd
 22145  01521E                     l7599:
 22146  01521E  8ABA               	bsf	186,5,c	;volatile
 22147  015220                     
 22148                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 22149  015220  0E8E               	movlw	low (_spiMaster+6)
 22150  015222  6EF6               	movwf	tblptrl,c
 22151  015224  0EFE               	movlw	high (_spiMaster+6)
 22152  015226  6EF7               	movwf	tblptrh,c
 22153  015228                     	if	0	;tblptru may be non-zero
 22154  015228                     	endif
 22155  015228                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22156  015228  0E00               	movlw	low (__mediumconst shr (0+16))
 22157  01522A  6EF8               	movwf	tblptru,c
 22158  01522C                     	endif
 22159  01522C  D802               	call	u7928
 22160  01522E  EF27  F0A9         	goto	u7929
 22161  015232                     u7928:
 22162  015232  0005               	push	
 22163  015234  6EFA               	movwf	pclath,c
 22164  015236  0009               	tblrd		*+
 22165  015238  50F5               	movf	tablat,w,c
 22166  01523A  6EFD               	movwf	tosl,c
 22167  01523C  0009               	tblrd		*+
 22168  01523E  50F5               	movf	tablat,w,c
 22169  015240  6EFE               	movwf	tosh,c
 22170  015242  0009               	tblrd		*+
 22171  015244  50F5               	movf	tablat,w,c
 22172  015246  6EFF               	movwf	tosu,c
 22173  015248  50FA               	movf	pclath,w,c
 22174  01524A  0EFF               	movlw	255
 22175  01524C  0012               	return		;indir
 22176  01524E                     u7929:
 22177  01524E                     
 22178                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 22179  01524E  EE20 F00C          	lfsr	2,12
 22180  015252  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 22181  015254  26D9               	addwf	fsr2l,f,c
 22182  015256  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 22183  015258  22DA               	addwfc	fsr2h,f,c
 22184  01525A  0E00               	movlw	0
 22185  01525C  6EDF               	movwf	indf2,c
 22186  01525E                     
 22187                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 22188  01525E  0E01               	movlw	1
 22189  015260  0101               	movlb	1	; () banked
 22190  015262  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 22191  015264  EF68  F0A7         	goto	l7495
 22192  015268                     l7611:
 22193                           
 22194                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 22195  015268  EE20 F00C          	lfsr	2,12
 22196  01526C  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 22197  01526E  26D9               	addwf	fsr2l,f,c
 22198  015270  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 22199  015272  22DA               	addwfc	fsr2h,f,c
 22200  015274  0EFF               	movlw	255
 22201  015276  6EDF               	movwf	indf2,c
 22202  015278  0E00               	movlw	0
 22203  01527A  6E0C               	movwf	SD_SendCmd@address^0,c
 22204  01527C  0E00               	movlw	0
 22205  01527E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 22206  015280  0E00               	movlw	0
 22207  015282  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 22208  015284  0E00               	movlw	0
 22209  015286  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 22210  015288  0E05               	movlw	5
 22211  01528A  ECBB  F0A0         	call	_SD_SendCmd
 22212  01528E                     l7615:
 22213  01528E  8ABA               	bsf	186,5,c	;volatile
 22214  015290                     
 22215                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 22216  015290  0E8E               	movlw	low (_spiMaster+6)
 22217  015292  6EF6               	movwf	tblptrl,c
 22218  015294  0EFE               	movlw	high (_spiMaster+6)
 22219  015296  6EF7               	movwf	tblptrh,c
 22220  015298                     	if	0	;tblptru may be non-zero
 22221  015298                     	endif
 22222  015298                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22223  015298  0E00               	movlw	low (__mediumconst shr (0+16))
 22224  01529A  6EF8               	movwf	tblptru,c
 22225  01529C                     	endif
 22226  01529C  D802               	call	u7938
 22227  01529E  EF5F  F0A9         	goto	u7939
 22228  0152A2                     u7938:
 22229  0152A2  0005               	push	
 22230  0152A4  6EFA               	movwf	pclath,c
 22231  0152A6  0009               	tblrd		*+
 22232  0152A8  50F5               	movf	tablat,w,c
 22233  0152AA  6EFD               	movwf	tosl,c
 22234  0152AC  0009               	tblrd		*+
 22235  0152AE  50F5               	movf	tablat,w,c
 22236  0152B0  6EFE               	movwf	tosh,c
 22237  0152B2  0009               	tblrd		*+
 22238  0152B4  50F5               	movf	tablat,w,c
 22239  0152B6  6EFF               	movwf	tosu,c
 22240  0152B8  50FA               	movf	pclath,w,c
 22241  0152BA  0EFF               	movlw	255
 22242  0152BC  0012               	return		;indir
 22243  0152BE                     u7939:
 22244  0152BE                     
 22245                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 22246  0152BE  0E01               	movlw	1
 22247  0152C0  0101               	movlb	1	; () banked
 22248  0152C2  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 22249  0152C4                     
 22250                           ; BSR set to: 1
 22251                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 22252  0152C4  0EFF               	movlw	255
 22253  0152C6  EF90  F0A9         	goto	l823
 22254  0152CA                     l7627:
 22255  0152CA  EE20 F00C          	lfsr	2,12
 22256  0152CE  5022               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 22257  0152D0  26D9               	addwf	fsr2l,f,c
 22258  0152D2  5023               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 22259  0152D4  22DA               	addwfc	fsr2h,f,c
 22260  0152D6  50DF               	movf	indf2,w,c
 22261  0152D8  6E24               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 22262  0152DA  6A25               	clrf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 22263                           
 22264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22265                           ; Switch size 1, requested type "simple"
 22266                           ; Number of cases is 1, Range of values is 0 to 0
 22267                           ; switch strategies available:
 22268                           ; Name         Instructions Cycles
 22269                           ; simple_byte            4     3 (average)
 22270                           ;	Chosen strategy is simple_byte
 22271  0152DC  5025               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 22272  0152DE  0A00               	xorlw	0	; case 0
 22273  0152E0  B4D8               	btfsc	status,2,c
 22274  0152E2  EF75  F0A9         	goto	l11875
 22275  0152E6  EF47  F0A9         	goto	l7615
 22276  0152EA                     l11875:
 22277                           
 22278                           ; Switch size 1, requested type "simple"
 22279                           ; Number of cases is 6, Range of values is 0 to 255
 22280                           ; switch strategies available:
 22281                           ; Name         Instructions Cycles
 22282                           ; simple_byte           19    10 (average)
 22283                           ;	Chosen strategy is simple_byte
 22284  0152EA  5024               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 22285  0152EC  0A00               	xorlw	0	; case 0
 22286  0152EE  B4D8               	btfsc	status,2,c
 22287  0152F0  EF68  F0A7         	goto	l7495
 22288  0152F4  0A01               	xorlw	1	; case 1
 22289  0152F6  B4D8               	btfsc	status,2,c
 22290  0152F8  EF6B  F0A7         	goto	l7499
 22291  0152FC  0A03               	xorlw	3	; case 2
 22292  0152FE  B4D8               	btfsc	status,2,c
 22293  015300  EF49  F0A8         	goto	l7565
 22294  015304  0A01               	xorlw	1	; case 3
 22295  015306  B4D8               	btfsc	status,2,c
 22296  015308  EFF0  F0A7         	goto	l7531
 22297  01530C  0AFD               	xorlw	253	; case 254
 22298  01530E  B4D8               	btfsc	status,2,c
 22299  015310  EF34  F0A9         	goto	l7611
 22300  015314  0A01               	xorlw	1	; case 255
 22301  015316  B4D8               	btfsc	status,2,c
 22302  015318  EF47  F0A9         	goto	l7615
 22303  01531C  EF47  F0A9         	goto	l7615
 22304  015320                     l823:
 22305  015320  0012               	return		;funcret
 22306  015322                     __end_of_SD_SPI_AsyncReadTasks:
 22307                           	callstack 0
 22308                           
 22309 ;; *************** function _memset *****************
 22310 ;; Defined at:
 22311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
 22312 ;; Parameters:    Size  Location     Type
 22313 ;;  dest            2    0[COMRAM] PTR void 
 22314 ;;		 -> drive.win(512), file.buf(512), messageStr(12), savedMessage(12), 
 22315 ;;		 -> file(546), drive(563), Save_Data@newLine(3), NULL(0), 
 22316 ;;  c               2    2[COMRAM] int 
 22317 ;;  n               2    4[COMRAM] unsigned int 
 22318 ;; Auto vars:     Size  Location     Type
 22319 ;;  s               2   10[COMRAM] PTR unsigned char 
 22320 ;;		 -> drive.win(512), file.buf(512), messageStr(12), savedMessage(12), 
 22321 ;;		 -> file(546), drive(563), Save_Data@newLine(3), NULL(0), 
 22322 ;;  k               2    8[COMRAM] unsigned int 
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  2    0[COMRAM] PTR void 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/0
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22332 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22333 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22336 ;;Total ram usage:       12 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; This function calls:
 22339 ;;		Nothing
 22340 ;; This function is called by:
 22341 ;;		_SD_SPI_AsyncReadTasks
 22342 ;;		_Save_Data
 22343 ;;		_Logging_Check
 22344 ;; This function uses a non-reentrant model
 22345 ;;
 22346                           
 22347                           	psect	text69
 22348  017160                     __ptext69:
 22349                           	callstack 0
 22350  017160                     _memset:
 22351                           	callstack 22
 22352  017160  C001  F00B         	movff	memset@dest,memset@s
 22353  017164  C002  F00C         	movff	memset@dest+1,memset@s+1
 22354  017168  5005               	movf	memset@n^0,w,c
 22355  01716A  1006               	iorwf	(memset@n+1)^0,w,c
 22356  01716C  A4D8               	btfss	status,2,c
 22357  01716E  EFBB  F0B8         	goto	u7621
 22358  017172  EFBD  F0B8         	goto	u7620
 22359  017176                     u7621:
 22360  017176  EFBF  F0B8         	goto	l7427
 22361  01717A                     u7620:
 22362  01717A  EF77  F0B9         	goto	l2226
 22363  01717E                     l7427:
 22364  01717E  0060  F02F  FFD9   	movff	memset@s,fsr2l
 22365  017184  0060  F033  FFDA   	movff	memset@s+1,fsr2h
 22366  01718A  0060  F00F  FFDF   	movff	memset@c,indf2
 22367  017190  5005               	movf	memset@n^0,w,c
 22368  017192  240B               	addwf	memset@s^0,w,c
 22369  017194  6E07               	movwf	??_memset^0,c
 22370  017196  5006               	movf	(memset@n+1)^0,w,c
 22371  017198  200C               	addwfc	(memset@s+1)^0,w,c
 22372  01719A  6E08               	movwf	(??_memset+1)^0,c
 22373  01719C  0EFF               	movlw	255
 22374  01719E  2407               	addwf	??_memset^0,w,c
 22375  0171A0  6ED9               	movwf	fsr2l,c
 22376  0171A2  0EFF               	movlw	255
 22377  0171A4  2008               	addwfc	(??_memset+1)^0,w,c
 22378  0171A6  6EDA               	movwf	fsr2h,c
 22379  0171A8  0060  F00F  FFDF   	movff	memset@c,indf2
 22380  0171AE  5006               	movf	(memset@n+1)^0,w,c
 22381  0171B0  E107               	bnz	u7631
 22382  0171B2  0E03               	movlw	3
 22383  0171B4  5C05               	subwf	memset@n^0,w,c
 22384  0171B6  B0D8               	btfsc	status,0,c
 22385  0171B8  EFE0  F0B8         	goto	u7631
 22386  0171BC  EFE2  F0B8         	goto	u7630
 22387  0171C0                     u7631:
 22388  0171C0  EFE4  F0B8         	goto	l7433
 22389  0171C4                     u7630:
 22390  0171C4  EF77  F0B9         	goto	l2226
 22391  0171C8                     l7433:
 22392  0171C8  EE20 F001          	lfsr	2,1
 22393  0171CC  500B               	movf	memset@s^0,w,c
 22394  0171CE  26D9               	addwf	fsr2l,f,c
 22395  0171D0  500C               	movf	(memset@s+1)^0,w,c
 22396  0171D2  22DA               	addwfc	fsr2h,f,c
 22397  0171D4  0060  F00F  FFDF   	movff	memset@c,indf2
 22398  0171DA  EE20 F002          	lfsr	2,2
 22399  0171DE  500B               	movf	memset@s^0,w,c
 22400  0171E0  26D9               	addwf	fsr2l,f,c
 22401  0171E2  500C               	movf	(memset@s+1)^0,w,c
 22402  0171E4  22DA               	addwfc	fsr2h,f,c
 22403  0171E6  0060  F00F  FFDF   	movff	memset@c,indf2
 22404  0171EC  5005               	movf	memset@n^0,w,c
 22405  0171EE  240B               	addwf	memset@s^0,w,c
 22406  0171F0  6E07               	movwf	??_memset^0,c
 22407  0171F2  5006               	movf	(memset@n+1)^0,w,c
 22408  0171F4  200C               	addwfc	(memset@s+1)^0,w,c
 22409  0171F6  6E08               	movwf	(??_memset+1)^0,c
 22410  0171F8  0EFE               	movlw	254
 22411  0171FA  2407               	addwf	??_memset^0,w,c
 22412  0171FC  6ED9               	movwf	fsr2l,c
 22413  0171FE  0EFF               	movlw	255
 22414  017200  2008               	addwfc	(??_memset+1)^0,w,c
 22415  017202  6EDA               	movwf	fsr2h,c
 22416  017204  0060  F00F  FFDF   	movff	memset@c,indf2
 22417  01720A  5005               	movf	memset@n^0,w,c
 22418  01720C  240B               	addwf	memset@s^0,w,c
 22419  01720E  6E07               	movwf	??_memset^0,c
 22420  017210  5006               	movf	(memset@n+1)^0,w,c
 22421  017212  200C               	addwfc	(memset@s+1)^0,w,c
 22422  017214  6E08               	movwf	(??_memset+1)^0,c
 22423  017216  0EFD               	movlw	253
 22424  017218  2407               	addwf	??_memset^0,w,c
 22425  01721A  6ED9               	movwf	fsr2l,c
 22426  01721C  0EFF               	movlw	255
 22427  01721E  2008               	addwfc	(??_memset+1)^0,w,c
 22428  017220  6EDA               	movwf	fsr2h,c
 22429  017222  0060  F00F  FFDF   	movff	memset@c,indf2
 22430  017228  5006               	movf	(memset@n+1)^0,w,c
 22431  01722A  E107               	bnz	u7641
 22432  01722C  0E07               	movlw	7
 22433  01722E  5C05               	subwf	memset@n^0,w,c
 22434  017230  B0D8               	btfsc	status,0,c
 22435  017232  EF1D  F0B9         	goto	u7641
 22436  017236  EF1F  F0B9         	goto	u7640
 22437  01723A                     u7641:
 22438  01723A  EF21  F0B9         	goto	l7439
 22439  01723E                     u7640:
 22440  01723E  EF77  F0B9         	goto	l2226
 22441  017242                     l7439:
 22442  017242  EE20 F003          	lfsr	2,3
 22443  017246  500B               	movf	memset@s^0,w,c
 22444  017248  26D9               	addwf	fsr2l,f,c
 22445  01724A  500C               	movf	(memset@s+1)^0,w,c
 22446  01724C  22DA               	addwfc	fsr2h,f,c
 22447  01724E  0060  F00F  FFDF   	movff	memset@c,indf2
 22448  017254  5005               	movf	memset@n^0,w,c
 22449  017256  240B               	addwf	memset@s^0,w,c
 22450  017258  6E07               	movwf	??_memset^0,c
 22451  01725A  5006               	movf	(memset@n+1)^0,w,c
 22452  01725C  200C               	addwfc	(memset@s+1)^0,w,c
 22453  01725E  6E08               	movwf	(??_memset+1)^0,c
 22454  017260  0EFC               	movlw	252
 22455  017262  2407               	addwf	??_memset^0,w,c
 22456  017264  6ED9               	movwf	fsr2l,c
 22457  017266  0EFF               	movlw	255
 22458  017268  2008               	addwfc	(??_memset+1)^0,w,c
 22459  01726A  6EDA               	movwf	fsr2h,c
 22460  01726C  0060  F00F  FFDF   	movff	memset@c,indf2
 22461  017272  5006               	movf	(memset@n+1)^0,w,c
 22462  017274  E107               	bnz	u7651
 22463  017276  0E09               	movlw	9
 22464  017278  5C05               	subwf	memset@n^0,w,c
 22465  01727A  B0D8               	btfsc	status,0,c
 22466  01727C  EF42  F0B9         	goto	u7651
 22467  017280  EF44  F0B9         	goto	u7650
 22468  017284                     u7651:
 22469  017284  EF46  F0B9         	goto	l7445
 22470  017288                     u7650:
 22471  017288  EF77  F0B9         	goto	l2226
 22472  01728C                     l7445:
 22473  01728C  C00B  F007         	movff	memset@s,??_memset
 22474  017290  C00C  F008         	movff	memset@s+1,??_memset+1
 22475  017294  1E07               	comf	??_memset^0,f,c
 22476  017296  1E08               	comf	(??_memset+1)^0,f,c
 22477  017298  4A07               	infsnz	??_memset^0,f,c
 22478  01729A  2A08               	incf	(??_memset+1)^0,f,c
 22479  01729C  0E03               	movlw	3
 22480  01729E  1407               	andwf	??_memset^0,w,c
 22481  0172A0  6E09               	movwf	memset@k^0,c
 22482  0172A2  6A0A               	clrf	(memset@k+1)^0,c
 22483  0172A4  5009               	movf	memset@k^0,w,c
 22484  0172A6  260B               	addwf	memset@s^0,f,c
 22485  0172A8  500A               	movf	(memset@k+1)^0,w,c
 22486  0172AA  220C               	addwfc	(memset@s+1)^0,f,c
 22487  0172AC  5009               	movf	memset@k^0,w,c
 22488  0172AE  5E05               	subwf	memset@n^0,f,c
 22489  0172B0  500A               	movf	(memset@k+1)^0,w,c
 22490  0172B2  5A06               	subwfb	(memset@n+1)^0,f,c
 22491  0172B4  0EFC               	movlw	252
 22492  0172B6  1605               	andwf	memset@n^0,f,c
 22493  0172B8  0EFF               	movlw	255
 22494  0172BA  1606               	andwf	(memset@n+1)^0,f,c
 22495  0172BC  EF6E  F0B9         	goto	l7453
 22496  0172C0                     l7447:
 22497  0172C0  0060  F02F  FFD9   	movff	memset@s,fsr2l
 22498  0172C6  0060  F033  FFDA   	movff	memset@s+1,fsr2h
 22499  0172CC  0060  F00F  FFDF   	movff	memset@c,indf2
 22500  0172D2  0605               	decf	memset@n^0,f,c
 22501  0172D4  A0D8               	btfss	status,0,c
 22502  0172D6  0606               	decf	(memset@n+1)^0,f,c
 22503  0172D8  4A0B               	infsnz	memset@s^0,f,c
 22504  0172DA  2A0C               	incf	(memset@s+1)^0,f,c
 22505  0172DC                     l7453:
 22506  0172DC  5005               	movf	memset@n^0,w,c
 22507  0172DE  1006               	iorwf	(memset@n+1)^0,w,c
 22508  0172E0  A4D8               	btfss	status,2,c
 22509  0172E2  EF75  F0B9         	goto	u7661
 22510  0172E6  EF77  F0B9         	goto	u7660
 22511  0172EA                     u7661:
 22512  0172EA  EF60  F0B9         	goto	l7447
 22513  0172EE                     u7660:
 22514  0172EE                     l2226:
 22515  0172EE  0012               	return		;funcret
 22516  0172F0                     __end_of_memset:
 22517                           	callstack 0
 22518                           
 22519 ;; *************** function _SPI1_ExchangeBlock *****************
 22520 ;; Defined at:
 22521 ;;		line 110 in file "mcc_generated_files/spi1.c"
 22522 ;; Parameters:    Size  Location     Type
 22523 ;;  block           2    0[COMRAM] PTR void 
 22524 ;;		 -> drive.win(512), file.buf(512), savedMessage(12), file(546), 
 22525 ;;		 -> drive(563), Save_Data@newLine(3), NULL(0), 
 22526 ;;  blockSize       2    2[COMRAM] unsigned int 
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;  data            2    4[COMRAM] PTR unsigned char 
 22529 ;;		 -> drive.win(512), file.buf(512), savedMessage(12), file(546), 
 22530 ;;		 -> drive(563), Save_Data@newLine(3), NULL(0), 
 22531 ;; Return value:  Size  Location     Type
 22532 ;;                  1    wreg      void 
 22533 ;; Registers used:
 22534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22535 ;; Tracked objects:
 22536 ;;		On entry : 0/0
 22537 ;;		On exit  : 0/0
 22538 ;;		Unchanged: 0/0
 22539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22544 ;;Total ram usage:        6 bytes
 22545 ;; Hardware stack levels used:    1
 22546 ;; This function calls:
 22547 ;;		Nothing
 22548 ;; This function is called by:
 22549 ;;		_SD_SPI_AsyncWriteTasks
 22550 ;;		_SD_SPI_AsyncReadTasks
 22551 ;; This function uses a non-reentrant model
 22552 ;;
 22553                           
 22554                           	psect	text70
 22555  019EFE                     __ptext70:
 22556                           	callstack 0
 22557  019EFE                     _SPI1_ExchangeBlock:
 22558                           	callstack 21
 22559  019EFE                     
 22560                           ;mcc_generated_files/spi1.c: 110: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 111: {;mcc_generated_files/spi1.c: 112:     uint8_t *data =
      +                           block;
 22561  019EFE  C001  F005         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 22562  019F02  C002  F006         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 22563                           
 22564                           ;mcc_generated_files/spi1.c: 113:     while(blockSize--)
 22565  019F06  EFA3  F0CF         	goto	l7217
 22566  019F0A                     l7209:
 22567                           
 22568                           ;mcc_generated_files/spi1.c: 114:     {;mcc_generated_files/spi1.c: 115:         SPI1TCN
      +                          TL = 1;
 22569  019F0A  0E01               	movlw	1
 22570  019F0C  013D               	movlb	61	; () banked
 22571  019F0E  6F12               	movwf	18,b	;volatile
 22572  019F10                     
 22573                           ; BSR set to: 61
 22574                           ;mcc_generated_files/spi1.c: 116:         SPI1TXB = *data;
 22575  019F10  0060  F017  FFD9   	movff	SPI1_ExchangeBlock@data,fsr2l
 22576  019F16  0060  F01B  FFDA   	movff	SPI1_ExchangeBlock@data+1,fsr2h
 22577  019F1C  50DF               	movf	indf2,w,c
 22578  019F1E  6F11               	movwf	17,b	;volatile
 22579  019F20                     l1080:
 22580  019F20  0139               	movlb	57	; () banked
 22581  019F22  A9A2               	btfss	162,4,b	;volatile
 22582  019F24  EF96  F0CF         	goto	u7261
 22583  019F28  EF98  F0CF         	goto	u7260
 22584  019F2C                     u7261:
 22585  019F2C  EF90  F0CF         	goto	l1080
 22586  019F30                     u7260:
 22587  019F30                     
 22588                           ; BSR set to: 57
 22589                           ;mcc_generated_files/spi1.c: 118:         *data++ = SPI1RXB;
 22590  019F30  0060  F017  FFD9   	movff	SPI1_ExchangeBlock@data,fsr2l
 22591  019F36  0060  F01B  FFDA   	movff	SPI1_ExchangeBlock@data+1,fsr2h
 22592  019F3C  006F F443 FFDF     	movff	15632,indf2	;volatile
 22593  019F42                     
 22594                           ; BSR set to: 57
 22595  019F42  4A05               	infsnz	SPI1_ExchangeBlock@data^0,f,c
 22596  019F44  2A06               	incf	(SPI1_ExchangeBlock@data+1)^0,f,c
 22597  019F46                     l7217:
 22598                           
 22599                           ;mcc_generated_files/spi1.c: 113:     while(blockSize--)
 22600  019F46  0603               	decf	SPI1_ExchangeBlock@blockSize^0,f,c
 22601  019F48  A0D8               	btfss	status,0,c
 22602  019F4A  0604               	decf	(SPI1_ExchangeBlock@blockSize+1)^0,f,c
 22603  019F4C  2803               	incf	SPI1_ExchangeBlock@blockSize^0,w,c
 22604  019F4E  E106               	bnz	u7271
 22605  019F50  2804               	incf	(SPI1_ExchangeBlock@blockSize+1)^0,w,c
 22606  019F52  A4D8               	btfss	status,2,c
 22607  019F54  EFAE  F0CF         	goto	u7271
 22608  019F58  EFB0  F0CF         	goto	u7270
 22609  019F5C                     u7271:
 22610  019F5C  EF85  F0CF         	goto	l7209
 22611  019F60                     u7270:
 22612  019F60  0012               	return		;funcret
 22613  019F62                     __end_of_SPI1_ExchangeBlock:
 22614                           	callstack 0
 22615                           
 22616 ;; *************** function _SD_SendCmd *****************
 22617 ;; Defined at:
 22618 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 22619 ;; Parameters:    Size  Location     Type
 22620 ;;  cmd             1    wreg     unsigned char 
 22621 ;;  address         4   11[COMRAM] unsigned long 
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;  cmd             1   27[COMRAM] unsigned char 
 22624 ;;  response        5   28[COMRAM] struct .
 22625 ;;  address_byte    4   21[COMRAM] unsigned char [4]
 22626 ;;  longTimeout     4   17[COMRAM] unsigned long 
 22627 ;;  timeout         2   25[COMRAM] unsigned short 
 22628 ;; Return value:  Size  Location     Type
 22629 ;;                  5   11[COMRAM] struct .
 22630 ;; Registers used:
 22631 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22632 ;; Tracked objects:
 22633 ;;		On entry : 0/0
 22634 ;;		On exit  : 0/0
 22635 ;;		Unchanged: 0/0
 22636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22637 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22638 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22640 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;Total ram usage:       22 bytes
 22642 ;; Hardware stack levels used:    1
 22643 ;; Hardware stack levels required when called:    1
 22644 ;; This function calls:
 22645 ;;		_SPI1_ExchangeByte
 22646 ;;		_memcpy
 22647 ;; This function is called by:
 22648 ;;		_SD_SPI_MediaInitialize
 22649 ;;		_SD_SPI_AsyncReadTasks
 22650 ;;		_SD_SPI_AsyncWriteTasks
 22651 ;; This function uses a non-reentrant model
 22652 ;;
 22653                           
 22654                           	psect	text71
 22655  014176                     __ptext71:
 22656                           	callstack 0
 22657  014176                     _SD_SendCmd:
 22658                           	callstack 20
 22659                           
 22660                           ;incstack = 0
 22661                           ;SD_SendCmd@cmd stored from wreg
 22662  014176  6E1C               	movwf	SD_SendCmd@cmd^0,c
 22663  014178  9ABA               	bcf	186,5,c	;volatile
 22664  01417A                     
 22665                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 22666  01417A  0E16               	movlw	low SD_SendCmd@address_bytes
 22667  01417C  6E01               	movwf	memcpy@d1^0,c
 22668  01417E  0E00               	movlw	high SD_SendCmd@address_bytes
 22669  014180  6E02               	movwf	(memcpy@d1+1)^0,c
 22670  014182  0E0C               	movlw	low SD_SendCmd@address
 22671  014184  6E03               	movwf	memcpy@s1^0,c
 22672  014186  0E00               	movlw	high SD_SendCmd@address
 22673  014188  6E04               	movwf	(memcpy@s1+1)^0,c
 22674  01418A  0E00               	movlw	0
 22675  01418C  6E06               	movwf	(memcpy@n+1)^0,c
 22676  01418E  0E04               	movlw	4
 22677  014190  6E05               	movwf	memcpy@n^0,c
 22678  014192  EC42  F0D0         	call	_memcpy
 22679  014196                     
 22680                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 22681  014196  0E8E               	movlw	low (_spiMaster+6)
 22682  014198  6EF6               	movwf	tblptrl,c
 22683  01419A  0EFE               	movlw	high (_spiMaster+6)
 22684  01419C  6EF7               	movwf	tblptrh,c
 22685  01419E                     	if	0	;tblptru may be non-zero
 22686  01419E                     	endif
 22687  01419E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22688  01419E  0E00               	movlw	low (__mediumconst shr (0+16))
 22689  0141A0  6EF8               	movwf	tblptru,c
 22690  0141A2                     	endif
 22691  0141A2  D802               	call	u7018
 22692  0141A4  EFEF  F0A0         	goto	u7019
 22693  0141A8                     u7018:
 22694  0141A8  0005               	push	
 22695  0141AA  6EFA               	movwf	pclath,c
 22696  0141AC  0009               	tblrd		*+
 22697  0141AE  50F5               	movf	tablat,w,c
 22698  0141B0  6EFD               	movwf	tosl,c
 22699  0141B2  0009               	tblrd		*+
 22700  0141B4  50F5               	movf	tablat,w,c
 22701  0141B6  6EFE               	movwf	tosh,c
 22702  0141B8  0009               	tblrd		*+
 22703  0141BA  50F5               	movf	tablat,w,c
 22704  0141BC  6EFF               	movwf	tosu,c
 22705  0141BE  50FA               	movf	pclath,w,c
 22706  0141C0  501C               	movf	SD_SendCmd@cmd^0,w,c
 22707  0141C2  0D04               	mullw	4
 22708  0141C4  0E38               	movlw	low _sdmmc_cmdtable
 22709  0141C6  24F3               	addwf	243,w,c
 22710  0141C8  6EF6               	movwf	tblptrl,c
 22711  0141CA  0EFE               	movlw	high _sdmmc_cmdtable
 22712  0141CC  20F4               	addwfc	244,w,c
 22713  0141CE  6EF7               	movwf	tblptrh,c
 22714  0141D0                     	if	1	;There are 3 active tblptr bytes
 22715  0141D0  6AF8               	clrf	tblptru,c
 22716  0141D2  0E00               	movlw	low (__mediumconst shr (0+16))
 22717  0141D4  22F8               	addwfc	tblptru,f,c
 22718  0141D6                     	endif
 22719  0141D6  0008               	tblrd		*
 22720  0141D8  50F5               	movf	tablat,w,c
 22721  0141DA  0940               	iorlw	64
 22722  0141DC  0012               	return		;indir
 22723  0141DE                     u7019:
 22724  0141DE                     
 22725                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 22726  0141DE  0E8E               	movlw	low (_spiMaster+6)
 22727  0141E0  6EF6               	movwf	tblptrl,c
 22728  0141E2  0EFE               	movlw	high (_spiMaster+6)
 22729  0141E4  6EF7               	movwf	tblptrh,c
 22730  0141E6                     	if	0	;tblptru may be non-zero
 22731  0141E6                     	endif
 22732  0141E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22733  0141E6  0E00               	movlw	low (__mediumconst shr (0+16))
 22734  0141E8  6EF8               	movwf	tblptru,c
 22735  0141EA                     	endif
 22736  0141EA  D802               	call	u7028
 22737  0141EC  EF06  F0A1         	goto	u7029
 22738  0141F0                     u7028:
 22739  0141F0  0005               	push	
 22740  0141F2  6EFA               	movwf	pclath,c
 22741  0141F4  0009               	tblrd		*+
 22742  0141F6  50F5               	movf	tablat,w,c
 22743  0141F8  6EFD               	movwf	tosl,c
 22744  0141FA  0009               	tblrd		*+
 22745  0141FC  50F5               	movf	tablat,w,c
 22746  0141FE  6EFE               	movwf	tosh,c
 22747  014200  0009               	tblrd		*+
 22748  014202  50F5               	movf	tablat,w,c
 22749  014204  6EFF               	movwf	tosu,c
 22750  014206  50FA               	movf	pclath,w,c
 22751  014208  5019               	movf	(SD_SendCmd@address_bytes+3)^0,w,c
 22752  01420A  0012               	return		;indir
 22753  01420C                     u7029:
 22754  01420C                     
 22755                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 22756  01420C  0E8E               	movlw	low (_spiMaster+6)
 22757  01420E  6EF6               	movwf	tblptrl,c
 22758  014210  0EFE               	movlw	high (_spiMaster+6)
 22759  014212  6EF7               	movwf	tblptrh,c
 22760  014214                     	if	0	;tblptru may be non-zero
 22761  014214                     	endif
 22762  014214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22763  014214  0E00               	movlw	low (__mediumconst shr (0+16))
 22764  014216  6EF8               	movwf	tblptru,c
 22765  014218                     	endif
 22766  014218  D802               	call	u7038
 22767  01421A  EF1D  F0A1         	goto	u7039
 22768  01421E                     u7038:
 22769  01421E  0005               	push	
 22770  014220  6EFA               	movwf	pclath,c
 22771  014222  0009               	tblrd		*+
 22772  014224  50F5               	movf	tablat,w,c
 22773  014226  6EFD               	movwf	tosl,c
 22774  014228  0009               	tblrd		*+
 22775  01422A  50F5               	movf	tablat,w,c
 22776  01422C  6EFE               	movwf	tosh,c
 22777  01422E  0009               	tblrd		*+
 22778  014230  50F5               	movf	tablat,w,c
 22779  014232  6EFF               	movwf	tosu,c
 22780  014234  50FA               	movf	pclath,w,c
 22781  014236  5018               	movf	(SD_SendCmd@address_bytes+2)^0,w,c
 22782  014238  0012               	return		;indir
 22783  01423A                     u7039:
 22784  01423A                     
 22785                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 22786  01423A  0E8E               	movlw	low (_spiMaster+6)
 22787  01423C  6EF6               	movwf	tblptrl,c
 22788  01423E  0EFE               	movlw	high (_spiMaster+6)
 22789  014240  6EF7               	movwf	tblptrh,c
 22790  014242                     	if	0	;tblptru may be non-zero
 22791  014242                     	endif
 22792  014242                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22793  014242  0E00               	movlw	low (__mediumconst shr (0+16))
 22794  014244  6EF8               	movwf	tblptru,c
 22795  014246                     	endif
 22796  014246  D802               	call	u7048
 22797  014248  EF34  F0A1         	goto	u7049
 22798  01424C                     u7048:
 22799  01424C  0005               	push	
 22800  01424E  6EFA               	movwf	pclath,c
 22801  014250  0009               	tblrd		*+
 22802  014252  50F5               	movf	tablat,w,c
 22803  014254  6EFD               	movwf	tosl,c
 22804  014256  0009               	tblrd		*+
 22805  014258  50F5               	movf	tablat,w,c
 22806  01425A  6EFE               	movwf	tosh,c
 22807  01425C  0009               	tblrd		*+
 22808  01425E  50F5               	movf	tablat,w,c
 22809  014260  6EFF               	movwf	tosu,c
 22810  014262  50FA               	movf	pclath,w,c
 22811  014264  5017               	movf	(SD_SendCmd@address_bytes+1)^0,w,c
 22812  014266  0012               	return		;indir
 22813  014268                     u7049:
 22814  014268                     
 22815                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 22816  014268  0E8E               	movlw	low (_spiMaster+6)
 22817  01426A  6EF6               	movwf	tblptrl,c
 22818  01426C  0EFE               	movlw	high (_spiMaster+6)
 22819  01426E  6EF7               	movwf	tblptrh,c
 22820  014270                     	if	0	;tblptru may be non-zero
 22821  014270                     	endif
 22822  014270                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22823  014270  0E00               	movlw	low (__mediumconst shr (0+16))
 22824  014272  6EF8               	movwf	tblptru,c
 22825  014274                     	endif
 22826  014274  D802               	call	u7058
 22827  014276  EF4B  F0A1         	goto	u7059
 22828  01427A                     u7058:
 22829  01427A  0005               	push	
 22830  01427C  6EFA               	movwf	pclath,c
 22831  01427E  0009               	tblrd		*+
 22832  014280  50F5               	movf	tablat,w,c
 22833  014282  6EFD               	movwf	tosl,c
 22834  014284  0009               	tblrd		*+
 22835  014286  50F5               	movf	tablat,w,c
 22836  014288  6EFE               	movwf	tosh,c
 22837  01428A  0009               	tblrd		*+
 22838  01428C  50F5               	movf	tablat,w,c
 22839  01428E  6EFF               	movwf	tosu,c
 22840  014290  50FA               	movf	pclath,w,c
 22841  014292  5016               	movf	SD_SendCmd@address_bytes^0,w,c
 22842  014294  0012               	return		;indir
 22843  014296                     u7059:
 22844  014296                     
 22845                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 22846  014296  0E8E               	movlw	low (_spiMaster+6)
 22847  014298  6EF6               	movwf	tblptrl,c
 22848  01429A  0EFE               	movlw	high (_spiMaster+6)
 22849  01429C  6EF7               	movwf	tblptrh,c
 22850  01429E                     	if	0	;tblptru may be non-zero
 22851  01429E                     	endif
 22852  01429E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22853  01429E  0E00               	movlw	low (__mediumconst shr (0+16))
 22854  0142A0  6EF8               	movwf	tblptru,c
 22855  0142A2                     	endif
 22856  0142A2  D802               	call	u7068
 22857  0142A4  EF72  F0A1         	goto	u7069
 22858  0142A8                     u7068:
 22859  0142A8  0005               	push	
 22860  0142AA  6EFA               	movwf	pclath,c
 22861  0142AC  0009               	tblrd		*+
 22862  0142AE  50F5               	movf	tablat,w,c
 22863  0142B0  6EFD               	movwf	tosl,c
 22864  0142B2  0009               	tblrd		*+
 22865  0142B4  50F5               	movf	tablat,w,c
 22866  0142B6  6EFE               	movwf	tosh,c
 22867  0142B8  0009               	tblrd		*+
 22868  0142BA  50F5               	movf	tablat,w,c
 22869  0142BC  6EFF               	movwf	tosu,c
 22870  0142BE  50FA               	movf	pclath,w,c
 22871  0142C0  501C               	movf	SD_SendCmd@cmd^0,w,c
 22872  0142C2  0D04               	mullw	4
 22873  0142C4  0E01               	movlw	1
 22874  0142C6  26F3               	addwf	243,f,c
 22875  0142C8  0E00               	movlw	0
 22876  0142CA  22F4               	addwfc	244,f,c
 22877  0142CC  0E38               	movlw	low _sdmmc_cmdtable
 22878  0142CE  24F3               	addwf	243,w,c
 22879  0142D0  6EF6               	movwf	tblptrl,c
 22880  0142D2  0EFE               	movlw	high _sdmmc_cmdtable
 22881  0142D4  20F4               	addwfc	244,w,c
 22882  0142D6  6EF7               	movwf	tblptrh,c
 22883  0142D8                     	if	1	;There are 3 active tblptr bytes
 22884  0142D8  6AF8               	clrf	tblptru,c
 22885  0142DA  0E00               	movlw	low (__mediumconst shr (0+16))
 22886  0142DC  22F8               	addwfc	tblptru,f,c
 22887  0142DE                     	endif
 22888  0142DE  0008               	tblrd		*
 22889  0142E0  50F5               	movf	tablat,w,c
 22890  0142E2  0012               	return		;indir
 22891  0142E4                     u7069:
 22892  0142E4                     
 22893                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 22894  0142E4  0E05               	movlw	5
 22895  0142E6  181C               	xorwf	SD_SendCmd@cmd^0,w,c
 22896  0142E8  A4D8               	btfss	status,2,c
 22897  0142EA  EF79  F0A1         	goto	u7071
 22898  0142EE  EF7B  F0A1         	goto	u7070
 22899  0142F2                     u7071:
 22900  0142F2  EF92  F0A1         	goto	l7167
 22901  0142F6                     u7070:
 22902  0142F6                     
 22903                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 22904  0142F6  0E8E               	movlw	low (_spiMaster+6)
 22905  0142F8  6EF6               	movwf	tblptrl,c
 22906  0142FA  0EFE               	movlw	high (_spiMaster+6)
 22907  0142FC  6EF7               	movwf	tblptrh,c
 22908  0142FE                     	if	0	;tblptru may be non-zero
 22909  0142FE                     	endif
 22910  0142FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22911  0142FE  0E00               	movlw	low (__mediumconst shr (0+16))
 22912  014300  6EF8               	movwf	tblptru,c
 22913  014302                     	endif
 22914  014302  D802               	call	u7088
 22915  014304  EF92  F0A1         	goto	u7089
 22916  014308                     u7088:
 22917  014308  0005               	push	
 22918  01430A  6EFA               	movwf	pclath,c
 22919  01430C  0009               	tblrd		*+
 22920  01430E  50F5               	movf	tablat,w,c
 22921  014310  6EFD               	movwf	tosl,c
 22922  014312  0009               	tblrd		*+
 22923  014314  50F5               	movf	tablat,w,c
 22924  014316  6EFE               	movwf	tosh,c
 22925  014318  0009               	tblrd		*+
 22926  01431A  50F5               	movf	tablat,w,c
 22927  01431C  6EFF               	movwf	tosu,c
 22928  01431E  50FA               	movf	pclath,w,c
 22929  014320  0EFF               	movlw	255
 22930  014322  0012               	return		;indir
 22931  014324                     u7089:
 22932  014324                     l7167:
 22933                           
 22934                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 22935  014324  0E00               	movlw	0
 22936  014326  6E1B               	movwf	(SD_SendCmd@timeout+1)^0,c
 22937  014328  0E14               	movlw	20
 22938  01432A  6E1A               	movwf	SD_SendCmd@timeout^0,c
 22939  01432C                     l7169:
 22940                           
 22941                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 22942  01432C  0E8E               	movlw	low (_spiMaster+6)
 22943  01432E  6EF6               	movwf	tblptrl,c
 22944  014330  0EFE               	movlw	high (_spiMaster+6)
 22945  014332  6EF7               	movwf	tblptrh,c
 22946  014334                     	if	0	;tblptru may be non-zero
 22947  014334                     	endif
 22948  014334                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22949  014334  0E00               	movlw	low (__mediumconst shr (0+16))
 22950  014336  6EF8               	movwf	tblptru,c
 22951  014338                     	endif
 22952  014338  D802               	call	u7098
 22953  01433A  EFAD  F0A1         	goto	u7099
 22954  01433E                     u7098:
 22955  01433E  0005               	push	
 22956  014340  6EFA               	movwf	pclath,c
 22957  014342  0009               	tblrd		*+
 22958  014344  50F5               	movf	tablat,w,c
 22959  014346  6EFD               	movwf	tosl,c
 22960  014348  0009               	tblrd		*+
 22961  01434A  50F5               	movf	tablat,w,c
 22962  01434C  6EFE               	movwf	tosh,c
 22963  01434E  0009               	tblrd		*+
 22964  014350  50F5               	movf	tablat,w,c
 22965  014352  6EFF               	movwf	tosu,c
 22966  014354  50FA               	movf	pclath,w,c
 22967  014356  0EFF               	movlw	255
 22968  014358  0012               	return		;indir
 22969  01435A                     u7099:
 22970  01435A  6E1D               	movwf	SD_SendCmd@response^0,c
 22971  01435C                     
 22972                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 22973  01435C  061A               	decf	SD_SendCmd@timeout^0,f,c
 22974  01435E  A0D8               	btfss	status,0,c
 22975  014360  061B               	decf	(SD_SendCmd@timeout+1)^0,f,c
 22976  014362                     
 22977                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 22978  014362  281D               	incf	SD_SendCmd@response^0,w,c
 22979  014364  A4D8               	btfss	status,2,c
 22980  014366  EFB7  F0A1         	goto	u7101
 22981  01436A  EFB9  F0A1         	goto	u7100
 22982  01436E                     u7101:
 22983  01436E  EFC2  F0A1         	goto	l7177
 22984  014372                     u7100:
 22985  014372  501A               	movf	SD_SendCmd@timeout^0,w,c
 22986  014374  101B               	iorwf	(SD_SendCmd@timeout+1)^0,w,c
 22987  014376  A4D8               	btfss	status,2,c
 22988  014378  EFC0  F0A1         	goto	u7111
 22989  01437C  EFC2  F0A1         	goto	u7110
 22990  014380                     u7111:
 22991  014380  EF96  F0A1         	goto	l7169
 22992  014384                     u7110:
 22993  014384                     l7177:
 22994                           
 22995                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 22996  014384  501C               	movf	SD_SendCmd@cmd^0,w,c
 22997  014386  0D04               	mullw	4
 22998  014388  0E02               	movlw	2
 22999  01438A  26F3               	addwf	243,f,c
 23000  01438C  0E00               	movlw	0
 23001  01438E  22F4               	addwfc	244,f,c
 23002  014390  0E38               	movlw	low _sdmmc_cmdtable
 23003  014392  24F3               	addwf	243,w,c
 23004  014394  6EF6               	movwf	tblptrl,c
 23005  014396  0EFE               	movlw	high _sdmmc_cmdtable
 23006  014398  20F4               	addwfc	244,w,c
 23007  01439A  6EF7               	movwf	tblptrh,c
 23008  01439C                     	if	1	;There are 3 active tblptr bytes
 23009  01439C  6AF8               	clrf	tblptru,c
 23010  01439E  0E00               	movlw	low (__mediumconst shr (0+16))
 23011  0143A0  22F8               	addwfc	tblptru,f,c
 23012  0143A2                     	endif
 23013  0143A2  0008               	tblrd		*
 23014  0143A4  50F5               	movf	tablat,w,c
 23015  0143A6  0A02               	xorlw	2
 23016  0143A8  A4D8               	btfss	status,2,c
 23017  0143AA  EFD9  F0A1         	goto	u7121
 23018  0143AE  EFDB  F0A1         	goto	u7120
 23019  0143B2                     u7121:
 23020  0143B2  EFF7  F0A1         	goto	l7183
 23021  0143B6                     u7120:
 23022  0143B6                     
 23023                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 23024  0143B6  C01D  F01E         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 23025  0143BA                     
 23026                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 23027  0143BA  0E8E               	movlw	low (_spiMaster+6)
 23028  0143BC  6EF6               	movwf	tblptrl,c
 23029  0143BE  0EFE               	movlw	high (_spiMaster+6)
 23030  0143C0  6EF7               	movwf	tblptrh,c
 23031  0143C2                     	if	0	;tblptru may be non-zero
 23032  0143C2                     	endif
 23033  0143C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23034  0143C2  0E00               	movlw	low (__mediumconst shr (0+16))
 23035  0143C4  6EF8               	movwf	tblptru,c
 23036  0143C6                     	endif
 23037  0143C6  D802               	call	u7138
 23038  0143C8  EFF4  F0A1         	goto	u7139
 23039  0143CC                     u7138:
 23040  0143CC  0005               	push	
 23041  0143CE  6EFA               	movwf	pclath,c
 23042  0143D0  0009               	tblrd		*+
 23043  0143D2  50F5               	movf	tablat,w,c
 23044  0143D4  6EFD               	movwf	tosl,c
 23045  0143D6  0009               	tblrd		*+
 23046  0143D8  50F5               	movf	tablat,w,c
 23047  0143DA  6EFE               	movwf	tosh,c
 23048  0143DC  0009               	tblrd		*+
 23049  0143DE  50F5               	movf	tablat,w,c
 23050  0143E0  6EFF               	movwf	tosu,c
 23051  0143E2  50FA               	movf	pclath,w,c
 23052  0143E4  0EFF               	movlw	255
 23053  0143E6  0012               	return		;indir
 23054  0143E8                     u7139:
 23055  0143E8  6E1D               	movwf	SD_SendCmd@response^0,c
 23056                           
 23057                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 23058  0143EA  EFC5  F0A2         	goto	l907
 23059  0143EE                     l7183:
 23060  0143EE  501C               	movf	SD_SendCmd@cmd^0,w,c
 23061  0143F0  0D04               	mullw	4
 23062  0143F2  0E02               	movlw	2
 23063  0143F4  26F3               	addwf	243,f,c
 23064  0143F6  0E00               	movlw	0
 23065  0143F8  22F4               	addwfc	244,f,c
 23066  0143FA  0E38               	movlw	low _sdmmc_cmdtable
 23067  0143FC  24F3               	addwf	243,w,c
 23068  0143FE  6EF6               	movwf	tblptrl,c
 23069  014400  0EFE               	movlw	high _sdmmc_cmdtable
 23070  014402  20F4               	addwfc	244,w,c
 23071  014404  6EF7               	movwf	tblptrh,c
 23072  014406                     	if	1	;There are 3 active tblptr bytes
 23073  014406  6AF8               	clrf	tblptru,c
 23074  014408  0E00               	movlw	low (__mediumconst shr (0+16))
 23075  01440A  22F8               	addwfc	tblptru,f,c
 23076  01440C                     	endif
 23077  01440C  0008               	tblrd		*
 23078  01440E  50F5               	movf	tablat,w,c
 23079  014410  06E8               	decf	wreg,f,c
 23080  014412  A4D8               	btfss	status,2,c
 23081  014414  EF0E  F0A2         	goto	u7141
 23082  014418  EF10  F0A2         	goto	u7140
 23083  01441C                     u7141:
 23084  01441C  EF4C  F0A2         	goto	l7197
 23085  014420                     u7140:
 23086  014420                     
 23087                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 23088  014420  0E00               	movlw	0
 23089  014422  6E12               	movwf	SD_SendCmd@longTimeout^0,c
 23090  014424  0E00               	movlw	0
 23091  014426  6E13               	movwf	(SD_SendCmd@longTimeout+1)^0,c
 23092  014428  0E0A               	movlw	10
 23093  01442A  6E14               	movwf	(SD_SendCmd@longTimeout+2)^0,c
 23094  01442C  0E00               	movlw	0
 23095  01442E  6E15               	movwf	(SD_SendCmd@longTimeout+3)^0,c
 23096  014430                     l7187:
 23097                           
 23098                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 23099  014430  0E8E               	movlw	low (_spiMaster+6)
 23100  014432  6EF6               	movwf	tblptrl,c
 23101  014434  0EFE               	movlw	high (_spiMaster+6)
 23102  014436  6EF7               	movwf	tblptrh,c
 23103  014438                     	if	0	;tblptru may be non-zero
 23104  014438                     	endif
 23105  014438                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23106  014438  0E00               	movlw	low (__mediumconst shr (0+16))
 23107  01443A  6EF8               	movwf	tblptru,c
 23108  01443C                     	endif
 23109  01443C  D802               	call	u7158
 23110  01443E  EF2F  F0A2         	goto	u7159
 23111  014442                     u7158:
 23112  014442  0005               	push	
 23113  014444  6EFA               	movwf	pclath,c
 23114  014446  0009               	tblrd		*+
 23115  014448  50F5               	movf	tablat,w,c
 23116  01444A  6EFD               	movwf	tosl,c
 23117  01444C  0009               	tblrd		*+
 23118  01444E  50F5               	movf	tablat,w,c
 23119  014450  6EFE               	movwf	tosh,c
 23120  014452  0009               	tblrd		*+
 23121  014454  50F5               	movf	tablat,w,c
 23122  014456  6EFF               	movwf	tosu,c
 23123  014458  50FA               	movf	pclath,w,c
 23124  01445A  0EFF               	movlw	255
 23125  01445C  0012               	return		;indir
 23126  01445E                     u7159:
 23127  01445E  6E1D               	movwf	SD_SendCmd@response^0,c
 23128  014460                     
 23129                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 23130  014460  0612               	decf	SD_SendCmd@longTimeout^0,f,c
 23131  014462  0E00               	movlw	0
 23132  014464  5A13               	subwfb	(SD_SendCmd@longTimeout+1)^0,f,c
 23133  014466  5A14               	subwfb	(SD_SendCmd@longTimeout+2)^0,f,c
 23134  014468  5A15               	subwfb	(SD_SendCmd@longTimeout+3)^0,f,c
 23135  01446A                     
 23136                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 23137  01446A  501D               	movf	SD_SendCmd@response^0,w,c
 23138  01446C  A4D8               	btfss	status,2,c
 23139  01446E  EF3B  F0A2         	goto	u7161
 23140  014472  EF3D  F0A2         	goto	u7160
 23141  014476                     u7161:
 23142  014476  EF48  F0A2         	goto	l7195
 23143  01447A                     u7160:
 23144  01447A  5012               	movf	SD_SendCmd@longTimeout^0,w,c
 23145  01447C  1013               	iorwf	(SD_SendCmd@longTimeout+1)^0,w,c
 23146  01447E  1014               	iorwf	(SD_SendCmd@longTimeout+2)^0,w,c
 23147  014480  1015               	iorwf	(SD_SendCmd@longTimeout+3)^0,w,c
 23148  014482  A4D8               	btfss	status,2,c
 23149  014484  EF46  F0A2         	goto	u7171
 23150  014488  EF48  F0A2         	goto	u7170
 23151  01448C                     u7171:
 23152  01448C  EF18  F0A2         	goto	l7187
 23153  014490                     u7170:
 23154  014490                     l7195:
 23155                           
 23156                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 23157  014490  0E00               	movlw	0
 23158  014492  6E1D               	movwf	SD_SendCmd@response^0,c
 23159                           
 23160                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 23161  014494  EFC5  F0A2         	goto	l907
 23162  014498                     l7197:
 23163  014498  501C               	movf	SD_SendCmd@cmd^0,w,c
 23164  01449A  0D04               	mullw	4
 23165  01449C  0E02               	movlw	2
 23166  01449E  26F3               	addwf	243,f,c
 23167  0144A0  0E00               	movlw	0
 23168  0144A2  22F4               	addwfc	244,f,c
 23169  0144A4  0E38               	movlw	low _sdmmc_cmdtable
 23170  0144A6  24F3               	addwf	243,w,c
 23171  0144A8  6EF6               	movwf	tblptrl,c
 23172  0144AA  0EFE               	movlw	high _sdmmc_cmdtable
 23173  0144AC  20F4               	addwfc	244,w,c
 23174  0144AE  6EF7               	movwf	tblptrh,c
 23175  0144B0                     	if	1	;There are 3 active tblptr bytes
 23176  0144B0  6AF8               	clrf	tblptru,c
 23177  0144B2  0E00               	movlw	low (__mediumconst shr (0+16))
 23178  0144B4  22F8               	addwfc	tblptru,f,c
 23179  0144B6                     	endif
 23180  0144B6  0008               	tblrd		*
 23181  0144B8  50F5               	movf	tablat,w,c
 23182  0144BA  0A04               	xorlw	4
 23183  0144BC  A4D8               	btfss	status,2,c
 23184  0144BE  EF63  F0A2         	goto	u7181
 23185  0144C2  EF65  F0A2         	goto	u7180
 23186  0144C6                     u7181:
 23187  0144C6  EFC5  F0A2         	goto	l907
 23188  0144CA                     u7180:
 23189  0144CA                     
 23190                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 23191  0144CA  0E8E               	movlw	low (_spiMaster+6)
 23192  0144CC  6EF6               	movwf	tblptrl,c
 23193  0144CE  0EFE               	movlw	high (_spiMaster+6)
 23194  0144D0  6EF7               	movwf	tblptrh,c
 23195  0144D2                     	if	0	;tblptru may be non-zero
 23196  0144D2                     	endif
 23197  0144D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23198  0144D2  0E00               	movlw	low (__mediumconst shr (0+16))
 23199  0144D4  6EF8               	movwf	tblptru,c
 23200  0144D6                     	endif
 23201  0144D6  D802               	call	u7198
 23202  0144D8  EF7C  F0A2         	goto	u7199
 23203  0144DC                     u7198:
 23204  0144DC  0005               	push	
 23205  0144DE  6EFA               	movwf	pclath,c
 23206  0144E0  0009               	tblrd		*+
 23207  0144E2  50F5               	movf	tablat,w,c
 23208  0144E4  6EFD               	movwf	tosl,c
 23209  0144E6  0009               	tblrd		*+
 23210  0144E8  50F5               	movf	tablat,w,c
 23211  0144EA  6EFE               	movwf	tosh,c
 23212  0144EC  0009               	tblrd		*+
 23213  0144EE  50F5               	movf	tablat,w,c
 23214  0144F0  6EFF               	movwf	tosu,c
 23215  0144F2  50FA               	movf	pclath,w,c
 23216  0144F4  0EFF               	movlw	255
 23217  0144F6  0012               	return		;indir
 23218  0144F8                     u7199:
 23219  0144F8  6E21               	movwf	(SD_SendCmd@response+4)^0,c
 23220                           
 23221                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23222  0144FA  0E8E               	movlw	low (_spiMaster+6)
 23223  0144FC  6EF6               	movwf	tblptrl,c
 23224  0144FE  0EFE               	movlw	high (_spiMaster+6)
 23225  014500  6EF7               	movwf	tblptrh,c
 23226  014502                     	if	0	;tblptru may be non-zero
 23227  014502                     	endif
 23228  014502                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23229  014502  0E00               	movlw	low (__mediumconst shr (0+16))
 23230  014504  6EF8               	movwf	tblptru,c
 23231  014506                     	endif
 23232  014506  D802               	call	u7208
 23233  014508  EF94  F0A2         	goto	u7209
 23234  01450C                     u7208:
 23235  01450C  0005               	push	
 23236  01450E  6EFA               	movwf	pclath,c
 23237  014510  0009               	tblrd		*+
 23238  014512  50F5               	movf	tablat,w,c
 23239  014514  6EFD               	movwf	tosl,c
 23240  014516  0009               	tblrd		*+
 23241  014518  50F5               	movf	tablat,w,c
 23242  01451A  6EFE               	movwf	tosh,c
 23243  01451C  0009               	tblrd		*+
 23244  01451E  50F5               	movf	tablat,w,c
 23245  014520  6EFF               	movwf	tosu,c
 23246  014522  50FA               	movf	pclath,w,c
 23247  014524  0EFF               	movlw	255
 23248  014526  0012               	return		;indir
 23249  014528                     u7209:
 23250  014528  6E20               	movwf	(SD_SendCmd@response+3)^0,c
 23251                           
 23252                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23253  01452A  0E8E               	movlw	low (_spiMaster+6)
 23254  01452C  6EF6               	movwf	tblptrl,c
 23255  01452E  0EFE               	movlw	high (_spiMaster+6)
 23256  014530  6EF7               	movwf	tblptrh,c
 23257  014532                     	if	0	;tblptru may be non-zero
 23258  014532                     	endif
 23259  014532                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23260  014532  0E00               	movlw	low (__mediumconst shr (0+16))
 23261  014534  6EF8               	movwf	tblptru,c
 23262  014536                     	endif
 23263  014536  D802               	call	u7218
 23264  014538  EFAC  F0A2         	goto	u7219
 23265  01453C                     u7218:
 23266  01453C  0005               	push	
 23267  01453E  6EFA               	movwf	pclath,c
 23268  014540  0009               	tblrd		*+
 23269  014542  50F5               	movf	tablat,w,c
 23270  014544  6EFD               	movwf	tosl,c
 23271  014546  0009               	tblrd		*+
 23272  014548  50F5               	movf	tablat,w,c
 23273  01454A  6EFE               	movwf	tosh,c
 23274  01454C  0009               	tblrd		*+
 23275  01454E  50F5               	movf	tablat,w,c
 23276  014550  6EFF               	movwf	tosu,c
 23277  014552  50FA               	movf	pclath,w,c
 23278  014554  0EFF               	movlw	255
 23279  014556  0012               	return		;indir
 23280  014558                     u7219:
 23281  014558  6E1F               	movwf	(SD_SendCmd@response+2)^0,c
 23282                           
 23283                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 23284  01455A  0E8E               	movlw	low (_spiMaster+6)
 23285  01455C  6EF6               	movwf	tblptrl,c
 23286  01455E  0EFE               	movlw	high (_spiMaster+6)
 23287  014560  6EF7               	movwf	tblptrh,c
 23288  014562                     	if	0	;tblptru may be non-zero
 23289  014562                     	endif
 23290  014562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23291  014562  0E00               	movlw	low (__mediumconst shr (0+16))
 23292  014564  6EF8               	movwf	tblptru,c
 23293  014566                     	endif
 23294  014566  D802               	call	u7228
 23295  014568  EFC4  F0A2         	goto	u7229
 23296  01456C                     u7228:
 23297  01456C  0005               	push	
 23298  01456E  6EFA               	movwf	pclath,c
 23299  014570  0009               	tblrd		*+
 23300  014572  50F5               	movf	tablat,w,c
 23301  014574  6EFD               	movwf	tosl,c
 23302  014576  0009               	tblrd		*+
 23303  014578  50F5               	movf	tablat,w,c
 23304  01457A  6EFE               	movwf	tosh,c
 23305  01457C  0009               	tblrd		*+
 23306  01457E  50F5               	movf	tablat,w,c
 23307  014580  6EFF               	movwf	tosu,c
 23308  014582  50FA               	movf	pclath,w,c
 23309  014584  0EFF               	movlw	255
 23310  014586  0012               	return		;indir
 23311  014588                     u7229:
 23312  014588  6E1E               	movwf	(SD_SendCmd@response+1)^0,c
 23313  01458A                     l907:
 23314                           
 23315                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 23316  01458A  0E8E               	movlw	low (_spiMaster+6)
 23317  01458C  6EF6               	movwf	tblptrl,c
 23318  01458E  0EFE               	movlw	high (_spiMaster+6)
 23319  014590  6EF7               	movwf	tblptrh,c
 23320  014592                     	if	0	;tblptru may be non-zero
 23321  014592                     	endif
 23322  014592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23323  014592  0E00               	movlw	low (__mediumconst shr (0+16))
 23324  014594  6EF8               	movwf	tblptru,c
 23325  014596                     	endif
 23326  014596  D802               	call	u7238
 23327  014598  EFDC  F0A2         	goto	u7239
 23328  01459C                     u7238:
 23329  01459C  0005               	push	
 23330  01459E  6EFA               	movwf	pclath,c
 23331  0145A0  0009               	tblrd		*+
 23332  0145A2  50F5               	movf	tablat,w,c
 23333  0145A4  6EFD               	movwf	tosl,c
 23334  0145A6  0009               	tblrd		*+
 23335  0145A8  50F5               	movf	tablat,w,c
 23336  0145AA  6EFE               	movwf	tosh,c
 23337  0145AC  0009               	tblrd		*+
 23338  0145AE  50F5               	movf	tablat,w,c
 23339  0145B0  6EFF               	movwf	tosu,c
 23340  0145B2  50FA               	movf	pclath,w,c
 23341  0145B4  0EFF               	movlw	255
 23342  0145B6  0012               	return		;indir
 23343  0145B8                     u7239:
 23344  0145B8                     
 23345                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 23346  0145B8  501C               	movf	SD_SendCmd@cmd^0,w,c
 23347  0145BA  0D04               	mullw	4
 23348  0145BC  0E03               	movlw	3
 23349  0145BE  26F3               	addwf	243,f,c
 23350  0145C0  0E00               	movlw	0
 23351  0145C2  22F4               	addwfc	244,f,c
 23352  0145C4  0E38               	movlw	low _sdmmc_cmdtable
 23353  0145C6  24F3               	addwf	243,w,c
 23354  0145C8  6EF6               	movwf	tblptrl,c
 23355  0145CA  0EFE               	movlw	high _sdmmc_cmdtable
 23356  0145CC  20F4               	addwfc	244,w,c
 23357  0145CE  6EF7               	movwf	tblptrh,c
 23358  0145D0                     	if	1	;There are 3 active tblptr bytes
 23359  0145D0  6AF8               	clrf	tblptru,c
 23360  0145D2  0E00               	movlw	low (__mediumconst shr (0+16))
 23361  0145D4  22F8               	addwfc	tblptru,f,c
 23362  0145D6                     	endif
 23363  0145D6  0008               	tblrd		*
 23364  0145D8  50F5               	movf	tablat,w,c
 23365  0145DA  0900               	iorlw	0
 23366  0145DC  A4D8               	btfss	status,2,c
 23367  0145DE  EFF3  F0A2         	goto	u7241
 23368  0145E2  EFF5  F0A2         	goto	u7240
 23369  0145E6                     u7241:
 23370  0145E6  EFF6  F0A2         	goto	l7203
 23371  0145EA                     u7240:
 23372  0145EA  8ABA               	bsf	186,5,c	;volatile
 23373  0145EC                     l7203:
 23374                           
 23375                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 23376  0145EC  EE20  F01D         	lfsr	2,SD_SendCmd@response
 23377  0145F0  EE00  F00C         	lfsr	0,?_SD_SendCmd
 23378  0145F4  0E04               	movlw	4
 23379  0145F6                     u7251:
 23380  0145F6  006F FF6F FFEB     	movff	plusw2,plusw0
 23381  0145FC  06E8               	decf	wreg,f,c
 23382  0145FE  E2FB               	bc	u7251
 23383  014600  0012               	return		;funcret
 23384  014602                     __end_of_SD_SendCmd:
 23385                           	callstack 0
 23386                           
 23387 ;; *************** function _memcpy *****************
 23388 ;; Defined at:
 23389 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcpy.c"
 23390 ;; Parameters:    Size  Location     Type
 23391 ;;  d1              2    0[COMRAM] PTR void 
 23392 ;;		 -> SD_SendCmd@address_bytes(4), 
 23393 ;;  s1              2    2[COMRAM] PTR const void 
 23394 ;;		 -> SD_SendCmd@address(4), 
 23395 ;;  n               2    4[COMRAM] unsigned int 
 23396 ;; Auto vars:     Size  Location     Type
 23397 ;;  s               2    8[COMRAM] PTR const unsigned char 
 23398 ;;		 -> SD_SendCmd@address(4), 
 23399 ;;  d               2    6[COMRAM] PTR unsigned char 
 23400 ;;		 -> SD_SendCmd@address_bytes(4), 
 23401 ;;  tmp             1   10[COMRAM] unsigned char 
 23402 ;; Return value:  Size  Location     Type
 23403 ;;                  2    0[COMRAM] PTR void 
 23404 ;; Registers used:
 23405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23406 ;; Tracked objects:
 23407 ;;		On entry : 0/0
 23408 ;;		On exit  : 0/0
 23409 ;;		Unchanged: 0/0
 23410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23412 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23414 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23415 ;;Total ram usage:       11 bytes
 23416 ;; Hardware stack levels used:    1
 23417 ;; This function calls:
 23418 ;;		Nothing
 23419 ;; This function is called by:
 23420 ;;		_SD_SendCmd
 23421 ;; This function uses a non-reentrant model
 23422 ;;
 23423                           
 23424                           	psect	text72
 23425  01A084                     __ptext72:
 23426                           	callstack 0
 23427  01A084                     _memcpy:
 23428                           	callstack 20
 23429  01A084  C003  F009         	movff	memcpy@s1,memcpy@s
 23430  01A088  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 23431  01A08C  C001  F007         	movff	memcpy@d1,memcpy@d
 23432  01A090  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 23433  01A094  EF61  F0D0         	goto	l7123
 23434  01A098                     l7115:
 23435  01A098  0060  F027  FFD9   	movff	memcpy@s,fsr2l
 23436  01A09E  0060  F02B  FFDA   	movff	memcpy@s+1,fsr2h
 23437  01A0A4  50DF               	movf	indf2,w,c
 23438  01A0A6  6E0B               	movwf	memcpy@tmp^0,c
 23439  01A0A8  4A09               	infsnz	memcpy@s^0,f,c
 23440  01A0AA  2A0A               	incf	(memcpy@s+1)^0,f,c
 23441  01A0AC  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
 23442  01A0B2  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
 23443  01A0B8  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
 23444  01A0BE  4A07               	infsnz	memcpy@d^0,f,c
 23445  01A0C0  2A08               	incf	(memcpy@d+1)^0,f,c
 23446  01A0C2                     l7123:
 23447  01A0C2  0605               	decf	memcpy@n^0,f,c
 23448  01A0C4  A0D8               	btfss	status,0,c
 23449  01A0C6  0606               	decf	(memcpy@n+1)^0,f,c
 23450  01A0C8  2805               	incf	memcpy@n^0,w,c
 23451  01A0CA  E106               	bnz	u6981
 23452  01A0CC  2806               	incf	(memcpy@n+1)^0,w,c
 23453  01A0CE  A4D8               	btfss	status,2,c
 23454  01A0D0  EF6C  F0D0         	goto	u6981
 23455  01A0D4  EF6E  F0D0         	goto	u6980
 23456  01A0D8                     u6981:
 23457  01A0D8  EF4C  F0D0         	goto	l7115
 23458  01A0DC                     u6980:
 23459  01A0DC  0012               	return		;funcret
 23460  01A0DE                     __end_of_memcpy:
 23461                           	callstack 0
 23462                           
 23463 ;; *************** function _SPI1_ExchangeByte *****************
 23464 ;; Defined at:
 23465 ;;		line 102 in file "mcc_generated_files/spi1.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;  data            1    wreg     unsigned char 
 23468 ;; Auto vars:     Size  Location     Type
 23469 ;;  data            1    0[COMRAM] unsigned char 
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  1    wreg      unsigned char 
 23472 ;; Registers used:
 23473 ;;		wreg, status,2
 23474 ;; Tracked objects:
 23475 ;;		On entry : 0/0
 23476 ;;		On exit  : 0/0
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;Total ram usage:        1 bytes
 23484 ;; Hardware stack levels used:    1
 23485 ;; This function calls:
 23486 ;;		Nothing
 23487 ;; This function is called by:
 23488 ;;		_SPI1_WriteBlock
 23489 ;;		_SPI1_ReadBlock
 23490 ;;		_SD_SendCmd
 23491 ;;		_SD_SPI_AsyncWriteTasks
 23492 ;;		_SD_SPI_AsyncReadTasks
 23493 ;;		_SD_SPI_DelayMilliseconds
 23494 ;;		_SD_SPI_MediaInitialize
 23495 ;; This function uses a non-reentrant model
 23496 ;;
 23497                           
 23498                           	psect	text73
 23499  01A652                     __ptext73:
 23500                           	callstack 0
 23501  01A652                     _SPI1_ExchangeByte:
 23502                           	callstack 21
 23503                           
 23504                           ;incstack = 0
 23505                           ;SPI1_ExchangeByte@data stored from wreg
 23506  01A652  6E01               	movwf	SPI1_ExchangeByte@data^0,c
 23507  01A654                     
 23508                           ;mcc_generated_files/spi1.c: 102: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 103: {;mcc_generated_files/spi1.c: 104:     SPI1TCNTL = 1;
 23509  01A654  0E01               	movlw	1
 23510  01A656  013D               	movlb	61	; () banked
 23511  01A658  6F12               	movwf	18,b	;volatile
 23512  01A65A                     
 23513                           ; BSR set to: 61
 23514                           ;mcc_generated_files/spi1.c: 105:     SPI1TXB = data;
 23515  01A65A  0060  F007  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 23516  01A660                     l1072:
 23517  01A660  0139               	movlb	57	; () banked
 23518  01A662  A9A2               	btfss	162,4,b	;volatile
 23519  01A664  EF36  F0D3         	goto	u6991
 23520  01A668  EF38  F0D3         	goto	u6990
 23521  01A66C                     u6991:
 23522  01A66C  EF30  F0D3         	goto	l1072
 23523  01A670                     u6990:
 23524  01A670                     
 23525                           ; BSR set to: 57
 23526                           ;mcc_generated_files/spi1.c: 107:     return SPI1RXB;
 23527  01A670  013D               	movlb	61	; () banked
 23528  01A672  5110               	movf	16,w,b	;volatile
 23529  01A674                     
 23530                           ; BSR set to: 61
 23531  01A674  0012               	return		;funcret
 23532  01A676                     __end_of_SPI1_ExchangeByte:
 23533                           	callstack 0
 23534                           
 23535 ;; *************** function _SDFAST_open *****************
 23536 ;; Defined at:
 23537 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 23538 ;; Parameters:    Size  Location     Type
 23539 ;;		None
 23540 ;; Auto vars:     Size  Location     Type
 23541 ;;		None
 23542 ;; Return value:  Size  Location     Type
 23543 ;;                  1    wreg      _Bool 
 23544 ;; Registers used:
 23545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23546 ;; Tracked objects:
 23547 ;;		On entry : 0/0
 23548 ;;		On exit  : 0/0
 23549 ;;		Unchanged: 0/0
 23550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23555 ;;Total ram usage:        0 bytes
 23556 ;; Hardware stack levels used:    1
 23557 ;; Hardware stack levels required when called:    1
 23558 ;; This function calls:
 23559 ;;		_SPI1_Open
 23560 ;; This function is called by:
 23561 ;;		_spi_master_open
 23562 ;;		_SD_SPI_SectorWrite
 23563 ;;		_SD_SPI_SectorRead
 23564 ;;		_SD_SPI_MediaInitialize
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text74
 23569  01A7B2                     __ptext74:
 23570                           	callstack 0
 23571  01A7B2                     _SDFAST_open:
 23572                           	callstack 21
 23573  01A7B2                     
 23574                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 23575  01A7B2  0E01               	movlw	1
 23576  01A7B4  ECB8  F0C2         	call	_SPI1_Open
 23577  01A7B8  0012               	return		;funcret
 23578  01A7BA                     __end_of_SDFAST_open:
 23579                           	callstack 0
 23580                           
 23581 ;; *************** function _SDSLOW_open *****************
 23582 ;; Defined at:
 23583 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 23584 ;; Parameters:    Size  Location     Type
 23585 ;;		None
 23586 ;; Auto vars:     Size  Location     Type
 23587 ;;		None
 23588 ;; Return value:  Size  Location     Type
 23589 ;;                  1    wreg      _Bool 
 23590 ;; Registers used:
 23591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23592 ;; Tracked objects:
 23593 ;;		On entry : 0/0
 23594 ;;		On exit  : 0/0
 23595 ;;		Unchanged: 0/0
 23596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;Total ram usage:        0 bytes
 23602 ;; Hardware stack levels used:    1
 23603 ;; Hardware stack levels required when called:    1
 23604 ;; This function calls:
 23605 ;;		_SPI1_Open
 23606 ;; This function is called by:
 23607 ;;		_spi_master_open
 23608 ;;		_SD_SPI_SectorWrite
 23609 ;;		_SD_SPI_SectorRead
 23610 ;;		_SD_SPI_MediaInitialize
 23611 ;; This function uses a non-reentrant model
 23612 ;;
 23613                           
 23614                           	psect	text75
 23615  01A7BA                     __ptext75:
 23616                           	callstack 0
 23617  01A7BA                     _SDSLOW_open:
 23618                           	callstack 21
 23619  01A7BA                     
 23620                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 23621  01A7BA  0E00               	movlw	0
 23622  01A7BC  ECB8  F0C2         	call	_SPI1_Open
 23623  01A7C0  0012               	return		;funcret
 23624  01A7C2                     __end_of_SDSLOW_open:
 23625                           	callstack 0
 23626                           
 23627 ;; *************** function _SPI1_Open *****************
 23628 ;; Defined at:
 23629 ;;		line 81 in file "mcc_generated_files/spi1.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;  spi1UniqueCo    1    wreg     enum E355
 23632 ;; Auto vars:     Size  Location     Type
 23633 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
 23634 ;; Return value:  Size  Location     Type
 23635 ;;                  1    wreg      _Bool 
 23636 ;; Registers used:
 23637 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23638 ;; Tracked objects:
 23639 ;;		On entry : 0/0
 23640 ;;		On exit  : 0/0
 23641 ;;		Unchanged: 0/0
 23642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23647 ;;Total ram usage:        2 bytes
 23648 ;; Hardware stack levels used:    1
 23649 ;; This function calls:
 23650 ;;		Nothing
 23651 ;; This function is called by:
 23652 ;;		_SDFAST_open
 23653 ;;		_SDSLOW_open
 23654 ;; This function uses a non-reentrant model
 23655 ;;
 23656                           
 23657                           	psect	text76
 23658  018570                     __ptext76:
 23659                           	callstack 0
 23660  018570                     _SPI1_Open:
 23661                           	callstack 21
 23662                           
 23663                           ;incstack = 0
 23664                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 23665  018570  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
 23666  018572                     
 23667                           ;mcc_generated_files/spi1.c: 81: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 82: {;mcc_generated_files/spi1.c: 83:     if(!SPI1CON0bits.EN
      +                          )
 23668  018572  013D               	movlb	61	; () banked
 23669  018574  BF14               	btfsc	20,7,b	;volatile
 23670  018576  EFBF  F0C2         	goto	u7001
 23671  01857A  EFC1  F0C2         	goto	u7000
 23672  01857E                     u7001:
 23673  01857E  EF2A  F0C3         	goto	l7145
 23674  018582                     u7000:
 23675  018582                     
 23676                           ; BSR set to: 61
 23677                           ;mcc_generated_files/spi1.c: 84:     {;mcc_generated_files/spi1.c: 85:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
 23678  018582  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 23679  018584  0D05               	mullw	5
 23680  018586  0EC4               	movlw	low _spi1_configuration
 23681  018588  24F3               	addwf	243,w,c
 23682  01858A  6EF6               	movwf	tblptrl,c
 23683  01858C  0EFE               	movlw	high _spi1_configuration
 23684  01858E  20F4               	addwfc	244,w,c
 23685  018590  6EF7               	movwf	tblptrh,c
 23686  018592                     	if	1	;There are 3 active tblptr bytes
 23687  018592  6AF8               	clrf	tblptru,c
 23688  018594  0E00               	movlw	low (__mediumconst shr (0+16))
 23689  018596  22F8               	addwfc	tblptru,f,c
 23690  018598                     	endif
 23691  018598  0008               	tblrd		*
 23692  01859A  006F FFD7 FD14     	movff	tablat,15636	;volatile
 23693                           
 23694                           ;mcc_generated_files/spi1.c: 86:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 23695  0185A0  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 23696  0185A2  0D05               	mullw	5
 23697  0185A4  0E01               	movlw	1
 23698  0185A6  26F3               	addwf	243,f,c
 23699  0185A8  0E00               	movlw	0
 23700  0185AA  22F4               	addwfc	244,f,c
 23701  0185AC  0EC4               	movlw	low _spi1_configuration
 23702  0185AE  24F3               	addwf	243,w,c
 23703  0185B0  6EF6               	movwf	tblptrl,c
 23704  0185B2  0EFE               	movlw	high _spi1_configuration
 23705  0185B4  20F4               	addwfc	244,w,c
 23706  0185B6  6EF7               	movwf	tblptrh,c
 23707  0185B8                     	if	1	;There are 3 active tblptr bytes
 23708  0185B8  6AF8               	clrf	tblptru,c
 23709  0185BA  0E00               	movlw	low (__mediumconst shr (0+16))
 23710  0185BC  22F8               	addwfc	tblptru,f,c
 23711  0185BE                     	endif
 23712  0185BE  0008               	tblrd		*
 23713  0185C0  006F FFD7 FD15     	movff	tablat,15637	;volatile
 23714                           
 23715                           ;mcc_generated_files/spi1.c: 87:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
 23716  0185C6  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 23717  0185C8  0D05               	mullw	5
 23718  0185CA  0E02               	movlw	2
 23719  0185CC  26F3               	addwf	243,f,c
 23720  0185CE  0E00               	movlw	0
 23721  0185D0  22F4               	addwfc	244,f,c
 23722  0185D2  0EC4               	movlw	low _spi1_configuration
 23723  0185D4  24F3               	addwf	243,w,c
 23724  0185D6  6EF6               	movwf	tblptrl,c
 23725  0185D8  0EFE               	movlw	high _spi1_configuration
 23726  0185DA  20F4               	addwfc	244,w,c
 23727  0185DC  6EF7               	movwf	tblptrh,c
 23728  0185DE                     	if	1	;There are 3 active tblptr bytes
 23729  0185DE  6AF8               	clrf	tblptru,c
 23730  0185E0  0E00               	movlw	low (__mediumconst shr (0+16))
 23731  0185E2  22F8               	addwfc	tblptru,f,c
 23732  0185E4                     	endif
 23733  0185E4  0008               	tblrd		*
 23734  0185E6  50F5               	movf	tablat,w,c
 23735  0185E8  0903               	iorlw	3
 23736  0185EA  6F16               	movwf	22,b	;volatile
 23737  0185EC                     
 23738                           ; BSR set to: 61
 23739                           ;mcc_generated_files/spi1.c: 88:         SPI1CLK = 0x00;
 23740  0185EC  0E00               	movlw	0
 23741  0185EE  6F1C               	movwf	28,b	;volatile
 23742  0185F0                     
 23743                           ; BSR set to: 61
 23744                           ;mcc_generated_files/spi1.c: 89:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
 23745  0185F0  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 23746  0185F2  0D05               	mullw	5
 23747  0185F4  0E03               	movlw	3
 23748  0185F6  26F3               	addwf	243,f,c
 23749  0185F8  0E00               	movlw	0
 23750  0185FA  22F4               	addwfc	244,f,c
 23751  0185FC  0EC4               	movlw	low _spi1_configuration
 23752  0185FE  24F3               	addwf	243,w,c
 23753  018600  6EF6               	movwf	tblptrl,c
 23754  018602  0EFE               	movlw	high _spi1_configuration
 23755  018604  20F4               	addwfc	244,w,c
 23756  018606  6EF7               	movwf	tblptrh,c
 23757  018608                     	if	1	;There are 3 active tblptr bytes
 23758  018608  6AF8               	clrf	tblptru,c
 23759  01860A  0E00               	movlw	low (__mediumconst shr (0+16))
 23760  01860C  22F8               	addwfc	tblptru,f,c
 23761  01860E                     	endif
 23762  01860E  0008               	tblrd		*
 23763  018610  006F FFD7 FD19     	movff	tablat,15641	;volatile
 23764  018616                     
 23765                           ; BSR set to: 61
 23766                           ;mcc_generated_files/spi1.c: 90:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 23767  018616  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 23768  018618  0D05               	mullw	5
 23769  01861A  0E04               	movlw	4
 23770  01861C  26F3               	addwf	243,f,c
 23771  01861E  0E00               	movlw	0
 23772  018620  22F4               	addwfc	244,f,c
 23773  018622  0EC4               	movlw	low _spi1_configuration
 23774  018624  24F3               	addwf	243,w,c
 23775  018626  6EF6               	movwf	tblptrl,c
 23776  018628  0EFE               	movlw	high _spi1_configuration
 23777  01862A  20F4               	addwfc	244,w,c
 23778  01862C  6EF7               	movwf	tblptrh,c
 23779  01862E                     	if	1	;There are 3 active tblptr bytes
 23780  01862E  6AF8               	clrf	tblptru,c
 23781  018630  0E00               	movlw	low (__mediumconst shr (0+16))
 23782  018632  22F8               	addwfc	tblptru,f,c
 23783  018634                     	endif
 23784  018634  0008               	tblrd		*
 23785  018636  006F FFD4  F001    	movff	tablat,??_SPI1_Open
 23786  01863C  4601               	rlncf	??_SPI1_Open^0,f,c
 23787  01863E  4601               	rlncf	??_SPI1_Open^0,f,c
 23788  018640  4601               	rlncf	??_SPI1_Open^0,f,c
 23789  018642  50C4               	movf	196,w,c	;volatile
 23790  018644  1801               	xorwf	??_SPI1_Open^0,w,c
 23791  018646  0BF7               	andlw	-9
 23792  018648  1801               	xorwf	??_SPI1_Open^0,w,c
 23793  01864A  6EC4               	movwf	196,c	;volatile
 23794  01864C                     
 23795                           ; BSR set to: 61
 23796                           ;mcc_generated_files/spi1.c: 91:         SPI1CON0bits.EN = 1;
 23797  01864C  8F14               	bsf	20,7,b	;volatile
 23798  01864E                     
 23799                           ; BSR set to: 61
 23800                           ;mcc_generated_files/spi1.c: 92:         return 1;
 23801  01864E  0E01               	movlw	1
 23802  018650  EF2B  F0C3         	goto	l1066
 23803  018654                     l7145:
 23804                           
 23805                           ; BSR set to: 61
 23806                           ;mcc_generated_files/spi1.c: 94:     return 0;
 23807  018654  0E00               	movlw	0
 23808  018656                     l1066:
 23809                           
 23810                           ; BSR set to: 61
 23811  018656  0012               	return		;funcret
 23812  018658                     __end_of_SPI1_Open:
 23813                           	callstack 0
 23814                           
 23815 ;; *************** function _mem_cmp *****************
 23816 ;; Defined at:
 23817 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 23818 ;; Parameters:    Size  Location     Type
 23819 ;;  dst             2    0[COMRAM] PTR const void 
 23820 ;;		 -> drive.win(512), drive(563), NULL(0), 
 23821 ;;  src             2    2[COMRAM] PTR const void 
 23822 ;;		 -> dj.fn(12), f_chdir@dj(40), dj.fn(12), f_open@dj(40), 
 23823 ;;		 -> STR_6(6), STR_4(4), 
 23824 ;;  cnt             2    4[COMRAM] unsigned int 
 23825 ;; Auto vars:     Size  Location     Type
 23826 ;;  r               2   12[COMRAM] int 
 23827 ;;  s               2   10[COMRAM] PTR const unsigned char 
 23828 ;;		 -> dj.fn(12), f_chdir@dj(40), dj.fn(12), f_open@dj(40), 
 23829 ;;		 -> STR_6(6), STR_4(4), 
 23830 ;;  d               2    8[COMRAM] PTR const unsigned char 
 23831 ;;		 -> drive.win(512), drive(563), NULL(0), 
 23832 ;; Return value:  Size  Location     Type
 23833 ;;                  2    0[COMRAM] int 
 23834 ;; Registers used:
 23835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23836 ;; Tracked objects:
 23837 ;;		On entry : 0/0
 23838 ;;		On exit  : 0/0
 23839 ;;		Unchanged: 0/0
 23840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23842 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23844 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23845 ;;Total ram usage:       14 bytes
 23846 ;; Hardware stack levels used:    1
 23847 ;; This function calls:
 23848 ;;		Nothing
 23849 ;; This function is called by:
 23850 ;;		_dir_find
 23851 ;;		_check_fs
 23852 ;; This function uses a non-reentrant model
 23853 ;;
 23854                           
 23855                           	psect	text77
 23856  019532                     __ptext77:
 23857                           	callstack 0
 23858  019532                     _mem_cmp:
 23859                           	callstack 25
 23860  019532                     
 23861                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 23862  019532  C001  F009         	movff	mem_cmp@dst,mem_cmp@d
 23863  019536  C002  F00A         	movff	mem_cmp@dst+1,mem_cmp@d+1
 23864  01953A  C003  F00B         	movff	mem_cmp@src,mem_cmp@s
 23865  01953E  C004  F00C         	movff	mem_cmp@src+1,mem_cmp@s+1
 23866  019542                     l8109:
 23867                           
 23868                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 23869  019542  0060  F027  FFD9   	movff	mem_cmp@d,fsr2l
 23870  019548  0060  F02B  FFDA   	movff	mem_cmp@d+1,fsr2h
 23871  01954E  50DF               	movf	indf2,w,c
 23872  019550  6E07               	movwf	??_mem_cmp^0,c
 23873  019552  0060  F02F  FFF6   	movff	mem_cmp@s,tblptrl
 23874  019558  0060  F033  FFF7   	movff	mem_cmp@s+1,tblptrh
 23875  01955E  0E00               	movlw	low (__mediumconst shr (0+16))
 23876  019560  6EF8               	movwf	tblptru,c
 23877  019562  0E1F               	movlw	(high __ramtop+-1)
 23878  019564  64F7               	cpfsgt	tblptrh,c
 23879  019566  D003               	bra	u8707
 23880  019568  0008               	tblrd		*
 23881  01956A  50F5               	movf	tablat,w,c
 23882  01956C  D007               	bra	u8700
 23883  01956E                     u8707:
 23884  01956E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23885  019574  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23886  01957A  50EF               	movf	indf0,w,c
 23887  01957C                     u8700:
 23888  01957C  6E08               	movwf	(??_mem_cmp+1)^0,c
 23889  01957E  5008               	movf	(??_mem_cmp+1)^0,w,c
 23890  019580  5C07               	subwf	??_mem_cmp^0,w,c
 23891  019582  6E0D               	movwf	mem_cmp@r^0,c
 23892  019584  6A0E               	clrf	(mem_cmp@r+1)^0,c
 23893  019586  A0D8               	btfss	status,0,c
 23894  019588  060E               	decf	(mem_cmp@r+1)^0,f,c
 23895  01958A  4A0B               	infsnz	mem_cmp@s^0,f,c
 23896  01958C  2A0C               	incf	(mem_cmp@s+1)^0,f,c
 23897  01958E  4A09               	infsnz	mem_cmp@d^0,f,c
 23898  019590  2A0A               	incf	(mem_cmp@d+1)^0,f,c
 23899  019592                     
 23900                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 23901  019592  0605               	decf	mem_cmp@cnt^0,f,c
 23902  019594  A0D8               	btfss	status,0,c
 23903  019596  0606               	decf	(mem_cmp@cnt+1)^0,f,c
 23904  019598  5005               	movf	mem_cmp@cnt^0,w,c
 23905  01959A  1006               	iorwf	(mem_cmp@cnt+1)^0,w,c
 23906  01959C  B4D8               	btfsc	status,2,c
 23907  01959E  EFD3  F0CA         	goto	u8711
 23908  0195A2  EFD5  F0CA         	goto	u8710
 23909  0195A6                     u8711:
 23910  0195A6  EFDE  F0CA         	goto	l83
 23911  0195AA                     u8710:
 23912  0195AA  500D               	movf	mem_cmp@r^0,w,c
 23913  0195AC  100E               	iorwf	(mem_cmp@r+1)^0,w,c
 23914  0195AE  B4D8               	btfsc	status,2,c
 23915  0195B0  EFDC  F0CA         	goto	u8721
 23916  0195B4  EFDE  F0CA         	goto	u8720
 23917  0195B8                     u8721:
 23918  0195B8  EFA1  F0CA         	goto	l8109
 23919  0195BC                     u8720:
 23920  0195BC                     l83:
 23921                           
 23922                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 23923  0195BC  C00D  F001         	movff	mem_cmp@r,?_mem_cmp
 23924  0195C0  C00E  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
 23925  0195C4  0012               	return		;funcret
 23926  0195C6                     __end_of_mem_cmp:
 23927                           	callstack 0
 23928                           
 23929 ;; *************** function _ld_word *****************
 23930 ;; Defined at:
 23931 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 23932 ;; Parameters:    Size  Location     Type
 23933 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 23934 ;;		 -> drive.win(512), drive(563), NULL(0), 
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;  rv              2    5[COMRAM] unsigned short 
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  2    0[COMRAM] unsigned short 
 23939 ;; Registers used:
 23940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23948 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23949 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23950 ;;Total ram usage:        7 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; This function calls:
 23953 ;;		Nothing
 23954 ;; This function is called by:
 23955 ;;		_get_fat
 23956 ;;		_ld_clust
 23957 ;;		_check_fs
 23958 ;;		_find_volume
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           	psect	text78
 23963  01A4BE                     __ptext78:
 23964                           	callstack 0
 23965  01A4BE                     _ld_word:
 23966                           	callstack 26
 23967  01A4BE                     
 23968                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 23969  01A4BE  EE20 F001          	lfsr	2,1
 23970  01A4C2  5001               	movf	ld_word@ptr^0,w,c
 23971  01A4C4  26D9               	addwf	fsr2l,f,c
 23972  01A4C6  5002               	movf	(ld_word@ptr+1)^0,w,c
 23973  01A4C8  22DA               	addwfc	fsr2h,f,c
 23974  01A4CA  50DF               	movf	indf2,w,c
 23975  01A4CC  6E03               	movwf	??_ld_word^0,c
 23976  01A4CE  5003               	movf	??_ld_word^0,w,c
 23977  01A4D0  6E06               	movwf	ld_word@rv^0,c
 23978  01A4D2  6A07               	clrf	(ld_word@rv+1)^0,c
 23979                           
 23980                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 23981  01A4D4  0060  F007  FFD9   	movff	ld_word@ptr,fsr2l
 23982  01A4DA  0060  F00B  FFDA   	movff	ld_word@ptr+1,fsr2h
 23983  01A4E0  50DF               	movf	indf2,w,c
 23984  01A4E2  6E03               	movwf	??_ld_word^0,c
 23985  01A4E4  5006               	movf	ld_word@rv^0,w,c
 23986  01A4E6  6E04               	movwf	(??_ld_word+1)^0,c
 23987  01A4E8  5003               	movf	??_ld_word^0,w,c
 23988  01A4EA  6E06               	movwf	ld_word@rv^0,c
 23989  01A4EC  C004  F007         	movff	??_ld_word+1,ld_word@rv+1
 23990  01A4F0                     
 23991                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 23992  01A4F0  C006  F001         	movff	ld_word@rv,?_ld_word
 23993  01A4F4  C007  F002         	movff	ld_word@rv+1,?_ld_word+1
 23994  01A4F8  0012               	return		;funcret
 23995  01A4FA                     __end_of_ld_word:
 23996                           	callstack 0
 23997                           
 23998 ;; *************** function ___lldiv *****************
 23999 ;; Defined at:
 24000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
 24001 ;; Parameters:    Size  Location     Type
 24002 ;;  dividend        4    0[COMRAM] unsigned long 
 24003 ;;  divisor         4    4[COMRAM] unsigned long 
 24004 ;; Auto vars:     Size  Location     Type
 24005 ;;  quotient        4    8[COMRAM] unsigned long 
 24006 ;;  counter         1   12[COMRAM] unsigned char 
 24007 ;; Return value:  Size  Location     Type
 24008 ;;                  4    0[COMRAM] unsigned long 
 24009 ;; Registers used:
 24010 ;;		wreg, status,2, status,0
 24011 ;; Tracked objects:
 24012 ;;		On entry : 0/0
 24013 ;;		On exit  : 0/0
 24014 ;;		Unchanged: 0/0
 24015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24016 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24017 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24019 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24020 ;;Total ram usage:       13 bytes
 24021 ;; Hardware stack levels used:    1
 24022 ;; This function calls:
 24023 ;;		Nothing
 24024 ;; This function is called by:
 24025 ;;		_find_volume
 24026 ;; This function uses a non-reentrant model
 24027 ;;
 24028                           
 24029                           	psect	text79
 24030  0193F8                     __ptext79:
 24031                           	callstack 0
 24032  0193F8                     ___lldiv:
 24033                           	callstack 26
 24034  0193F8  0E00               	movlw	0
 24035  0193FA  6E09               	movwf	___lldiv@quotient^0,c
 24036  0193FC  0E00               	movlw	0
 24037  0193FE  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 24038  019400  0E00               	movlw	0
 24039  019402  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 24040  019404  0E00               	movlw	0
 24041  019406  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 24042  019408  5005               	movf	___lldiv@divisor^0,w,c
 24043  01940A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 24044  01940C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 24045  01940E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 24046  019410  B4D8               	btfsc	status,2,c
 24047  019412  EF0D  F0CA         	goto	u10191
 24048  019416  EF0F  F0CA         	goto	u10190
 24049  01941A                     u10191:
 24050  01941A  EF45  F0CA         	goto	l1527
 24051  01941E                     u10190:
 24052  01941E  0E01               	movlw	1
 24053  019420  6E0D               	movwf	___lldiv@counter^0,c
 24054  019422  EF19  F0CA         	goto	l8931
 24055  019426                     l8929:
 24056  019426  90D8               	bcf	status,0,c
 24057  019428  3605               	rlcf	___lldiv@divisor^0,f,c
 24058  01942A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 24059  01942C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 24060  01942E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 24061  019430  2A0D               	incf	___lldiv@counter^0,f,c
 24062  019432                     l8931:
 24063  019432  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 24064  019434  EF1E  F0CA         	goto	u10201
 24065  019438  EF20  F0CA         	goto	u10200
 24066  01943C                     u10201:
 24067  01943C  EF13  F0CA         	goto	l8929
 24068  019440                     u10200:
 24069  019440                     l8933:
 24070  019440  90D8               	bcf	status,0,c
 24071  019442  3609               	rlcf	___lldiv@quotient^0,f,c
 24072  019444  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 24073  019446  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 24074  019448  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 24075  01944A  5005               	movf	___lldiv@divisor^0,w,c
 24076  01944C  5C01               	subwf	___lldiv@dividend^0,w,c
 24077  01944E  5006               	movf	(___lldiv@divisor+1)^0,w,c
 24078  019450  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 24079  019452  5007               	movf	(___lldiv@divisor+2)^0,w,c
 24080  019454  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 24081  019456  5008               	movf	(___lldiv@divisor+3)^0,w,c
 24082  019458  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 24083  01945A  A0D8               	btfss	status,0,c
 24084  01945C  EF32  F0CA         	goto	u10211
 24085  019460  EF34  F0CA         	goto	u10210
 24086  019464                     u10211:
 24087  019464  EF3D  F0CA         	goto	l8941
 24088  019468                     u10210:
 24089  019468  5005               	movf	___lldiv@divisor^0,w,c
 24090  01946A  5E01               	subwf	___lldiv@dividend^0,f,c
 24091  01946C  5006               	movf	(___lldiv@divisor+1)^0,w,c
 24092  01946E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 24093  019470  5007               	movf	(___lldiv@divisor+2)^0,w,c
 24094  019472  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 24095  019474  5008               	movf	(___lldiv@divisor+3)^0,w,c
 24096  019476  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 24097  019478  8009               	bsf	___lldiv@quotient^0,0,c
 24098  01947A                     l8941:
 24099  01947A  90D8               	bcf	status,0,c
 24100  01947C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 24101  01947E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 24102  019480  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 24103  019482  3205               	rrcf	___lldiv@divisor^0,f,c
 24104  019484  2E0D               	decfsz	___lldiv@counter^0,f,c
 24105  019486  EF20  F0CA         	goto	l8933
 24106  01948A                     l1527:
 24107  01948A  C009  F001         	movff	___lldiv@quotient,?___lldiv
 24108  01948E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 24109  019492  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 24110  019496  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 24111  01949A  0012               	return		;funcret
 24112  01949C                     __end_of___lldiv:
 24113                           	callstack 0
 24114                           
 24115 ;; *************** function _Error_Check *****************
 24116 ;; Defined at:
 24117 ;;		line 108 in file "main.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;		None
 24120 ;; Auto vars:     Size  Location     Type
 24121 ;;  messageInt      2   27[COMRAM] int 
 24122 ;; Return value:  Size  Location     Type
 24123 ;;                  1    wreg      void 
 24124 ;; Registers used:
 24125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24126 ;; Tracked objects:
 24127 ;;		On entry : 0/0
 24128 ;;		On exit  : 0/0
 24129 ;;		Unchanged: 0/0
 24130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24133 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24134 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24135 ;;Total ram usage:        7 bytes
 24136 ;; Hardware stack levels used:    1
 24137 ;; Hardware stack levels required when called:    2
 24138 ;; This function calls:
 24139 ;;		_Display_Character
 24140 ;;		_atoi
 24141 ;; This function is called by:
 24142 ;;		_UART_Message
 24143 ;; This function uses a non-reentrant model
 24144 ;;
 24145                           
 24146                           	psect	text80
 24147  018ECC                     __ptext80:
 24148                           	callstack 0
 24149  018ECC                     _Error_Check:
 24150                           	callstack 22
 24151  018ECC                     
 24152                           ;main.c: 109:     if (errorCheck == 1) {
 24153  018ECC  0101               	movlb	1	; () banked
 24154  018ECE  052B               	decf	_errorCheck& (0+255),w,b
 24155  018ED0  112C               	iorwf	(_errorCheck+1)& (0+255),w,b
 24156  018ED2  A4D8               	btfss	status,2,c
 24157  018ED4  EF6E  F0C7         	goto	u12331
 24158  018ED8  EF70  F0C7         	goto	u12330
 24159  018EDC                     u12331:
 24160  018EDC  EFCB  F0C7         	goto	l1286
 24161  018EE0                     u12330:
 24162  018EE0                     
 24163                           ; BSR set to: 1
 24164                           ;main.c: 110:         int messageInt = atoi(messageStr);
 24165  018EE0  0E5F               	movlw	low _messageStr
 24166  018EE2  6E08               	movwf	atoi@s^0,c
 24167  018EE4  0E01               	movlw	high _messageStr
 24168  018EE6  6E09               	movwf	(atoi@s+1)^0,c
 24169  018EE8  ECE1  F0B7         	call	_atoi	;wreg free
 24170  018EEC  C008  F01C         	movff	?_atoi,Error_Check@messageInt
 24171  018EF0  C009  F01D         	movff	?_atoi+1,Error_Check@messageInt+1
 24172  018EF4                     
 24173                           ;main.c: 111:         if ((messageInt > errorMax || messageInt < errorMin) && messageInt
      +                           > 0) {
 24174  018EF4  C01C  F017         	movff	Error_Check@messageInt,??_Error_Check
 24175  018EF8  C01D  F018         	movff	Error_Check@messageInt+1,??_Error_Check+1
 24176  018EFC  0E00               	movlw	0
 24177  018EFE  BE18               	btfsc	(??_Error_Check+1)^0,7,c
 24178  018F00  0EFF               	movlw	255
 24179  018F02  6E19               	movwf	(??_Error_Check+2)^0,c
 24180  018F04  6E1A               	movwf	(??_Error_Check+3)^0,c
 24181  018F06  5017               	movf	??_Error_Check^0,w,c
 24182  018F08  0101               	movlb	1	; () banked
 24183  018F0A  5D11               	subwf	_errorMax& (0+255),w,b
 24184  018F0C  5018               	movf	(??_Error_Check+1)^0,w,c
 24185  018F0E  5912               	subwfb	(_errorMax+1)& (0+255),w,b
 24186  018F10  5019               	movf	(??_Error_Check+2)^0,w,c
 24187  018F12  5913               	subwfb	(_errorMax+2)& (0+255),w,b
 24188  018F14  5114               	movf	(_errorMax+3)& (0+255),w,b
 24189  018F16  0A80               	xorlw	128
 24190  018F18  6E1B               	movwf	(??_Error_Check+4)^0,c
 24191  018F1A  501A               	movf	(??_Error_Check+3)^0,w,c
 24192  018F1C  0A80               	xorlw	128
 24193  018F1E  581B               	subwfb	(??_Error_Check+4)^0,w,c
 24194  018F20  A0D8               	btfss	status,0,c
 24195  018F22  EF95  F0C7         	goto	u12341
 24196  018F26  EF97  F0C7         	goto	u12340
 24197  018F2A                     u12341:
 24198  018F2A  EFAD  F0C7         	goto	l10157
 24199  018F2E                     u12340:
 24200  018F2E                     
 24201                           ; BSR set to: 1
 24202  018F2E  0E00               	movlw	0
 24203  018F30  BE1D               	btfsc	(Error_Check@messageInt+1)^0,7,c
 24204  018F32  0EFF               	movlw	255
 24205  018F34  6E18               	movwf	(??_Error_Check+1)^0,c
 24206  018F36  0A80               	xorlw	128
 24207  018F38  6E17               	movwf	??_Error_Check^0,c
 24208  018F3A  510D               	movf	_errorMin& (0+255),w,b
 24209  018F3C  5C1C               	subwf	Error_Check@messageInt^0,w,c
 24210  018F3E  510E               	movf	(_errorMin+1)& (0+255),w,b
 24211  018F40  581D               	subwfb	(Error_Check@messageInt+1)^0,w,c
 24212  018F42  510F               	movf	(_errorMin+2)& (0+255),w,b
 24213  018F44  5818               	subwfb	(??_Error_Check+1)^0,w,c
 24214  018F46  5110               	movf	(_errorMin+3)& (0+255),w,b
 24215  018F48  0A80               	xorlw	128
 24216  018F4A  5817               	subwfb	??_Error_Check^0,w,c
 24217  018F4C  B0D8               	btfsc	status,0,c
 24218  018F4E  EFAB  F0C7         	goto	u12351
 24219  018F52  EFAD  F0C7         	goto	u12350
 24220  018F56                     u12351:
 24221  018F56  EFC8  F0C7         	goto	l10163
 24222  018F5A                     u12350:
 24223  018F5A                     l10157:
 24224                           
 24225                           ; BSR set to: 1
 24226  018F5A  BE1D               	btfsc	(Error_Check@messageInt+1)^0,7,c
 24227  018F5C  EFB8  F0C7         	goto	u12361
 24228  018F60  501D               	movf	(Error_Check@messageInt+1)^0,w,c
 24229  018F62  E108               	bnz	u12360
 24230  018F64  041C               	decf	Error_Check@messageInt^0,w,c
 24231  018F66  A0D8               	btfss	status,0,c
 24232  018F68  EFB8  F0C7         	goto	u12361
 24233  018F6C  EFBA  F0C7         	goto	u12360
 24234  018F70                     u12361:
 24235  018F70  EFC8  F0C7         	goto	l10163
 24236  018F74                     u12360:
 24237  018F74                     
 24238                           ; BSR set to: 1
 24239                           ;main.c: 112:             Display_Character('!');
 24240  018F74  0E21               	movlw	33
 24241  018F76  ECAD  F0CE         	call	_Display_Character
 24242  018F7A                     
 24243                           ;main.c: 113:             messageStr[length + 1] = '!';
 24244  018F7A  0E60               	movlw	low (_messageStr+1)
 24245  018F7C  0101               	movlb	1	; () banked
 24246  018F7E  2515               	addwf	_length& (0+255),w,b
 24247  018F80  6ED9               	movwf	fsr2l,c
 24248  018F82  0E01               	movlw	high (_messageStr+1)
 24249  018F84  2116               	addwfc	(_length+1)& (0+255),w,b
 24250  018F86  6EDA               	movwf	fsr2h,c
 24251  018F88  0E21               	movlw	33
 24252  018F8A  6EDF               	movwf	indf2,c
 24253                           
 24254                           ;main.c: 114:         } else {
 24255  018F8C  EFCB  F0C7         	goto	l1286
 24256  018F90                     l10163:
 24257                           
 24258                           ; BSR set to: 1
 24259                           ;main.c: 115:             Display_Character(' ');
 24260  018F90  0E20               	movlw	32
 24261  018F92  ECAD  F0CE         	call	_Display_Character
 24262  018F96                     l1286:
 24263  018F96  0012               	return		;funcret
 24264  018F98                     __end_of_Error_Check:
 24265                           	callstack 0
 24266                           
 24267 ;; *************** function _atoi *****************
 24268 ;; Defined at:
 24269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
 24270 ;; Parameters:    Size  Location     Type
 24271 ;;  s               2    7[COMRAM] PTR const unsigned char 
 24272 ;;		 -> messageStr(12), 
 24273 ;; Auto vars:     Size  Location     Type
 24274 ;;  n               2   20[COMRAM] int 
 24275 ;;  neg             2   13[COMRAM] int 
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  2    7[COMRAM] int 
 24278 ;; Registers used:
 24279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24280 ;; Tracked objects:
 24281 ;;		On entry : 0/0
 24282 ;;		On exit  : 0/0
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24286 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24288 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;Total ram usage:       15 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; Hardware stack levels required when called:    1
 24292 ;; This function calls:
 24293 ;;		___wmul
 24294 ;;		_isdigit
 24295 ;;		_isspace
 24296 ;; This function is called by:
 24297 ;;		_Error_Check
 24298 ;; This function uses a non-reentrant model
 24299 ;;
 24300                           
 24301                           	psect	text81
 24302  016FC2                     __ptext81:
 24303                           	callstack 0
 24304  016FC2                     _atoi:
 24305                           	callstack 22
 24306  016FC2  0E00               	movlw	0
 24307  016FC4  6E16               	movwf	(atoi@n+1)^0,c
 24308  016FC6  0E00               	movlw	0
 24309  016FC8  6E15               	movwf	atoi@n^0,c
 24310  016FCA  0E00               	movlw	0
 24311  016FCC  6E0F               	movwf	(atoi@neg+1)^0,c
 24312  016FCE  0E00               	movlw	0
 24313  016FD0  6E0E               	movwf	atoi@neg^0,c
 24314  016FD2  EFED  F0B7         	goto	l10023
 24315  016FD6                     l10021:
 24316  016FD6  4A08               	infsnz	atoi@s^0,f,c
 24317  016FD8  2A09               	incf	(atoi@s+1)^0,f,c
 24318  016FDA                     l10023:
 24319  016FDA  0E01               	movlw	1
 24320  016FDC  6E14               	movwf	_atoi$3403^0,c
 24321  016FDE  0060  F023  FFD9   	movff	atoi@s,fsr2l
 24322  016FE4  0060  F027  FFDA   	movff	atoi@s+1,fsr2h
 24323  016FEA  0E20               	movlw	32
 24324  016FEC  18DE               	xorwf	postinc2,w,c
 24325  016FEE  B4D8               	btfsc	status,2,c
 24326  016FF0  EFFC  F0B7         	goto	u12171
 24327  016FF4  EFFE  F0B7         	goto	u12170
 24328  016FF8                     u12171:
 24329  016FF8  EF1C  F0B8         	goto	l10031
 24330  016FFC                     u12170:
 24331  016FFC  0EF7               	movlw	247
 24332  016FFE  6E0A               	movwf	??_atoi^0,c
 24333  017000  0EFF               	movlw	255
 24334  017002  6E0B               	movwf	(??_atoi+1)^0,c
 24335  017004  0060  F023  FFD9   	movff	atoi@s,fsr2l
 24336  01700A  0060  F027  FFDA   	movff	atoi@s+1,fsr2h
 24337  017010  50DF               	movf	indf2,w,c
 24338  017012  6E0C               	movwf	(??_atoi+2)^0,c
 24339  017014  6A0D               	clrf	(??_atoi+3)^0,c
 24340  017016  500A               	movf	??_atoi^0,w,c
 24341  017018  260C               	addwf	(??_atoi+2)^0,f,c
 24342  01701A  500B               	movf	(??_atoi+1)^0,w,c
 24343  01701C  220D               	addwfc	(??_atoi+3)^0,f,c
 24344  01701E  500D               	movf	(??_atoi+3)^0,w,c
 24345  017020  E109               	bnz	u12180
 24346  017022  0E05               	movlw	5
 24347  017024  5C0C               	subwf	(??_atoi+2)^0,w,c
 24348  017026  A0D8               	btfss	status,0,c
 24349  017028  EF18  F0B8         	goto	u12181
 24350  01702C  EF1A  F0B8         	goto	u12180
 24351  017030                     u12181:
 24352  017030  EF1C  F0B8         	goto	l10031
 24353  017034                     u12180:
 24354  017034  0E00               	movlw	0
 24355  017036  6E14               	movwf	_atoi$3403^0,c
 24356  017038                     l10031:
 24357  017038  C014  F010         	movff	_atoi$3403,_atoi$3402
 24358  01703C  6A11               	clrf	(_atoi$3402+1)^0,c
 24359  01703E  5010               	movf	_atoi$3402^0,w,c
 24360  017040  1011               	iorwf	(_atoi$3402+1)^0,w,c
 24361  017042  A4D8               	btfss	status,2,c
 24362  017044  EF26  F0B8         	goto	u12191
 24363  017048  EF28  F0B8         	goto	u12190
 24364  01704C                     u12191:
 24365  01704C  EFEB  F0B7         	goto	l10021
 24366  017050                     u12190:
 24367  017050  EF32  F0B8         	goto	l10041
 24368  017054                     l10037:
 24369  017054  0E00               	movlw	0
 24370  017056  6E0F               	movwf	(atoi@neg+1)^0,c
 24371  017058  0E01               	movlw	1
 24372  01705A  6E0E               	movwf	atoi@neg^0,c
 24373  01705C                     l10039:
 24374  01705C  4A08               	infsnz	atoi@s^0,f,c
 24375  01705E  2A09               	incf	(atoi@s+1)^0,f,c
 24376  017060  EF6B  F0B8         	goto	l10047
 24377  017064                     l10041:
 24378  017064  0060  F023  FFD9   	movff	atoi@s,fsr2l
 24379  01706A  0060  F027  FFDA   	movff	atoi@s+1,fsr2h
 24380  017070  50DF               	movf	indf2,w,c
 24381  017072  6E0A               	movwf	??_atoi^0,c
 24382  017074  6A0B               	clrf	(??_atoi+1)^0,c
 24383                           
 24384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24385                           ; Switch size 1, requested type "simple"
 24386                           ; Number of cases is 1, Range of values is 0 to 0
 24387                           ; switch strategies available:
 24388                           ; Name         Instructions Cycles
 24389                           ; simple_byte            4     3 (average)
 24390                           ;	Chosen strategy is simple_byte
 24391  017076  500B               	movf	(??_atoi+1)^0,w,c
 24392  017078  0A00               	xorlw	0	; case 0
 24393  01707A  B4D8               	btfsc	status,2,c
 24394  01707C  EF42  F0B8         	goto	l11877
 24395  017080  EF6B  F0B8         	goto	l10047
 24396  017084                     l11877:
 24397                           
 24398                           ; Switch size 1, requested type "simple"
 24399                           ; Number of cases is 2, Range of values is 43 to 45
 24400                           ; switch strategies available:
 24401                           ; Name         Instructions Cycles
 24402                           ; simple_byte            7     4 (average)
 24403                           ;	Chosen strategy is simple_byte
 24404  017084  500A               	movf	??_atoi^0,w,c
 24405  017086  0A2B               	xorlw	43	; case 43
 24406  017088  B4D8               	btfsc	status,2,c
 24407  01708A  EF2E  F0B8         	goto	l10039
 24408  01708E  0A06               	xorlw	6	; case 45
 24409  017090  B4D8               	btfsc	status,2,c
 24410  017092  EF2A  F0B8         	goto	l10037
 24411  017096  EF6B  F0B8         	goto	l10047
 24412  01709A                     l10043:
 24413  01709A  C015  F001         	movff	atoi@n,___wmul@multiplier
 24414  01709E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 24415  0170A2  0E00               	movlw	0
 24416  0170A4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 24417  0170A6  0E0A               	movlw	10
 24418  0170A8  6E03               	movwf	___wmul@multiplicand^0,c
 24419  0170AA  EC01  F0D3         	call	___wmul	;wreg free
 24420  0170AE  0060  F023  FFD9   	movff	atoi@s,fsr2l
 24421  0170B4  0060  F027  FFDA   	movff	atoi@s+1,fsr2h
 24422  0170BA  50DF               	movf	indf2,w,c
 24423  0170BC  6E0A               	movwf	??_atoi^0,c
 24424  0170BE  500A               	movf	??_atoi^0,w,c
 24425  0170C0  5E01               	subwf	?___wmul^0,f,c
 24426  0170C2  0E00               	movlw	0
 24427  0170C4  5A02               	subwfb	(?___wmul+1)^0,f,c
 24428  0170C6  0E30               	movlw	48
 24429  0170C8  2401               	addwf	?___wmul^0,w,c
 24430  0170CA  6E15               	movwf	atoi@n^0,c
 24431  0170CC  0E00               	movlw	0
 24432  0170CE  2002               	addwfc	(?___wmul+1)^0,w,c
 24433  0170D0  6E16               	movwf	(atoi@n+1)^0,c
 24434  0170D2  EF2E  F0B8         	goto	l10039
 24435  0170D6                     l10047:
 24436  0170D6  0ED0               	movlw	208
 24437  0170D8  6E0A               	movwf	??_atoi^0,c
 24438  0170DA  0EFF               	movlw	255
 24439  0170DC  6E0B               	movwf	(??_atoi+1)^0,c
 24440  0170DE  0060  F023  FFD9   	movff	atoi@s,fsr2l
 24441  0170E4  0060  F027  FFDA   	movff	atoi@s+1,fsr2h
 24442  0170EA  50DF               	movf	indf2,w,c
 24443  0170EC  6E0C               	movwf	(??_atoi+2)^0,c
 24444  0170EE  6A0D               	clrf	(??_atoi+3)^0,c
 24445  0170F0  500A               	movf	??_atoi^0,w,c
 24446  0170F2  260C               	addwf	(??_atoi+2)^0,f,c
 24447  0170F4  500B               	movf	(??_atoi+1)^0,w,c
 24448  0170F6  220D               	addwfc	(??_atoi+3)^0,f,c
 24449  0170F8  500D               	movf	(??_atoi+3)^0,w,c
 24450  0170FA  E10A               	bnz	u12200
 24451  0170FC  0E0A               	movlw	10
 24452  0170FE  5C0C               	subwf	(??_atoi+2)^0,w,c
 24453  017100  A0D8               	btfss	status,0,c
 24454  017102  EF85  F0B8         	goto	u12201
 24455  017106  EF88  F0B8         	goto	u12200
 24456  01710A                     u12201:
 24457  01710A  0E01               	movlw	1
 24458  01710C  EF89  F0B8         	goto	u12210
 24459  017110                     u12200:
 24460  017110  0E00               	movlw	0
 24461  017112                     u12210:
 24462  017112  6E12               	movwf	_atoi$3404^0,c
 24463  017114  6A13               	clrf	(_atoi$3404+1)^0,c
 24464  017116  5012               	movf	_atoi$3404^0,w,c
 24465  017118  1013               	iorwf	(_atoi$3404+1)^0,w,c
 24466  01711A  A4D8               	btfss	status,2,c
 24467  01711C  EF92  F0B8         	goto	u12221
 24468  017120  EF94  F0B8         	goto	u12220
 24469  017124                     u12221:
 24470  017124  EF4D  F0B8         	goto	l10043
 24471  017128                     u12220:
 24472  017128  500E               	movf	atoi@neg^0,w,c
 24473  01712A  100F               	iorwf	(atoi@neg+1)^0,w,c
 24474  01712C  A4D8               	btfss	status,2,c
 24475  01712E  EF9B  F0B8         	goto	u12231
 24476  017132  EF9D  F0B8         	goto	u12230
 24477  017136                     u12231:
 24478  017136  EFAB  F0B8         	goto	l2199
 24479  01713A                     u12230:
 24480  01713A  C015  F00A         	movff	atoi@n,??_atoi
 24481  01713E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 24482  017142  1E0A               	comf	??_atoi^0,f,c
 24483  017144  1E0B               	comf	(??_atoi+1)^0,f,c
 24484  017146  4A0A               	infsnz	??_atoi^0,f,c
 24485  017148  2A0B               	incf	(??_atoi+1)^0,f,c
 24486  01714A  C00A  F008         	movff	??_atoi,?_atoi
 24487  01714E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 24488  017152  EFAF  F0B8         	goto	l2202
 24489  017156                     l2199:
 24490  017156  C015  F008         	movff	atoi@n,?_atoi
 24491  01715A  C016  F009         	movff	atoi@n+1,?_atoi+1
 24492  01715E                     l2202:
 24493  01715E  0012               	return		;funcret
 24494  017160                     __end_of_atoi:
 24495                           	callstack 0
 24496                           
 24497 ;; *************** function _isspace *****************
 24498 ;; Defined at:
 24499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
 24500 ;; Parameters:    Size  Location     Type
 24501 ;;  c               2    0[COMRAM] int 
 24502 ;; Auto vars:     Size  Location     Type
 24503 ;;		None
 24504 ;; Return value:  Size  Location     Type
 24505 ;;                  2    0[COMRAM] int 
 24506 ;; Registers used:
 24507 ;;		wreg, status,2, status,0
 24508 ;; Tracked objects:
 24509 ;;		On entry : 0/0
 24510 ;;		On exit  : 0/0
 24511 ;;		Unchanged: 0/0
 24512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24516 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24517 ;;Total ram usage:        7 bytes
 24518 ;; Hardware stack levels used:    1
 24519 ;; This function calls:
 24520 ;;		Nothing
 24521 ;; This function is called by:
 24522 ;;		_atoi
 24523 ;; This function uses a non-reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text82
 24527  01A1E4                     __ptext82:
 24528                           	callstack 0
 24529  01A1E4                     _isspace:
 24530                           	callstack 22
 24531  01A1E4  0E01               	movlw	1
 24532  01A1E6  6E07               	movwf	_isspace$3420^0,c
 24533  01A1E8  0E20               	movlw	32
 24534  01A1EA  1801               	xorwf	isspace@c^0,w,c
 24535  01A1EC  1002               	iorwf	(isspace@c+1)^0,w,c
 24536  01A1EE  B4D8               	btfsc	status,2,c
 24537  01A1F0  EFFC  F0D0         	goto	u11941
 24538  01A1F4  EFFE  F0D0         	goto	u11940
 24539  01A1F8                     u11941:
 24540  01A1F8  EF17  F0D1         	goto	l9919
 24541  01A1FC                     u11940:
 24542  01A1FC  0EF7               	movlw	247
 24543  01A1FE  6E03               	movwf	??_isspace^0,c
 24544  01A200  0EFF               	movlw	255
 24545  01A202  6E04               	movwf	(??_isspace+1)^0,c
 24546  01A204  C001  F005         	movff	isspace@c,??_isspace+2
 24547  01A208  C002  F006         	movff	isspace@c+1,??_isspace+3
 24548  01A20C  5003               	movf	??_isspace^0,w,c
 24549  01A20E  2605               	addwf	(??_isspace+2)^0,f,c
 24550  01A210  5004               	movf	(??_isspace+1)^0,w,c
 24551  01A212  2206               	addwfc	(??_isspace+3)^0,f,c
 24552  01A214  5006               	movf	(??_isspace+3)^0,w,c
 24553  01A216  E109               	bnz	u11950
 24554  01A218  0E05               	movlw	5
 24555  01A21A  5C05               	subwf	(??_isspace+2)^0,w,c
 24556  01A21C  A0D8               	btfss	status,0,c
 24557  01A21E  EF13  F0D1         	goto	u11951
 24558  01A222  EF15  F0D1         	goto	u11950
 24559  01A226                     u11951:
 24560  01A226  EF17  F0D1         	goto	l9919
 24561  01A22A                     u11950:
 24562  01A22A  0E00               	movlw	0
 24563  01A22C  6E07               	movwf	_isspace$3420^0,c
 24564  01A22E                     l9919:
 24565  01A22E  C007  F001         	movff	_isspace$3420,?_isspace
 24566  01A232  6A02               	clrf	(?_isspace+1)^0,c
 24567  01A234  0012               	return		;funcret
 24568  01A236                     __end_of_isspace:
 24569                           	callstack 0
 24570                           
 24571 ;; *************** function _isdigit *****************
 24572 ;; Defined at:
 24573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
 24574 ;; Parameters:    Size  Location     Type
 24575 ;;  c               2    0[COMRAM] int 
 24576 ;; Auto vars:     Size  Location     Type
 24577 ;;		None
 24578 ;; Return value:  Size  Location     Type
 24579 ;;                  2    0[COMRAM] int 
 24580 ;; Registers used:
 24581 ;;		wreg, status,2, status,0
 24582 ;; Tracked objects:
 24583 ;;		On entry : 0/0
 24584 ;;		On exit  : 0/0
 24585 ;;		Unchanged: 0/0
 24586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24590 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24591 ;;Total ram usage:        6 bytes
 24592 ;; Hardware stack levels used:    1
 24593 ;; This function calls:
 24594 ;;		Nothing
 24595 ;; This function is called by:
 24596 ;;		_atoi
 24597 ;; This function uses a non-reentrant model
 24598 ;;
 24599                           
 24600                           	psect	text83
 24601  01A532                     __ptext83:
 24602                           	callstack 0
 24603  01A532                     _isdigit:
 24604                           	callstack 22
 24605  01A532  0ED0               	movlw	208
 24606  01A534  6E03               	movwf	??_isdigit^0,c
 24607  01A536  0EFF               	movlw	255
 24608  01A538  6E04               	movwf	(??_isdigit+1)^0,c
 24609  01A53A  C001  F005         	movff	isdigit@c,??_isdigit+2
 24610  01A53E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 24611  01A542  5003               	movf	??_isdigit^0,w,c
 24612  01A544  2605               	addwf	(??_isdigit+2)^0,f,c
 24613  01A546  5004               	movf	(??_isdigit+1)^0,w,c
 24614  01A548  2206               	addwfc	(??_isdigit+3)^0,f,c
 24615  01A54A  5006               	movf	(??_isdigit+3)^0,w,c
 24616  01A54C  E10A               	bnz	u11960
 24617  01A54E  0E0A               	movlw	10
 24618  01A550  5C05               	subwf	(??_isdigit+2)^0,w,c
 24619  01A552  A0D8               	btfss	status,0,c
 24620  01A554  EFAE  F0D2         	goto	u11961
 24621  01A558  EFB1  F0D2         	goto	u11960
 24622  01A55C                     u11961:
 24623  01A55C  0E01               	movlw	1
 24624  01A55E  EFB2  F0D2         	goto	u11970
 24625  01A562                     u11960:
 24626  01A562  0E00               	movlw	0
 24627  01A564                     u11970:
 24628  01A564  6E01               	movwf	?_isdigit^0,c
 24629  01A566  6A02               	clrf	(?_isdigit+1)^0,c
 24630  01A568  0012               	return		;funcret
 24631  01A56A                     __end_of_isdigit:
 24632                           	callstack 0
 24633                           
 24634 ;; *************** function ___wmul *****************
 24635 ;; Defined at:
 24636 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;  multiplier      2    0[COMRAM] unsigned int 
 24639 ;;  multiplicand    2    2[COMRAM] unsigned int 
 24640 ;; Auto vars:     Size  Location     Type
 24641 ;;  product         2    4[COMRAM] unsigned int 
 24642 ;; Return value:  Size  Location     Type
 24643 ;;                  2    0[COMRAM] unsigned int 
 24644 ;; Registers used:
 24645 ;;		wreg, status,2, status,0, prodl, prodh
 24646 ;; Tracked objects:
 24647 ;;		On entry : 0/0
 24648 ;;		On exit  : 0/0
 24649 ;;		Unchanged: 0/0
 24650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24655 ;;Total ram usage:        6 bytes
 24656 ;; Hardware stack levels used:    1
 24657 ;; This function calls:
 24658 ;;		Nothing
 24659 ;; This function is called by:
 24660 ;;		_atoi
 24661 ;; This function uses a non-reentrant model
 24662 ;;
 24663                           
 24664                           	psect	text84
 24665  01A602                     __ptext84:
 24666                           	callstack 0
 24667  01A602                     ___wmul:
 24668                           	callstack 22
 24669  01A602  5001               	movf	___wmul@multiplier^0,w,c
 24670  01A604  0203               	mulwf	___wmul@multiplicand^0,c
 24671  01A606  006F FFCC  F005    	movff	prodl,___wmul@product
 24672  01A60C  006F FFD0  F006    	movff	prodh,___wmul@product+1
 24673  01A612  5001               	movf	___wmul@multiplier^0,w,c
 24674  01A614  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 24675  01A616  50F3               	movf	243,w,c
 24676  01A618  2606               	addwf	(___wmul@product+1)^0,f,c
 24677  01A61A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 24678  01A61C  0203               	mulwf	___wmul@multiplicand^0,c
 24679  01A61E  50F3               	movf	243,w,c
 24680  01A620  2606               	addwf	(___wmul@product+1)^0,f,c
 24681  01A622  C005  F001         	movff	___wmul@product,?___wmul
 24682  01A626  C006  F002         	movff	___wmul@product+1,?___wmul+1
 24683  01A62A  0012               	return		;funcret
 24684  01A62C                     __end_of___wmul:
 24685                           	callstack 0
 24686                           
 24687 ;; *************** function _UART_Line *****************
 24688 ;; Defined at:
 24689 ;;		line 140 in file "main.c"
 24690 ;; Parameters:    Size  Location     Type
 24691 ;;		None
 24692 ;; Auto vars:     Size  Location     Type
 24693 ;;  line            1    1[COMRAM] unsigned char 
 24694 ;; Return value:  Size  Location     Type
 24695 ;;                  1    wreg      void 
 24696 ;; Registers used:
 24697 ;;		wreg, status,2, status,0, cstack
 24698 ;; Tracked objects:
 24699 ;;		On entry : 0/0
 24700 ;;		On exit  : 0/0
 24701 ;;		Unchanged: 0/0
 24702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24707 ;;Total ram usage:        1 bytes
 24708 ;; Hardware stack levels used:    1
 24709 ;; Hardware stack levels required when called:    1
 24710 ;; This function calls:
 24711 ;;		_Command_Write
 24712 ;;		_UART1_Read
 24713 ;; This function is called by:
 24714 ;;		_UART_Command_Mapper
 24715 ;; This function uses a non-reentrant model
 24716 ;;
 24717                           
 24718                           	psect	text85
 24719  01A770                     __ptext85:
 24720                           	callstack 0
 24721  01A770                     _UART_Line:
 24722                           	callstack 23
 24723  01A770                     
 24724                           ;main.c: 142:     uint8_t line;;main.c: 143:     line = UART1_Read();
 24725  01A770  EC8F  F0D3         	call	_UART1_Read	;wreg free
 24726  01A774  6E02               	movwf	UART_Line@line^0,c
 24727  01A776                     
 24728                           ;main.c: 144:     Command_Write(0xB8 + line);
 24729  01A776  5002               	movf	UART_Line@line^0,w,c
 24730  01A778  0FB8               	addlw	184
 24731  01A77A  EC4C  F0D3         	call	_Command_Write
 24732  01A77E  0012               	return		;funcret
 24733  01A780                     __end_of_UART_Line:
 24734                           	callstack 0
 24735                           
 24736 ;; *************** function _UART_Cursor *****************
 24737 ;; Defined at:
 24738 ;;		line 147 in file "main.c"
 24739 ;; Parameters:    Size  Location     Type
 24740 ;;		None
 24741 ;; Auto vars:     Size  Location     Type
 24742 ;;  position        1    1[COMRAM] unsigned char 
 24743 ;; Return value:  Size  Location     Type
 24744 ;;                  1    wreg      void 
 24745 ;; Registers used:
 24746 ;;		wreg, status,2, status,0, cstack
 24747 ;; Tracked objects:
 24748 ;;		On entry : 0/0
 24749 ;;		On exit  : 0/0
 24750 ;;		Unchanged: 0/0
 24751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24756 ;;Total ram usage:        1 bytes
 24757 ;; Hardware stack levels used:    1
 24758 ;; Hardware stack levels required when called:    1
 24759 ;; This function calls:
 24760 ;;		_Command_Write
 24761 ;;		_UART1_Read
 24762 ;; This function is called by:
 24763 ;;		_UART_Command_Mapper
 24764 ;; This function uses a non-reentrant model
 24765 ;;
 24766                           
 24767                           	psect	text86
 24768  01A780                     __ptext86:
 24769                           	callstack 0
 24770  01A780                     _UART_Cursor:
 24771                           	callstack 23
 24772  01A780                     
 24773                           ;main.c: 149:     uint8_t position;;main.c: 150:     position = UART1_Read();
 24774  01A780  EC8F  F0D3         	call	_UART1_Read	;wreg free
 24775  01A784  6E02               	movwf	UART_Cursor@position^0,c
 24776  01A786                     
 24777                           ;main.c: 151:     Command_Write(0x40 + position);
 24778  01A786  5002               	movf	UART_Cursor@position^0,w,c
 24779  01A788  0F40               	addlw	64
 24780  01A78A  EC4C  F0D3         	call	_Command_Write
 24781  01A78E  0012               	return		;funcret
 24782  01A790                     __end_of_UART_Cursor:
 24783                           	callstack 0
 24784                           
 24785 ;; *************** function _UART_Clear_Line *****************
 24786 ;; Defined at:
 24787 ;;		line 166 in file "main.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;		None
 24790 ;; Auto vars:     Size  Location     Type
 24791 ;;		None
 24792 ;; Return value:  Size  Location     Type
 24793 ;;                  1    wreg      void 
 24794 ;; Registers used:
 24795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24796 ;; Tracked objects:
 24797 ;;		On entry : 0/0
 24798 ;;		On exit  : 0/0
 24799 ;;		Unchanged: 0/0
 24800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24805 ;;Total ram usage:        0 bytes
 24806 ;; Hardware stack levels used:    1
 24807 ;; Hardware stack levels required when called:    3
 24808 ;; This function calls:
 24809 ;;		_Command_Write
 24810 ;;		_Display_Message
 24811 ;; This function is called by:
 24812 ;;		_UART_Command_Mapper
 24813 ;; This function uses a non-reentrant model
 24814 ;;
 24815                           
 24816                           	psect	text87
 24817  01A62C                     __ptext87:
 24818                           	callstack 0
 24819  01A62C                     _UART_Clear_Line:
 24820                           	callstack 21
 24821  01A62C                     
 24822                           ;main.c: 167:     length = 12;
 24823  01A62C  0E0C               	movlw	12
 24824  01A62E  0101               	movlb	1	; () banked
 24825  01A630  6F15               	movwf	_length& (0+255),b
 24826  01A632  0E00               	movlw	0
 24827  01A634  6F16               	movwf	(_length+1)& (0+255),b
 24828  01A636  0E00               	movlw	0
 24829  01A638  6F17               	movwf	(_length+2)& (0+255),b
 24830  01A63A  0E00               	movlw	0
 24831  01A63C  6F18               	movwf	(_length+3)& (0+255),b
 24832  01A63E                     
 24833                           ; BSR set to: 1
 24834                           ;main.c: 168:     Command_Write(0x40);
 24835  01A63E  0E40               	movlw	64
 24836  01A640  EC4C  F0D3         	call	_Command_Write
 24837  01A644                     
 24838                           ;main.c: 169:     Display_Message("            ");
 24839  01A644  0EFA               	movlw	low STR_23
 24840  01A646  6E08               	movwf	Display_Message@message^0,c
 24841  01A648  0EFE               	movlw	high STR_23
 24842  01A64A  6E09               	movwf	(Display_Message@message+1)^0,c
 24843  01A64C  EC74  F0CE         	call	_Display_Message	;wreg free
 24844  01A650  0012               	return		;funcret
 24845  01A652                     __end_of_UART_Clear_Line:
 24846                           	callstack 0
 24847                           
 24848 ;; *************** function _UART_Check_Comm_Start *****************
 24849 ;; Defined at:
 24850 ;;		line 240 in file "main.c"
 24851 ;; Parameters:    Size  Location     Type
 24852 ;;		None
 24853 ;; Auto vars:     Size  Location     Type
 24854 ;;  message         1    0[COMRAM] unsigned char 
 24855 ;; Return value:  Size  Location     Type
 24856 ;;                  1    wreg      void 
 24857 ;; Registers used:
 24858 ;;		wreg, status,2, status,0, cstack
 24859 ;; Tracked objects:
 24860 ;;		On entry : 0/0
 24861 ;;		On exit  : 0/0
 24862 ;;		Unchanged: 0/0
 24863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24868 ;;Total ram usage:        1 bytes
 24869 ;; Hardware stack levels used:    1
 24870 ;; Hardware stack levels required when called:    1
 24871 ;; This function calls:
 24872 ;;		_UART1_Read
 24873 ;; This function is called by:
 24874 ;;		_UART_Start
 24875 ;; This function uses a non-reentrant model
 24876 ;;
 24877                           
 24878                           	psect	text88
 24879  01A5D0                     __ptext88:
 24880                           	callstack 0
 24881  01A5D0                     _UART_Check_Comm_Start:
 24882                           	callstack 25
 24883  01A5D0                     
 24884                           ;main.c: 241:     char message;;main.c: 242:     message = UART1_Read();
 24885  01A5D0  EC8F  F0D3         	call	_UART1_Read	;wreg free
 24886  01A5D4  6E01               	movwf	UART_Check_Comm_Start@message^0,c
 24887  01A5D6                     
 24888                           ;main.c: 243:     if (message == 0x7) {
 24889  01A5D6  0E07               	movlw	7
 24890  01A5D8  1801               	xorwf	UART_Check_Comm_Start@message^0,w,c
 24891  01A5DA  A4D8               	btfss	status,2,c
 24892  01A5DC  EFF2  F0D2         	goto	u12591
 24893  01A5E0  EFF4  F0D2         	goto	u12590
 24894  01A5E4                     u12591:
 24895  01A5E4  EFFB  F0D2         	goto	l10443
 24896  01A5E8                     u12590:
 24897  01A5E8                     
 24898                           ;main.c: 244:         commStart = 1;
 24899  01A5E8  0E00               	movlw	0
 24900  01A5EA  0101               	movlb	1	; () banked
 24901  01A5EC  6F32               	movwf	(_commStart+1)& (0+255),b
 24902  01A5EE  0E01               	movlw	1
 24903  01A5F0  6F31               	movwf	_commStart& (0+255),b
 24904                           
 24905                           ;main.c: 245:     } else {
 24906  01A5F2  EF00  F0D3         	goto	l1353
 24907  01A5F6                     l10443:
 24908                           
 24909                           ;main.c: 246:         commStart = 0;
 24910  01A5F6  0E00               	movlw	0
 24911  01A5F8  0101               	movlb	1	; () banked
 24912  01A5FA  6F32               	movwf	(_commStart+1)& (0+255),b
 24913  01A5FC  0E00               	movlw	0
 24914  01A5FE  6F31               	movwf	_commStart& (0+255),b
 24915  01A600                     l1353:
 24916                           
 24917                           ; BSR set to: 1
 24918  01A600  0012               	return		;funcret
 24919  01A602                     __end_of_UART_Check_Comm_Start:
 24920                           	callstack 0
 24921                           
 24922 ;; *************** function _UART_Settings *****************
 24923 ;; Defined at:
 24924 ;;		line 268 in file "main.c"
 24925 ;; Parameters:    Size  Location     Type
 24926 ;;		None
 24927 ;; Auto vars:     Size  Location     Type
 24928 ;;		None
 24929 ;; Return value:  Size  Location     Type
 24930 ;;                  1    wreg      void 
 24931 ;; Registers used:
 24932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24933 ;; Tracked objects:
 24934 ;;		On entry : 0/0
 24935 ;;		On exit  : 0/0
 24936 ;;		Unchanged: 0/0
 24937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24942 ;;Total ram usage:        0 bytes
 24943 ;; Hardware stack levels used:    1
 24944 ;; Hardware stack levels required when called:    3
 24945 ;; This function calls:
 24946 ;;		_Command_Write
 24947 ;;		_Cursor_drawing
 24948 ;;		_Display_Message
 24949 ;;		_GLCD_Clear
 24950 ;;		_Select_Page
 24951 ;; This function is called by:
 24952 ;;		_Menu_Logic
 24953 ;; This function uses a non-reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text89
 24957  019658                     __ptext89:
 24958                           	callstack 0
 24959  019658                     _UART_Settings:
 24960                           	callstack 24
 24961  019658                     
 24962                           ;main.c: 270:     GLCD_Clear();
 24963  019658  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 24964                           
 24965                           ;main.c: 271:     Select_Page(0);
 24966  01965C  0E00               	movlw	0
 24967  01965E  6E02               	movwf	(Select_Page@select+1)^0,c
 24968  019660  0E00               	movlw	0
 24969  019662  6E01               	movwf	Select_Page@select^0,c
 24970  019664  EC3F  F0D2         	call	_Select_Page	;wreg free
 24971  019668                     
 24972                           ;main.c: 272:     Command_Write(0b10111000);
 24973  019668  0EB8               	movlw	184
 24974  01966A  EC4C  F0D3         	call	_Command_Write
 24975  01966E                     
 24976                           ;main.c: 273:     Command_Write(0b01101000);
 24977  01966E  0E68               	movlw	104
 24978  019670  EC4C  F0D3         	call	_Command_Write
 24979  019674                     
 24980                           ;main.c: 274:     Display_Message("UART");
 24981  019674  0EDC               	movlw	low STR_21
 24982  019676  6E08               	movwf	Display_Message@message^0,c
 24983  019678  0EFF               	movlw	high STR_21
 24984  01967A  6E09               	movwf	(Display_Message@message+1)^0,c
 24985  01967C  EC74  F0CE         	call	_Display_Message	;wreg free
 24986  019680                     
 24987                           ;main.c: 276:     Select_Page(1);
 24988  019680  0E00               	movlw	0
 24989  019682  6E02               	movwf	(Select_Page@select+1)^0,c
 24990  019684  0E01               	movlw	1
 24991  019686  6E01               	movwf	Select_Page@select^0,c
 24992  019688  EC3F  F0D2         	call	_Select_Page	;wreg free
 24993  01968C                     
 24994                           ;main.c: 277:     Command_Write(0b10111000);
 24995  01968C  0EB8               	movlw	184
 24996  01968E  EC4C  F0D3         	call	_Command_Write
 24997  019692                     
 24998                           ;main.c: 278:     Command_Write(0b01000000);
 24999  019692  0E40               	movlw	64
 25000  019694  EC4C  F0D3         	call	_Command_Write
 25001                           
 25002                           ;main.c: 279:     Display_Message("Settings");
 25003  019698  0E78               	movlw	low STR_12
 25004  01969A  6E08               	movwf	Display_Message@message^0,c
 25005  01969C  0EFF               	movlw	high STR_12
 25006  01969E  6E09               	movwf	(Display_Message@message+1)^0,c
 25007  0196A0  EC74  F0CE         	call	_Display_Message	;wreg free
 25008  0196A4                     
 25009                           ;main.c: 282:     Select_Page(0);
 25010  0196A4  0E00               	movlw	0
 25011  0196A6  6E02               	movwf	(Select_Page@select+1)^0,c
 25012  0196A8  0E00               	movlw	0
 25013  0196AA  6E01               	movwf	Select_Page@select^0,c
 25014  0196AC  EC3F  F0D2         	call	_Select_Page	;wreg free
 25015  0196B0                     
 25016                           ;main.c: 283:     Command_Write(0b10111010);
 25017  0196B0  0EBA               	movlw	186
 25018  0196B2  EC4C  F0D3         	call	_Command_Write
 25019  0196B6                     
 25020                           ;main.c: 284:     Command_Write(0b01000000);
 25021  0196B6  0E40               	movlw	64
 25022  0196B8  EC4C  F0D3         	call	_Command_Write
 25023  0196BC                     
 25024                           ;main.c: 285:     Display_Message("Transmission");
 25025  0196BC  0E07               	movlw	low STR_16
 25026  0196BE  6E08               	movwf	Display_Message@message^0,c
 25027  0196C0  0EFF               	movlw	high STR_16
 25028  0196C2  6E09               	movwf	(Display_Message@message+1)^0,c
 25029  0196C4  EC74  F0CE         	call	_Display_Message	;wreg free
 25030  0196C8                     
 25031                           ;main.c: 288:     Command_Write(0b10111100);
 25032  0196C8  0EBC               	movlw	188
 25033  0196CA  EC4C  F0D3         	call	_Command_Write
 25034  0196CE                     
 25035                           ;main.c: 289:     Command_Write(0b01000000);
 25036  0196CE  0E40               	movlw	64
 25037  0196D0  EC4C  F0D3         	call	_Command_Write
 25038  0196D4                     
 25039                           ;main.c: 290:     Display_Message("Baud rate");
 25040  0196D4  0E65               	movlw	low STR_27
 25041  0196D6  6E08               	movwf	Display_Message@message^0,c
 25042  0196D8  0EFF               	movlw	high STR_27
 25043  0196DA  6E09               	movwf	(Display_Message@message+1)^0,c
 25044  0196DC  EC74  F0CE         	call	_Display_Message	;wreg free
 25045  0196E0                     
 25046                           ;main.c: 292:     Cursor_drawing();
 25047  0196E0  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 25048  0196E4  0012               	return		;funcret
 25049  0196E6                     __end_of_UART_Settings:
 25050                           	callstack 0
 25051                           
 25052 ;; *************** function _Transmission_Settings *****************
 25053 ;; Defined at:
 25054 ;;		line 593 in file "main.c"
 25055 ;; Parameters:    Size  Location     Type
 25056 ;;		None
 25057 ;; Auto vars:     Size  Location     Type
 25058 ;;  SDloggingCha    1   11[BANK0 ] unsigned char [1]
 25059 ;;  ContinuousCh    1   10[BANK0 ] unsigned char [1]
 25060 ;; Return value:  Size  Location     Type
 25061 ;;                  1    wreg      void 
 25062 ;; Registers used:
 25063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25064 ;; Tracked objects:
 25065 ;;		On entry : 0/0
 25066 ;;		On exit  : 0/0
 25067 ;;		Unchanged: 0/0
 25068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25070 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25073 ;;Total ram usage:        2 bytes
 25074 ;; Hardware stack levels used:    1
 25075 ;; Hardware stack levels required when called:    8
 25076 ;; This function calls:
 25077 ;;		_Command_Write
 25078 ;;		_Cursor_drawing
 25079 ;;		_Display_Character
 25080 ;;		_Display_Message
 25081 ;;		_GLCD_Clear
 25082 ;;		_Select_Page
 25083 ;;		_sprintf
 25084 ;; This function is called by:
 25085 ;;		_Menu_Logic
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           	psect	text90
 25090  017B7A                     __ptext90:
 25091                           	callstack 0
 25092  017B7A                     _Transmission_Settings:
 25093                           	callstack 19
 25094  017B7A                     
 25095                           ;main.c: 594:     char ContinuousChar[1];;main.c: 595:     char SDloggingChar[1];;main.c
      +                          : 596:     sprintf(ContinuousChar, "%d", ContinuousTransmission);
 25096  017B7A  0E6A               	movlw	low Transmission_Settings@ContinuousChar
 25097  017B7C  6E58               	movwf	sprintf@s^0,c
 25098  017B7E  0E00               	movlw	high Transmission_Settings@ContinuousChar
 25099  017B80  6E59               	movwf	(sprintf@s+1)^0,c
 25100  017B82  0EFC               	movlw	low STR_28
 25101  017B84  6E5A               	movwf	sprintf@fmt^0,c
 25102  017B86  0EFF               	movlw	high STR_28
 25103  017B88  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25104  017B8A  C12D  F05C         	movff	_ContinuousTransmission,?_sprintf+4
 25105  017B8E  C12E  F05D         	movff	_ContinuousTransmission+1,?_sprintf+5
 25106  017B92  EC1B  F0D1         	call	_sprintf	;wreg free
 25107                           
 25108                           ;main.c: 597:     sprintf(SDloggingChar, "%d", SDlog);
 25109  017B96  0E6B               	movlw	low Transmission_Settings@SDloggingChar
 25110  017B98  6E58               	movwf	sprintf@s^0,c
 25111  017B9A  0E00               	movlw	high Transmission_Settings@SDloggingChar
 25112  017B9C  6E59               	movwf	(sprintf@s+1)^0,c
 25113  017B9E  0EFC               	movlw	low STR_28
 25114  017BA0  6E5A               	movwf	sprintf@fmt^0,c
 25115  017BA2  0EFF               	movlw	high STR_28
 25116  017BA4  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25117  017BA6  C12F  F05C         	movff	_SDlog,?_sprintf+4
 25118  017BAA  C130  F05D         	movff	_SDlog+1,?_sprintf+5
 25119  017BAE  EC1B  F0D1         	call	_sprintf	;wreg free
 25120  017BB2                     
 25121                           ;main.c: 599:     GLCD_Clear();
 25122  017BB2  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25123  017BB6                     
 25124                           ;main.c: 600:     Select_Page(0);
 25125  017BB6  0E00               	movlw	0
 25126  017BB8  6E02               	movwf	(Select_Page@select+1)^0,c
 25127  017BBA  0E00               	movlw	0
 25128  017BBC  6E01               	movwf	Select_Page@select^0,c
 25129  017BBE  EC3F  F0D2         	call	_Select_Page	;wreg free
 25130  017BC2                     
 25131                           ;main.c: 601:     Command_Write(0b10111000);
 25132  017BC2  0EB8               	movlw	184
 25133  017BC4  EC4C  F0D3         	call	_Command_Write
 25134  017BC8                     
 25135                           ;main.c: 602:     Command_Write(0b01000000);
 25136  017BC8  0E40               	movlw	64
 25137  017BCA  EC4C  F0D3         	call	_Command_Write
 25138  017BCE                     
 25139                           ;main.c: 603:     Display_Message("Transmission");
 25140  017BCE  0E07               	movlw	low STR_16
 25141  017BD0  6E08               	movwf	Display_Message@message^0,c
 25142  017BD2  0EFF               	movlw	high STR_16
 25143  017BD4  6E09               	movwf	(Display_Message@message+1)^0,c
 25144  017BD6  EC74  F0CE         	call	_Display_Message	;wreg free
 25145  017BDA                     
 25146                           ;main.c: 605:     Select_Page(1);
 25147  017BDA  0E00               	movlw	0
 25148  017BDC  6E02               	movwf	(Select_Page@select+1)^0,c
 25149  017BDE  0E01               	movlw	1
 25150  017BE0  6E01               	movwf	Select_Page@select^0,c
 25151  017BE2  EC3F  F0D2         	call	_Select_Page	;wreg free
 25152  017BE6                     
 25153                           ;main.c: 606:     Command_Write(0b10111000);
 25154  017BE6  0EB8               	movlw	184
 25155  017BE8  EC4C  F0D3         	call	_Command_Write
 25156  017BEC                     
 25157                           ;main.c: 607:     Command_Write(0b01000000);
 25158  017BEC  0E40               	movlw	64
 25159  017BEE  EC4C  F0D3         	call	_Command_Write
 25160  017BF2                     
 25161                           ;main.c: 608:     Display_Message("Settings");
 25162  017BF2  0E78               	movlw	low STR_12
 25163  017BF4  6E08               	movwf	Display_Message@message^0,c
 25164  017BF6  0EFF               	movlw	high STR_12
 25165  017BF8  6E09               	movwf	(Display_Message@message+1)^0,c
 25166  017BFA  EC74  F0CE         	call	_Display_Message	;wreg free
 25167  017BFE                     
 25168                           ;main.c: 611:     Select_Page(0);
 25169  017BFE  0E00               	movlw	0
 25170  017C00  6E02               	movwf	(Select_Page@select+1)^0,c
 25171  017C02  0E00               	movlw	0
 25172  017C04  6E01               	movwf	Select_Page@select^0,c
 25173  017C06  EC3F  F0D2         	call	_Select_Page	;wreg free
 25174  017C0A                     
 25175                           ;main.c: 612:     Command_Write(0b10111010);
 25176  017C0A  0EBA               	movlw	186
 25177  017C0C  EC4C  F0D3         	call	_Command_Write
 25178  017C10                     
 25179                           ;main.c: 613:     Command_Write(0b01000000);
 25180  017C10  0E40               	movlw	64
 25181  017C12  EC4C  F0D3         	call	_Command_Write
 25182  017C16                     
 25183                           ;main.c: 614:     Display_Message("Continuous");
 25184  017C16  0E50               	movlw	low STR_67
 25185  017C18  6E08               	movwf	Display_Message@message^0,c
 25186  017C1A  0EFF               	movlw	high STR_67
 25187  017C1C  6E09               	movwf	(Display_Message@message+1)^0,c
 25188  017C1E  EC74  F0CE         	call	_Display_Message	;wreg free
 25189  017C22                     
 25190                           ;main.c: 616:     Select_Page(1);
 25191  017C22  0E00               	movlw	0
 25192  017C24  6E02               	movwf	(Select_Page@select+1)^0,c
 25193  017C26  0E01               	movlw	1
 25194  017C28  6E01               	movwf	Select_Page@select^0,c
 25195  017C2A  EC3F  F0D2         	call	_Select_Page	;wreg free
 25196  017C2E                     
 25197                           ;main.c: 617:     Command_Write(0b10111010);
 25198  017C2E  0EBA               	movlw	186
 25199  017C30  EC4C  F0D3         	call	_Command_Write
 25200  017C34                     
 25201                           ;main.c: 618:     Command_Write(0b01100000);
 25202  017C34  0E60               	movlw	96
 25203  017C36  EC4C  F0D3         	call	_Command_Write
 25204  017C3A                     
 25205                           ;main.c: 619:     Display_Message(ContinuousChar);
 25206  017C3A  0E6A               	movlw	low Transmission_Settings@ContinuousChar
 25207  017C3C  6E08               	movwf	Display_Message@message^0,c
 25208  017C3E  0E00               	movlw	high Transmission_Settings@ContinuousChar
 25209  017C40  6E09               	movwf	(Display_Message@message+1)^0,c
 25210  017C42  EC74  F0CE         	call	_Display_Message	;wreg free
 25211  017C46                     
 25212                           ;main.c: 620:     Command_Write(0b01100101);
 25213  017C46  0E65               	movlw	101
 25214  017C48  EC4C  F0D3         	call	_Command_Write
 25215  017C4C                     
 25216                           ;main.c: 621:     Display_Character(' ');
 25217  017C4C  0E20               	movlw	32
 25218  017C4E  ECAD  F0CE         	call	_Display_Character
 25219  017C52                     
 25220                           ;main.c: 623:     Select_Page(0);
 25221  017C52  0E00               	movlw	0
 25222  017C54  6E02               	movwf	(Select_Page@select+1)^0,c
 25223  017C56  0E00               	movlw	0
 25224  017C58  6E01               	movwf	Select_Page@select^0,c
 25225  017C5A  EC3F  F0D2         	call	_Select_Page	;wreg free
 25226  017C5E                     
 25227                           ;main.c: 625:     Command_Write(0b10111100);
 25228  017C5E  0EBC               	movlw	188
 25229  017C60  EC4C  F0D3         	call	_Command_Write
 25230  017C64                     
 25231                           ;main.c: 626:     Command_Write(0b01000000);
 25232  017C64  0E40               	movlw	64
 25233  017C66  EC4C  F0D3         	call	_Command_Write
 25234  017C6A                     
 25235                           ;main.c: 627:     Display_Message("SD Logging");
 25236  017C6A  0E45               	movlw	low STR_68
 25237  017C6C  6E08               	movwf	Display_Message@message^0,c
 25238  017C6E  0EFF               	movlw	high STR_68
 25239  017C70  6E09               	movwf	(Display_Message@message+1)^0,c
 25240  017C72  EC74  F0CE         	call	_Display_Message	;wreg free
 25241  017C76                     
 25242                           ;main.c: 629:     Select_Page(1);
 25243  017C76  0E00               	movlw	0
 25244  017C78  6E02               	movwf	(Select_Page@select+1)^0,c
 25245  017C7A  0E01               	movlw	1
 25246  017C7C  6E01               	movwf	Select_Page@select^0,c
 25247  017C7E  EC3F  F0D2         	call	_Select_Page	;wreg free
 25248  017C82                     
 25249                           ;main.c: 630:     Command_Write(0b10111100);
 25250  017C82  0EBC               	movlw	188
 25251  017C84  EC4C  F0D3         	call	_Command_Write
 25252  017C88                     
 25253                           ;main.c: 631:     Command_Write(0b01100000);
 25254  017C88  0E60               	movlw	96
 25255  017C8A  EC4C  F0D3         	call	_Command_Write
 25256  017C8E                     
 25257                           ;main.c: 632:     Display_Message(SDloggingChar);
 25258  017C8E  0E6B               	movlw	low Transmission_Settings@SDloggingChar
 25259  017C90  6E08               	movwf	Display_Message@message^0,c
 25260  017C92  0E00               	movlw	high Transmission_Settings@SDloggingChar
 25261  017C94  6E09               	movwf	(Display_Message@message+1)^0,c
 25262  017C96  EC74  F0CE         	call	_Display_Message	;wreg free
 25263  017C9A                     
 25264                           ;main.c: 635:     Select_Page(0);
 25265  017C9A  0E00               	movlw	0
 25266  017C9C  6E02               	movwf	(Select_Page@select+1)^0,c
 25267  017C9E  0E00               	movlw	0
 25268  017CA0  6E01               	movwf	Select_Page@select^0,c
 25269  017CA2  EC3F  F0D2         	call	_Select_Page	;wreg free
 25270  017CA6                     
 25271                           ;main.c: 636:     Command_Write(0b10111110);
 25272  017CA6  0EBE               	movlw	190
 25273  017CA8  EC4C  F0D3         	call	_Command_Write
 25274  017CAC                     
 25275                           ;main.c: 637:     Command_Write(0b01000000);
 25276  017CAC  0E40               	movlw	64
 25277  017CAE  EC4C  F0D3         	call	_Command_Write
 25278  017CB2                     
 25279                           ;main.c: 638:     Display_Message("Length");
 25280  017CB2  0EAF               	movlw	low STR_62
 25281  017CB4  6E08               	movwf	Display_Message@message^0,c
 25282  017CB6  0EFF               	movlw	high STR_62
 25283  017CB8  6E09               	movwf	(Display_Message@message+1)^0,c
 25284  017CBA  EC74  F0CE         	call	_Display_Message	;wreg free
 25285  017CBE                     
 25286                           ;main.c: 640:     Cursor_drawing();
 25287  017CBE  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 25288  017CC2  0012               	return		;funcret
 25289  017CC4                     __end_of_Transmission_Settings:
 25290                           	callstack 0
 25291                           
 25292 ;; *************** function _Toggle_Select *****************
 25293 ;; Defined at:
 25294 ;;		line 331 in file "main.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;  number          2   10[BANK0 ] int 
 25297 ;;  line            1   12[BANK0 ] unsigned char 
 25298 ;; Auto vars:     Size  Location     Type
 25299 ;;  Char            1   15[BANK0 ] unsigned char [1]
 25300 ;; Return value:  Size  Location     Type
 25301 ;;                  2   10[BANK0 ] int 
 25302 ;; Registers used:
 25303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25304 ;; Tracked objects:
 25305 ;;		On entry : 0/0
 25306 ;;		On exit  : 0/0
 25307 ;;		Unchanged: 0/0
 25308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25309 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;Total ram usage:        6 bytes
 25314 ;; Hardware stack levels used:    1
 25315 ;; Hardware stack levels required when called:    8
 25316 ;; This function calls:
 25317 ;;		_Command_Write
 25318 ;;		_Display_Message
 25319 ;;		_Select_Page
 25320 ;;		_sprintf
 25321 ;; This function is called by:
 25322 ;;		_Menu_Logic
 25323 ;; This function uses a non-reentrant model
 25324 ;;
 25325                           
 25326                           	psect	text91
 25327  018736                     __ptext91:
 25328                           	callstack 0
 25329  018736                     _Toggle_Select:
 25330                           	callstack 19
 25331  018736                     
 25332                           ;main.c: 332:     char Char[1];;main.c: 334:     if (number == 0) {
 25333  018736  0100               	movlb	0	; () banked
 25334  018738  516A               	movf	Toggle_Select@number& (0+255),w,b
 25335  01873A  116B               	iorwf	(Toggle_Select@number+1)& (0+255),w,b
 25336  01873C  A4D8               	btfss	status,2,c
 25337  01873E  EFA3  F0C3         	goto	u12951
 25338  018742  EFA5  F0C3         	goto	u12950
 25339  018746                     u12951:
 25340  018746  EFCD  F0C3         	goto	l10731
 25341  01874A                     u12950:
 25342  01874A                     
 25343                           ; BSR set to: 0
 25344                           ;main.c: 335:         number = 1;
 25345  01874A  0E00               	movlw	0
 25346  01874C  6F6B               	movwf	(Toggle_Select@number+1)& (0+255),b
 25347  01874E  0E01               	movlw	1
 25348  018750  6F6A               	movwf	Toggle_Select@number& (0+255),b
 25349  018752                     
 25350                           ; BSR set to: 0
 25351                           ;main.c: 336:         Select_Page(1);
 25352  018752  0E00               	movlw	0
 25353  018754  6E02               	movwf	(Select_Page@select+1)^0,c
 25354  018756  0E01               	movlw	1
 25355  018758  6E01               	movwf	Select_Page@select^0,c
 25356  01875A  EC3F  F0D2         	call	_Select_Page	;wreg free
 25357  01875E                     
 25358                           ;main.c: 337:         Command_Write(0xB8 + line);
 25359  01875E  0100               	movlb	0	; () banked
 25360  018760  516C               	movf	Toggle_Select@line& (0+255),w,b
 25361  018762  0FB8               	addlw	184
 25362  018764  EC4C  F0D3         	call	_Command_Write
 25363  018768                     
 25364                           ;main.c: 338:         Command_Write(0b01100000);
 25365  018768  0E60               	movlw	96
 25366  01876A  EC4C  F0D3         	call	_Command_Write
 25367  01876E                     
 25368                           ;main.c: 339:         sprintf(Char, "%d", number);
 25369  01876E  0E6F               	movlw	low Toggle_Select@Char
 25370  018770  6E58               	movwf	sprintf@s^0,c
 25371  018772  0E00               	movlw	high Toggle_Select@Char
 25372  018774  6E59               	movwf	(sprintf@s+1)^0,c
 25373  018776  0EFC               	movlw	low STR_28
 25374  018778  6E5A               	movwf	sprintf@fmt^0,c
 25375  01877A  0EFF               	movlw	high STR_28
 25376  01877C  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25377  01877E  0E00               	movlw	0
 25378  018780  6E5D               	movwf	(?_sprintf+5)^0,c
 25379  018782  0E01               	movlw	1
 25380  018784  6E5C               	movwf	(?_sprintf+4)^0,c
 25381  018786  EC1B  F0D1         	call	_sprintf	;wreg free
 25382  01878A                     l10729:
 25383                           
 25384                           ;main.c: 340:         Display_Message(Char);
 25385  01878A  0E6F               	movlw	low Toggle_Select@Char
 25386  01878C  6E08               	movwf	Display_Message@message^0,c
 25387  01878E  0E00               	movlw	high Toggle_Select@Char
 25388  018790  6E09               	movwf	(Display_Message@message+1)^0,c
 25389  018792  EC74  F0CE         	call	_Display_Message	;wreg free
 25390                           
 25391                           ;main.c: 341:     } else if (number == 1) {
 25392  018796  EFF8  F0C3         	goto	l10745
 25393  01879A                     l10731:
 25394                           
 25395                           ; BSR set to: 0
 25396  01879A  056A               	decf	Toggle_Select@number& (0+255),w,b
 25397  01879C  116B               	iorwf	(Toggle_Select@number+1)& (0+255),w,b
 25398  01879E  A4D8               	btfss	status,2,c
 25399  0187A0  EFD4  F0C3         	goto	u12961
 25400  0187A4  EFD6  F0C3         	goto	u12960
 25401  0187A8                     u12961:
 25402  0187A8  EFF8  F0C3         	goto	l10745
 25403  0187AC                     u12960:
 25404  0187AC                     
 25405                           ; BSR set to: 0
 25406                           ;main.c: 342:         number = 0;
 25407  0187AC  0E00               	movlw	0
 25408  0187AE  6F6B               	movwf	(Toggle_Select@number+1)& (0+255),b
 25409  0187B0  0E00               	movlw	0
 25410  0187B2  6F6A               	movwf	Toggle_Select@number& (0+255),b
 25411  0187B4                     
 25412                           ; BSR set to: 0
 25413                           ;main.c: 343:         Select_Page(1);
 25414  0187B4  0E00               	movlw	0
 25415  0187B6  6E02               	movwf	(Select_Page@select+1)^0,c
 25416  0187B8  0E01               	movlw	1
 25417  0187BA  6E01               	movwf	Select_Page@select^0,c
 25418  0187BC  EC3F  F0D2         	call	_Select_Page	;wreg free
 25419  0187C0                     
 25420                           ;main.c: 344:         Command_Write(0xB8 + line);
 25421  0187C0  0100               	movlb	0	; () banked
 25422  0187C2  516C               	movf	Toggle_Select@line& (0+255),w,b
 25423  0187C4  0FB8               	addlw	184
 25424  0187C6  EC4C  F0D3         	call	_Command_Write
 25425  0187CA                     
 25426                           ;main.c: 345:         Command_Write(0b01100000);
 25427  0187CA  0E60               	movlw	96
 25428  0187CC  EC4C  F0D3         	call	_Command_Write
 25429  0187D0                     
 25430                           ;main.c: 346:         sprintf(Char, "%d", number);
 25431  0187D0  0E6F               	movlw	low Toggle_Select@Char
 25432  0187D2  6E58               	movwf	sprintf@s^0,c
 25433  0187D4  0E00               	movlw	high Toggle_Select@Char
 25434  0187D6  6E59               	movwf	(sprintf@s+1)^0,c
 25435  0187D8  0EFC               	movlw	low STR_28
 25436  0187DA  6E5A               	movwf	sprintf@fmt^0,c
 25437  0187DC  0EFF               	movlw	high STR_28
 25438  0187DE  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25439  0187E0  0E00               	movlw	0
 25440  0187E2  6E5D               	movwf	(?_sprintf+5)^0,c
 25441  0187E4  0E00               	movlw	0
 25442  0187E6  6E5C               	movwf	(?_sprintf+4)^0,c
 25443  0187E8  EC1B  F0D1         	call	_sprintf	;wreg free
 25444  0187EC  EFC5  F0C3         	goto	l10729
 25445  0187F0                     l10745:
 25446                           
 25447                           ;main.c: 349:     _delay((unsigned long)((200)*(64000000/4000.0)));
 25448  0187F0  0E11               	movlw	17
 25449  0187F2  0100               	movlb	0	; () banked
 25450  0187F4  6F6E               	movwf	(??_Toggle_Select+1)& (0+255),b
 25451  0187F6  0E3C               	movlw	60
 25452  0187F8  6F6D               	movwf	??_Toggle_Select& (0+255),b
 25453  0187FA  0ECB               	movlw	203
 25454  0187FC                     u14147:
 25455  0187FC  2EE8               	decfsz	wreg,f,c
 25456  0187FE  D7FE               	bra	u14147
 25457  018800  2F6D               	decfsz	??_Toggle_Select& (0+255),f,b
 25458  018802  D7FC               	bra	u14147
 25459  018804  2F6E               	decfsz	(??_Toggle_Select+1)& (0+255),f,b
 25460  018806  D7FA               	bra	u14147
 25461  018808                     
 25462                           ;main.c: 350:     return number;
 25463  018808  C06A  F06A         	movff	Toggle_Select@number,?_Toggle_Select
 25464  01880C  C06B  F06B         	movff	Toggle_Select@number+1,?_Toggle_Select+1
 25465  018810  0012               	return		;funcret
 25466  018812                     __end_of_Toggle_Select:
 25467                           	callstack 0
 25468                           
 25469 ;; *************** function _Settings_Menu *****************
 25470 ;; Defined at:
 25471 ;;		line 82 in file "main.c"
 25472 ;; Parameters:    Size  Location     Type
 25473 ;;		None
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;		None
 25476 ;; Return value:  Size  Location     Type
 25477 ;;                  1    wreg      void 
 25478 ;; Registers used:
 25479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25480 ;; Tracked objects:
 25481 ;;		On entry : 0/0
 25482 ;;		On exit  : 0/0
 25483 ;;		Unchanged: 0/0
 25484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25489 ;;Total ram usage:        0 bytes
 25490 ;; Hardware stack levels used:    1
 25491 ;; Hardware stack levels required when called:    3
 25492 ;; This function calls:
 25493 ;;		_Command_Write
 25494 ;;		_Cursor_drawing
 25495 ;;		_Display_Message
 25496 ;;		_GLCD_Clear
 25497 ;;		_Select_Page
 25498 ;; This function is called by:
 25499 ;;		_Menu_Logic
 25500 ;; This function uses a non-reentrant model
 25501 ;;
 25502                           
 25503                           	psect	text92
 25504  0196E6                     __ptext92:
 25505                           	callstack 0
 25506  0196E6                     _Settings_Menu:
 25507                           	callstack 24
 25508  0196E6                     
 25509                           ;main.c: 84:     GLCD_Clear();
 25510  0196E6  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25511                           
 25512                           ;main.c: 85:     Select_Page(0);
 25513  0196EA  0E00               	movlw	0
 25514  0196EC  6E02               	movwf	(Select_Page@select+1)^0,c
 25515  0196EE  0E00               	movlw	0
 25516  0196F0  6E01               	movwf	Select_Page@select^0,c
 25517  0196F2  EC3F  F0D2         	call	_Select_Page	;wreg free
 25518  0196F6                     
 25519                           ;main.c: 86:     Command_Write(0b10111000);
 25520  0196F6  0EB8               	movlw	184
 25521  0196F8  EC4C  F0D3         	call	_Command_Write
 25522  0196FC                     
 25523                           ;main.c: 87:     Command_Write(0b01011100);
 25524  0196FC  0E5C               	movlw	92
 25525  0196FE  EC4C  F0D3         	call	_Command_Write
 25526  019702                     
 25527                           ;main.c: 88:     Display_Message("System");
 25528  019702  0EB6               	movlw	low STR_19
 25529  019704  6E08               	movwf	Display_Message@message^0,c
 25530  019706  0EFF               	movlw	high STR_19
 25531  019708  6E09               	movwf	(Display_Message@message+1)^0,c
 25532  01970A  EC74  F0CE         	call	_Display_Message	;wreg free
 25533  01970E                     
 25534                           ;main.c: 90:     Select_Page(1);
 25535  01970E  0E00               	movlw	0
 25536  019710  6E02               	movwf	(Select_Page@select+1)^0,c
 25537  019712  0E01               	movlw	1
 25538  019714  6E01               	movwf	Select_Page@select^0,c
 25539  019716  EC3F  F0D2         	call	_Select_Page	;wreg free
 25540  01971A                     
 25541                           ;main.c: 91:     Command_Write(0b10111000);
 25542  01971A  0EB8               	movlw	184
 25543  01971C  EC4C  F0D3         	call	_Command_Write
 25544  019720                     
 25545                           ;main.c: 92:     Command_Write(0b01000000);
 25546  019720  0E40               	movlw	64
 25547  019722  EC4C  F0D3         	call	_Command_Write
 25548                           
 25549                           ;main.c: 93:     Display_Message("Settings");
 25550  019726  0E78               	movlw	low STR_12
 25551  019728  6E08               	movwf	Display_Message@message^0,c
 25552  01972A  0EFF               	movlw	high STR_12
 25553  01972C  6E09               	movwf	(Display_Message@message+1)^0,c
 25554  01972E  EC74  F0CE         	call	_Display_Message	;wreg free
 25555  019732                     
 25556                           ;main.c: 95:     Select_Page(0);
 25557  019732  0E00               	movlw	0
 25558  019734  6E02               	movwf	(Select_Page@select+1)^0,c
 25559  019736  0E00               	movlw	0
 25560  019738  6E01               	movwf	Select_Page@select^0,c
 25561  01973A  EC3F  F0D2         	call	_Select_Page	;wreg free
 25562  01973E                     
 25563                           ;main.c: 96:     Command_Write(0b10111010);
 25564  01973E  0EBA               	movlw	186
 25565  019740  EC4C  F0D3         	call	_Command_Write
 25566  019744                     
 25567                           ;main.c: 97:     Command_Write(0b01000000);
 25568  019744  0E40               	movlw	64
 25569  019746  EC4C  F0D3         	call	_Command_Write
 25570  01974A                     
 25571                           ;main.c: 98:     Display_Message("UART");
 25572  01974A  0EDC               	movlw	low STR_21
 25573  01974C  6E08               	movwf	Display_Message@message^0,c
 25574  01974E  0EFF               	movlw	high STR_21
 25575  019750  6E09               	movwf	(Display_Message@message+1)^0,c
 25576  019752  EC74  F0CE         	call	_Display_Message	;wreg free
 25577  019756                     
 25578                           ;main.c: 101:     Command_Write(0b10111100);
 25579  019756  0EBC               	movlw	188
 25580  019758  EC4C  F0D3         	call	_Command_Write
 25581  01975C                     
 25582                           ;main.c: 102:     Command_Write(0b01000000);
 25583  01975C  0E40               	movlw	64
 25584  01975E  EC4C  F0D3         	call	_Command_Write
 25585  019762                     
 25586                           ;main.c: 103:     Display_Message("Error");
 25587  019762  0ECA               	movlw	low STR_13
 25588  019764  6E08               	movwf	Display_Message@message^0,c
 25589  019766  0EFF               	movlw	high STR_13
 25590  019768  6E09               	movwf	(Display_Message@message+1)^0,c
 25591  01976A  EC74  F0CE         	call	_Display_Message	;wreg free
 25592  01976E                     
 25593                           ;main.c: 105:     Cursor_drawing();
 25594  01976E  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 25595  019772  0012               	return		;funcret
 25596  019774                     __end_of_Settings_Menu:
 25597                           	callstack 0
 25598                           
 25599 ;; *************** function _Minimum_Error_Select *****************
 25600 ;; Defined at:
 25601 ;;		line 485 in file "main.c"
 25602 ;; Parameters:    Size  Location     Type
 25603 ;;		None
 25604 ;; Auto vars:     Size  Location     Type
 25605 ;;		None
 25606 ;; Return value:  Size  Location     Type
 25607 ;;                  1    wreg      void 
 25608 ;; Registers used:
 25609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25610 ;; Tracked objects:
 25611 ;;		On entry : 0/0
 25612 ;;		On exit  : 0/0
 25613 ;;		Unchanged: 0/0
 25614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;Total ram usage:        0 bytes
 25620 ;; Hardware stack levels used:    1
 25621 ;; Hardware stack levels required when called:   10
 25622 ;; This function calls:
 25623 ;;		_Command_Write
 25624 ;;		_Display_Message
 25625 ;;		_GLCD_Clear
 25626 ;;		_Number_Select
 25627 ;;		_Select_Page
 25628 ;;		_sprintf
 25629 ;; This function is called by:
 25630 ;;		_Menu_Logic
 25631 ;; This function uses a non-reentrant model
 25632 ;;
 25633                           
 25634                           	psect	text93
 25635  018B76                     __ptext93:
 25636                           	callstack 0
 25637  018B76                     _Minimum_Error_Select:
 25638                           	callstack 17
 25639  018B76                     
 25640                           ;main.c: 486:     GLCD_Clear();
 25641  018B76  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25642  018B7A                     
 25643                           ;main.c: 487:     sprintf(numberDisplayed, "%d", errorMin);
 25644  018B7A  0E77               	movlw	low _numberDisplayed
 25645  018B7C  6E58               	movwf	sprintf@s^0,c
 25646  018B7E  0E01               	movlw	high _numberDisplayed
 25647  018B80  6E59               	movwf	(sprintf@s+1)^0,c
 25648  018B82  0EFC               	movlw	low STR_28
 25649  018B84  6E5A               	movwf	sprintf@fmt^0,c
 25650  018B86  0EFF               	movlw	high STR_28
 25651  018B88  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25652  018B8A  C10D  F05C         	movff	_errorMin,?_sprintf+4
 25653  018B8E  C10E  F05D         	movff	_errorMin+1,?_sprintf+5
 25654  018B92  C10F  F05E         	movff	_errorMin+2,?_sprintf+6
 25655  018B96  C110  F05F         	movff	_errorMin+3,?_sprintf+7
 25656  018B9A  EC1B  F0D1         	call	_sprintf	;wreg free
 25657                           
 25658                           ;main.c: 488:     while (PORTBbits.RB0 == 0) {
 25659  018B9E  EF1C  F0C6         	goto	l10837
 25660  018BA2                     l10815:
 25661                           
 25662                           ;main.c: 489:         Select_Page(0);
 25663  018BA2  0E00               	movlw	0
 25664  018BA4  6E02               	movwf	(Select_Page@select+1)^0,c
 25665  018BA6  0E00               	movlw	0
 25666  018BA8  6E01               	movwf	Select_Page@select^0,c
 25667  018BAA  EC3F  F0D2         	call	_Select_Page	;wreg free
 25668  018BAE                     
 25669                           ;main.c: 490:         Command_Write(0b10111010);
 25670  018BAE  0EBA               	movlw	186
 25671  018BB0  EC4C  F0D3         	call	_Command_Write
 25672  018BB4                     
 25673                           ;main.c: 491:         Command_Write(0b01000000);
 25674  018BB4  0E40               	movlw	64
 25675  018BB6  EC4C  F0D3         	call	_Command_Write
 25676  018BBA                     
 25677                           ;main.c: 492:         Display_Message("Minimum");
 25678  018BBA  0E91               	movlw	low STR_49
 25679  018BBC  6E08               	movwf	Display_Message@message^0,c
 25680  018BBE  0EFF               	movlw	high STR_49
 25681  018BC0  6E09               	movwf	(Display_Message@message+1)^0,c
 25682  018BC2  EC74  F0CE         	call	_Display_Message	;wreg free
 25683  018BC6                     
 25684                           ;main.c: 495:         Command_Write(0b10111100);
 25685  018BC6  0EBC               	movlw	188
 25686  018BC8  EC4C  F0D3         	call	_Command_Write
 25687  018BCC                     
 25688                           ;main.c: 496:         Command_Write(0b01000000);
 25689  018BCC  0E40               	movlw	64
 25690  018BCE  EC4C  F0D3         	call	_Command_Write
 25691  018BD2                     
 25692                           ;main.c: 497:         Display_Message("Range");
 25693  018BD2  0EF4               	movlw	low (STR_59+8)
 25694  018BD4  6E08               	movwf	Display_Message@message^0,c
 25695  018BD6  0EFE               	movlw	high (STR_59+8)
 25696  018BD8  6E09               	movwf	(Display_Message@message+1)^0,c
 25697  018BDA  EC74  F0CE         	call	_Display_Message	;wreg free
 25698                           
 25699                           ;main.c: 499:         Select_Page(1);
 25700  018BDE  0E00               	movlw	0
 25701  018BE0  6E02               	movwf	(Select_Page@select+1)^0,c
 25702  018BE2  0E01               	movlw	1
 25703  018BE4  6E01               	movwf	Select_Page@select^0,c
 25704  018BE6  EC3F  F0D2         	call	_Select_Page	;wreg free
 25705  018BEA                     
 25706                           ;main.c: 500:         Command_Write(0b10111011);
 25707  018BEA  0EBB               	movlw	187
 25708  018BEC  EC4C  F0D3         	call	_Command_Write
 25709  018BF0                     
 25710                           ;main.c: 501:         Command_Write(0b01000000);
 25711  018BF0  0E40               	movlw	64
 25712  018BF2  EC4C  F0D3         	call	_Command_Write
 25713  018BF6                     
 25714                           ;main.c: 502:         Display_Message(numberDisplayed);
 25715  018BF6  0E77               	movlw	low _numberDisplayed
 25716  018BF8  6E08               	movwf	Display_Message@message^0,c
 25717  018BFA  0E01               	movlw	high _numberDisplayed
 25718  018BFC  6E09               	movwf	(Display_Message@message+1)^0,c
 25719  018BFE  EC74  F0CE         	call	_Display_Message	;wreg free
 25720  018C02                     
 25721                           ;main.c: 504:         errorMin = Number_Select(errorMin, 999999);
 25722  018C02  C10D  F06E         	movff	_errorMin,Number_Select@number
 25723  018C06  C10E  F06F         	movff	_errorMin+1,Number_Select@number+1
 25724  018C0A  C10F  F070         	movff	_errorMin+2,Number_Select@number+2
 25725  018C0E  C110  F071         	movff	_errorMin+3,Number_Select@number+3
 25726  018C12  0E3F               	movlw	63
 25727  018C14  0100               	movlb	0	; () banked
 25728  018C16  6F72               	movwf	Number_Select@max& (0+255),b
 25729  018C18  0E42               	movlw	66
 25730  018C1A  6F73               	movwf	(Number_Select@max+1)& (0+255),b
 25731  018C1C  0E0F               	movlw	15
 25732  018C1E  6F74               	movwf	(Number_Select@max+2)& (0+255),b
 25733  018C20  0E00               	movlw	0
 25734  018C22  6F75               	movwf	(Number_Select@max+3)& (0+255),b
 25735  018C24  EC82  F0AB         	call	_Number_Select	;wreg free
 25736  018C28  C06E  F10D         	movff	?_Number_Select,_errorMin
 25737  018C2C  C06F  F10E         	movff	?_Number_Select+1,_errorMin+1
 25738  018C30  C070  F10F         	movff	?_Number_Select+2,_errorMin+2
 25739  018C34  C071  F110         	movff	?_Number_Select+3,_errorMin+3
 25740  018C38                     l10837:
 25741                           
 25742                           ;main.c: 488:     while (PORTBbits.RB0 == 0) {
 25743  018C38  A0CB               	btfss	203,0,c	;volatile
 25744  018C3A  EF21  F0C6         	goto	u12991
 25745  018C3E  EF23  F0C6         	goto	u12990
 25746  018C42                     u12991:
 25747  018C42  EFD1  F0C5         	goto	l10815
 25748  018C46                     u12990:
 25749  018C46                     
 25750                           ;main.c: 506:     GLCD_Clear();
 25751  018C46  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25752  018C4A  0012               	return		;funcret
 25753  018C4C                     __end_of_Minimum_Error_Select:
 25754                           	callstack 0
 25755                           
 25756 ;; *************** function _Maximum_Error_Select *****************
 25757 ;; Defined at:
 25758 ;;		line 461 in file "main.c"
 25759 ;; Parameters:    Size  Location     Type
 25760 ;;		None
 25761 ;; Auto vars:     Size  Location     Type
 25762 ;;		None
 25763 ;; Return value:  Size  Location     Type
 25764 ;;                  1    wreg      void 
 25765 ;; Registers used:
 25766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25767 ;; Tracked objects:
 25768 ;;		On entry : 0/0
 25769 ;;		On exit  : 0/0
 25770 ;;		Unchanged: 0/0
 25771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25776 ;;Total ram usage:        0 bytes
 25777 ;; Hardware stack levels used:    1
 25778 ;; Hardware stack levels required when called:   10
 25779 ;; This function calls:
 25780 ;;		_Command_Write
 25781 ;;		_Display_Message
 25782 ;;		_GLCD_Clear
 25783 ;;		_Number_Select
 25784 ;;		_Select_Page
 25785 ;;		_sprintf
 25786 ;; This function is called by:
 25787 ;;		_Menu_Logic
 25788 ;; This function uses a non-reentrant model
 25789 ;;
 25790                           
 25791                           	psect	text94
 25792  018C4C                     __ptext94:
 25793                           	callstack 0
 25794  018C4C                     _Maximum_Error_Select:
 25795                           	callstack 17
 25796  018C4C                     
 25797                           ;main.c: 462:     GLCD_Clear();
 25798  018C4C  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25799  018C50                     
 25800                           ;main.c: 463:     sprintf(numberDisplayed, "%d", errorMax);
 25801  018C50  0E77               	movlw	low _numberDisplayed
 25802  018C52  6E58               	movwf	sprintf@s^0,c
 25803  018C54  0E01               	movlw	high _numberDisplayed
 25804  018C56  6E59               	movwf	(sprintf@s+1)^0,c
 25805  018C58  0EFC               	movlw	low STR_28
 25806  018C5A  6E5A               	movwf	sprintf@fmt^0,c
 25807  018C5C  0EFF               	movlw	high STR_28
 25808  018C5E  6E5B               	movwf	(sprintf@fmt+1)^0,c
 25809  018C60  C111  F05C         	movff	_errorMax,?_sprintf+4
 25810  018C64  C112  F05D         	movff	_errorMax+1,?_sprintf+5
 25811  018C68  C113  F05E         	movff	_errorMax+2,?_sprintf+6
 25812  018C6C  C114  F05F         	movff	_errorMax+3,?_sprintf+7
 25813  018C70  EC1B  F0D1         	call	_sprintf	;wreg free
 25814                           
 25815                           ;main.c: 464:     while (PORTBbits.RB0 == 0) {
 25816  018C74  EF87  F0C6         	goto	l10807
 25817  018C78                     l10785:
 25818                           
 25819                           ;main.c: 465:         Select_Page(0);
 25820  018C78  0E00               	movlw	0
 25821  018C7A  6E02               	movwf	(Select_Page@select+1)^0,c
 25822  018C7C  0E00               	movlw	0
 25823  018C7E  6E01               	movwf	Select_Page@select^0,c
 25824  018C80  EC3F  F0D2         	call	_Select_Page	;wreg free
 25825  018C84                     
 25826                           ;main.c: 466:         Command_Write(0b10111010);
 25827  018C84  0EBA               	movlw	186
 25828  018C86  EC4C  F0D3         	call	_Command_Write
 25829  018C8A                     
 25830                           ;main.c: 467:         Command_Write(0b01000000);
 25831  018C8A  0E40               	movlw	64
 25832  018C8C  EC4C  F0D3         	call	_Command_Write
 25833  018C90                     
 25834                           ;main.c: 468:         Display_Message("Maximum");
 25835  018C90  0E99               	movlw	low STR_46
 25836  018C92  6E08               	movwf	Display_Message@message^0,c
 25837  018C94  0EFF               	movlw	high STR_46
 25838  018C96  6E09               	movwf	(Display_Message@message+1)^0,c
 25839  018C98  EC74  F0CE         	call	_Display_Message	;wreg free
 25840  018C9C                     
 25841                           ;main.c: 471:         Command_Write(0b10111100);
 25842  018C9C  0EBC               	movlw	188
 25843  018C9E  EC4C  F0D3         	call	_Command_Write
 25844  018CA2                     
 25845                           ;main.c: 472:         Command_Write(0b01000000);
 25846  018CA2  0E40               	movlw	64
 25847  018CA4  EC4C  F0D3         	call	_Command_Write
 25848  018CA8                     
 25849                           ;main.c: 473:         Display_Message("Range");
 25850  018CA8  0EF4               	movlw	low (STR_59+8)
 25851  018CAA  6E08               	movwf	Display_Message@message^0,c
 25852  018CAC  0EFE               	movlw	high (STR_59+8)
 25853  018CAE  6E09               	movwf	(Display_Message@message+1)^0,c
 25854  018CB0  EC74  F0CE         	call	_Display_Message	;wreg free
 25855                           
 25856                           ;main.c: 475:         Select_Page(1);
 25857  018CB4  0E00               	movlw	0
 25858  018CB6  6E02               	movwf	(Select_Page@select+1)^0,c
 25859  018CB8  0E01               	movlw	1
 25860  018CBA  6E01               	movwf	Select_Page@select^0,c
 25861  018CBC  EC3F  F0D2         	call	_Select_Page	;wreg free
 25862  018CC0                     
 25863                           ;main.c: 476:         Command_Write(0b10111011);
 25864  018CC0  0EBB               	movlw	187
 25865  018CC2  EC4C  F0D3         	call	_Command_Write
 25866  018CC6                     
 25867                           ;main.c: 477:         Command_Write(0b01000000);
 25868  018CC6  0E40               	movlw	64
 25869  018CC8  EC4C  F0D3         	call	_Command_Write
 25870  018CCC                     
 25871                           ;main.c: 478:         Display_Message(numberDisplayed);
 25872  018CCC  0E77               	movlw	low _numberDisplayed
 25873  018CCE  6E08               	movwf	Display_Message@message^0,c
 25874  018CD0  0E01               	movlw	high _numberDisplayed
 25875  018CD2  6E09               	movwf	(Display_Message@message+1)^0,c
 25876  018CD4  EC74  F0CE         	call	_Display_Message	;wreg free
 25877  018CD8                     
 25878                           ;main.c: 480:         errorMax = Number_Select(errorMax, 999999);
 25879  018CD8  C111  F06E         	movff	_errorMax,Number_Select@number
 25880  018CDC  C112  F06F         	movff	_errorMax+1,Number_Select@number+1
 25881  018CE0  C113  F070         	movff	_errorMax+2,Number_Select@number+2
 25882  018CE4  C114  F071         	movff	_errorMax+3,Number_Select@number+3
 25883  018CE8  0E3F               	movlw	63
 25884  018CEA  0100               	movlb	0	; () banked
 25885  018CEC  6F72               	movwf	Number_Select@max& (0+255),b
 25886  018CEE  0E42               	movlw	66
 25887  018CF0  6F73               	movwf	(Number_Select@max+1)& (0+255),b
 25888  018CF2  0E0F               	movlw	15
 25889  018CF4  6F74               	movwf	(Number_Select@max+2)& (0+255),b
 25890  018CF6  0E00               	movlw	0
 25891  018CF8  6F75               	movwf	(Number_Select@max+3)& (0+255),b
 25892  018CFA  EC82  F0AB         	call	_Number_Select	;wreg free
 25893  018CFE  C06E  F111         	movff	?_Number_Select,_errorMax
 25894  018D02  C06F  F112         	movff	?_Number_Select+1,_errorMax+1
 25895  018D06  C070  F113         	movff	?_Number_Select+2,_errorMax+2
 25896  018D0A  C071  F114         	movff	?_Number_Select+3,_errorMax+3
 25897  018D0E                     l10807:
 25898                           
 25899                           ;main.c: 464:     while (PORTBbits.RB0 == 0) {
 25900  018D0E  A0CB               	btfss	203,0,c	;volatile
 25901  018D10  EF8C  F0C6         	goto	u12981
 25902  018D14  EF8E  F0C6         	goto	u12980
 25903  018D18                     u12981:
 25904  018D18  EF3C  F0C6         	goto	l10785
 25905  018D1C                     u12980:
 25906  018D1C                     
 25907                           ;main.c: 482:     GLCD_Clear();
 25908  018D1C  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25909  018D20  0012               	return		;funcret
 25910  018D22                     __end_of_Maximum_Error_Select:
 25911                           	callstack 0
 25912                           
 25913 ;; *************** function _Error_select_range *****************
 25914 ;; Defined at:
 25915 ;;		line 509 in file "main.c"
 25916 ;; Parameters:    Size  Location     Type
 25917 ;;		None
 25918 ;; Auto vars:     Size  Location     Type
 25919 ;;		None
 25920 ;; Return value:  Size  Location     Type
 25921 ;;                  1    wreg      void 
 25922 ;; Registers used:
 25923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25924 ;; Tracked objects:
 25925 ;;		On entry : 0/0
 25926 ;;		On exit  : 0/0
 25927 ;;		Unchanged: 0/0
 25928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25933 ;;Total ram usage:        0 bytes
 25934 ;; Hardware stack levels used:    1
 25935 ;; Hardware stack levels required when called:    3
 25936 ;; This function calls:
 25937 ;;		_Command_Write
 25938 ;;		_Cursor_drawing
 25939 ;;		_Display_Message
 25940 ;;		_GLCD_Clear
 25941 ;;		_Select_Page
 25942 ;; This function is called by:
 25943 ;;		_Menu_Logic
 25944 ;; This function uses a non-reentrant model
 25945 ;;
 25946                           
 25947                           	psect	text95
 25948  019774                     __ptext95:
 25949                           	callstack 0
 25950  019774                     _Error_select_range:
 25951                           	callstack 24
 25952  019774                     
 25953                           ;main.c: 510:     GLCD_Clear();
 25954  019774  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 25955                           
 25956                           ;main.c: 511:     Select_Page(0);
 25957  019778  0E00               	movlw	0
 25958  01977A  6E02               	movwf	(Select_Page@select+1)^0,c
 25959  01977C  0E00               	movlw	0
 25960  01977E  6E01               	movwf	Select_Page@select^0,c
 25961  019780  EC3F  F0D2         	call	_Select_Page	;wreg free
 25962  019784                     
 25963                           ;main.c: 512:     Command_Write(0b10111000);
 25964  019784  0EB8               	movlw	184
 25965  019786  EC4C  F0D3         	call	_Command_Write
 25966  01978A                     
 25967                           ;main.c: 513:     Command_Write(0b01011100);
 25968  01978A  0E5C               	movlw	92
 25969  01978C  EC4C  F0D3         	call	_Command_Write
 25970  019790                     
 25971                           ;main.c: 514:     Display_Message("Error");
 25972  019790  0ECA               	movlw	low STR_13
 25973  019792  6E08               	movwf	Display_Message@message^0,c
 25974  019794  0EFF               	movlw	high STR_13
 25975  019796  6E09               	movwf	(Display_Message@message+1)^0,c
 25976  019798  EC74  F0CE         	call	_Display_Message	;wreg free
 25977  01979C                     
 25978                           ;main.c: 516:     Select_Page(1);
 25979  01979C  0E00               	movlw	0
 25980  01979E  6E02               	movwf	(Select_Page@select+1)^0,c
 25981  0197A0  0E01               	movlw	1
 25982  0197A2  6E01               	movwf	Select_Page@select^0,c
 25983  0197A4  EC3F  F0D2         	call	_Select_Page	;wreg free
 25984  0197A8                     
 25985                           ;main.c: 517:     Command_Write(0b10111000);
 25986  0197A8  0EB8               	movlw	184
 25987  0197AA  EC4C  F0D3         	call	_Command_Write
 25988  0197AE                     
 25989                           ;main.c: 518:     Command_Write(0b01000000);
 25990  0197AE  0E40               	movlw	64
 25991  0197B0  EC4C  F0D3         	call	_Command_Write
 25992                           
 25993                           ;main.c: 519:     Display_Message("Settings");
 25994  0197B4  0E78               	movlw	low STR_12
 25995  0197B6  6E08               	movwf	Display_Message@message^0,c
 25996  0197B8  0EFF               	movlw	high STR_12
 25997  0197BA  6E09               	movwf	(Display_Message@message+1)^0,c
 25998  0197BC  EC74  F0CE         	call	_Display_Message	;wreg free
 25999  0197C0                     
 26000                           ;main.c: 521:     Select_Page(0);
 26001  0197C0  0E00               	movlw	0
 26002  0197C2  6E02               	movwf	(Select_Page@select+1)^0,c
 26003  0197C4  0E00               	movlw	0
 26004  0197C6  6E01               	movwf	Select_Page@select^0,c
 26005  0197C8  EC3F  F0D2         	call	_Select_Page	;wreg free
 26006  0197CC                     
 26007                           ;main.c: 522:     Command_Write(0b10111010);
 26008  0197CC  0EBA               	movlw	186
 26009  0197CE  EC4C  F0D3         	call	_Command_Write
 26010  0197D2                     
 26011                           ;main.c: 523:     Command_Write(0b01000000);
 26012  0197D2  0E40               	movlw	64
 26013  0197D4  EC4C  F0D3         	call	_Command_Write
 26014  0197D8                     
 26015                           ;main.c: 524:     Display_Message("Maximum");
 26016  0197D8  0E99               	movlw	low STR_46
 26017  0197DA  6E08               	movwf	Display_Message@message^0,c
 26018  0197DC  0EFF               	movlw	high STR_46
 26019  0197DE  6E09               	movwf	(Display_Message@message+1)^0,c
 26020  0197E0  EC74  F0CE         	call	_Display_Message	;wreg free
 26021  0197E4                     
 26022                           ;main.c: 527:     Command_Write(0b10111100);
 26023  0197E4  0EBC               	movlw	188
 26024  0197E6  EC4C  F0D3         	call	_Command_Write
 26025  0197EA                     
 26026                           ;main.c: 528:     Command_Write(0b01000000);
 26027  0197EA  0E40               	movlw	64
 26028  0197EC  EC4C  F0D3         	call	_Command_Write
 26029  0197F0                     
 26030                           ;main.c: 529:     Display_Message("Minimum");
 26031  0197F0  0E91               	movlw	low STR_49
 26032  0197F2  6E08               	movwf	Display_Message@message^0,c
 26033  0197F4  0EFF               	movlw	high STR_49
 26034  0197F6  6E09               	movwf	(Display_Message@message+1)^0,c
 26035  0197F8  EC74  F0CE         	call	_Display_Message	;wreg free
 26036  0197FC                     
 26037                           ;main.c: 531:     Cursor_drawing();
 26038  0197FC  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 26039  019800  0012               	return		;funcret
 26040  019802                     __end_of_Error_select_range:
 26041                           	callstack 0
 26042                           
 26043 ;; *************** function _Error_Settings *****************
 26044 ;; Defined at:
 26045 ;;		line 534 in file "main.c"
 26046 ;; Parameters:    Size  Location     Type
 26047 ;;		None
 26048 ;; Auto vars:     Size  Location     Type
 26049 ;;  errorcheckCh    1   10[BANK0 ] unsigned char [1]
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  1    wreg      void 
 26052 ;; Registers used:
 26053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26062 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26063 ;;Total ram usage:        1 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:    8
 26066 ;; This function calls:
 26067 ;;		_Command_Write
 26068 ;;		_Cursor_drawing
 26069 ;;		_Display_Message
 26070 ;;		_GLCD_Clear
 26071 ;;		_Select_Page
 26072 ;;		_sprintf
 26073 ;; This function is called by:
 26074 ;;		_Menu_Logic
 26075 ;; This function uses a non-reentrant model
 26076 ;;
 26077                           
 26078                           	psect	text96
 26079  018812                     __ptext96:
 26080                           	callstack 0
 26081  018812                     _Error_Settings:
 26082                           	callstack 19
 26083  018812                     
 26084                           ;main.c: 535:     char errorcheckChar[1];;main.c: 536:     sprintf(errorcheckChar, "%d",
      +                           errorCheck);
 26085  018812  0E6A               	movlw	low Error_Settings@errorcheckChar
 26086  018814  6E58               	movwf	sprintf@s^0,c
 26087  018816  0E00               	movlw	high Error_Settings@errorcheckChar
 26088  018818  6E59               	movwf	(sprintf@s+1)^0,c
 26089  01881A  0EFC               	movlw	low STR_28
 26090  01881C  6E5A               	movwf	sprintf@fmt^0,c
 26091  01881E  0EFF               	movlw	high STR_28
 26092  018820  6E5B               	movwf	(sprintf@fmt+1)^0,c
 26093  018822  C12B  F05C         	movff	_errorCheck,?_sprintf+4
 26094  018826  C12C  F05D         	movff	_errorCheck+1,?_sprintf+5
 26095  01882A  EC1B  F0D1         	call	_sprintf	;wreg free
 26096  01882E                     
 26097                           ;main.c: 538:     GLCD_Clear();
 26098  01882E  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 26099  018832                     
 26100                           ;main.c: 539:     Select_Page(0);
 26101  018832  0E00               	movlw	0
 26102  018834  6E02               	movwf	(Select_Page@select+1)^0,c
 26103  018836  0E00               	movlw	0
 26104  018838  6E01               	movwf	Select_Page@select^0,c
 26105  01883A  EC3F  F0D2         	call	_Select_Page	;wreg free
 26106  01883E                     
 26107                           ;main.c: 540:     Command_Write(0b10111000);
 26108  01883E  0EB8               	movlw	184
 26109  018840  EC4C  F0D3         	call	_Command_Write
 26110  018844                     
 26111                           ;main.c: 541:     Command_Write(0b01011100);
 26112  018844  0E5C               	movlw	92
 26113  018846  EC4C  F0D3         	call	_Command_Write
 26114  01884A                     
 26115                           ;main.c: 542:     Display_Message("Error");
 26116  01884A  0ECA               	movlw	low STR_13
 26117  01884C  6E08               	movwf	Display_Message@message^0,c
 26118  01884E  0EFF               	movlw	high STR_13
 26119  018850  6E09               	movwf	(Display_Message@message+1)^0,c
 26120  018852  EC74  F0CE         	call	_Display_Message	;wreg free
 26121  018856                     
 26122                           ;main.c: 544:     Select_Page(1);
 26123  018856  0E00               	movlw	0
 26124  018858  6E02               	movwf	(Select_Page@select+1)^0,c
 26125  01885A  0E01               	movlw	1
 26126  01885C  6E01               	movwf	Select_Page@select^0,c
 26127  01885E  EC3F  F0D2         	call	_Select_Page	;wreg free
 26128  018862                     
 26129                           ;main.c: 545:     Command_Write(0b10111000);
 26130  018862  0EB8               	movlw	184
 26131  018864  EC4C  F0D3         	call	_Command_Write
 26132  018868                     
 26133                           ;main.c: 546:     Command_Write(0b01000000);
 26134  018868  0E40               	movlw	64
 26135  01886A  EC4C  F0D3         	call	_Command_Write
 26136  01886E                     
 26137                           ;main.c: 547:     Display_Message("Settings");
 26138  01886E  0E78               	movlw	low STR_12
 26139  018870  6E08               	movwf	Display_Message@message^0,c
 26140  018872  0EFF               	movlw	high STR_12
 26141  018874  6E09               	movwf	(Display_Message@message+1)^0,c
 26142  018876  EC74  F0CE         	call	_Display_Message	;wreg free
 26143  01887A                     
 26144                           ;main.c: 550:     Select_Page(0);
 26145  01887A  0E00               	movlw	0
 26146  01887C  6E02               	movwf	(Select_Page@select+1)^0,c
 26147  01887E  0E00               	movlw	0
 26148  018880  6E01               	movwf	Select_Page@select^0,c
 26149  018882  EC3F  F0D2         	call	_Select_Page	;wreg free
 26150  018886                     
 26151                           ;main.c: 551:     Command_Write(0b10111010);
 26152  018886  0EBA               	movlw	186
 26153  018888  EC4C  F0D3         	call	_Command_Write
 26154  01888C                     
 26155                           ;main.c: 552:     Command_Write(0b01000000);
 26156  01888C  0E40               	movlw	64
 26157  01888E  EC4C  F0D3         	call	_Command_Write
 26158  018892                     
 26159                           ;main.c: 553:     Display_Message("Error Check");
 26160  018892  0E39               	movlw	low STR_58
 26161  018894  6E08               	movwf	Display_Message@message^0,c
 26162  018896  0EFF               	movlw	high STR_58
 26163  018898  6E09               	movwf	(Display_Message@message+1)^0,c
 26164  01889A  EC74  F0CE         	call	_Display_Message	;wreg free
 26165  01889E                     
 26166                           ;main.c: 555:     Select_Page(1);
 26167  01889E  0E00               	movlw	0
 26168  0188A0  6E02               	movwf	(Select_Page@select+1)^0,c
 26169  0188A2  0E01               	movlw	1
 26170  0188A4  6E01               	movwf	Select_Page@select^0,c
 26171  0188A6  EC3F  F0D2         	call	_Select_Page	;wreg free
 26172  0188AA                     
 26173                           ;main.c: 556:     Command_Write(0b10111010);
 26174  0188AA  0EBA               	movlw	186
 26175  0188AC  EC4C  F0D3         	call	_Command_Write
 26176  0188B0                     
 26177                           ;main.c: 557:     Command_Write(0b01100000);
 26178  0188B0  0E60               	movlw	96
 26179  0188B2  EC4C  F0D3         	call	_Command_Write
 26180  0188B6                     
 26181                           ;main.c: 558:     Display_Message(errorcheckChar);
 26182  0188B6  0E6A               	movlw	low Error_Settings@errorcheckChar
 26183  0188B8  6E08               	movwf	Display_Message@message^0,c
 26184  0188BA  0E00               	movlw	high Error_Settings@errorcheckChar
 26185  0188BC  6E09               	movwf	(Display_Message@message+1)^0,c
 26186  0188BE  EC74  F0CE         	call	_Display_Message	;wreg free
 26187  0188C2                     
 26188                           ;main.c: 560:     Select_Page(0);
 26189  0188C2  0E00               	movlw	0
 26190  0188C4  6E02               	movwf	(Select_Page@select+1)^0,c
 26191  0188C6  0E00               	movlw	0
 26192  0188C8  6E01               	movwf	Select_Page@select^0,c
 26193  0188CA  EC3F  F0D2         	call	_Select_Page	;wreg free
 26194  0188CE                     
 26195                           ;main.c: 562:     Command_Write(0b10111100);
 26196  0188CE  0EBC               	movlw	188
 26197  0188D0  EC4C  F0D3         	call	_Command_Write
 26198  0188D4                     
 26199                           ;main.c: 563:     Command_Write(0b01000000);
 26200  0188D4  0E40               	movlw	64
 26201  0188D6  EC4C  F0D3         	call	_Command_Write
 26202  0188DA                     
 26203                           ;main.c: 564:     Display_Message("Decimal Range");
 26204  0188DA  0EEC               	movlw	low STR_59
 26205  0188DC  6E08               	movwf	Display_Message@message^0,c
 26206  0188DE  0EFE               	movlw	high STR_59
 26207  0188E0  6E09               	movwf	(Display_Message@message+1)^0,c
 26208  0188E2  EC74  F0CE         	call	_Display_Message	;wreg free
 26209  0188E6                     
 26210                           ;main.c: 566:     Cursor_drawing();
 26211  0188E6  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 26212  0188EA  0012               	return		;funcret
 26213  0188EC                     __end_of_Error_Settings:
 26214                           	callstack 0
 26215                           
 26216 ;; *************** function _Continous_Transmission_Length *****************
 26217 ;; Defined at:
 26218 ;;		line 569 in file "main.c"
 26219 ;; Parameters:    Size  Location     Type
 26220 ;;		None
 26221 ;; Auto vars:     Size  Location     Type
 26222 ;;		None
 26223 ;; Return value:  Size  Location     Type
 26224 ;;                  1    wreg      void 
 26225 ;; Registers used:
 26226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26227 ;; Tracked objects:
 26228 ;;		On entry : 0/0
 26229 ;;		On exit  : 0/0
 26230 ;;		Unchanged: 0/0
 26231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26236 ;;Total ram usage:        0 bytes
 26237 ;; Hardware stack levels used:    1
 26238 ;; Hardware stack levels required when called:   10
 26239 ;; This function calls:
 26240 ;;		_Command_Write
 26241 ;;		_Display_Message
 26242 ;;		_GLCD_Clear
 26243 ;;		_Number_Select
 26244 ;;		_Select_Page
 26245 ;;		_sprintf
 26246 ;; This function is called by:
 26247 ;;		_Menu_Logic
 26248 ;; This function uses a non-reentrant model
 26249 ;;
 26250                           
 26251                           	psect	text97
 26252  018D22                     __ptext97:
 26253                           	callstack 0
 26254  018D22                     _Continous_Transmission_Length:
 26255                           	callstack 17
 26256  018D22                     
 26257                           ;main.c: 570:     GLCD_Clear();
 26258  018D22  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 26259  018D26                     
 26260                           ;main.c: 571:     sprintf(numberDisplayed, "%d", length);
 26261  018D26  0E77               	movlw	low _numberDisplayed
 26262  018D28  6E58               	movwf	sprintf@s^0,c
 26263  018D2A  0E01               	movlw	high _numberDisplayed
 26264  018D2C  6E59               	movwf	(sprintf@s+1)^0,c
 26265  018D2E  0EFC               	movlw	low STR_28
 26266  018D30  6E5A               	movwf	sprintf@fmt^0,c
 26267  018D32  0EFF               	movlw	high STR_28
 26268  018D34  6E5B               	movwf	(sprintf@fmt+1)^0,c
 26269  018D36  C115  F05C         	movff	_length,?_sprintf+4
 26270  018D3A  C116  F05D         	movff	_length+1,?_sprintf+5
 26271  018D3E  C117  F05E         	movff	_length+2,?_sprintf+6
 26272  018D42  C118  F05F         	movff	_length+3,?_sprintf+7
 26273  018D46  EC1B  F0D1         	call	_sprintf	;wreg free
 26274                           
 26275                           ;main.c: 572:     while (PORTBbits.RB0 == 0) {
 26276  018D4A  EFF2  F0C6         	goto	l10943
 26277  018D4E                     l10921:
 26278                           
 26279                           ;main.c: 573:         Select_Page(0);
 26280  018D4E  0E00               	movlw	0
 26281  018D50  6E02               	movwf	(Select_Page@select+1)^0,c
 26282  018D52  0E00               	movlw	0
 26283  018D54  6E01               	movwf	Select_Page@select^0,c
 26284  018D56  EC3F  F0D2         	call	_Select_Page	;wreg free
 26285  018D5A                     
 26286                           ;main.c: 574:         Command_Write(0b10111010);
 26287  018D5A  0EBA               	movlw	186
 26288  018D5C  EC4C  F0D3         	call	_Command_Write
 26289  018D60                     
 26290                           ;main.c: 575:         Command_Write(0b01000000);
 26291  018D60  0E40               	movlw	64
 26292  018D62  EC4C  F0D3         	call	_Command_Write
 26293  018D66                     
 26294                           ;main.c: 576:         Display_Message("Transmission");
 26295  018D66  0E07               	movlw	low STR_16
 26296  018D68  6E08               	movwf	Display_Message@message^0,c
 26297  018D6A  0EFF               	movlw	high STR_16
 26298  018D6C  6E09               	movwf	(Display_Message@message+1)^0,c
 26299  018D6E  EC74  F0CE         	call	_Display_Message	;wreg free
 26300  018D72                     
 26301                           ;main.c: 579:         Command_Write(0b10111100);
 26302  018D72  0EBC               	movlw	188
 26303  018D74  EC4C  F0D3         	call	_Command_Write
 26304  018D78                     
 26305                           ;main.c: 580:         Command_Write(0b01000000);
 26306  018D78  0E40               	movlw	64
 26307  018D7A  EC4C  F0D3         	call	_Command_Write
 26308  018D7E                     
 26309                           ;main.c: 581:         Display_Message("Length");
 26310  018D7E  0EAF               	movlw	low STR_62
 26311  018D80  6E08               	movwf	Display_Message@message^0,c
 26312  018D82  0EFF               	movlw	high STR_62
 26313  018D84  6E09               	movwf	(Display_Message@message+1)^0,c
 26314  018D86  EC74  F0CE         	call	_Display_Message	;wreg free
 26315                           
 26316                           ;main.c: 583:         Select_Page(1);
 26317  018D8A  0E00               	movlw	0
 26318  018D8C  6E02               	movwf	(Select_Page@select+1)^0,c
 26319  018D8E  0E01               	movlw	1
 26320  018D90  6E01               	movwf	Select_Page@select^0,c
 26321  018D92  EC3F  F0D2         	call	_Select_Page	;wreg free
 26322  018D96                     
 26323                           ;main.c: 584:         Command_Write(0b10111011);
 26324  018D96  0EBB               	movlw	187
 26325  018D98  EC4C  F0D3         	call	_Command_Write
 26326  018D9C                     
 26327                           ;main.c: 585:         Command_Write(0b01000000);
 26328  018D9C  0E40               	movlw	64
 26329  018D9E  EC4C  F0D3         	call	_Command_Write
 26330  018DA2                     
 26331                           ;main.c: 586:         Display_Message(numberDisplayed);
 26332  018DA2  0E77               	movlw	low _numberDisplayed
 26333  018DA4  6E08               	movwf	Display_Message@message^0,c
 26334  018DA6  0E01               	movlw	high _numberDisplayed
 26335  018DA8  6E09               	movwf	(Display_Message@message+1)^0,c
 26336  018DAA  EC74  F0CE         	call	_Display_Message	;wreg free
 26337  018DAE                     
 26338                           ;main.c: 588:         length = Number_Select(length, 11);
 26339  018DAE  C115  F06E         	movff	_length,Number_Select@number
 26340  018DB2  C116  F06F         	movff	_length+1,Number_Select@number+1
 26341  018DB6  C117  F070         	movff	_length+2,Number_Select@number+2
 26342  018DBA  C118  F071         	movff	_length+3,Number_Select@number+3
 26343  018DBE  0E0B               	movlw	11
 26344  018DC0  0100               	movlb	0	; () banked
 26345  018DC2  6F72               	movwf	Number_Select@max& (0+255),b
 26346  018DC4  0E00               	movlw	0
 26347  018DC6  6F73               	movwf	(Number_Select@max+1)& (0+255),b
 26348  018DC8  0E00               	movlw	0
 26349  018DCA  6F74               	movwf	(Number_Select@max+2)& (0+255),b
 26350  018DCC  0E00               	movlw	0
 26351  018DCE  6F75               	movwf	(Number_Select@max+3)& (0+255),b
 26352  018DD0  EC82  F0AB         	call	_Number_Select	;wreg free
 26353  018DD4  C06E  F115         	movff	?_Number_Select,_length
 26354  018DD8  C06F  F116         	movff	?_Number_Select+1,_length+1
 26355  018DDC  C070  F117         	movff	?_Number_Select+2,_length+2
 26356  018DE0  C071  F118         	movff	?_Number_Select+3,_length+3
 26357  018DE4                     l10943:
 26358                           
 26359                           ;main.c: 572:     while (PORTBbits.RB0 == 0) {
 26360  018DE4  A0CB               	btfss	203,0,c	;volatile
 26361  018DE6  EFF7  F0C6         	goto	u13001
 26362  018DEA  EFF9  F0C6         	goto	u13000
 26363  018DEE                     u13001:
 26364  018DEE  EFA7  F0C6         	goto	l10921
 26365  018DF2                     u13000:
 26366  018DF2                     
 26367                           ;main.c: 590:     GLCD_Clear();
 26368  018DF2  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 26369  018DF6  0012               	return		;funcret
 26370  018DF8                     __end_of_Continous_Transmission_Length:
 26371                           	callstack 0
 26372                           
 26373 ;; *************** function _Baud_rate_Change *****************
 26374 ;; Defined at:
 26375 ;;		line 436 in file "main.c"
 26376 ;; Parameters:    Size  Location     Type
 26377 ;;		None
 26378 ;; Auto vars:     Size  Location     Type
 26379 ;;		None
 26380 ;; Return value:  Size  Location     Type
 26381 ;;                  1    wreg      void 
 26382 ;; Registers used:
 26383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26384 ;; Tracked objects:
 26385 ;;		On entry : 0/0
 26386 ;;		On exit  : 0/0
 26387 ;;		Unchanged: 0/0
 26388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26393 ;;Total ram usage:        4 bytes
 26394 ;; Hardware stack levels used:    1
 26395 ;; Hardware stack levels required when called:   10
 26396 ;; This function calls:
 26397 ;;		_Command_Write
 26398 ;;		_Display_Message
 26399 ;;		_GLCD_Clear
 26400 ;;		_Number_Select
 26401 ;;		_Select_Page
 26402 ;;		___aldiv
 26403 ;;		_sprintf
 26404 ;; This function is called by:
 26405 ;;		_Menu_Logic
 26406 ;; This function uses a non-reentrant model
 26407 ;;
 26408                           
 26409                           	psect	text98
 26410  017CC4                     __ptext98:
 26411                           	callstack 0
 26412  017CC4                     _Baud_rate_Change:
 26413                           	callstack 17
 26414  017CC4                     
 26415                           ;main.c: 437:     GLCD_Clear();
 26416  017CC4  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 26417  017CC8                     
 26418                           ;main.c: 438:     sprintf(numberDisplayed, "%d", baudRateSelect);
 26419  017CC8  0E77               	movlw	low _numberDisplayed
 26420  017CCA  6E58               	movwf	sprintf@s^0,c
 26421  017CCC  0E01               	movlw	high _numberDisplayed
 26422  017CCE  6E59               	movwf	(sprintf@s+1)^0,c
 26423  017CD0  0EFC               	movlw	low STR_28
 26424  017CD2  6E5A               	movwf	sprintf@fmt^0,c
 26425  017CD4  0EFF               	movlw	high STR_28
 26426  017CD6  6E5B               	movwf	(sprintf@fmt+1)^0,c
 26427  017CD8  C17E  F05C         	movff	_baudRateSelect,?_sprintf+4
 26428  017CDC  C17F  F05D         	movff	_baudRateSelect+1,?_sprintf+5
 26429  017CE0  C180  F05E         	movff	_baudRateSelect+2,?_sprintf+6
 26430  017CE4  C181  F05F         	movff	_baudRateSelect+3,?_sprintf+7
 26431  017CE8  EC1B  F0D1         	call	_sprintf	;wreg free
 26432                           
 26433                           ;main.c: 439:     while (PORTBbits.RB0 == 0) {
 26434  017CEC  EFC3  F0BE         	goto	l10777
 26435  017CF0                     l10755:
 26436                           
 26437                           ;main.c: 440:         Select_Page(0);
 26438  017CF0  0E00               	movlw	0
 26439  017CF2  6E02               	movwf	(Select_Page@select+1)^0,c
 26440  017CF4  0E00               	movlw	0
 26441  017CF6  6E01               	movwf	Select_Page@select^0,c
 26442  017CF8  EC3F  F0D2         	call	_Select_Page	;wreg free
 26443  017CFC                     
 26444                           ;main.c: 441:         Command_Write(0b10111010);
 26445  017CFC  0EBA               	movlw	186
 26446  017CFE  EC4C  F0D3         	call	_Command_Write
 26447  017D02                     
 26448                           ;main.c: 442:         Command_Write(0b01000000);
 26449  017D02  0E40               	movlw	64
 26450  017D04  EC4C  F0D3         	call	_Command_Write
 26451  017D08                     
 26452                           ;main.c: 443:         Display_Message("Baud");
 26453  017D08  0EE1               	movlw	low STR_29
 26454  017D0A  6E08               	movwf	Display_Message@message^0,c
 26455  017D0C  0EFF               	movlw	high STR_29
 26456  017D0E  6E09               	movwf	(Display_Message@message+1)^0,c
 26457  017D10  EC74  F0CE         	call	_Display_Message	;wreg free
 26458  017D14                     
 26459                           ;main.c: 446:         Command_Write(0b10111100);
 26460  017D14  0EBC               	movlw	188
 26461  017D16  EC4C  F0D3         	call	_Command_Write
 26462  017D1A                     
 26463                           ;main.c: 447:         Command_Write(0b01000000);
 26464  017D1A  0E40               	movlw	64
 26465  017D1C  EC4C  F0D3         	call	_Command_Write
 26466  017D20                     
 26467                           ;main.c: 448:         Display_Message("Rate");
 26468  017D20  0EE6               	movlw	low STR_44
 26469  017D22  6E08               	movwf	Display_Message@message^0,c
 26470  017D24  0EFF               	movlw	high STR_44
 26471  017D26  6E09               	movwf	(Display_Message@message+1)^0,c
 26472  017D28  EC74  F0CE         	call	_Display_Message	;wreg free
 26473                           
 26474                           ;main.c: 450:         Select_Page(1);
 26475  017D2C  0E00               	movlw	0
 26476  017D2E  6E02               	movwf	(Select_Page@select+1)^0,c
 26477  017D30  0E01               	movlw	1
 26478  017D32  6E01               	movwf	Select_Page@select^0,c
 26479  017D34  EC3F  F0D2         	call	_Select_Page	;wreg free
 26480  017D38                     
 26481                           ;main.c: 451:         Command_Write(0b10111011);
 26482  017D38  0EBB               	movlw	187
 26483  017D3A  EC4C  F0D3         	call	_Command_Write
 26484  017D3E                     
 26485                           ;main.c: 452:         Command_Write(0b01000000);
 26486  017D3E  0E40               	movlw	64
 26487  017D40  EC4C  F0D3         	call	_Command_Write
 26488  017D44                     
 26489                           ;main.c: 453:         Display_Message(numberDisplayed);
 26490  017D44  0E77               	movlw	low _numberDisplayed
 26491  017D46  6E08               	movwf	Display_Message@message^0,c
 26492  017D48  0E01               	movlw	high _numberDisplayed
 26493  017D4A  6E09               	movwf	(Display_Message@message+1)^0,c
 26494  017D4C  EC74  F0CE         	call	_Display_Message	;wreg free
 26495  017D50                     
 26496                           ;main.c: 455:         baudRateSelect = Number_Select(baudRateSelect, 999999);
 26497  017D50  C17E  F06E         	movff	_baudRateSelect,Number_Select@number
 26498  017D54  C17F  F06F         	movff	_baudRateSelect+1,Number_Select@number+1
 26499  017D58  C180  F070         	movff	_baudRateSelect+2,Number_Select@number+2
 26500  017D5C  C181  F071         	movff	_baudRateSelect+3,Number_Select@number+3
 26501  017D60  0E3F               	movlw	63
 26502  017D62  0100               	movlb	0	; () banked
 26503  017D64  6F72               	movwf	Number_Select@max& (0+255),b
 26504  017D66  0E42               	movlw	66
 26505  017D68  6F73               	movwf	(Number_Select@max+1)& (0+255),b
 26506  017D6A  0E0F               	movlw	15
 26507  017D6C  6F74               	movwf	(Number_Select@max+2)& (0+255),b
 26508  017D6E  0E00               	movlw	0
 26509  017D70  6F75               	movwf	(Number_Select@max+3)& (0+255),b
 26510  017D72  EC82  F0AB         	call	_Number_Select	;wreg free
 26511  017D76  C06E  F17E         	movff	?_Number_Select,_baudRateSelect
 26512  017D7A  C06F  F17F         	movff	?_Number_Select+1,_baudRateSelect+1
 26513  017D7E  C070  F180         	movff	?_Number_Select+2,_baudRateSelect+2
 26514  017D82  C071  F181         	movff	?_Number_Select+3,_baudRateSelect+3
 26515  017D86                     l10777:
 26516                           
 26517                           ;main.c: 439:     while (PORTBbits.RB0 == 0) {
 26518  017D86  A0CB               	btfss	203,0,c	;volatile
 26519  017D88  EFC8  F0BE         	goto	u12971
 26520  017D8C  EFCA  F0BE         	goto	u12970
 26521  017D90                     u12971:
 26522  017D90  EF78  F0BE         	goto	l10755
 26523  017D94                     u12970:
 26524  017D94                     
 26525                           ;main.c: 457:     baudRate = (64000000 / baudRateSelect / 4) - 1;
 26526  017D94  C17E  F005         	movff	_baudRateSelect,___aldiv@divisor
 26527  017D98  C17F  F006         	movff	_baudRateSelect+1,___aldiv@divisor+1
 26528  017D9C  C180  F007         	movff	_baudRateSelect+2,___aldiv@divisor+2
 26529  017DA0  C181  F008         	movff	_baudRateSelect+3,___aldiv@divisor+3
 26530  017DA4  0E00               	movlw	0
 26531  017DA6  6E01               	movwf	___aldiv@dividend^0,c
 26532  017DA8  0E90               	movlw	144
 26533  017DAA  6E02               	movwf	(___aldiv@dividend+1)^0,c
 26534  017DAC  0ED0               	movlw	208
 26535  017DAE  6E03               	movwf	(___aldiv@dividend+2)^0,c
 26536  017DB0  0E03               	movlw	3
 26537  017DB2  6E04               	movwf	(___aldiv@dividend+3)^0,c
 26538  017DB4  ECC9  F0C0         	call	___aldiv	;wreg free
 26539  017DB8  C001  F07A         	movff	?___aldiv,_Baud_rate_Change$3996
 26540  017DBC  C002  F07B         	movff	?___aldiv+1,_Baud_rate_Change$3996+1
 26541  017DC0  C003  F07C         	movff	?___aldiv+2,_Baud_rate_Change$3996+2
 26542  017DC4  C004  F07D         	movff	?___aldiv+3,_Baud_rate_Change$3996+3
 26543                           
 26544                           ;main.c: 457:     baudRate = (64000000 / baudRateSelect / 4) - 1;
 26545  017DC8  C07A  F001         	movff	_Baud_rate_Change$3996,___aldiv@dividend
 26546  017DCC  C07B  F002         	movff	_Baud_rate_Change$3996+1,___aldiv@dividend+1
 26547  017DD0  C07C  F003         	movff	_Baud_rate_Change$3996+2,___aldiv@dividend+2
 26548  017DD4  C07D  F004         	movff	_Baud_rate_Change$3996+3,___aldiv@dividend+3
 26549  017DD8  0E04               	movlw	4
 26550  017DDA  6E05               	movwf	___aldiv@divisor^0,c
 26551  017DDC  0E00               	movlw	0
 26552  017DDE  6E06               	movwf	(___aldiv@divisor+1)^0,c
 26553  017DE0  0E00               	movlw	0
 26554  017DE2  6E07               	movwf	(___aldiv@divisor+2)^0,c
 26555  017DE4  0E00               	movlw	0
 26556  017DE6  6E08               	movwf	(___aldiv@divisor+3)^0,c
 26557  017DE8  ECC9  F0C0         	call	___aldiv	;wreg free
 26558  017DEC  0EFF               	movlw	255
 26559  017DEE  2401               	addwf	?___aldiv^0,w,c
 26560  017DF0  0101               	movlb	1	; () banked
 26561  017DF2  6FDC               	movwf	_baudRate& (0+255),b
 26562  017DF4  0EFF               	movlw	255
 26563  017DF6  2002               	addwfc	(?___aldiv+1)^0,w,c
 26564  017DF8  6FDD               	movwf	(_baudRate+1)& (0+255),b
 26565  017DFA  0EFF               	movlw	255
 26566  017DFC  2003               	addwfc	(?___aldiv+2)^0,w,c
 26567  017DFE  6FDE               	movwf	(_baudRate+2)& (0+255),b
 26568  017E00  0EFF               	movlw	255
 26569  017E02  2004               	addwfc	(?___aldiv+3)^0,w,c
 26570  017E04  6FDF               	movwf	(_baudRate+3)& (0+255),b
 26571                           
 26572                           ;main.c: 458:     GLCD_Clear();
 26573  017E06  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 26574  017E0A  0012               	return		;funcret
 26575  017E0C                     __end_of_Baud_rate_Change:
 26576                           	callstack 0
 26577                           
 26578 ;; *************** function ___aldiv *****************
 26579 ;; Defined at:
 26580 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
 26581 ;; Parameters:    Size  Location     Type
 26582 ;;  dividend        4    0[COMRAM] long 
 26583 ;;  divisor         4    4[COMRAM] long 
 26584 ;; Auto vars:     Size  Location     Type
 26585 ;;  quotient        4   10[COMRAM] long 
 26586 ;;  sign            1    9[COMRAM] unsigned char 
 26587 ;;  counter         1    8[COMRAM] unsigned char 
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  4    0[COMRAM] long 
 26590 ;; Registers used:
 26591 ;;		wreg, status,2, status,0
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;Total ram usage:       14 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; This function calls:
 26604 ;;		Nothing
 26605 ;; This function is called by:
 26606 ;;		_Baud_rate_Change
 26607 ;; This function uses a non-reentrant model
 26608 ;;
 26609                           
 26610                           	psect	text99
 26611  018192                     __ptext99:
 26612                           	callstack 0
 26613  018192                     ___aldiv:
 26614                           	callstack 26
 26615  018192  0E00               	movlw	0
 26616  018194  6E0A               	movwf	___aldiv@sign^0,c
 26617  018196  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 26618  018198  EFD2  F0C0         	goto	u12840
 26619  01819C  EFD0  F0C0         	goto	u12841
 26620  0181A0                     u12841:
 26621  0181A0  EFDC  F0C0         	goto	l10557
 26622  0181A4                     u12840:
 26623  0181A4  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 26624  0181A6  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 26625  0181A8  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 26626  0181AA  6C05               	negf	___aldiv@divisor^0,c
 26627  0181AC  0E00               	movlw	0
 26628  0181AE  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 26629  0181B0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 26630  0181B2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 26631  0181B4  0E01               	movlw	1
 26632  0181B6  6E0A               	movwf	___aldiv@sign^0,c
 26633  0181B8                     l10557:
 26634  0181B8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 26635  0181BA  EFE3  F0C0         	goto	u12850
 26636  0181BE  EFE1  F0C0         	goto	u12851
 26637  0181C2                     u12851:
 26638  0181C2  EFED  F0C0         	goto	l10563
 26639  0181C6                     u12850:
 26640  0181C6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 26641  0181C8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 26642  0181CA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 26643  0181CC  6C01               	negf	___aldiv@dividend^0,c
 26644  0181CE  0E00               	movlw	0
 26645  0181D0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 26646  0181D2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 26647  0181D4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 26648  0181D6  0E01               	movlw	1
 26649  0181D8  1A0A               	xorwf	___aldiv@sign^0,f,c
 26650  0181DA                     l10563:
 26651  0181DA  0E00               	movlw	0
 26652  0181DC  6E0B               	movwf	___aldiv@quotient^0,c
 26653  0181DE  0E00               	movlw	0
 26654  0181E0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 26655  0181E2  0E00               	movlw	0
 26656  0181E4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 26657  0181E6  0E00               	movlw	0
 26658  0181E8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 26659  0181EA  5005               	movf	___aldiv@divisor^0,w,c
 26660  0181EC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 26661  0181EE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 26662  0181F0  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 26663  0181F2  B4D8               	btfsc	status,2,c
 26664  0181F4  EFFE  F0C0         	goto	u12861
 26665  0181F8  EF00  F0C1         	goto	u12860
 26666  0181FC                     u12861:
 26667  0181FC  EF36  F0C1         	goto	l10585
 26668  018200                     u12860:
 26669  018200  0E01               	movlw	1
 26670  018202  6E09               	movwf	___aldiv@counter^0,c
 26671  018204  EF0A  F0C1         	goto	l10571
 26672  018208                     l10569:
 26673  018208  90D8               	bcf	status,0,c
 26674  01820A  3605               	rlcf	___aldiv@divisor^0,f,c
 26675  01820C  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 26676  01820E  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 26677  018210  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 26678  018212  2A09               	incf	___aldiv@counter^0,f,c
 26679  018214                     l10571:
 26680  018214  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 26681  018216  EF0F  F0C1         	goto	u12871
 26682  01821A  EF11  F0C1         	goto	u12870
 26683  01821E                     u12871:
 26684  01821E  EF04  F0C1         	goto	l10569
 26685  018222                     u12870:
 26686  018222                     l10573:
 26687  018222  90D8               	bcf	status,0,c
 26688  018224  360B               	rlcf	___aldiv@quotient^0,f,c
 26689  018226  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 26690  018228  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 26691  01822A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 26692  01822C  5005               	movf	___aldiv@divisor^0,w,c
 26693  01822E  5C01               	subwf	___aldiv@dividend^0,w,c
 26694  018230  5006               	movf	(___aldiv@divisor+1)^0,w,c
 26695  018232  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 26696  018234  5007               	movf	(___aldiv@divisor+2)^0,w,c
 26697  018236  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 26698  018238  5008               	movf	(___aldiv@divisor+3)^0,w,c
 26699  01823A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 26700  01823C  A0D8               	btfss	status,0,c
 26701  01823E  EF23  F0C1         	goto	u12881
 26702  018242  EF25  F0C1         	goto	u12880
 26703  018246                     u12881:
 26704  018246  EF2E  F0C1         	goto	l10581
 26705  01824A                     u12880:
 26706  01824A  5005               	movf	___aldiv@divisor^0,w,c
 26707  01824C  5E01               	subwf	___aldiv@dividend^0,f,c
 26708  01824E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 26709  018250  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 26710  018252  5007               	movf	(___aldiv@divisor+2)^0,w,c
 26711  018254  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 26712  018256  5008               	movf	(___aldiv@divisor+3)^0,w,c
 26713  018258  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 26714  01825A  800B               	bsf	___aldiv@quotient^0,0,c
 26715  01825C                     l10581:
 26716  01825C  90D8               	bcf	status,0,c
 26717  01825E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 26718  018260  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 26719  018262  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 26720  018264  3205               	rrcf	___aldiv@divisor^0,f,c
 26721  018266  2E09               	decfsz	___aldiv@counter^0,f,c
 26722  018268  EF11  F0C1         	goto	l10573
 26723  01826C                     l10585:
 26724  01826C  500A               	movf	___aldiv@sign^0,w,c
 26725  01826E  B4D8               	btfsc	status,2,c
 26726  018270  EF3C  F0C1         	goto	u12891
 26727  018274  EF3E  F0C1         	goto	u12890
 26728  018278                     u12891:
 26729  018278  EF46  F0C1         	goto	l10589
 26730  01827C                     u12890:
 26731  01827C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 26732  01827E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 26733  018280  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 26734  018282  6C0B               	negf	___aldiv@quotient^0,c
 26735  018284  0E00               	movlw	0
 26736  018286  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 26737  018288  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 26738  01828A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 26739  01828C                     l10589:
 26740  01828C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 26741  018290  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 26742  018294  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 26743  018298  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 26744  01829C  0012               	return		;funcret
 26745  01829E                     __end_of___aldiv:
 26746                           	callstack 0
 26747                           
 26748 ;; *************** function _Number_Select *****************
 26749 ;; Defined at:
 26750 ;;		line 397 in file "main.c"
 26751 ;; Parameters:    Size  Location     Type
 26752 ;;  number          4   14[BANK0 ] long 
 26753 ;;  max             4   18[BANK0 ] long 
 26754 ;; Auto vars:     Size  Location     Type
 26755 ;;  longPress       2   24[BANK0 ] int 
 26756 ;; Return value:  Size  Location     Type
 26757 ;;                  4   14[BANK0 ] long 
 26758 ;; Registers used:
 26759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26760 ;; Tracked objects:
 26761 ;;		On entry : 0/0
 26762 ;;		On exit  : 0/0
 26763 ;;		Unchanged: 0/0
 26764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26765 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26768 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26769 ;;Total ram usage:       12 bytes
 26770 ;; Hardware stack levels used:    1
 26771 ;; Hardware stack levels required when called:    9
 26772 ;; This function calls:
 26773 ;;		_Number_Update
 26774 ;; This function is called by:
 26775 ;;		_Baud_rate_Change
 26776 ;;		_Maximum_Error_Select
 26777 ;;		_Minimum_Error_Select
 26778 ;;		_Continous_Transmission_Length
 26779 ;; This function uses a non-reentrant model
 26780 ;;
 26781                           
 26782                           	psect	text100
 26783  015704                     __ptext100:
 26784                           	callstack 0
 26785  015704                     _Number_Select:
 26786                           	callstack 17
 26787  015704                     
 26788                           ;main.c: 398:     int longPress = 0;
 26789  015704  0E00               	movlw	0
 26790  015706  0100               	movlb	0	; () banked
 26791  015708  6F79               	movwf	(Number_Select@longPress+1)& (0+255),b
 26792  01570A  0E00               	movlw	0
 26793  01570C  6F78               	movwf	Number_Select@longPress& (0+255),b
 26794  01570E                     
 26795                           ; BSR set to: 0
 26796                           ;main.c: 399:     if (PORTBbits.RB2 == 1) {
 26797  01570E  A4CB               	btfss	203,2,c	;volatile
 26798  015710  EF8C  F0AB         	goto	u12601
 26799  015714  EF8E  F0AB         	goto	u12600
 26800  015718                     u12601:
 26801  015718  EF53  F0AC         	goto	l1389
 26802  01571C                     u12600:
 26803  01571C  EF4C  F0AC         	goto	l10481
 26804  015720                     l10451:
 26805                           
 26806                           ;main.c: 401:             longPress++;
 26807  015720  0100               	movlb	0	; () banked
 26808  015722  4B78               	infsnz	Number_Select@longPress& (0+255),f,b
 26809  015724  2B79               	incf	(Number_Select@longPress+1)& (0+255),f,b
 26810  015726                     
 26811                           ; BSR set to: 0
 26812                           ;main.c: 402:             if (longPress < 10 && number <= max) {
 26813  015726  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 26814  015728  EFA1  F0AB         	goto	u12610
 26815  01572C  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 26816  01572E  E107               	bnz	u12611
 26817  015730  0E0A               	movlw	10
 26818  015732  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 26819  015734  B0D8               	btfsc	status,0,c
 26820  015736  EF9F  F0AB         	goto	u12611
 26821  01573A  EFA1  F0AB         	goto	u12610
 26822  01573E                     u12611:
 26823  01573E  EFC6  F0AB         	goto	l10461
 26824  015742                     u12610:
 26825  015742                     
 26826                           ; BSR set to: 0
 26827  015742  516E               	movf	Number_Select@number& (0+255),w,b
 26828  015744  5D72               	subwf	Number_Select@max& (0+255),w,b
 26829  015746  516F               	movf	(Number_Select@number+1)& (0+255),w,b
 26830  015748  5973               	subwfb	(Number_Select@max+1)& (0+255),w,b
 26831  01574A  5170               	movf	(Number_Select@number+2)& (0+255),w,b
 26832  01574C  5974               	subwfb	(Number_Select@max+2)& (0+255),w,b
 26833  01574E  5175               	movf	(Number_Select@max+3)& (0+255),w,b
 26834  015750  0A80               	xorlw	128
 26835  015752  6F76               	movwf	??_Number_Select& (0+255),b
 26836  015754  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 26837  015756  0A80               	xorlw	128
 26838  015758  5976               	subwfb	??_Number_Select& (0+255),w,b
 26839  01575A  A0D8               	btfss	status,0,c
 26840  01575C  EFB2  F0AB         	goto	u12621
 26841  015760  EFB4  F0AB         	goto	u12620
 26842  015764                     u12621:
 26843  015764  EFC6  F0AB         	goto	l10461
 26844  015768                     u12620:
 26845  015768                     
 26846                           ; BSR set to: 0
 26847                           ;main.c: 403:                 number++;
 26848  015768  0E01               	movlw	1
 26849  01576A  276E               	addwf	Number_Select@number& (0+255),f,b
 26850  01576C  0E00               	movlw	0
 26851  01576E  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 26852  015770  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 26853  015772  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 26854  015774                     
 26855                           ; BSR set to: 0
 26856                           ;main.c: 404:                 _delay((unsigned long)((200)*(64000000/4000.0)));
 26857  015774  0E11               	movlw	17
 26858  015776  0100               	movlb	0	; () banked
 26859  015778  6F77               	movwf	(??_Number_Select+1)& (0+255),b
 26860  01577A  0E3C               	movlw	60
 26861  01577C  6F76               	movwf	??_Number_Select& (0+255),b
 26862  01577E  0ECB               	movlw	203
 26863  015780                     u14157:
 26864  015780  2EE8               	decfsz	wreg,f,c
 26865  015782  D7FE               	bra	u14157
 26866  015784  2F76               	decfsz	??_Number_Select& (0+255),f,b
 26867  015786  D7FC               	bra	u14157
 26868  015788  2F77               	decfsz	(??_Number_Select+1)& (0+255),f,b
 26869  01578A  D7FA               	bra	u14157
 26870  01578C                     l10461:
 26871                           
 26872                           ;main.c: 406:             if (longPress >= 10 && number >= 9 && number <= max) {
 26873  01578C  0100               	movlb	0	; () banked
 26874  01578E  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 26875  015790  EFD3  F0AB         	goto	u12631
 26876  015794  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 26877  015796  E109               	bnz	u12630
 26878  015798  0E0A               	movlw	10
 26879  01579A  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 26880  01579C  A0D8               	btfss	status,0,c
 26881  01579E  EFD3  F0AB         	goto	u12631
 26882  0157A2  EFD5  F0AB         	goto	u12630
 26883  0157A6                     u12631:
 26884  0157A6  EF0A  F0AC         	goto	l10471
 26885  0157AA                     u12630:
 26886  0157AA                     
 26887                           ; BSR set to: 0
 26888  0157AA  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 26889  0157AC  EFE3  F0AB         	goto	u12641
 26890  0157B0  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 26891  0157B2  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 26892  0157B4  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 26893  0157B6  E109               	bnz	u12640
 26894  0157B8  0E09               	movlw	9
 26895  0157BA  5D6E               	subwf	Number_Select@number& (0+255),w,b
 26896  0157BC  A0D8               	btfss	status,0,c
 26897  0157BE  EFE3  F0AB         	goto	u12641
 26898  0157C2  EFE5  F0AB         	goto	u12640
 26899  0157C6                     u12641:
 26900  0157C6  EF0A  F0AC         	goto	l10471
 26901  0157CA                     u12640:
 26902  0157CA                     
 26903                           ; BSR set to: 0
 26904  0157CA  516E               	movf	Number_Select@number& (0+255),w,b
 26905  0157CC  5D72               	subwf	Number_Select@max& (0+255),w,b
 26906  0157CE  516F               	movf	(Number_Select@number+1)& (0+255),w,b
 26907  0157D0  5973               	subwfb	(Number_Select@max+1)& (0+255),w,b
 26908  0157D2  5170               	movf	(Number_Select@number+2)& (0+255),w,b
 26909  0157D4  5974               	subwfb	(Number_Select@max+2)& (0+255),w,b
 26910  0157D6  5175               	movf	(Number_Select@max+3)& (0+255),w,b
 26911  0157D8  0A80               	xorlw	128
 26912  0157DA  6F76               	movwf	??_Number_Select& (0+255),b
 26913  0157DC  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 26914  0157DE  0A80               	xorlw	128
 26915  0157E0  5976               	subwfb	??_Number_Select& (0+255),w,b
 26916  0157E2  A0D8               	btfss	status,0,c
 26917  0157E4  EFF6  F0AB         	goto	u12651
 26918  0157E8  EFF8  F0AB         	goto	u12650
 26919  0157EC                     u12651:
 26920  0157EC  EF0A  F0AC         	goto	l10471
 26921  0157F0                     u12650:
 26922  0157F0                     
 26923                           ; BSR set to: 0
 26924                           ;main.c: 407:                 number += 10;
 26925  0157F0  0E0A               	movlw	10
 26926  0157F2  276E               	addwf	Number_Select@number& (0+255),f,b
 26927  0157F4  0E00               	movlw	0
 26928  0157F6  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 26929  0157F8  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 26930  0157FA  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 26931  0157FC                     
 26932                           ; BSR set to: 0
 26933                           ;main.c: 408:                 _delay((unsigned long)((50)*(64000000/4000.0)));
 26934  0157FC  0E05               	movlw	5
 26935  0157FE  0100               	movlb	0	; () banked
 26936  015800  6F77               	movwf	(??_Number_Select+1)& (0+255),b
 26937  015802  0E0F               	movlw	15
 26938  015804  6F76               	movwf	??_Number_Select& (0+255),b
 26939  015806  0EF1               	movlw	241
 26940  015808                     u14167:
 26941  015808  2EE8               	decfsz	wreg,f,c
 26942  01580A  D7FE               	bra	u14167
 26943  01580C  2F76               	decfsz	??_Number_Select& (0+255),f,b
 26944  01580E  D7FC               	bra	u14167
 26945  015810  2F77               	decfsz	(??_Number_Select+1)& (0+255),f,b
 26946  015812  D7FA               	bra	u14167
 26947  015814                     l10471:
 26948                           
 26949                           ;main.c: 410:             if (longPress >= 30 && number >= 100 && number <= max) {
 26950  015814  0100               	movlb	0	; () banked
 26951  015816  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 26952  015818  EF17  F0AC         	goto	u12661
 26953  01581C  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 26954  01581E  E109               	bnz	u12660
 26955  015820  0E1E               	movlw	30
 26956  015822  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 26957  015824  A0D8               	btfss	status,0,c
 26958  015826  EF17  F0AC         	goto	u12661
 26959  01582A  EF19  F0AC         	goto	u12660
 26960  01582E                     u12661:
 26961  01582E  EF42  F0AC         	goto	l10479
 26962  015832                     u12660:
 26963  015832                     
 26964                           ; BSR set to: 0
 26965  015832  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 26966  015834  EF27  F0AC         	goto	u12671
 26967  015838  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 26968  01583A  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 26969  01583C  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 26970  01583E  E109               	bnz	u12670
 26971  015840  0E64               	movlw	100
 26972  015842  5D6E               	subwf	Number_Select@number& (0+255),w,b
 26973  015844  A0D8               	btfss	status,0,c
 26974  015846  EF27  F0AC         	goto	u12671
 26975  01584A  EF29  F0AC         	goto	u12670
 26976  01584E                     u12671:
 26977  01584E  EF42  F0AC         	goto	l10479
 26978  015852                     u12670:
 26979  015852                     
 26980                           ; BSR set to: 0
 26981  015852  516E               	movf	Number_Select@number& (0+255),w,b
 26982  015854  5D72               	subwf	Number_Select@max& (0+255),w,b
 26983  015856  516F               	movf	(Number_Select@number+1)& (0+255),w,b
 26984  015858  5973               	subwfb	(Number_Select@max+1)& (0+255),w,b
 26985  01585A  5170               	movf	(Number_Select@number+2)& (0+255),w,b
 26986  01585C  5974               	subwfb	(Number_Select@max+2)& (0+255),w,b
 26987  01585E  5175               	movf	(Number_Select@max+3)& (0+255),w,b
 26988  015860  0A80               	xorlw	128
 26989  015862  6F76               	movwf	??_Number_Select& (0+255),b
 26990  015864  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 26991  015866  0A80               	xorlw	128
 26992  015868  5976               	subwfb	??_Number_Select& (0+255),w,b
 26993  01586A  A0D8               	btfss	status,0,c
 26994  01586C  EF3A  F0AC         	goto	u12681
 26995  015870  EF3C  F0AC         	goto	u12680
 26996  015874                     u12681:
 26997  015874  EF42  F0AC         	goto	l10479
 26998  015878                     u12680:
 26999  015878                     
 27000                           ; BSR set to: 0
 27001                           ;main.c: 411:                 number += 100;
 27002  015878  0E64               	movlw	100
 27003  01587A  276E               	addwf	Number_Select@number& (0+255),f,b
 27004  01587C  0E00               	movlw	0
 27005  01587E  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 27006  015880  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 27007  015882  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 27008  015884                     l10479:
 27009                           
 27010                           ; BSR set to: 0
 27011                           ;main.c: 413:             Number_Update(number);
 27012  015884  C06E  F06A         	movff	Number_Select@number,Number_Update@number
 27013  015888  C06F  F06B         	movff	Number_Select@number+1,Number_Update@number+1
 27014  01588C  C070  F06C         	movff	Number_Select@number+2,Number_Update@number+2
 27015  015890  C071  F06D         	movff	Number_Select@number+3,Number_Update@number+3
 27016  015894  EC38  F0B6         	call	_Number_Update	;wreg free
 27017  015898                     l10481:
 27018                           
 27019                           ;main.c: 400:         while (PORTBbits.RB2 == 1) {
 27020  015898  B4CB               	btfsc	203,2,c	;volatile
 27021  01589A  EF51  F0AC         	goto	u12691
 27022  01589E  EF53  F0AC         	goto	u12690
 27023  0158A2                     u12691:
 27024  0158A2  EF90  F0AB         	goto	l10451
 27025  0158A6                     u12690:
 27026  0158A6                     l1389:
 27027                           
 27028                           ;main.c: 416:     if (PORTBbits.RB3 == 1) {
 27029  0158A6  A6CB               	btfss	203,3,c	;volatile
 27030  0158A8  EF58  F0AC         	goto	u12701
 27031  0158AC  EF5A  F0AC         	goto	u12700
 27032  0158B0                     u12701:
 27033  0158B0  EF19  F0AD         	goto	l1396
 27034  0158B4                     u12700:
 27035  0158B4  EF12  F0AD         	goto	l10515
 27036  0158B8                     l10485:
 27037                           
 27038                           ;main.c: 418:             longPress++;
 27039  0158B8  0100               	movlb	0	; () banked
 27040  0158BA  4B78               	infsnz	Number_Select@longPress& (0+255),f,b
 27041  0158BC  2B79               	incf	(Number_Select@longPress+1)& (0+255),f,b
 27042  0158BE                     
 27043                           ; BSR set to: 0
 27044                           ;main.c: 419:             if (longPress < 10 && number > 0) {
 27045  0158BE  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 27046  0158C0  EF6D  F0AC         	goto	u12710
 27047  0158C4  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 27048  0158C6  E107               	bnz	u12711
 27049  0158C8  0E0A               	movlw	10
 27050  0158CA  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 27051  0158CC  B0D8               	btfsc	status,0,c
 27052  0158CE  EF6B  F0AC         	goto	u12711
 27053  0158D2  EF6D  F0AC         	goto	u12710
 27054  0158D6                     u12711:
 27055  0158D6  EF90  F0AC         	goto	l10495
 27056  0158DA                     u12710:
 27057  0158DA                     
 27058                           ; BSR set to: 0
 27059  0158DA  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 27060  0158DC  EF7A  F0AC         	goto	u12721
 27061  0158E0  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 27062  0158E2  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 27063  0158E4  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 27064  0158E6  E108               	bnz	u12720
 27065  0158E8  056E               	decf	Number_Select@number& (0+255),w,b
 27066  0158EA  A0D8               	btfss	status,0,c
 27067  0158EC  EF7A  F0AC         	goto	u12721
 27068  0158F0  EF7C  F0AC         	goto	u12720
 27069  0158F4                     u12721:
 27070  0158F4  EF90  F0AC         	goto	l10495
 27071  0158F8                     u12720:
 27072  0158F8                     
 27073                           ; BSR set to: 0
 27074                           ;main.c: 420:                 number--;
 27075  0158F8  0EFF               	movlw	255
 27076  0158FA  276E               	addwf	Number_Select@number& (0+255),f,b
 27077  0158FC  0EFF               	movlw	255
 27078  0158FE  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 27079  015900  0EFF               	movlw	255
 27080  015902  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 27081  015904  0EFF               	movlw	255
 27082  015906  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 27083  015908                     
 27084                           ; BSR set to: 0
 27085                           ;main.c: 421:                 _delay((unsigned long)((200)*(64000000/4000.0)));
 27086  015908  0E11               	movlw	17
 27087  01590A  0100               	movlb	0	; () banked
 27088  01590C  6F77               	movwf	(??_Number_Select+1)& (0+255),b
 27089  01590E  0E3C               	movlw	60
 27090  015910  6F76               	movwf	??_Number_Select& (0+255),b
 27091  015912  0ECB               	movlw	203
 27092  015914                     u14177:
 27093  015914  2EE8               	decfsz	wreg,f,c
 27094  015916  D7FE               	bra	u14177
 27095  015918  2F76               	decfsz	??_Number_Select& (0+255),f,b
 27096  01591A  D7FC               	bra	u14177
 27097  01591C  2F77               	decfsz	(??_Number_Select+1)& (0+255),f,b
 27098  01591E  D7FA               	bra	u14177
 27099  015920                     l10495:
 27100                           
 27101                           ;main.c: 423:             if (longPress >= 10 && number >= 9 && number > 0) {
 27102  015920  0100               	movlb	0	; () banked
 27103  015922  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 27104  015924  EF9D  F0AC         	goto	u12731
 27105  015928  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 27106  01592A  E109               	bnz	u12730
 27107  01592C  0E0A               	movlw	10
 27108  01592E  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 27109  015930  A0D8               	btfss	status,0,c
 27110  015932  EF9D  F0AC         	goto	u12731
 27111  015936  EF9F  F0AC         	goto	u12730
 27112  01593A                     u12731:
 27113  01593A  EFD2  F0AC         	goto	l10505
 27114  01593E                     u12730:
 27115  01593E                     
 27116                           ; BSR set to: 0
 27117  01593E  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 27118  015940  EFAD  F0AC         	goto	u12741
 27119  015944  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 27120  015946  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 27121  015948  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 27122  01594A  E109               	bnz	u12740
 27123  01594C  0E09               	movlw	9
 27124  01594E  5D6E               	subwf	Number_Select@number& (0+255),w,b
 27125  015950  A0D8               	btfss	status,0,c
 27126  015952  EFAD  F0AC         	goto	u12741
 27127  015956  EFAF  F0AC         	goto	u12740
 27128  01595A                     u12741:
 27129  01595A  EFD2  F0AC         	goto	l10505
 27130  01595E                     u12740:
 27131  01595E                     
 27132                           ; BSR set to: 0
 27133  01595E  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 27134  015960  EFBC  F0AC         	goto	u12751
 27135  015964  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 27136  015966  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 27137  015968  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 27138  01596A  E108               	bnz	u12750
 27139  01596C  056E               	decf	Number_Select@number& (0+255),w,b
 27140  01596E  A0D8               	btfss	status,0,c
 27141  015970  EFBC  F0AC         	goto	u12751
 27142  015974  EFBE  F0AC         	goto	u12750
 27143  015978                     u12751:
 27144  015978  EFD2  F0AC         	goto	l10505
 27145  01597C                     u12750:
 27146  01597C                     
 27147                           ; BSR set to: 0
 27148                           ;main.c: 424:                 number -= 10;
 27149  01597C  0EF6               	movlw	246
 27150  01597E  276E               	addwf	Number_Select@number& (0+255),f,b
 27151  015980  0EFF               	movlw	255
 27152  015982  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 27153  015984  0EFF               	movlw	255
 27154  015986  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 27155  015988  0EFF               	movlw	255
 27156  01598A  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 27157  01598C                     
 27158                           ; BSR set to: 0
 27159                           ;main.c: 425:                 _delay((unsigned long)((50)*(64000000/4000.0)));
 27160  01598C  0E05               	movlw	5
 27161  01598E  0100               	movlb	0	; () banked
 27162  015990  6F77               	movwf	(??_Number_Select+1)& (0+255),b
 27163  015992  0E0F               	movlw	15
 27164  015994  6F76               	movwf	??_Number_Select& (0+255),b
 27165  015996  0EF1               	movlw	241
 27166  015998                     u14187:
 27167  015998  2EE8               	decfsz	wreg,f,c
 27168  01599A  D7FE               	bra	u14187
 27169  01599C  2F76               	decfsz	??_Number_Select& (0+255),f,b
 27170  01599E  D7FC               	bra	u14187
 27171  0159A0  2F77               	decfsz	(??_Number_Select+1)& (0+255),f,b
 27172  0159A2  D7FA               	bra	u14187
 27173  0159A4                     l10505:
 27174                           
 27175                           ;main.c: 427:             if (longPress >= 30 && number >= 100 && number > 0) {
 27176  0159A4  0100               	movlb	0	; () banked
 27177  0159A6  BF79               	btfsc	(Number_Select@longPress+1)& (0+255),7,b
 27178  0159A8  EFDF  F0AC         	goto	u12761
 27179  0159AC  5179               	movf	(Number_Select@longPress+1)& (0+255),w,b
 27180  0159AE  E109               	bnz	u12760
 27181  0159B0  0E1E               	movlw	30
 27182  0159B2  5D78               	subwf	Number_Select@longPress& (0+255),w,b
 27183  0159B4  A0D8               	btfss	status,0,c
 27184  0159B6  EFDF  F0AC         	goto	u12761
 27185  0159BA  EFE1  F0AC         	goto	u12760
 27186  0159BE                     u12761:
 27187  0159BE  EF08  F0AD         	goto	l10513
 27188  0159C2                     u12760:
 27189  0159C2                     
 27190                           ; BSR set to: 0
 27191  0159C2  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 27192  0159C4  EFEF  F0AC         	goto	u12771
 27193  0159C8  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 27194  0159CA  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 27195  0159CC  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 27196  0159CE  E109               	bnz	u12770
 27197  0159D0  0E64               	movlw	100
 27198  0159D2  5D6E               	subwf	Number_Select@number& (0+255),w,b
 27199  0159D4  A0D8               	btfss	status,0,c
 27200  0159D6  EFEF  F0AC         	goto	u12771
 27201  0159DA  EFF1  F0AC         	goto	u12770
 27202  0159DE                     u12771:
 27203  0159DE  EF08  F0AD         	goto	l10513
 27204  0159E2                     u12770:
 27205  0159E2                     
 27206                           ; BSR set to: 0
 27207  0159E2  BF71               	btfsc	(Number_Select@number+3)& (0+255),7,b
 27208  0159E4  EFFE  F0AC         	goto	u12781
 27209  0159E8  5171               	movf	(Number_Select@number+3)& (0+255),w,b
 27210  0159EA  1170               	iorwf	(Number_Select@number+2)& (0+255),w,b
 27211  0159EC  116F               	iorwf	(Number_Select@number+1)& (0+255),w,b
 27212  0159EE  E108               	bnz	u12780
 27213  0159F0  056E               	decf	Number_Select@number& (0+255),w,b
 27214  0159F2  A0D8               	btfss	status,0,c
 27215  0159F4  EFFE  F0AC         	goto	u12781
 27216  0159F8  EF00  F0AD         	goto	u12780
 27217  0159FC                     u12781:
 27218  0159FC  EF08  F0AD         	goto	l10513
 27219  015A00                     u12780:
 27220  015A00                     
 27221                           ; BSR set to: 0
 27222                           ;main.c: 428:                 number -= 100;
 27223  015A00  0E9C               	movlw	156
 27224  015A02  276E               	addwf	Number_Select@number& (0+255),f,b
 27225  015A04  0EFF               	movlw	255
 27226  015A06  236F               	addwfc	(Number_Select@number+1)& (0+255),f,b
 27227  015A08  0EFF               	movlw	255
 27228  015A0A  2370               	addwfc	(Number_Select@number+2)& (0+255),f,b
 27229  015A0C  0EFF               	movlw	255
 27230  015A0E  2371               	addwfc	(Number_Select@number+3)& (0+255),f,b
 27231  015A10                     l10513:
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;main.c: 430:             Number_Update(number);
 27235  015A10  C06E  F06A         	movff	Number_Select@number,Number_Update@number
 27236  015A14  C06F  F06B         	movff	Number_Select@number+1,Number_Update@number+1
 27237  015A18  C070  F06C         	movff	Number_Select@number+2,Number_Update@number+2
 27238  015A1C  C071  F06D         	movff	Number_Select@number+3,Number_Update@number+3
 27239  015A20  EC38  F0B6         	call	_Number_Update	;wreg free
 27240  015A24                     l10515:
 27241                           
 27242                           ;main.c: 417:         while (PORTBbits.RB3 == 1) {
 27243  015A24  B6CB               	btfsc	203,3,c	;volatile
 27244  015A26  EF17  F0AD         	goto	u12791
 27245  015A2A  EF19  F0AD         	goto	u12790
 27246  015A2E                     u12791:
 27247  015A2E  EF5C  F0AC         	goto	l10485
 27248  015A32                     u12790:
 27249  015A32                     l1396:
 27250                           
 27251                           ;main.c: 433:     return number;
 27252  015A32  C06E  F06E         	movff	Number_Select@number,?_Number_Select
 27253  015A36  C06F  F06F         	movff	Number_Select@number+1,?_Number_Select+1
 27254  015A3A  C070  F070         	movff	Number_Select@number+2,?_Number_Select+2
 27255  015A3E  C071  F071         	movff	Number_Select@number+3,?_Number_Select+3
 27256  015A42  0012               	return		;funcret
 27257  015A44                     __end_of_Number_Select:
 27258                           	callstack 0
 27259                           
 27260 ;; *************** function _Number_Update *****************
 27261 ;; Defined at:
 27262 ;;		line 354 in file "main.c"
 27263 ;; Parameters:    Size  Location     Type
 27264 ;;  number          4   10[BANK0 ] long 
 27265 ;; Auto vars:     Size  Location     Type
 27266 ;;		None
 27267 ;; Return value:  Size  Location     Type
 27268 ;;                  1    wreg      void 
 27269 ;; Registers used:
 27270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27271 ;; Tracked objects:
 27272 ;;		On entry : 0/0
 27273 ;;		On exit  : 0/0
 27274 ;;		Unchanged: 0/0
 27275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27279 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27280 ;;Total ram usage:        4 bytes
 27281 ;; Hardware stack levels used:    1
 27282 ;; Hardware stack levels required when called:    8
 27283 ;; This function calls:
 27284 ;;		_Command_Write
 27285 ;;		_Display_Message
 27286 ;;		_Select_Page
 27287 ;;		_sprintf
 27288 ;; This function is called by:
 27289 ;;		_Number_Select
 27290 ;; This function uses a non-reentrant model
 27291 ;;
 27292                           
 27293                           	psect	text101
 27294  016C70                     __ptext101:
 27295                           	callstack 0
 27296  016C70                     _Number_Update:
 27297                           	callstack 17
 27298  016C70                     
 27299                           ;main.c: 355:     sprintf(numberDisplayed, "%d", number);
 27300  016C70  0E77               	movlw	low _numberDisplayed
 27301  016C72  6E58               	movwf	sprintf@s^0,c
 27302  016C74  0E01               	movlw	high _numberDisplayed
 27303  016C76  6E59               	movwf	(sprintf@s+1)^0,c
 27304  016C78  0EFC               	movlw	low STR_28
 27305  016C7A  6E5A               	movwf	sprintf@fmt^0,c
 27306  016C7C  0EFF               	movlw	high STR_28
 27307  016C7E  6E5B               	movwf	(sprintf@fmt+1)^0,c
 27308  016C80  C06A  F05C         	movff	Number_Update@number,?_sprintf+4
 27309  016C84  C06B  F05D         	movff	Number_Update@number+1,?_sprintf+5
 27310  016C88  C06C  F05E         	movff	Number_Update@number+2,?_sprintf+6
 27311  016C8C  C06D  F05F         	movff	Number_Update@number+3,?_sprintf+7
 27312  016C90  EC1B  F0D1         	call	_sprintf	;wreg free
 27313  016C94                     
 27314                           ;main.c: 357:     Select_Page(1);
 27315  016C94  0E00               	movlw	0
 27316  016C96  6E02               	movwf	(Select_Page@select+1)^0,c
 27317  016C98  0E01               	movlw	1
 27318  016C9A  6E01               	movwf	Select_Page@select^0,c
 27319  016C9C  EC3F  F0D2         	call	_Select_Page	;wreg free
 27320  016CA0                     
 27321                           ;main.c: 358:     Command_Write(0b10111011);
 27322  016CA0  0EBB               	movlw	187
 27323  016CA2  EC4C  F0D3         	call	_Command_Write
 27324  016CA6                     
 27325                           ;main.c: 359:     Command_Write(0b01000000);
 27326  016CA6  0E40               	movlw	64
 27327  016CA8  EC4C  F0D3         	call	_Command_Write
 27328  016CAC                     
 27329                           ;main.c: 360:     Display_Message(numberDisplayed);
 27330  016CAC  0E77               	movlw	low _numberDisplayed
 27331  016CAE  6E08               	movwf	Display_Message@message^0,c
 27332  016CB0  0E01               	movlw	high _numberDisplayed
 27333  016CB2  6E09               	movwf	(Display_Message@message+1)^0,c
 27334  016CB4  EC74  F0CE         	call	_Display_Message	;wreg free
 27335  016CB8                     
 27336                           ;main.c: 362:     if (number <= 9) {
 27337  016CB8  0100               	movlb	0	; () banked
 27338  016CBA  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27339  016CBC  EF6D  F0B6         	goto	u12450
 27340  016CC0  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27341  016CC2  116C               	iorwf	(Number_Update@number+2)& (0+255),w,b
 27342  016CC4  116B               	iorwf	(Number_Update@number+1)& (0+255),w,b
 27343  016CC6  E107               	bnz	u12451
 27344  016CC8  0E0A               	movlw	10
 27345  016CCA  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27346  016CCC  B0D8               	btfsc	status,0,c
 27347  016CCE  EF6B  F0B6         	goto	u12451
 27348  016CD2  EF6D  F0B6         	goto	u12450
 27349  016CD6                     u12451:
 27350  016CD6  EF79  F0B6         	goto	l10319
 27351  016CDA                     u12450:
 27352  016CDA                     
 27353                           ; BSR set to: 0
 27354                           ;main.c: 363:         Command_Write(0b10111011);
 27355  016CDA  0EBB               	movlw	187
 27356  016CDC  EC4C  F0D3         	call	_Command_Write
 27357                           
 27358                           ;main.c: 364:         Command_Write(0b01000101);
 27359  016CE0  0E45               	movlw	69
 27360  016CE2  EC4C  F0D3         	call	_Command_Write
 27361  016CE6                     
 27362                           ;main.c: 365:         Display_Message("         ");
 27363  016CE6  0EFD               	movlw	low (STR_23+3)
 27364  016CE8  6E08               	movwf	Display_Message@message^0,c
 27365  016CEA  0EFE               	movlw	high (STR_23+3)
 27366  016CEC  6E09               	movwf	(Display_Message@message+1)^0,c
 27367  016CEE  EC74  F0CE         	call	_Display_Message	;wreg free
 27368  016CF2                     l10319:
 27369                           
 27370                           ;main.c: 367:     if (number <= 99) {
 27371  016CF2  0100               	movlb	0	; () banked
 27372  016CF4  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27373  016CF6  EF8A  F0B6         	goto	u12460
 27374  016CFA  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27375  016CFC  116C               	iorwf	(Number_Update@number+2)& (0+255),w,b
 27376  016CFE  116B               	iorwf	(Number_Update@number+1)& (0+255),w,b
 27377  016D00  E107               	bnz	u12461
 27378  016D02  0E64               	movlw	100
 27379  016D04  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27380  016D06  B0D8               	btfsc	status,0,c
 27381  016D08  EF88  F0B6         	goto	u12461
 27382  016D0C  EF8A  F0B6         	goto	u12460
 27383  016D10                     u12461:
 27384  016D10  EF96  F0B6         	goto	l10325
 27385  016D14                     u12460:
 27386  016D14                     
 27387                           ; BSR set to: 0
 27388                           ;main.c: 368:         Command_Write(0b10111011);
 27389  016D14  0EBB               	movlw	187
 27390  016D16  EC4C  F0D3         	call	_Command_Write
 27391                           
 27392                           ;main.c: 369:         Command_Write(0b01001010);
 27393  016D1A  0E4A               	movlw	74
 27394  016D1C  EC4C  F0D3         	call	_Command_Write
 27395  016D20                     
 27396                           ;main.c: 370:         Display_Message("        ");
 27397  016D20  0EFE               	movlw	low (STR_23+4)
 27398  016D22  6E08               	movwf	Display_Message@message^0,c
 27399  016D24  0EFE               	movlw	high (STR_23+4)
 27400  016D26  6E09               	movwf	(Display_Message@message+1)^0,c
 27401  016D28  EC74  F0CE         	call	_Display_Message	;wreg free
 27402  016D2C                     l10325:
 27403                           
 27404                           ;main.c: 372:     if (number <= 999) {
 27405  016D2C  0100               	movlb	0	; () banked
 27406  016D2E  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27407  016D30  EFA8  F0B6         	goto	u12470
 27408  016D34  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27409  016D36  116C               	iorwf	(Number_Update@number+2)& (0+255),w,b
 27410  016D38  E109               	bnz	u12471
 27411  016D3A  0EE8               	movlw	232
 27412  016D3C  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27413  016D3E  0E03               	movlw	3
 27414  016D40  596B               	subwfb	(Number_Update@number+1)& (0+255),w,b
 27415  016D42  B0D8               	btfsc	status,0,c
 27416  016D44  EFA6  F0B6         	goto	u12471
 27417  016D48  EFA8  F0B6         	goto	u12470
 27418  016D4C                     u12471:
 27419  016D4C  EFB4  F0B6         	goto	l10331
 27420  016D50                     u12470:
 27421  016D50                     
 27422                           ; BSR set to: 0
 27423                           ;main.c: 373:         Command_Write(0b10111011);
 27424  016D50  0EBB               	movlw	187
 27425  016D52  EC4C  F0D3         	call	_Command_Write
 27426                           
 27427                           ;main.c: 374:         Command_Write(0b01001111);
 27428  016D56  0E4F               	movlw	79
 27429  016D58  EC4C  F0D3         	call	_Command_Write
 27430  016D5C                     
 27431                           ;main.c: 375:         Display_Message("      ");
 27432  016D5C  0E00               	movlw	low (STR_23+6)
 27433  016D5E  6E08               	movwf	Display_Message@message^0,c
 27434  016D60  0EFF               	movlw	high (STR_23+6)
 27435  016D62  6E09               	movwf	(Display_Message@message+1)^0,c
 27436  016D64  EC74  F0CE         	call	_Display_Message	;wreg free
 27437  016D68                     l10331:
 27438                           
 27439                           ;main.c: 377:     if (number <= 9999) {
 27440  016D68  0100               	movlb	0	; () banked
 27441  016D6A  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27442  016D6C  EFC6  F0B6         	goto	u12480
 27443  016D70  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27444  016D72  116C               	iorwf	(Number_Update@number+2)& (0+255),w,b
 27445  016D74  E109               	bnz	u12481
 27446  016D76  0E10               	movlw	16
 27447  016D78  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27448  016D7A  0E27               	movlw	39
 27449  016D7C  596B               	subwfb	(Number_Update@number+1)& (0+255),w,b
 27450  016D7E  B0D8               	btfsc	status,0,c
 27451  016D80  EFC4  F0B6         	goto	u12481
 27452  016D84  EFC6  F0B6         	goto	u12480
 27453  016D88                     u12481:
 27454  016D88  EFD2  F0B6         	goto	l10337
 27455  016D8C                     u12480:
 27456  016D8C                     
 27457                           ; BSR set to: 0
 27458                           ;main.c: 378:         Command_Write(0b10111011);
 27459  016D8C  0EBB               	movlw	187
 27460  016D8E  EC4C  F0D3         	call	_Command_Write
 27461                           
 27462                           ;main.c: 379:         Command_Write(0b01010100);
 27463  016D92  0E54               	movlw	84
 27464  016D94  EC4C  F0D3         	call	_Command_Write
 27465  016D98                     
 27466                           ;main.c: 380:         Display_Message("     ");
 27467  016D98  0E01               	movlw	low (STR_23+7)
 27468  016D9A  6E08               	movwf	Display_Message@message^0,c
 27469  016D9C  0EFF               	movlw	high (STR_23+7)
 27470  016D9E  6E09               	movwf	(Display_Message@message+1)^0,c
 27471  016DA0  EC74  F0CE         	call	_Display_Message	;wreg free
 27472  016DA4                     l10337:
 27473                           
 27474                           ;main.c: 382:     if (number <= 99999) {
 27475  016DA4  0100               	movlb	0	; () banked
 27476  016DA6  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27477  016DA8  EFE5  F0B6         	goto	u12490
 27478  016DAC  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27479  016DAE  E10B               	bnz	u12491
 27480  016DB0  0EA0               	movlw	160
 27481  016DB2  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27482  016DB4  0E86               	movlw	134
 27483  016DB6  596B               	subwfb	(Number_Update@number+1)& (0+255),w,b
 27484  016DB8  0E01               	movlw	1
 27485  016DBA  596C               	subwfb	(Number_Update@number+2)& (0+255),w,b
 27486  016DBC  B0D8               	btfsc	status,0,c
 27487  016DBE  EFE3  F0B6         	goto	u12491
 27488  016DC2  EFE5  F0B6         	goto	u12490
 27489  016DC6                     u12491:
 27490  016DC6  EFF1  F0B6         	goto	l10343
 27491  016DCA                     u12490:
 27492  016DCA                     
 27493                           ; BSR set to: 0
 27494                           ;main.c: 383:         Command_Write(0b10111011);
 27495  016DCA  0EBB               	movlw	187
 27496  016DCC  EC4C  F0D3         	call	_Command_Write
 27497                           
 27498                           ;main.c: 384:         Command_Write(0b01011001);
 27499  016DD0  0E59               	movlw	89
 27500  016DD2  EC4C  F0D3         	call	_Command_Write
 27501  016DD6                     
 27502                           ;main.c: 385:         Display_Message("    ");
 27503  016DD6  0E02               	movlw	low (STR_23+8)
 27504  016DD8  6E08               	movwf	Display_Message@message^0,c
 27505  016DDA  0EFF               	movlw	high (STR_23+8)
 27506  016DDC  6E09               	movwf	(Display_Message@message+1)^0,c
 27507  016DDE  EC74  F0CE         	call	_Display_Message	;wreg free
 27508  016DE2                     l10343:
 27509                           
 27510                           ;main.c: 387:     if (number <= 999999) {
 27511  016DE2  0100               	movlb	0	; () banked
 27512  016DE4  BF6D               	btfsc	(Number_Update@number+3)& (0+255),7,b
 27513  016DE6  EF04  F0B7         	goto	u12500
 27514  016DEA  516D               	movf	(Number_Update@number+3)& (0+255),w,b
 27515  016DEC  E10B               	bnz	u12501
 27516  016DEE  0E40               	movlw	64
 27517  016DF0  5D6A               	subwf	Number_Update@number& (0+255),w,b
 27518  016DF2  0E42               	movlw	66
 27519  016DF4  596B               	subwfb	(Number_Update@number+1)& (0+255),w,b
 27520  016DF6  0E0F               	movlw	15
 27521  016DF8  596C               	subwfb	(Number_Update@number+2)& (0+255),w,b
 27522  016DFA  B0D8               	btfsc	status,0,c
 27523  016DFC  EF02  F0B7         	goto	u12501
 27524  016E00  EF04  F0B7         	goto	u12500
 27525  016E04                     u12501:
 27526  016E04  EF10  F0B7         	goto	l1386
 27527  016E08                     u12500:
 27528  016E08                     
 27529                           ; BSR set to: 0
 27530                           ;main.c: 388:         Command_Write(0b10111011);
 27531  016E08  0EBB               	movlw	187
 27532  016E0A  EC4C  F0D3         	call	_Command_Write
 27533                           
 27534                           ;main.c: 389:         Command_Write(0b01011110);
 27535  016E0E  0E5E               	movlw	94
 27536  016E10  EC4C  F0D3         	call	_Command_Write
 27537  016E14                     
 27538                           ;main.c: 390:         Display_Message("   ");
 27539  016E14  0E03               	movlw	low (STR_23+9)
 27540  016E16  6E08               	movwf	Display_Message@message^0,c
 27541  016E18  0EFF               	movlw	high (STR_23+9)
 27542  016E1A  6E09               	movwf	(Display_Message@message+1)^0,c
 27543  016E1C  EC74  F0CE         	call	_Display_Message	;wreg free
 27544  016E20                     l1386:
 27545  016E20  0012               	return		;funcret
 27546  016E22                     __end_of_Number_Update:
 27547                           	callstack 0
 27548                           
 27549 ;; *************** function _Baud_Rate_Settings *****************
 27550 ;; Defined at:
 27551 ;;		line 295 in file "main.c"
 27552 ;; Parameters:    Size  Location     Type
 27553 ;;		None
 27554 ;; Auto vars:     Size  Location     Type
 27555 ;;  autoBaudChar    1   10[BANK0 ] unsigned char [1]
 27556 ;; Return value:  Size  Location     Type
 27557 ;;                  1    wreg      void 
 27558 ;; Registers used:
 27559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27560 ;; Tracked objects:
 27561 ;;		On entry : 0/0
 27562 ;;		On exit  : 0/0
 27563 ;;		Unchanged: 0/0
 27564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27569 ;;Total ram usage:        1 bytes
 27570 ;; Hardware stack levels used:    1
 27571 ;; Hardware stack levels required when called:    8
 27572 ;; This function calls:
 27573 ;;		_Command_Write
 27574 ;;		_Cursor_drawing
 27575 ;;		_Display_Message
 27576 ;;		_GLCD_Clear
 27577 ;;		_Select_Page
 27578 ;;		_sprintf
 27579 ;; This function is called by:
 27580 ;;		_Menu_Logic
 27581 ;; This function uses a non-reentrant model
 27582 ;;
 27583                           
 27584                           	psect	text102
 27585  0188EC                     __ptext102:
 27586                           	callstack 0
 27587  0188EC                     _Baud_Rate_Settings:
 27588                           	callstack 19
 27589  0188EC                     
 27590                           ;main.c: 297:     char autoBaudChar[1];;main.c: 298:     sprintf(autoBaudChar, "%d", aut
      +                          oBaud);
 27591  0188EC  0E6A               	movlw	low Baud_Rate_Settings@autoBaudChar
 27592  0188EE  6E58               	movwf	sprintf@s^0,c
 27593  0188F0  0E00               	movlw	high Baud_Rate_Settings@autoBaudChar
 27594  0188F2  6E59               	movwf	(sprintf@s+1)^0,c
 27595  0188F4  0EFC               	movlw	low STR_28
 27596  0188F6  6E5A               	movwf	sprintf@fmt^0,c
 27597  0188F8  0EFF               	movlw	high STR_28
 27598  0188FA  6E5B               	movwf	(sprintf@fmt+1)^0,c
 27599  0188FC  C129  F05C         	movff	_autoBaud,?_sprintf+4
 27600  018900  C12A  F05D         	movff	_autoBaud+1,?_sprintf+5
 27601  018904  EC1B  F0D1         	call	_sprintf	;wreg free
 27602  018908                     
 27603                           ;main.c: 300:     GLCD_Clear();
 27604  018908  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 27605  01890C                     
 27606                           ;main.c: 301:     Select_Page(0);
 27607  01890C  0E00               	movlw	0
 27608  01890E  6E02               	movwf	(Select_Page@select+1)^0,c
 27609  018910  0E00               	movlw	0
 27610  018912  6E01               	movwf	Select_Page@select^0,c
 27611  018914  EC3F  F0D2         	call	_Select_Page	;wreg free
 27612  018918                     
 27613                           ;main.c: 302:     Command_Write(0b10111000);
 27614  018918  0EB8               	movlw	184
 27615  01891A  EC4C  F0D3         	call	_Command_Write
 27616  01891E                     
 27617                           ;main.c: 303:     Command_Write(0b01011100);
 27618  01891E  0E5C               	movlw	92
 27619  018920  EC4C  F0D3         	call	_Command_Write
 27620  018924                     
 27621                           ;main.c: 304:     Display_Message("Baud");
 27622  018924  0EE1               	movlw	low STR_29
 27623  018926  6E08               	movwf	Display_Message@message^0,c
 27624  018928  0EFF               	movlw	high STR_29
 27625  01892A  6E09               	movwf	(Display_Message@message+1)^0,c
 27626  01892C  EC74  F0CE         	call	_Display_Message	;wreg free
 27627  018930                     
 27628                           ;main.c: 306:     Select_Page(1);
 27629  018930  0E00               	movlw	0
 27630  018932  6E02               	movwf	(Select_Page@select+1)^0,c
 27631  018934  0E01               	movlw	1
 27632  018936  6E01               	movwf	Select_Page@select^0,c
 27633  018938  EC3F  F0D2         	call	_Select_Page	;wreg free
 27634  01893C                     
 27635                           ;main.c: 307:     Command_Write(0b10111000);
 27636  01893C  0EB8               	movlw	184
 27637  01893E  EC4C  F0D3         	call	_Command_Write
 27638  018942                     
 27639                           ;main.c: 308:     Command_Write(0b01000000);
 27640  018942  0E40               	movlw	64
 27641  018944  EC4C  F0D3         	call	_Command_Write
 27642  018948                     
 27643                           ;main.c: 309:     Display_Message("Settings");
 27644  018948  0E78               	movlw	low STR_12
 27645  01894A  6E08               	movwf	Display_Message@message^0,c
 27646  01894C  0EFF               	movlw	high STR_12
 27647  01894E  6E09               	movwf	(Display_Message@message+1)^0,c
 27648  018950  EC74  F0CE         	call	_Display_Message	;wreg free
 27649  018954                     
 27650                           ;main.c: 312:     Select_Page(0);
 27651  018954  0E00               	movlw	0
 27652  018956  6E02               	movwf	(Select_Page@select+1)^0,c
 27653  018958  0E00               	movlw	0
 27654  01895A  6E01               	movwf	Select_Page@select^0,c
 27655  01895C  EC3F  F0D2         	call	_Select_Page	;wreg free
 27656  018960                     
 27657                           ;main.c: 313:     Command_Write(0b10111010);
 27658  018960  0EBA               	movlw	186
 27659  018962  EC4C  F0D3         	call	_Command_Write
 27660  018966                     
 27661                           ;main.c: 314:     Command_Write(0b01000000);
 27662  018966  0E40               	movlw	64
 27663  018968  EC4C  F0D3         	call	_Command_Write
 27664  01896C                     
 27665                           ;main.c: 315:     Display_Message("Automatic");
 27666  01896C  0E5B               	movlw	low STR_31
 27667  01896E  6E08               	movwf	Display_Message@message^0,c
 27668  018970  0EFF               	movlw	high STR_31
 27669  018972  6E09               	movwf	(Display_Message@message+1)^0,c
 27670  018974  EC74  F0CE         	call	_Display_Message	;wreg free
 27671  018978                     
 27672                           ;main.c: 317:     Select_Page(1);
 27673  018978  0E00               	movlw	0
 27674  01897A  6E02               	movwf	(Select_Page@select+1)^0,c
 27675  01897C  0E01               	movlw	1
 27676  01897E  6E01               	movwf	Select_Page@select^0,c
 27677  018980  EC3F  F0D2         	call	_Select_Page	;wreg free
 27678  018984                     
 27679                           ;main.c: 318:     Command_Write(0b10111010);
 27680  018984  0EBA               	movlw	186
 27681  018986  EC4C  F0D3         	call	_Command_Write
 27682  01898A                     
 27683                           ;main.c: 319:     Command_Write(0b01100000);
 27684  01898A  0E60               	movlw	96
 27685  01898C  EC4C  F0D3         	call	_Command_Write
 27686  018990                     
 27687                           ;main.c: 320:     Display_Message(autoBaudChar);
 27688  018990  0E6A               	movlw	low Baud_Rate_Settings@autoBaudChar
 27689  018992  6E08               	movwf	Display_Message@message^0,c
 27690  018994  0E00               	movlw	high Baud_Rate_Settings@autoBaudChar
 27691  018996  6E09               	movwf	(Display_Message@message+1)^0,c
 27692  018998  EC74  F0CE         	call	_Display_Message	;wreg free
 27693  01899C                     
 27694                           ;main.c: 322:     Select_Page(0);
 27695  01899C  0E00               	movlw	0
 27696  01899E  6E02               	movwf	(Select_Page@select+1)^0,c
 27697  0189A0  0E00               	movlw	0
 27698  0189A2  6E01               	movwf	Select_Page@select^0,c
 27699  0189A4  EC3F  F0D2         	call	_Select_Page	;wreg free
 27700  0189A8                     
 27701                           ;main.c: 324:     Command_Write(0b10111100);
 27702  0189A8  0EBC               	movlw	188
 27703  0189AA  EC4C  F0D3         	call	_Command_Write
 27704  0189AE                     
 27705                           ;main.c: 325:     Command_Write(0b01000000);
 27706  0189AE  0E40               	movlw	64
 27707  0189B0  EC4C  F0D3         	call	_Command_Write
 27708  0189B4                     
 27709                           ;main.c: 326:     Display_Message("Custom");
 27710  0189B4  0EBD               	movlw	low STR_32
 27711  0189B6  6E08               	movwf	Display_Message@message^0,c
 27712  0189B8  0EFF               	movlw	high STR_32
 27713  0189BA  6E09               	movwf	(Display_Message@message+1)^0,c
 27714  0189BC  EC74  F0CE         	call	_Display_Message	;wreg free
 27715  0189C0                     
 27716                           ;main.c: 328:     Cursor_drawing();
 27717  0189C0  EC45  F0CC         	call	_Cursor_drawing	;wreg free
 27718  0189C4  0012               	return		;funcret
 27719  0189C6                     __end_of_Baud_Rate_Settings:
 27720                           	callstack 0
 27721                           
 27722 ;; *************** function _sprintf *****************
 27723 ;; Defined at:
 27724 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
 27725 ;; Parameters:    Size  Location     Type
 27726 ;;  s               2   87[COMRAM] PTR unsigned char 
 27727 ;;		 -> Transmission_Settings@SDloggingChar(1), Transmission_Settings@ContinuousChar(1), Error_Settings@errorcheckChar(1
      +), numberDisplayed(7), 
 27728 ;;		 -> Toggle_Select@Char(1), Baud_Rate_Settings@autoBaudChar(1), 
 27729 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
 27730 ;;		 -> STR_64(3), STR_63(3), STR_60(3), STR_55(3), 
 27731 ;;		 -> STR_48(3), STR_45(3), STR_42(3), STR_35(3), 
 27732 ;;		 -> STR_34(3), STR_33(3), STR_28(3), 
 27733 ;; Auto vars:     Size  Location     Type
 27734 ;;  f               6    4[BANK0 ] struct _IO_FILE
 27735 ;;  ap              2    2[BANK0 ] PTR void [1]
 27736 ;;		 -> ?_sprintf(2), 
 27737 ;;  ret             2    0        int 
 27738 ;; Return value:  Size  Location     Type
 27739 ;;                  2   87[COMRAM] int 
 27740 ;; Registers used:
 27741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27742 ;; Tracked objects:
 27743 ;;		On entry : 0/0
 27744 ;;		On exit  : 0/0
 27745 ;;		Unchanged: 0/0
 27746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27747 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27748 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27750 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27751 ;;Total ram usage:       18 bytes
 27752 ;; Hardware stack levels used:    1
 27753 ;; Hardware stack levels required when called:    7
 27754 ;; This function calls:
 27755 ;;		_vfprintf
 27756 ;; This function is called by:
 27757 ;;		_Baud_Rate_Settings
 27758 ;;		_Toggle_Select
 27759 ;;		_Number_Update
 27760 ;;		_Baud_rate_Change
 27761 ;;		_Maximum_Error_Select
 27762 ;;		_Minimum_Error_Select
 27763 ;;		_Error_Settings
 27764 ;;		_Continous_Transmission_Length
 27765 ;;		_Transmission_Settings
 27766 ;; This function uses a non-reentrant model
 27767 ;;
 27768                           
 27769                           	psect	text103
 27770  01A236                     __ptext103:
 27771                           	callstack 0
 27772  01A236                     _sprintf:
 27773                           	callstack 19
 27774  01A236  0E5C               	movlw	low (?_sprintf+4)
 27775  01A238  0100               	movlb	0	; () banked
 27776  01A23A  6F62               	movwf	sprintf@ap& (0+255),b
 27777  01A23C  0E00               	movlw	high (?_sprintf+4)
 27778  01A23E  6F63               	movwf	(sprintf@ap+1)& (0+255),b
 27779  01A240  C058  F064         	movff	sprintf@s,sprintf@f
 27780  01A244  C059  F065         	movff	sprintf@s+1,sprintf@f+1
 27781  01A248                     
 27782                           ; BSR set to: 0
 27783  01A248  0E00               	movlw	0
 27784  01A24A  6F67               	movwf	(sprintf@f+3)& (0+255),b
 27785  01A24C  0E00               	movlw	0
 27786  01A24E  6F66               	movwf	(sprintf@f+2)& (0+255),b
 27787  01A250                     
 27788                           ; BSR set to: 0
 27789  01A250  0E00               	movlw	0
 27790  01A252  6F69               	movwf	(sprintf@f+5)& (0+255),b
 27791  01A254  0E00               	movlw	0
 27792  01A256  6F68               	movwf	(sprintf@f+4)& (0+255),b
 27793  01A258                     
 27794                           ; BSR set to: 0
 27795  01A258  0E64               	movlw	low sprintf@f
 27796  01A25A  6E50               	movwf	vfprintf@fp^0,c
 27797  01A25C  0E00               	movlw	high sprintf@f
 27798  01A25E  6E51               	movwf	(vfprintf@fp+1)^0,c
 27799  01A260  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
 27800  01A264  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 27801  01A268  0E62               	movlw	low sprintf@ap
 27802  01A26A  6E54               	movwf	vfprintf@ap^0,c
 27803  01A26C  0E00               	movlw	high sprintf@ap
 27804  01A26E  6E55               	movwf	(vfprintf@ap+1)^0,c
 27805  01A270  EC18  F0CF         	call	_vfprintf	;wreg free
 27806  01A274  0100               	movlb	0	; () banked
 27807  01A276  5166               	movf	(sprintf@f+2)& (0+255),w,b
 27808  01A278  2458               	addwf	sprintf@s^0,w,c
 27809  01A27A  6ED9               	movwf	fsr2l,c
 27810  01A27C  5167               	movf	(sprintf@f+3)& (0+255),w,b
 27811  01A27E  2059               	addwfc	(sprintf@s+1)^0,w,c
 27812  01A280  6EDA               	movwf	fsr2h,c
 27813  01A282  0E00               	movlw	0
 27814  01A284  6EDF               	movwf	indf2,c
 27815  01A286                     
 27816                           ; BSR set to: 0
 27817  01A286  0012               	return		;funcret
 27818  01A288                     __end_of_sprintf:
 27819                           	callstack 0
 27820                           
 27821 ;; *************** function _vfprintf *****************
 27822 ;; Defined at:
 27823 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 27824 ;; Parameters:    Size  Location     Type
 27825 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 27826 ;;		 -> sprintf@f(6), 
 27827 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 27828 ;;		 -> STR_64(3), STR_63(3), STR_60(3), STR_55(3), 
 27829 ;;		 -> STR_48(3), STR_45(3), STR_42(3), STR_35(3), 
 27830 ;;		 -> STR_34(3), STR_33(3), STR_28(3), 
 27831 ;;  ap              2   83[COMRAM] PTR PTR void 
 27832 ;;		 -> sprintf@ap(2), 
 27833 ;; Auto vars:     Size  Location     Type
 27834 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 27835 ;;		 -> STR_64(3), STR_63(3), STR_60(3), STR_55(3), 
 27836 ;;		 -> STR_48(3), STR_45(3), STR_42(3), STR_35(3), 
 27837 ;;		 -> STR_34(3), STR_33(3), STR_28(3), 
 27838 ;; Return value:  Size  Location     Type
 27839 ;;                  2   79[COMRAM] int 
 27840 ;; Registers used:
 27841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27842 ;; Tracked objects:
 27843 ;;		On entry : 0/0
 27844 ;;		On exit  : 0/0
 27845 ;;		Unchanged: 0/0
 27846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27847 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27850 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27851 ;;Total ram usage:        8 bytes
 27852 ;; Hardware stack levels used:    1
 27853 ;; Hardware stack levels required when called:    6
 27854 ;; This function calls:
 27855 ;;		_vfpfcnvrt
 27856 ;; This function is called by:
 27857 ;;		_sprintf
 27858 ;; This function uses a non-reentrant model
 27859 ;;
 27860                           
 27861                           	psect	text104
 27862  019E30                     __ptext104:
 27863                           	callstack 0
 27864  019E30                     _vfprintf:
 27865                           	callstack 19
 27866  019E30                     
 27867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 27868  019E30  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 27869  019E34  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 27870  019E38                     
 27871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 27872  019E38  0E00               	movlw	0
 27873  019E3A  0101               	movlb	1	; () banked
 27874  019E3C  6F22               	movwf	(_nout+1)& (0+255),b
 27875  019E3E  0E00               	movlw	0
 27876  019E40  6F21               	movwf	_nout& (0+255),b
 27877                           
 27878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 27879  019E42  EF36  F0CF         	goto	l10179
 27880  019E46                     l10177:
 27881                           
 27882                           ; BSR set to: 1
 27883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 27884  019E46  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 27885  019E4A  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 27886  019E4E  0E56               	movlw	low vfprintf@cfmt
 27887  019E50  6E42               	movwf	vfpfcnvrt@fmt^0,c
 27888  019E52  0E00               	movlw	high vfprintf@cfmt
 27889  019E54  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 27890  019E56  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 27891  019E5A  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 27892  019E5E  EC4B  F0B4         	call	_vfpfcnvrt	;wreg free
 27893  019E62  5040               	movf	?_vfpfcnvrt^0,w,c
 27894  019E64  0101               	movlb	1	; () banked
 27895  019E66  2721               	addwf	_nout& (0+255),f,b
 27896  019E68  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 27897  019E6A  2322               	addwfc	(_nout+1)& (0+255),f,b
 27898  019E6C                     l10179:
 27899                           
 27900                           ; BSR set to: 1
 27901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 27902  019E6C  0060  F15B  FFF6   	movff	vfprintf@cfmt,tblptrl
 27903  019E72  0060  F15F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 27904  019E78                     	if	0	;tblptru may be non-zero
 27905  019E78                     	endif
 27906  019E78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27907  019E78  0E00               	movlw	low (__mediumconst shr (0+16))
 27908  019E7A  6EF8               	movwf	tblptru,c
 27909  019E7C                     	endif
 27910  019E7C  0008               	tblrd		*
 27911  019E7E  50F5               	movf	tablat,w,c
 27912  019E80  0900               	iorlw	0
 27913  019E82  A4D8               	btfss	status,2,c
 27914  019E84  EF46  F0CF         	goto	u12381
 27915  019E88  EF48  F0CF         	goto	u12380
 27916  019E8C                     u12381:
 27917  019E8C  EF23  F0CF         	goto	l10177
 27918  019E90                     u12380:
 27919  019E90                     
 27920                           ; BSR set to: 1
 27921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 27922  019E90  C121  F050         	movff	_nout,?_vfprintf
 27923  019E94  C122  F051         	movff	_nout+1,?_vfprintf+1
 27924  019E98                     
 27925                           ; BSR set to: 1
 27926  019E98  0012               	return		;funcret
 27927  019E9A                     __end_of_vfprintf:
 27928                           	callstack 0
 27929                           
 27930 ;; *************** function _vfpfcnvrt *****************
 27931 ;; Defined at:
 27932 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 27933 ;; Parameters:    Size  Location     Type
 27934 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 27935 ;;		 -> sprintf@f(6), 
 27936 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 27937 ;;		 -> vfprintf@cfmt(2), 
 27938 ;;  ap              2   67[COMRAM] PTR PTR void 
 27939 ;;		 -> sprintf@ap(2), 
 27940 ;; Auto vars:     Size  Location     Type
 27941 ;;  ll              8   71[COMRAM] long long 
 27942 ;;  llu             8    0        unsigned long long 
 27943 ;;  f               4    0        unsigned long long 
 27944 ;;  vp              3    0        PTR void 
 27945 ;;  ct              3    0        unsigned char [3]
 27946 ;;  cp              3    0        PTR unsigned char 
 27947 ;;  i               2    0        int 
 27948 ;;  done            2    0        int 
 27949 ;;  c               1    0        unsigned char 
 27950 ;; Return value:  Size  Location     Type
 27951 ;;                  2   63[COMRAM] int 
 27952 ;; Registers used:
 27953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27959 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27960 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27962 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27963 ;;Total ram usage:       16 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:    5
 27966 ;; This function calls:
 27967 ;;		_dtoa
 27968 ;;		_fputc
 27969 ;; This function is called by:
 27970 ;;		_vfprintf
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           
 27974                           	psect	text105
 27975  016896                     __ptext105:
 27976                           	callstack 0
 27977  016896                     _vfpfcnvrt:
 27978                           	callstack 19
 27979  016896                     
 27980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 27981  016896  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 27982  01689C  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 27983  0168A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27984  0168A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27985  0168AE                     	if	0	;tblptru may be non-zero
 27986  0168AE                     	endif
 27987  0168AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27988  0168AE  0E00               	movlw	low (__mediumconst shr (0+16))
 27989  0168B0  6EF8               	movwf	tblptru,c
 27990  0168B2                     	endif
 27991  0168B2  0008               	tblrd		*
 27992  0168B4  50F5               	movf	tablat,w,c
 27993  0168B6  0A25               	xorlw	37
 27994  0168B8  A4D8               	btfss	status,2,c
 27995  0168BA  EF61  F0B4         	goto	u12251
 27996  0168BE  EF63  F0B4         	goto	u12250
 27997  0168C2                     u12251:
 27998  0168C2  EF31  F0B5         	goto	l10099
 27999  0168C6                     u12250:
 28000  0168C6                     
 28001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 28002  0168C6  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28003  0168CC  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28004  0168D2  2ADE               	incf	postinc2,f,c
 28005  0168D4  0E00               	movlw	0
 28006  0168D6  22DD               	addwfc	postdec2,f,c
 28007  0168D8                     
 28008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 28009  0168D8  0E00               	movlw	0
 28010  0168DA  0101               	movlb	1	; () banked
 28011  0168DC  6F24               	movwf	(_width+1)& (0+255),b
 28012  0168DE  0E00               	movlw	0
 28013  0168E0  6F23               	movwf	_width& (0+255),b
 28014  0168E2  C123  F127         	movff	_width,_flags
 28015  0168E6  C124  F128         	movff	_width+1,_flags+1
 28016  0168EA                     
 28017                           ; BSR set to: 1
 28018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 28019  0168EA  6925               	setf	_prec& (0+255),b
 28020  0168EC  6926               	setf	(_prec+1)& (0+255),b
 28021  0168EE                     
 28022                           ; BSR set to: 1
 28023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 28024  0168EE  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28025  0168F4  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28026  0168FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 28027  016900  006F FF77 FFF7     	movff	postdec2,tblptrh
 28028  016906                     	if	0	;tblptru may be non-zero
 28029  016906                     	endif
 28030  016906                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28031  016906  0E00               	movlw	low (__mediumconst shr (0+16))
 28032  016908  6EF8               	movwf	tblptru,c
 28033  01690A                     	endif
 28034  01690A  0008               	tblrd		*
 28035  01690C  50F5               	movf	tablat,w,c
 28036  01690E  0A64               	xorlw	100
 28037  016910  B4D8               	btfsc	status,2,c
 28038  016912  EF8D  F0B4         	goto	u12261
 28039  016916  EF8F  F0B4         	goto	u12260
 28040  01691A                     u12261:
 28041  01691A  EFA7  F0B4         	goto	l10077
 28042  01691E                     u12260:
 28043  01691E                     
 28044                           ; BSR set to: 1
 28045  01691E  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28046  016924  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28047  01692A  006F FF7B FFF6     	movff	postinc2,tblptrl
 28048  016930  006F FF77 FFF7     	movff	postdec2,tblptrh
 28049  016936                     	if	0	;tblptru may be non-zero
 28050  016936                     	endif
 28051  016936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28052  016936  0E00               	movlw	low (__mediumconst shr (0+16))
 28053  016938  6EF8               	movwf	tblptru,c
 28054  01693A                     	endif
 28055  01693A  0008               	tblrd		*
 28056  01693C  50F5               	movf	tablat,w,c
 28057  01693E  0A69               	xorlw	105
 28058  016940  A4D8               	btfss	status,2,c
 28059  016942  EFA5  F0B4         	goto	u12271
 28060  016946  EFA7  F0B4         	goto	u12270
 28061  01694A                     u12271:
 28062  01694A  EFF1  F0B4         	goto	l10083
 28063  01694E                     u12270:
 28064  01694E                     l10077:
 28065                           
 28066                           ; BSR set to: 1
 28067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 28068  01694E  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28069  016954  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28070  01695A  2ADE               	incf	postinc2,f,c
 28071  01695C  0E00               	movlw	0
 28072  01695E  22DD               	addwfc	postdec2,f,c
 28073                           
 28074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 28075  016960  0060  F113  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 28076  016966  0060  F117  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 28077  01696C  006F FF7C  F046    	movff	indf2,??_vfpfcnvrt
 28078  016972  0E02               	movlw	2
 28079  016974  26DE               	addwf	postinc2,f,c
 28080  016976  006F FF7C  F047    	movff	indf2,??_vfpfcnvrt+1
 28081  01697C  0E00               	movlw	0
 28082  01697E  22DD               	addwfc	postdec2,f,c
 28083  016980  0060  F11B  FFD9   	movff	??_vfpfcnvrt,fsr2l
 28084  016986  0060  F11F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 28085  01698C  006F FF78  F048    	movff	postinc2,vfpfcnvrt@ll
 28086  016992  006F FF74  F049    	movff	postdec2,vfpfcnvrt@ll+1
 28087  016998  0E00               	movlw	0
 28088  01699A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 28089  01699C  0EFF               	movlw	-1
 28090  01699E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 28091  0169A0  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 28092  0169A2  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 28093  0169A4  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 28094  0169A6  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 28095  0169A8  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 28096  0169AA                     
 28097                           ; BSR set to: 1
 28098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 28099  0169AA  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 28100  0169AE  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 28101  0169B2  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 28102  0169B6  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 28103  0169BA  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 28104  0169BE  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 28105  0169C2  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 28106  0169C6  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 28107  0169CA  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 28108  0169CE  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 28109  0169D2  EC22  F0AD         	call	_dtoa	;wreg free
 28110  0169D6  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 28111  0169DA  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 28112  0169DE  EF54  F0B5         	goto	l2304
 28113  0169E2                     l10083:
 28114                           
 28115                           ; BSR set to: 1
 28116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 28117  0169E2  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28118  0169E8  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28119  0169EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 28120  0169F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 28121  0169FA                     	if	0	;tblptru may be non-zero
 28122  0169FA                     	endif
 28123  0169FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28124  0169FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28125  0169FC  6EF8               	movwf	tblptru,c
 28126  0169FE                     	endif
 28127  0169FE  0008               	tblrd		*
 28128  016A00  50F5               	movf	tablat,w,c
 28129  016A02  0A25               	xorlw	37
 28130  016A04  A4D8               	btfss	status,2,c
 28131  016A06  EF07  F0B5         	goto	u12281
 28132  016A0A  EF09  F0B5         	goto	u12280
 28133  016A0E                     u12281:
 28134  016A0E  EF22  F0B5         	goto	l10093
 28135  016A12                     u12280:
 28136  016A12                     
 28137                           ; BSR set to: 1
 28138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 28139  016A12  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28140  016A18  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28141  016A1E  2ADE               	incf	postinc2,f,c
 28142  016A20  0E00               	movlw	0
 28143  016A22  22DD               	addwfc	postdec2,f,c
 28144  016A24                     
 28145                           ; BSR set to: 1
 28146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 28147  016A24  0E00               	movlw	0
 28148  016A26  6E02               	movwf	(fputc@c+1)^0,c
 28149  016A28  0E25               	movlw	37
 28150  016A2A  6E01               	movwf	fputc@c^0,c
 28151  016A2C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 28152  016A30  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 28153  016A34  EC4F  F0C5         	call	_fputc	;wreg free
 28154  016A38                     l10089:
 28155                           
 28156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 28157  016A38  0E00               	movlw	0
 28158  016A3A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 28159  016A3C  0E01               	movlw	1
 28160  016A3E  6E40               	movwf	?_vfpfcnvrt^0,c
 28161  016A40  EF54  F0B5         	goto	l2304
 28162  016A44                     l10093:
 28163                           
 28164                           ; BSR set to: 1
 28165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 28166  016A44  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28167  016A4A  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28168  016A50  2ADE               	incf	postinc2,f,c
 28169  016A52  0E00               	movlw	0
 28170  016A54  22DD               	addwfc	postdec2,f,c
 28171  016A56                     
 28172                           ; BSR set to: 1
 28173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 28174  016A56  0E00               	movlw	0
 28175  016A58  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 28176  016A5A  0E00               	movlw	0
 28177  016A5C  6E40               	movwf	?_vfpfcnvrt^0,c
 28178  016A5E  EF54  F0B5         	goto	l2304
 28179  016A62                     l10099:
 28180                           
 28181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 28182  016A62  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28183  016A68  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28184  016A6E  006F FF7B FFF6     	movff	postinc2,tblptrl
 28185  016A74  006F FF77 FFF7     	movff	postdec2,tblptrh
 28186  016A7A                     	if	0	;tblptru may be non-zero
 28187  016A7A                     	endif
 28188  016A7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28189  016A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 28190  016A7C  6EF8               	movwf	tblptru,c
 28191  016A7E                     	endif
 28192  016A7E  0008               	tblrd		*
 28193  016A80  50F5               	movf	tablat,w,c
 28194  016A82  6E01               	movwf	fputc@c^0,c
 28195  016A84  6A02               	clrf	(fputc@c+1)^0,c
 28196  016A86  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 28197  016A8A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 28198  016A8E  EC4F  F0C5         	call	_fputc	;wreg free
 28199  016A92                     
 28200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 28201  016A92  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 28202  016A98  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 28203  016A9E  2ADE               	incf	postinc2,f,c
 28204  016AA0  0E00               	movlw	0
 28205  016AA2  22DD               	addwfc	postdec2,f,c
 28206  016AA4  EF1C  F0B5         	goto	l10089
 28207  016AA8                     l2304:
 28208  016AA8  0012               	return		;funcret
 28209  016AAA                     __end_of_vfpfcnvrt:
 28210                           	callstack 0
 28211                           
 28212 ;; *************** function _dtoa *****************
 28213 ;; Defined at:
 28214 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 28215 ;; Parameters:    Size  Location     Type
 28216 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 28217 ;;		 -> sprintf@f(6), 
 28218 ;;  d               8   29[COMRAM] long long 
 28219 ;; Auto vars:     Size  Location     Type
 28220 ;;  n               8   53[COMRAM] long long 
 28221 ;;  i               2   61[COMRAM] int 
 28222 ;;  s               2   51[COMRAM] int 
 28223 ;;  w               2   49[COMRAM] int 
 28224 ;;  p               2   47[COMRAM] int 
 28225 ;; Return value:  Size  Location     Type
 28226 ;;                  2   27[COMRAM] int 
 28227 ;; Registers used:
 28228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28229 ;; Tracked objects:
 28230 ;;		On entry : 0/0
 28231 ;;		On exit  : 0/0
 28232 ;;		Unchanged: 0/0
 28233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28234 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28235 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28236 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28237 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28238 ;;Total ram usage:       36 bytes
 28239 ;; Hardware stack levels used:    1
 28240 ;; Hardware stack levels required when called:    4
 28241 ;; This function calls:
 28242 ;;		___aodiv
 28243 ;;		___aomod
 28244 ;;		_abs
 28245 ;;		_pad
 28246 ;; This function is called by:
 28247 ;;		_vfpfcnvrt
 28248 ;; This function uses a non-reentrant model
 28249 ;;
 28250                           
 28251                           	psect	text106
 28252  015A44                     __ptext106:
 28253                           	callstack 0
 28254  015A44                     _dtoa:
 28255                           	callstack 19
 28256  015A44                     
 28257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 28258  015A44  C01E  F036         	movff	dtoa@d,dtoa@n
 28259  015A48  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 28260  015A4C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 28261  015A50  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 28262  015A54  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 28263  015A58  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 28264  015A5C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 28265  015A60  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 28266  015A64                     
 28267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 28268  015A64  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 28269  015A66  EF37  F0AD         	goto	u11981
 28270  015A6A  EF3A  F0AD         	goto	u11980
 28271  015A6E                     u11981:
 28272  015A6E  0E01               	movlw	1
 28273  015A70  EF3B  F0AD         	goto	u11990
 28274  015A74                     u11980:
 28275  015A74  0E00               	movlw	0
 28276  015A76                     u11990:
 28277  015A76  6E34               	movwf	dtoa@s^0,c
 28278  015A78  6A35               	clrf	(dtoa@s+1)^0,c
 28279                           
 28280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 28281  015A7A  5034               	movf	dtoa@s^0,w,c
 28282  015A7C  1035               	iorwf	(dtoa@s+1)^0,w,c
 28283  015A7E  B4D8               	btfsc	status,2,c
 28284  015A80  EF44  F0AD         	goto	u12001
 28285  015A84  EF46  F0AD         	goto	u12000
 28286  015A88                     u12001:
 28287  015A88  EF56  F0AD         	goto	l9933
 28288  015A8C                     u12000:
 28289  015A8C                     
 28290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 28291  015A8C  1E3D               	comf	(dtoa@n+7)^0,f,c
 28292  015A8E  1E3C               	comf	(dtoa@n+6)^0,f,c
 28293  015A90  1E3B               	comf	(dtoa@n+5)^0,f,c
 28294  015A92  1E3A               	comf	(dtoa@n+4)^0,f,c
 28295  015A94  1E39               	comf	(dtoa@n+3)^0,f,c
 28296  015A96  1E38               	comf	(dtoa@n+2)^0,f,c
 28297  015A98  1E37               	comf	(dtoa@n+1)^0,f,c
 28298  015A9A  6C36               	negf	dtoa@n^0,c
 28299  015A9C  0E00               	movlw	0
 28300  015A9E  2237               	addwfc	(dtoa@n+1)^0,f,c
 28301  015AA0  2238               	addwfc	(dtoa@n+2)^0,f,c
 28302  015AA2  2239               	addwfc	(dtoa@n+3)^0,f,c
 28303  015AA4  223A               	addwfc	(dtoa@n+4)^0,f,c
 28304  015AA6  223B               	addwfc	(dtoa@n+5)^0,f,c
 28305  015AA8  223C               	addwfc	(dtoa@n+6)^0,f,c
 28306  015AAA  223D               	addwfc	(dtoa@n+7)^0,f,c
 28307  015AAC                     l9933:
 28308                           
 28309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 28310  015AAC  0101               	movlb	1	; () banked
 28311  015AAE  BF26               	btfsc	(_prec+1)& (0+255),7,b
 28312  015AB0  EF5C  F0AD         	goto	u12011
 28313  015AB4  EF5E  F0AD         	goto	u12010
 28314  015AB8                     u12011:
 28315  015AB8  EF5F  F0AD         	goto	l9937
 28316  015ABC                     u12010:
 28317  015ABC                     
 28318                           ; BSR set to: 1
 28319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 28320  015ABC  9327               	bcf	_flags& (0+255),1,b
 28321  015ABE                     l9937:
 28322                           
 28323                           ; BSR set to: 1
 28324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 28325  015ABE  BF26               	btfsc	(_prec+1)& (0+255),7,b
 28326  015AC0  EF6C  F0AD         	goto	u12020
 28327  015AC4  5126               	movf	(_prec+1)& (0+255),w,b
 28328  015AC6  E106               	bnz	u12021
 28329  015AC8  0525               	decf	_prec& (0+255),w,b
 28330  015ACA  B0D8               	btfsc	status,0,c
 28331  015ACC  EF6A  F0AD         	goto	u12021
 28332  015AD0  EF6C  F0AD         	goto	u12020
 28333  015AD4                     u12021:
 28334  015AD4  EF72  F0AD         	goto	l2277
 28335  015AD8                     u12020:
 28336  015AD8                     
 28337                           ; BSR set to: 1
 28338  015AD8  0E00               	movlw	0
 28339  015ADA  6E31               	movwf	(dtoa@p+1)^0,c
 28340  015ADC  0E01               	movlw	1
 28341  015ADE  6E30               	movwf	dtoa@p^0,c
 28342  015AE0  EF76  F0AD         	goto	l2279
 28343  015AE4                     l2277:
 28344                           
 28345                           ; BSR set to: 1
 28346  015AE4  C125  F030         	movff	_prec,dtoa@p
 28347  015AE8  C126  F031         	movff	_prec+1,dtoa@p+1
 28348  015AEC                     l2279:
 28349                           
 28350                           ; BSR set to: 1
 28351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 28352  015AEC  C123  F032         	movff	_width,dtoa@w
 28353  015AF0  C124  F033         	movff	_width+1,dtoa@w+1
 28354  015AF4                     
 28355                           ; BSR set to: 1
 28356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 28357  015AF4  5034               	movf	dtoa@s^0,w,c
 28358  015AF6  1035               	iorwf	(dtoa@s+1)^0,w,c
 28359  015AF8  A4D8               	btfss	status,2,c
 28360  015AFA  EF81  F0AD         	goto	u12031
 28361  015AFE  EF83  F0AD         	goto	u12030
 28362  015B02                     u12031:
 28363  015B02  EF8A  F0AD         	goto	l9945
 28364  015B06                     u12030:
 28365  015B06                     
 28366                           ; BSR set to: 1
 28367  015B06  A527               	btfss	_flags& (0+255),2,b
 28368  015B08  EF88  F0AD         	goto	u12041
 28369  015B0C  EF8A  F0AD         	goto	u12040
 28370  015B10                     u12041:
 28371  015B10  EF8D  F0AD         	goto	l9947
 28372  015B14                     u12040:
 28373  015B14                     l9945:
 28374                           
 28375                           ; BSR set to: 1
 28376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
 28377  015B14  0632               	decf	dtoa@w^0,f,c
 28378  015B16  A0D8               	btfss	status,0,c
 28379  015B18  0633               	decf	(dtoa@w+1)^0,f,c
 28380  015B1A                     l9947:
 28381                           
 28382                           ; BSR set to: 1
 28383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 28384  015B1A  0E00               	movlw	0
 28385  015B1C  6E3F               	movwf	(dtoa@i+1)^0,c
 28386  015B1E  0E1F               	movlw	31
 28387  015B20  6E3E               	movwf	dtoa@i^0,c
 28388  015B22                     
 28389                           ; BSR set to: 1
 28390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 28391  015B22  0E00               	movlw	0
 28392  015B24  6F5E               	movwf	(_dbuf+31)& (0+255),b
 28393                           
 28394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28395  015B26  EF11  F0AE         	goto	l9961
 28396  015B2A                     l9951:
 28397                           
 28398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
 28399  015B2A  063E               	decf	dtoa@i^0,f,c
 28400  015B2C  A0D8               	btfss	status,0,c
 28401  015B2E  063F               	decf	(dtoa@i+1)^0,f,c
 28402  015B30                     
 28403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 28404  015B30  0E3F               	movlw	low _dbuf
 28405  015B32  243E               	addwf	dtoa@i^0,w,c
 28406  015B34  6ED9               	movwf	fsr2l,c
 28407  015B36  0E01               	movlw	high _dbuf
 28408  015B38  203F               	addwfc	(dtoa@i+1)^0,w,c
 28409  015B3A  6EDA               	movwf	fsr2h,c
 28410  015B3C  C036  F001         	movff	dtoa@n,___aomod@dividend
 28411  015B40  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 28412  015B44  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 28413  015B48  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 28414  015B4C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 28415  015B50  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 28416  015B54  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 28417  015B58  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 28418  015B5C  0E0A               	movlw	10
 28419  015B5E  6E09               	movwf	___aomod@divisor^0,c
 28420  015B60  0E00               	movlw	0
 28421  015B62  6E0A               	movwf	(___aomod@divisor+1)^0,c
 28422  015B64  0E00               	movlw	0
 28423  015B66  6E0B               	movwf	(___aomod@divisor+2)^0,c
 28424  015B68  0E00               	movlw	0
 28425  015B6A  6E0C               	movwf	(___aomod@divisor+3)^0,c
 28426  015B6C  0E00               	movlw	0
 28427  015B6E  6E0D               	movwf	(___aomod@divisor+4)^0,c
 28428  015B70  0E00               	movlw	0
 28429  015B72  6E0E               	movwf	(___aomod@divisor+5)^0,c
 28430  015B74  0E00               	movlw	0
 28431  015B76  6E0F               	movwf	(___aomod@divisor+6)^0,c
 28432  015B78  0E00               	movlw	0
 28433  015B7A  6E10               	movwf	(___aomod@divisor+7)^0,c
 28434  015B7C  ECAF  F0BB         	call	___aomod	;wreg free
 28435  015B80  C001  F026         	movff	?___aomod,??_dtoa
 28436  015B84  C002  F027         	movff	?___aomod+1,??_dtoa+1
 28437  015B88  C003  F028         	movff	?___aomod+2,??_dtoa+2
 28438  015B8C  C004  F029         	movff	?___aomod+3,??_dtoa+3
 28439  015B90  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 28440  015B94  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 28441  015B98  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 28442  015B9C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 28443  015BA0  C026  F013         	movff	??_dtoa,abs@a
 28444  015BA4  C028  F014         	movff	??_dtoa+2,abs@a+1
 28445  015BA8  EC1F  F0D2         	call	_abs	;wreg free
 28446  015BAC  5013               	movf	?_abs^0,w,c
 28447  015BAE  0F30               	addlw	48
 28448  015BB0  6EDF               	movwf	indf2,c
 28449  015BB2                     
 28450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
 28451  015BB2  0630               	decf	dtoa@p^0,f,c
 28452  015BB4  A0D8               	btfss	status,0,c
 28453  015BB6  0631               	decf	(dtoa@p+1)^0,f,c
 28454  015BB8                     
 28455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
 28456  015BB8  0632               	decf	dtoa@w^0,f,c
 28457  015BBA  A0D8               	btfss	status,0,c
 28458  015BBC  0633               	decf	(dtoa@w+1)^0,f,c
 28459  015BBE                     
 28460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 28461  015BBE  C036  F001         	movff	dtoa@n,___aodiv@dividend
 28462  015BC2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 28463  015BC6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 28464  015BCA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 28465  015BCE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 28466  015BD2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 28467  015BD6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 28468  015BDA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 28469  015BDE  0E0A               	movlw	10
 28470  015BE0  6E09               	movwf	___aodiv@divisor^0,c
 28471  015BE2  0E00               	movlw	0
 28472  015BE4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 28473  015BE6  0E00               	movlw	0
 28474  015BE8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 28475  015BEA  0E00               	movlw	0
 28476  015BEC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 28477  015BEE  0E00               	movlw	0
 28478  015BF0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 28479  015BF2  0E00               	movlw	0
 28480  015BF4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 28481  015BF6  0E00               	movlw	0
 28482  015BF8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 28483  015BFA  0E00               	movlw	0
 28484  015BFC  6E10               	movwf	(___aodiv@divisor+7)^0,c
 28485  015BFE  EC78  F0B9         	call	___aodiv	;wreg free
 28486  015C02  C001  F036         	movff	?___aodiv,dtoa@n
 28487  015C06  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 28488  015C0A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 28489  015C0E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 28490  015C12  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 28491  015C16  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 28492  015C1A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 28493  015C1E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 28494  015C22                     l9961:
 28495                           
 28496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28497  015C22  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 28498  015C24  EF1C  F0AE         	goto	u12051
 28499  015C28  503F               	movf	(dtoa@i+1)^0,w,c
 28500  015C2A  E108               	bnz	u12050
 28501  015C2C  043E               	decf	dtoa@i^0,w,c
 28502  015C2E  A0D8               	btfss	status,0,c
 28503  015C30  EF1C  F0AE         	goto	u12051
 28504  015C34  EF1E  F0AE         	goto	u12050
 28505  015C38                     u12051:
 28506  015C38  EF4F  F0AE         	goto	l9971
 28507  015C3C                     u12050:
 28508  015C3C  5036               	movf	dtoa@n^0,w,c
 28509  015C3E  1037               	iorwf	(dtoa@n+1)^0,w,c
 28510  015C40  1038               	iorwf	(dtoa@n+2)^0,w,c
 28511  015C42  1039               	iorwf	(dtoa@n+3)^0,w,c
 28512  015C44  103A               	iorwf	(dtoa@n+4)^0,w,c
 28513  015C46  103B               	iorwf	(dtoa@n+5)^0,w,c
 28514  015C48  103C               	iorwf	(dtoa@n+6)^0,w,c
 28515  015C4A  103D               	iorwf	(dtoa@n+7)^0,w,c
 28516  015C4C  A4D8               	btfss	status,2,c
 28517  015C4E  EF2B  F0AE         	goto	u12061
 28518  015C52  EF2D  F0AE         	goto	u12060
 28519  015C56                     u12061:
 28520  015C56  EF95  F0AD         	goto	l9951
 28521  015C5A                     u12060:
 28522  015C5A  BE31               	btfsc	(dtoa@p+1)^0,7,c
 28523  015C5C  EF3A  F0AE         	goto	u12070
 28524  015C60  5031               	movf	(dtoa@p+1)^0,w,c
 28525  015C62  E106               	bnz	u12071
 28526  015C64  0430               	decf	dtoa@p^0,w,c
 28527  015C66  B0D8               	btfsc	status,0,c
 28528  015C68  EF38  F0AE         	goto	u12071
 28529  015C6C  EF3A  F0AE         	goto	u12070
 28530  015C70                     u12071:
 28531  015C70  EF95  F0AD         	goto	l9951
 28532  015C74                     u12070:
 28533  015C74  BE33               	btfsc	(dtoa@w+1)^0,7,c
 28534  015C76  EF45  F0AE         	goto	u12081
 28535  015C7A  5033               	movf	(dtoa@w+1)^0,w,c
 28536  015C7C  E108               	bnz	u12080
 28537  015C7E  0432               	decf	dtoa@w^0,w,c
 28538  015C80  A0D8               	btfss	status,0,c
 28539  015C82  EF45  F0AE         	goto	u12081
 28540  015C86  EF47  F0AE         	goto	u12080
 28541  015C8A                     u12081:
 28542  015C8A  EF4F  F0AE         	goto	l9971
 28543  015C8E                     u12080:
 28544  015C8E  0101               	movlb	1	; () banked
 28545  015C90  B327               	btfsc	_flags& (0+255),1,b
 28546  015C92  EF4D  F0AE         	goto	u12091
 28547  015C96  EF4F  F0AE         	goto	u12090
 28548  015C9A                     u12091:
 28549  015C9A  EF95  F0AD         	goto	l9951
 28550  015C9E                     u12090:
 28551  015C9E                     l9971:
 28552                           
 28553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 28554  015C9E  5034               	movf	dtoa@s^0,w,c
 28555  015CA0  1035               	iorwf	(dtoa@s+1)^0,w,c
 28556  015CA2  A4D8               	btfss	status,2,c
 28557  015CA4  EF56  F0AE         	goto	u12101
 28558  015CA8  EF58  F0AE         	goto	u12100
 28559  015CAC                     u12101:
 28560  015CAC  EF60  F0AE         	goto	l9975
 28561  015CB0                     u12100:
 28562  015CB0  0101               	movlb	1	; () banked
 28563  015CB2  A527               	btfss	_flags& (0+255),2,b
 28564  015CB4  EF5E  F0AE         	goto	u12111
 28565  015CB8  EF60  F0AE         	goto	u12110
 28566  015CBC                     u12111:
 28567  015CBC  EF7F  F0AE         	goto	l9985
 28568  015CC0                     u12110:
 28569  015CC0                     l9975:
 28570                           
 28571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
 28572  015CC0  063E               	decf	dtoa@i^0,f,c
 28573  015CC2  A0D8               	btfss	status,0,c
 28574  015CC4  063F               	decf	(dtoa@i+1)^0,f,c
 28575  015CC6                     
 28576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 28577  015CC6  5034               	movf	dtoa@s^0,w,c
 28578  015CC8  1035               	iorwf	(dtoa@s+1)^0,w,c
 28579  015CCA  A4D8               	btfss	status,2,c
 28580  015CCC  EF6A  F0AE         	goto	u12121
 28581  015CD0  EF6C  F0AE         	goto	u12120
 28582  015CD4                     u12121:
 28583  015CD4  EF72  F0AE         	goto	l9981
 28584  015CD8                     u12120:
 28585  015CD8  0E00               	movlw	0
 28586  015CDA  6E2F               	movwf	(_dtoa$3507+1)^0,c
 28587  015CDC  0E2B               	movlw	43
 28588  015CDE  6E2E               	movwf	_dtoa$3507^0,c
 28589  015CE0  EF76  F0AE         	goto	l9983
 28590  015CE4                     l9981:
 28591  015CE4  0E00               	movlw	0
 28592  015CE6  6E2F               	movwf	(_dtoa$3507+1)^0,c
 28593  015CE8  0E2D               	movlw	45
 28594  015CEA  6E2E               	movwf	_dtoa$3507^0,c
 28595  015CEC                     l9983:
 28596  015CEC  0E3F               	movlw	low _dbuf
 28597  015CEE  243E               	addwf	dtoa@i^0,w,c
 28598  015CF0  6ED9               	movwf	fsr2l,c
 28599  015CF2  0E01               	movlw	high _dbuf
 28600  015CF4  203F               	addwfc	(dtoa@i+1)^0,w,c
 28601  015CF6  6EDA               	movwf	fsr2h,c
 28602  015CF8  0060  F0BB  FFDF   	movff	_dtoa$3507,indf2
 28603  015CFE                     l9985:
 28604                           
 28605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 28606  015CFE  C01C  F011         	movff	dtoa@fp,pad@fp
 28607  015D02  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 28608  015D06  0E3F               	movlw	low _dbuf
 28609  015D08  243E               	addwf	dtoa@i^0,w,c
 28610  015D0A  6E13               	movwf	pad@buf^0,c
 28611  015D0C  0E01               	movlw	high _dbuf
 28612  015D0E  203F               	addwfc	(dtoa@i+1)^0,w,c
 28613  015D10  6E14               	movwf	(pad@buf+1)^0,c
 28614  015D12  C032  F015         	movff	dtoa@w,pad@p
 28615  015D16  C033  F016         	movff	dtoa@w+1,pad@p+1
 28616  015D1A  EC93  F0C8         	call	_pad	;wreg free
 28617  015D1E  C011  F01C         	movff	?_pad,?_dtoa
 28618  015D22  C012  F01D         	movff	?_pad+1,?_dtoa+1
 28619  015D26  0012               	return		;funcret
 28620  015D28                     __end_of_dtoa:
 28621                           	callstack 0
 28622                           
 28623 ;; *************** function _pad *****************
 28624 ;; Defined at:
 28625 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 28626 ;; Parameters:    Size  Location     Type
 28627 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 28628 ;;		 -> sprintf@f(6), 
 28629 ;;  buf             2   18[COMRAM] PTR unsigned char 
 28630 ;;		 -> dbuf(32), 
 28631 ;;  p               2   20[COMRAM] int 
 28632 ;; Auto vars:     Size  Location     Type
 28633 ;;  w               2   25[COMRAM] int 
 28634 ;;  i               2   23[COMRAM] int 
 28635 ;; Return value:  Size  Location     Type
 28636 ;;                  2   16[COMRAM] int 
 28637 ;; Registers used:
 28638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28639 ;; Tracked objects:
 28640 ;;		On entry : 0/0
 28641 ;;		On exit  : 0/0
 28642 ;;		Unchanged: 0/0
 28643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28644 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28645 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28647 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28648 ;;Total ram usage:       11 bytes
 28649 ;; Hardware stack levels used:    1
 28650 ;; Hardware stack levels required when called:    3
 28651 ;; This function calls:
 28652 ;;		_fputc
 28653 ;;		_fputs
 28654 ;;		_strlen
 28655 ;; This function is called by:
 28656 ;;		_dtoa
 28657 ;; This function uses a non-reentrant model
 28658 ;;
 28659                           
 28660                           	psect	text107
 28661  019126                     __ptext107:
 28662                           	callstack 0
 28663  019126                     _pad:
 28664                           	callstack 19
 28665  019126                     
 28666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 28667  019126  0101               	movlb	1	; () banked
 28668  019128  A127               	btfss	_flags& (0+255),0,b
 28669  01912A  EF99  F0C8         	goto	u11201
 28670  01912E  EF9B  F0C8         	goto	u11200
 28671  019132                     u11201:
 28672  019132  EFA5  F0C8         	goto	l9513
 28673  019136                     u11200:
 28674  019136                     
 28675                           ; BSR set to: 1
 28676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 28677  019136  C013  F00A         	movff	pad@buf,fputs@s
 28678  01913A  C014  F00B         	movff	pad@buf+1,fputs@s+1
 28679  01913E  C011  F00C         	movff	pad@fp,fputs@fp
 28680  019142  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 28681  019146  ECFD  F0D1         	call	_fputs	;wreg free
 28682  01914A                     l9513:
 28683                           
 28684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 28685  01914A  BE16               	btfsc	(pad@p+1)^0,7,c
 28686  01914C  EFAA  F0C8         	goto	u11211
 28687  019150  EFAC  F0C8         	goto	u11210
 28688  019154                     u11211:
 28689  019154  EFB2  F0C8         	goto	l9517
 28690  019158                     u11210:
 28691  019158  C015  F01A         	movff	pad@p,pad@w
 28692  01915C  C016  F01B         	movff	pad@p+1,pad@w+1
 28693  019160  EFB6  F0C8         	goto	l2266
 28694  019164                     l9517:
 28695  019164  0E00               	movlw	0
 28696  019166  6E1B               	movwf	(pad@w+1)^0,c
 28697  019168  0E00               	movlw	0
 28698  01916A  6E1A               	movwf	pad@w^0,c
 28699  01916C                     l2266:
 28700                           
 28701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 28702  01916C  0E00               	movlw	0
 28703  01916E  6E19               	movwf	(pad@i+1)^0,c
 28704  019170  0E00               	movlw	0
 28705  019172  6E18               	movwf	pad@i^0,c
 28706                           
 28707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 28708  019174  EFC8  F0C8         	goto	l9523
 28709  019178                     l9519:
 28710                           
 28711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 28712  019178  0E00               	movlw	0
 28713  01917A  6E02               	movwf	(fputc@c+1)^0,c
 28714  01917C  0E20               	movlw	32
 28715  01917E  6E01               	movwf	fputc@c^0,c
 28716  019180  C011  F003         	movff	pad@fp,fputc@fp
 28717  019184  C012  F004         	movff	pad@fp+1,fputc@fp+1
 28718  019188  EC4F  F0C5         	call	_fputc	;wreg free
 28719  01918C                     
 28720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 28721  01918C  4A18               	infsnz	pad@i^0,f,c
 28722  01918E  2A19               	incf	(pad@i+1)^0,f,c
 28723  019190                     l9523:
 28724                           
 28725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 28726  019190  501A               	movf	pad@w^0,w,c
 28727  019192  5C18               	subwf	pad@i^0,w,c
 28728  019194  5019               	movf	(pad@i+1)^0,w,c
 28729  019196  0A80               	xorlw	128
 28730  019198  6E17               	movwf	??_pad^0,c
 28731  01919A  501B               	movf	(pad@w+1)^0,w,c
 28732  01919C  0A80               	xorlw	128
 28733  01919E  5817               	subwfb	??_pad^0,w,c
 28734  0191A0  A0D8               	btfss	status,0,c
 28735  0191A2  EFD5  F0C8         	goto	u11221
 28736  0191A6  EFD7  F0C8         	goto	u11220
 28737  0191AA                     u11221:
 28738  0191AA  EFBC  F0C8         	goto	l9519
 28739  0191AE                     u11220:
 28740  0191AE                     
 28741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 28742  0191AE  0101               	movlb	1	; () banked
 28743  0191B0  B127               	btfsc	_flags& (0+255),0,b
 28744  0191B2  EFDD  F0C8         	goto	u11231
 28745  0191B6  EFDF  F0C8         	goto	u11230
 28746  0191BA                     u11231:
 28747  0191BA  EFE9  F0C8         	goto	l9527
 28748  0191BE                     u11230:
 28749  0191BE                     
 28750                           ; BSR set to: 1
 28751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 28752  0191BE  C013  F00A         	movff	pad@buf,fputs@s
 28753  0191C2  C014  F00B         	movff	pad@buf+1,fputs@s+1
 28754  0191C6  C011  F00C         	movff	pad@fp,fputs@fp
 28755  0191CA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 28756  0191CE  ECFD  F0D1         	call	_fputs	;wreg free
 28757  0191D2                     l9527:
 28758                           
 28759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 28760  0191D2  C013  F001         	movff	pad@buf,strlen@s
 28761  0191D6  C014  F002         	movff	pad@buf+1,strlen@s+1
 28762  0191DA  EC9C  F0D0         	call	_strlen	;wreg free
 28763  0191DE  501A               	movf	pad@w^0,w,c
 28764  0191E0  2401               	addwf	?_strlen^0,w,c
 28765  0191E2  6E11               	movwf	?_pad^0,c
 28766  0191E4  501B               	movf	(pad@w+1)^0,w,c
 28767  0191E6  2002               	addwfc	(?_strlen+1)^0,w,c
 28768  0191E8  6E12               	movwf	(?_pad+1)^0,c
 28769  0191EA  0012               	return		;funcret
 28770  0191EC                     __end_of_pad:
 28771                           	callstack 0
 28772                           
 28773 ;; *************** function _fputs *****************
 28774 ;; Defined at:
 28775 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 28776 ;; Parameters:    Size  Location     Type
 28777 ;;  s               2    9[COMRAM] PTR const unsigned char 
 28778 ;;		 -> dbuf(32), 
 28779 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 28780 ;;		 -> sprintf@f(6), 
 28781 ;; Auto vars:     Size  Location     Type
 28782 ;;  i               2   14[COMRAM] int 
 28783 ;;  c               1   13[COMRAM] unsigned char 
 28784 ;; Return value:  Size  Location     Type
 28785 ;;                  2    9[COMRAM] int 
 28786 ;; Registers used:
 28787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28788 ;; Tracked objects:
 28789 ;;		On entry : 0/0
 28790 ;;		On exit  : 0/0
 28791 ;;		Unchanged: 0/0
 28792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28794 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28796 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28797 ;;Total ram usage:        7 bytes
 28798 ;; Hardware stack levels used:    1
 28799 ;; Hardware stack levels required when called:    2
 28800 ;; This function calls:
 28801 ;;		_fputc
 28802 ;; This function is called by:
 28803 ;;		_pad
 28804 ;; This function uses a non-reentrant model
 28805 ;;
 28806                           
 28807                           	psect	text108
 28808  01A3FA                     __ptext108:
 28809                           	callstack 0
 28810  01A3FA                     _fputs:
 28811                           	callstack 19
 28812  01A3FA  0E00               	movlw	0
 28813  01A3FC  6E10               	movwf	(fputs@i+1)^0,c
 28814  01A3FE  0E00               	movlw	0
 28815  01A400  6E0F               	movwf	fputs@i^0,c
 28816  01A402  EF0E  F0D2         	goto	l8951
 28817  01A406                     l8947:
 28818  01A406  C00E  F001         	movff	fputs@c,fputc@c
 28819  01A40A  6A02               	clrf	(fputc@c+1)^0,c
 28820  01A40C  C00C  F003         	movff	fputs@fp,fputc@fp
 28821  01A410  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 28822  01A414  EC4F  F0C5         	call	_fputc	;wreg free
 28823  01A418  4A0F               	infsnz	fputs@i^0,f,c
 28824  01A41A  2A10               	incf	(fputs@i+1)^0,f,c
 28825  01A41C                     l8951:
 28826  01A41C  500F               	movf	fputs@i^0,w,c
 28827  01A41E  240A               	addwf	fputs@s^0,w,c
 28828  01A420  6ED9               	movwf	fsr2l,c
 28829  01A422  5010               	movf	(fputs@i+1)^0,w,c
 28830  01A424  200B               	addwfc	(fputs@s+1)^0,w,c
 28831  01A426  6EDA               	movwf	fsr2h,c
 28832  01A428  50DF               	movf	indf2,w,c
 28833  01A42A  6E0E               	movwf	fputs@c^0,c
 28834  01A42C  500E               	movf	fputs@c^0,w,c
 28835  01A42E  A4D8               	btfss	status,2,c
 28836  01A430  EF1C  F0D2         	goto	u10221
 28837  01A434  EF1E  F0D2         	goto	u10220
 28838  01A438                     u10221:
 28839  01A438  EF03  F0D2         	goto	l8947
 28840  01A43C                     u10220:
 28841  01A43C  0012               	return		;funcret
 28842  01A43E                     __end_of_fputs:
 28843                           	callstack 0
 28844                           
 28845 ;; *************** function _fputc *****************
 28846 ;; Defined at:
 28847 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 28848 ;; Parameters:    Size  Location     Type
 28849 ;;  c               2    0[COMRAM] int 
 28850 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 28851 ;;		 -> sprintf@f(6), 
 28852 ;; Auto vars:     Size  Location     Type
 28853 ;;		None
 28854 ;; Return value:  Size  Location     Type
 28855 ;;                  2    0[COMRAM] int 
 28856 ;; Registers used:
 28857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28858 ;; Tracked objects:
 28859 ;;		On entry : 0/0
 28860 ;;		On exit  : 0/0
 28861 ;;		Unchanged: 0/0
 28862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28865 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28866 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28867 ;;Total ram usage:        9 bytes
 28868 ;; Hardware stack levels used:    1
 28869 ;; Hardware stack levels required when called:    1
 28870 ;; This function calls:
 28871 ;;		_putch
 28872 ;; This function is called by:
 28873 ;;		_pad
 28874 ;;		_vfpfcnvrt
 28875 ;;		_fputs
 28876 ;; This function uses a non-reentrant model
 28877 ;;
 28878                           
 28879                           	psect	text109
 28880  018A9E                     __ptext109:
 28881                           	callstack 0
 28882  018A9E                     _fputc:
 28883                           	callstack 22
 28884  018A9E  5003               	movf	fputc@fp^0,w,c
 28885  018AA0  1004               	iorwf	(fputc@fp+1)^0,w,c
 28886  018AA2  B4D8               	btfsc	status,2,c
 28887  018AA4  EF56  F0C5         	goto	u9521
 28888  018AA8  EF58  F0C5         	goto	u9520
 28889  018AAC                     u9521:
 28890  018AAC  EF61  F0C5         	goto	l8529
 28891  018AB0                     u9520:
 28892  018AB0  5003               	movf	fputc@fp^0,w,c
 28893  018AB2  1004               	iorwf	(fputc@fp+1)^0,w,c
 28894  018AB4  A4D8               	btfss	status,2,c
 28895  018AB6  EF5F  F0C5         	goto	u9531
 28896  018ABA  EF61  F0C5         	goto	u9530
 28897  018ABE                     u9531:
 28898  018ABE  EF66  F0C5         	goto	l8531
 28899  018AC2                     u9530:
 28900  018AC2                     l8529:
 28901  018AC2  5001               	movf	fputc@c^0,w,c
 28902  018AC4  ECE8  F0D3         	call	_putch
 28903  018AC8  EFBA  F0C5         	goto	l2330
 28904  018ACC                     l8531:
 28905  018ACC  EE20 F004          	lfsr	2,4
 28906  018AD0  5003               	movf	fputc@fp^0,w,c
 28907  018AD2  26D9               	addwf	fsr2l,f,c
 28908  018AD4  5004               	movf	(fputc@fp+1)^0,w,c
 28909  018AD6  22DA               	addwfc	fsr2h,f,c
 28910  018AD8  50DE               	movf	postinc2,w,c
 28911  018ADA  10DE               	iorwf	postinc2,w,c
 28912  018ADC  B4D8               	btfsc	status,2,c
 28913  018ADE  EF73  F0C5         	goto	u9541
 28914  018AE2  EF75  F0C5         	goto	u9540
 28915  018AE6                     u9541:
 28916  018AE6  EF90  F0C5         	goto	l8535
 28917  018AEA                     u9540:
 28918  018AEA  EE20 F004          	lfsr	2,4
 28919  018AEE  5003               	movf	fputc@fp^0,w,c
 28920  018AF0  26D9               	addwf	fsr2l,f,c
 28921  018AF2  5004               	movf	(fputc@fp+1)^0,w,c
 28922  018AF4  22DA               	addwfc	fsr2h,f,c
 28923  018AF6  EE10 F002          	lfsr	1,2
 28924  018AFA  5003               	movf	fputc@fp^0,w,c
 28925  018AFC  26E1               	addwf	fsr1l,f,c
 28926  018AFE  5004               	movf	(fputc@fp+1)^0,w,c
 28927  018B00  22E2               	addwfc	fsr1h,f,c
 28928  018B02  50DE               	movf	postinc2,w,c
 28929  018B04  5CE6               	subwf	postinc1,w,c
 28930  018B06  50E6               	movf	postinc1,w,c
 28931  018B08  0A80               	xorlw	128
 28932  018B0A  6E09               	movwf	(??_fputc+4)^0,c
 28933  018B0C  50DE               	movf	postinc2,w,c
 28934  018B0E  0A80               	xorlw	128
 28935  018B10  5809               	subwfb	(??_fputc+4)^0,w,c
 28936  018B12  B0D8               	btfsc	status,0,c
 28937  018B14  EF8E  F0C5         	goto	u9551
 28938  018B18  EF90  F0C5         	goto	u9550
 28939  018B1C                     u9551:
 28940  018B1C  EFBA  F0C5         	goto	l2330
 28941  018B20                     u9550:
 28942  018B20                     l8535:
 28943  018B20  EE20 F002          	lfsr	2,2
 28944  018B24  5003               	movf	fputc@fp^0,w,c
 28945  018B26  26D9               	addwf	fsr2l,f,c
 28946  018B28  5004               	movf	(fputc@fp+1)^0,w,c
 28947  018B2A  22DA               	addwfc	fsr2h,f,c
 28948  018B2C  006F FF78  F005    	movff	postinc2,??_fputc
 28949  018B32  006F FF74  F006    	movff	postdec2,??_fputc+1
 28950  018B38  0060  F00F  FFD9   	movff	fputc@fp,fsr2l
 28951  018B3E  0060  F013  FFDA   	movff	fputc@fp+1,fsr2h
 28952  018B44  006F FF78  F007    	movff	postinc2,??_fputc+2
 28953  018B4A  006F FF74  F008    	movff	postdec2,??_fputc+3
 28954  018B50  5005               	movf	??_fputc^0,w,c
 28955  018B52  2407               	addwf	(??_fputc+2)^0,w,c
 28956  018B54  6ED9               	movwf	fsr2l,c
 28957  018B56  5006               	movf	(??_fputc+1)^0,w,c
 28958  018B58  2008               	addwfc	(??_fputc+3)^0,w,c
 28959  018B5A  6EDA               	movwf	fsr2h,c
 28960  018B5C  0060  F007  FFDF   	movff	fputc@c,indf2
 28961  018B62  EE20 F002          	lfsr	2,2
 28962  018B66  5003               	movf	fputc@fp^0,w,c
 28963  018B68  26D9               	addwf	fsr2l,f,c
 28964  018B6A  5004               	movf	(fputc@fp+1)^0,w,c
 28965  018B6C  22DA               	addwfc	fsr2h,f,c
 28966  018B6E  2ADE               	incf	postinc2,f,c
 28967  018B70  0E00               	movlw	0
 28968  018B72  22DD               	addwfc	postdec2,f,c
 28969  018B74                     l2330:
 28970  018B74  0012               	return		;funcret
 28971  018B76                     __end_of_fputc:
 28972                           	callstack 0
 28973                           
 28974 ;; *************** function _putch *****************
 28975 ;; Defined at:
 28976 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
 28977 ;; Parameters:    Size  Location     Type
 28978 ;;  c               1    wreg     unsigned char 
 28979 ;; Auto vars:     Size  Location     Type
 28980 ;;  c               1    0[COMRAM] unsigned char 
 28981 ;; Return value:  Size  Location     Type
 28982 ;;                  1    wreg      void 
 28983 ;; Registers used:
 28984 ;;		wreg
 28985 ;; Tracked objects:
 28986 ;;		On entry : 0/0
 28987 ;;		On exit  : 0/0
 28988 ;;		Unchanged: 0/0
 28989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28994 ;;Total ram usage:        0 bytes
 28995 ;; Hardware stack levels used:    1
 28996 ;; This function calls:
 28997 ;;		Nothing
 28998 ;; This function is called by:
 28999 ;;		_fputc
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text110
 29004  01A7D0                     __ptext110:
 29005                           	callstack 0
 29006  01A7D0                     _putch:
 29007                           	callstack 22
 29008  01A7D0  0012               	return		;funcret
 29009  01A7D2                     __end_of_putch:
 29010                           	callstack 0
 29011                           
 29012 ;; *************** function _abs *****************
 29013 ;; Defined at:
 29014 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 29015 ;; Parameters:    Size  Location     Type
 29016 ;;  a               2   18[COMRAM] int 
 29017 ;; Auto vars:     Size  Location     Type
 29018 ;;		None
 29019 ;; Return value:  Size  Location     Type
 29020 ;;                  2   18[COMRAM] int 
 29021 ;; Registers used:
 29022 ;;		wreg, status,2, status,0
 29023 ;; Tracked objects:
 29024 ;;		On entry : 0/0
 29025 ;;		On exit  : 0/0
 29026 ;;		Unchanged: 0/0
 29027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29032 ;;Total ram usage:        4 bytes
 29033 ;; Hardware stack levels used:    1
 29034 ;; This function calls:
 29035 ;;		Nothing
 29036 ;; This function is called by:
 29037 ;;		_dtoa
 29038 ;; This function uses a non-reentrant model
 29039 ;;
 29040                           
 29041                           	psect	text111
 29042  01A43E                     __ptext111:
 29043                           	callstack 0
 29044  01A43E                     _abs:
 29045                           	callstack 22
 29046  01A43E  BE14               	btfsc	(abs@a+1)^0,7,c
 29047  01A440  EF2C  F0D2         	goto	u11240
 29048  01A444  5014               	movf	(abs@a+1)^0,w,c
 29049  01A446  E106               	bnz	u11241
 29050  01A448  0413               	decf	abs@a^0,w,c
 29051  01A44A  B0D8               	btfsc	status,0,c
 29052  01A44C  EF2A  F0D2         	goto	u11241
 29053  01A450  EF2C  F0D2         	goto	u11240
 29054  01A454                     u11241:
 29055  01A454  EF3A  F0D2         	goto	l2315
 29056  01A458                     u11240:
 29057  01A458  C013  F015         	movff	abs@a,??_abs
 29058  01A45C  C014  F016         	movff	abs@a+1,??_abs+1
 29059  01A460  1E15               	comf	??_abs^0,f,c
 29060  01A462  1E16               	comf	(??_abs+1)^0,f,c
 29061  01A464  4A15               	infsnz	??_abs^0,f,c
 29062  01A466  2A16               	incf	(??_abs+1)^0,f,c
 29063  01A468  C015  F013         	movff	??_abs,?_abs
 29064  01A46C  C016  F014         	movff	??_abs+1,?_abs+1
 29065  01A470  EF3E  F0D2         	goto	l2318
 29066  01A474                     l2315:
 29067  01A474  C013  F013         	movff	abs@a,?_abs
 29068  01A478  C014  F014         	movff	abs@a+1,?_abs+1
 29069  01A47C                     l2318:
 29070  01A47C  0012               	return		;funcret
 29071  01A47E                     __end_of_abs:
 29072                           	callstack 0
 29073                           
 29074 ;; *************** function ___aomod *****************
 29075 ;; Defined at:
 29076 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 29077 ;; Parameters:    Size  Location     Type
 29078 ;;  dividend        8    0[COMRAM] long long 
 29079 ;;  divisor         8    8[COMRAM] long long 
 29080 ;; Auto vars:     Size  Location     Type
 29081 ;;  sign            1   17[COMRAM] unsigned char 
 29082 ;;  counter         1   16[COMRAM] unsigned char 
 29083 ;; Return value:  Size  Location     Type
 29084 ;;                  8    0[COMRAM] long long 
 29085 ;; Registers used:
 29086 ;;		wreg, status,2, status,0
 29087 ;; Tracked objects:
 29088 ;;		On entry : 0/0
 29089 ;;		On exit  : 0/0
 29090 ;;		Unchanged: 0/0
 29091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29092 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29095 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29096 ;;Total ram usage:       18 bytes
 29097 ;; Hardware stack levels used:    1
 29098 ;; This function calls:
 29099 ;;		Nothing
 29100 ;; This function is called by:
 29101 ;;		_dtoa
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text112
 29106  01775E                     __ptext112:
 29107                           	callstack 0
 29108  01775E                     ___aomod:
 29109                           	callstack 22
 29110  01775E  0E00               	movlw	0
 29111  017760  6E12               	movwf	___aomod@sign^0,c
 29112  017762  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 29113  017764  EFB8  F0BB         	goto	u11140
 29114  017768  EFB6  F0BB         	goto	u11141
 29115  01776C                     u11141:
 29116  01776C  EFCA  F0BB         	goto	l9481
 29117  017770                     u11140:
 29118  017770  1E08               	comf	(___aomod@dividend+7)^0,f,c
 29119  017772  1E07               	comf	(___aomod@dividend+6)^0,f,c
 29120  017774  1E06               	comf	(___aomod@dividend+5)^0,f,c
 29121  017776  1E05               	comf	(___aomod@dividend+4)^0,f,c
 29122  017778  1E04               	comf	(___aomod@dividend+3)^0,f,c
 29123  01777A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 29124  01777C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 29125  01777E  6C01               	negf	___aomod@dividend^0,c
 29126  017780  0E00               	movlw	0
 29127  017782  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 29128  017784  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 29129  017786  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 29130  017788  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 29131  01778A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 29132  01778C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 29133  01778E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 29134  017790  0E01               	movlw	1
 29135  017792  6E12               	movwf	___aomod@sign^0,c
 29136  017794                     l9481:
 29137  017794  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 29138  017796  EFD1  F0BB         	goto	u11150
 29139  01779A  EFCF  F0BB         	goto	u11151
 29140  01779E                     u11151:
 29141  01779E  EFE1  F0BB         	goto	l9485
 29142  0177A2                     u11150:
 29143  0177A2  1E10               	comf	(___aomod@divisor+7)^0,f,c
 29144  0177A4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 29145  0177A6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 29146  0177A8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 29147  0177AA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 29148  0177AC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 29149  0177AE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 29150  0177B0  6C09               	negf	___aomod@divisor^0,c
 29151  0177B2  0E00               	movlw	0
 29152  0177B4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 29153  0177B6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 29154  0177B8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 29155  0177BA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 29156  0177BC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 29157  0177BE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 29158  0177C0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 29159  0177C2                     l9485:
 29160  0177C2  5009               	movf	___aomod@divisor^0,w,c
 29161  0177C4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 29162  0177C6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 29163  0177C8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 29164  0177CA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 29165  0177CC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 29166  0177CE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 29167  0177D0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 29168  0177D2  B4D8               	btfsc	status,2,c
 29169  0177D4  EFEE  F0BB         	goto	u11161
 29170  0177D8  EFF0  F0BB         	goto	u11160
 29171  0177DC                     u11161:
 29172  0177DC  EF38  F0BC         	goto	l9501
 29173  0177E0                     u11160:
 29174  0177E0  0E01               	movlw	1
 29175  0177E2  6E11               	movwf	___aomod@counter^0,c
 29176  0177E4  EFFE  F0BB         	goto	l9491
 29177  0177E8                     l9489:
 29178  0177E8  90D8               	bcf	status,0,c
 29179  0177EA  3609               	rlcf	___aomod@divisor^0,f,c
 29180  0177EC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 29181  0177EE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 29182  0177F0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 29183  0177F2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 29184  0177F4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 29185  0177F6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 29186  0177F8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 29187  0177FA  2A11               	incf	___aomod@counter^0,f,c
 29188  0177FC                     l9491:
 29189  0177FC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 29190  0177FE  EF03  F0BC         	goto	u11171
 29191  017802  EF05  F0BC         	goto	u11170
 29192  017806                     u11171:
 29193  017806  EFF4  F0BB         	goto	l9489
 29194  01780A                     u11170:
 29195  01780A                     l9493:
 29196  01780A  5009               	movf	___aomod@divisor^0,w,c
 29197  01780C  5C01               	subwf	___aomod@dividend^0,w,c
 29198  01780E  500A               	movf	(___aomod@divisor+1)^0,w,c
 29199  017810  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 29200  017812  500B               	movf	(___aomod@divisor+2)^0,w,c
 29201  017814  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 29202  017816  500C               	movf	(___aomod@divisor+3)^0,w,c
 29203  017818  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 29204  01781A  500D               	movf	(___aomod@divisor+4)^0,w,c
 29205  01781C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 29206  01781E  500E               	movf	(___aomod@divisor+5)^0,w,c
 29207  017820  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 29208  017822  500F               	movf	(___aomod@divisor+6)^0,w,c
 29209  017824  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 29210  017826  5010               	movf	(___aomod@divisor+7)^0,w,c
 29211  017828  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 29212  01782A  A0D8               	btfss	status,0,c
 29213  01782C  EF1A  F0BC         	goto	u11181
 29214  017830  EF1C  F0BC         	goto	u11180
 29215  017834                     u11181:
 29216  017834  EF2C  F0BC         	goto	l9497
 29217  017838                     u11180:
 29218  017838  5009               	movf	___aomod@divisor^0,w,c
 29219  01783A  5E01               	subwf	___aomod@dividend^0,f,c
 29220  01783C  500A               	movf	(___aomod@divisor+1)^0,w,c
 29221  01783E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 29222  017840  500B               	movf	(___aomod@divisor+2)^0,w,c
 29223  017842  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 29224  017844  500C               	movf	(___aomod@divisor+3)^0,w,c
 29225  017846  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 29226  017848  500D               	movf	(___aomod@divisor+4)^0,w,c
 29227  01784A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 29228  01784C  500E               	movf	(___aomod@divisor+5)^0,w,c
 29229  01784E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 29230  017850  500F               	movf	(___aomod@divisor+6)^0,w,c
 29231  017852  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 29232  017854  5010               	movf	(___aomod@divisor+7)^0,w,c
 29233  017856  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 29234  017858                     l9497:
 29235  017858  90D8               	bcf	status,0,c
 29236  01785A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 29237  01785C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 29238  01785E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 29239  017860  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 29240  017862  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 29241  017864  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 29242  017866  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 29243  017868  3209               	rrcf	___aomod@divisor^0,f,c
 29244  01786A  2E11               	decfsz	___aomod@counter^0,f,c
 29245  01786C  EF05  F0BC         	goto	l9493
 29246  017870                     l9501:
 29247  017870  5012               	movf	___aomod@sign^0,w,c
 29248  017872  B4D8               	btfsc	status,2,c
 29249  017874  EF3E  F0BC         	goto	u11191
 29250  017878  EF40  F0BC         	goto	u11190
 29251  01787C                     u11191:
 29252  01787C  EF50  F0BC         	goto	l9505
 29253  017880                     u11190:
 29254  017880  1E08               	comf	(___aomod@dividend+7)^0,f,c
 29255  017882  1E07               	comf	(___aomod@dividend+6)^0,f,c
 29256  017884  1E06               	comf	(___aomod@dividend+5)^0,f,c
 29257  017886  1E05               	comf	(___aomod@dividend+4)^0,f,c
 29258  017888  1E04               	comf	(___aomod@dividend+3)^0,f,c
 29259  01788A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 29260  01788C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 29261  01788E  6C01               	negf	___aomod@dividend^0,c
 29262  017890  0E00               	movlw	0
 29263  017892  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 29264  017894  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 29265  017896  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 29266  017898  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 29267  01789A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 29268  01789C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 29269  01789E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 29270  0178A0                     l9505:
 29271  0178A0  C001  F001         	movff	___aomod@dividend,?___aomod
 29272  0178A4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 29273  0178A8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 29274  0178AC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 29275  0178B0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 29276  0178B4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 29277  0178B8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 29278  0178BC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 29279  0178C0  0012               	return		;funcret
 29280  0178C2                     __end_of___aomod:
 29281                           	callstack 0
 29282                           
 29283 ;; *************** function ___aodiv *****************
 29284 ;; Defined at:
 29285 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 29286 ;; Parameters:    Size  Location     Type
 29287 ;;  dividend        8    0[COMRAM] long long 
 29288 ;;  divisor         8    8[COMRAM] long long 
 29289 ;; Auto vars:     Size  Location     Type
 29290 ;;  quotient        8   18[COMRAM] long long 
 29291 ;;  sign            1   17[COMRAM] unsigned char 
 29292 ;;  counter         1   16[COMRAM] unsigned char 
 29293 ;; Return value:  Size  Location     Type
 29294 ;;                  8    0[COMRAM] long long 
 29295 ;; Registers used:
 29296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29297 ;; Tracked objects:
 29298 ;;		On entry : 0/0
 29299 ;;		On exit  : 0/0
 29300 ;;		Unchanged: 0/0
 29301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29302 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29303 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29305 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29306 ;;Total ram usage:       26 bytes
 29307 ;; Hardware stack levels used:    1
 29308 ;; This function calls:
 29309 ;;		Nothing
 29310 ;; This function is called by:
 29311 ;;		_dtoa
 29312 ;; This function uses a non-reentrant model
 29313 ;;
 29314                           
 29315                           	psect	text113
 29316  0172F0                     __ptext113:
 29317                           	callstack 0
 29318  0172F0                     ___aodiv:
 29319                           	callstack 22
 29320  0172F0  0E00               	movlw	0
 29321  0172F2  6E12               	movwf	___aodiv@sign^0,c
 29322  0172F4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 29323  0172F6  EF81  F0B9         	goto	u11070
 29324  0172FA  EF7F  F0B9         	goto	u11071
 29325  0172FE                     u11071:
 29326  0172FE  EF93  F0B9         	goto	l9437
 29327  017302                     u11070:
 29328  017302  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 29329  017304  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 29330  017306  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 29331  017308  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 29332  01730A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 29333  01730C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 29334  01730E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 29335  017310  6C09               	negf	___aodiv@divisor^0,c
 29336  017312  0E00               	movlw	0
 29337  017314  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 29338  017316  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 29339  017318  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 29340  01731A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 29341  01731C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 29342  01731E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 29343  017320  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 29344  017322  0E01               	movlw	1
 29345  017324  6E12               	movwf	___aodiv@sign^0,c
 29346  017326                     l9437:
 29347  017326  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 29348  017328  EF9A  F0B9         	goto	u11080
 29349  01732C  EF98  F0B9         	goto	u11081
 29350  017330                     u11081:
 29351  017330  EFAC  F0B9         	goto	l9443
 29352  017334                     u11080:
 29353  017334  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 29354  017336  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 29355  017338  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 29356  01733A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 29357  01733C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 29358  01733E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 29359  017340  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 29360  017342  6C01               	negf	___aodiv@dividend^0,c
 29361  017344  0E00               	movlw	0
 29362  017346  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 29363  017348  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 29364  01734A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 29365  01734C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 29366  01734E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 29367  017350  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 29368  017352  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 29369  017354  0E01               	movlw	1
 29370  017356  1A12               	xorwf	___aodiv@sign^0,f,c
 29371  017358                     l9443:
 29372  017358  EE20  F013         	lfsr	2,___aodiv@quotient
 29373  01735C  0E07               	movlw	7
 29374  01735E                     u11091:
 29375  01735E  6ADE               	clrf	postinc2,c
 29376  017360  06E8               	decf	wreg,f,c
 29377  017362  E2FD               	bc	u11091
 29378  017364  5009               	movf	___aodiv@divisor^0,w,c
 29379  017366  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 29380  017368  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 29381  01736A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 29382  01736C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 29383  01736E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 29384  017370  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 29385  017372  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 29386  017374  B4D8               	btfsc	status,2,c
 29387  017376  EFBF  F0B9         	goto	u11101
 29388  01737A  EFC1  F0B9         	goto	u11100
 29389  01737E                     u11101:
 29390  01737E  EF13  F0BA         	goto	l9465
 29391  017382                     u11100:
 29392  017382  0E01               	movlw	1
 29393  017384  6E11               	movwf	___aodiv@counter^0,c
 29394  017386  EFCF  F0B9         	goto	l9451
 29395  01738A                     l9449:
 29396  01738A  90D8               	bcf	status,0,c
 29397  01738C  3609               	rlcf	___aodiv@divisor^0,f,c
 29398  01738E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 29399  017390  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 29400  017392  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 29401  017394  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 29402  017396  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 29403  017398  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 29404  01739A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 29405  01739C  2A11               	incf	___aodiv@counter^0,f,c
 29406  01739E                     l9451:
 29407  01739E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 29408  0173A0  EFD4  F0B9         	goto	u11111
 29409  0173A4  EFD6  F0B9         	goto	u11110
 29410  0173A8                     u11111:
 29411  0173A8  EFC5  F0B9         	goto	l9449
 29412  0173AC                     u11110:
 29413  0173AC                     l9453:
 29414  0173AC  90D8               	bcf	status,0,c
 29415  0173AE  3613               	rlcf	___aodiv@quotient^0,f,c
 29416  0173B0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 29417  0173B2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 29418  0173B4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 29419  0173B6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 29420  0173B8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 29421  0173BA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 29422  0173BC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 29423  0173BE  5009               	movf	___aodiv@divisor^0,w,c
 29424  0173C0  5C01               	subwf	___aodiv@dividend^0,w,c
 29425  0173C2  500A               	movf	(___aodiv@divisor+1)^0,w,c
 29426  0173C4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 29427  0173C6  500B               	movf	(___aodiv@divisor+2)^0,w,c
 29428  0173C8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 29429  0173CA  500C               	movf	(___aodiv@divisor+3)^0,w,c
 29430  0173CC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 29431  0173CE  500D               	movf	(___aodiv@divisor+4)^0,w,c
 29432  0173D0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 29433  0173D2  500E               	movf	(___aodiv@divisor+5)^0,w,c
 29434  0173D4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 29435  0173D6  500F               	movf	(___aodiv@divisor+6)^0,w,c
 29436  0173D8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 29437  0173DA  5010               	movf	(___aodiv@divisor+7)^0,w,c
 29438  0173DC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 29439  0173DE  A0D8               	btfss	status,0,c
 29440  0173E0  EFF4  F0B9         	goto	u11121
 29441  0173E4  EFF6  F0B9         	goto	u11120
 29442  0173E8                     u11121:
 29443  0173E8  EF07  F0BA         	goto	l9461
 29444  0173EC                     u11120:
 29445  0173EC  5009               	movf	___aodiv@divisor^0,w,c
 29446  0173EE  5E01               	subwf	___aodiv@dividend^0,f,c
 29447  0173F0  500A               	movf	(___aodiv@divisor+1)^0,w,c
 29448  0173F2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 29449  0173F4  500B               	movf	(___aodiv@divisor+2)^0,w,c
 29450  0173F6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 29451  0173F8  500C               	movf	(___aodiv@divisor+3)^0,w,c
 29452  0173FA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 29453  0173FC  500D               	movf	(___aodiv@divisor+4)^0,w,c
 29454  0173FE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 29455  017400  500E               	movf	(___aodiv@divisor+5)^0,w,c
 29456  017402  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 29457  017404  500F               	movf	(___aodiv@divisor+6)^0,w,c
 29458  017406  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 29459  017408  5010               	movf	(___aodiv@divisor+7)^0,w,c
 29460  01740A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 29461  01740C  8013               	bsf	___aodiv@quotient^0,0,c
 29462  01740E                     l9461:
 29463  01740E  90D8               	bcf	status,0,c
 29464  017410  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 29465  017412  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 29466  017414  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 29467  017416  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 29468  017418  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 29469  01741A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 29470  01741C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 29471  01741E  3209               	rrcf	___aodiv@divisor^0,f,c
 29472  017420  2E11               	decfsz	___aodiv@counter^0,f,c
 29473  017422  EFD6  F0B9         	goto	l9453
 29474  017426                     l9465:
 29475  017426  5012               	movf	___aodiv@sign^0,w,c
 29476  017428  B4D8               	btfsc	status,2,c
 29477  01742A  EF19  F0BA         	goto	u11131
 29478  01742E  EF1B  F0BA         	goto	u11130
 29479  017432                     u11131:
 29480  017432  EF2B  F0BA         	goto	l9469
 29481  017436                     u11130:
 29482  017436  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 29483  017438  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 29484  01743A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 29485  01743C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 29486  01743E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 29487  017440  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 29488  017442  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 29489  017444  6C13               	negf	___aodiv@quotient^0,c
 29490  017446  0E00               	movlw	0
 29491  017448  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 29492  01744A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 29493  01744C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 29494  01744E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 29495  017450  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 29496  017452  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 29497  017454  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 29498  017456                     l9469:
 29499  017456  C013  F001         	movff	___aodiv@quotient,?___aodiv
 29500  01745A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 29501  01745E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 29502  017462  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 29503  017466  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 29504  01746A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 29505  01746E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 29506  017472  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 29507  017476  0012               	return		;funcret
 29508  017478                     __end_of___aodiv:
 29509                           	callstack 0
 29510                           
 29511 ;; *************** function _Cursor_drawing *****************
 29512 ;; Defined at:
 29513 ;;		line 780 in file "main.c"
 29514 ;; Parameters:    Size  Location     Type
 29515 ;;		None
 29516 ;; Auto vars:     Size  Location     Type
 29517 ;;		None
 29518 ;; Return value:  Size  Location     Type
 29519 ;;                  1    wreg      void 
 29520 ;; Registers used:
 29521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29522 ;; Tracked objects:
 29523 ;;		On entry : 0/0
 29524 ;;		On exit  : 0/0
 29525 ;;		Unchanged: 0/0
 29526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29531 ;;Total ram usage:        2 bytes
 29532 ;; Hardware stack levels used:    1
 29533 ;; Hardware stack levels required when called:    2
 29534 ;; This function calls:
 29535 ;;		_Command_Write
 29536 ;;		_Display_Character
 29537 ;;		_Select_Page
 29538 ;; This function is called by:
 29539 ;;		_Settings_Menu
 29540 ;;		_UART_Settings
 29541 ;;		_Baud_Rate_Settings
 29542 ;;		_Error_select_range
 29543 ;;		_Error_Settings
 29544 ;;		_Transmission_Settings
 29545 ;;		_Cursor_Position
 29546 ;; This function uses a non-reentrant model
 29547 ;;
 29548                           
 29549                           	psect	text114
 29550  01988A                     __ptext114:
 29551                           	callstack 0
 29552  01988A                     _Cursor_drawing:
 29553                           	callstack 24
 29554  01988A                     
 29555                           ;main.c: 781:     Select_Page(1);
 29556  01988A  0E00               	movlw	0
 29557  01988C  6E02               	movwf	(Select_Page@select+1)^0,c
 29558  01988E  0E01               	movlw	1
 29559  019890  6E01               	movwf	Select_Page@select^0,c
 29560  019892  EC3F  F0D2         	call	_Select_Page	;wreg free
 29561                           
 29562                           ;main.c: 782:     switch (menu_select) {
 29563  019896  EF6E  F0CC         	goto	l10365
 29564  01989A                     l10351:
 29565                           
 29566                           ;main.c: 784:         {;main.c: 785:             Command_Write(0b10111010);
 29567  01989A  0EBA               	movlw	186
 29568  01989C  EC4C  F0D3         	call	_Command_Write
 29569                           
 29570                           ;main.c: 786:             Command_Write(0b01111000);
 29571  0198A0  0E78               	movlw	120
 29572  0198A2  EC4C  F0D3         	call	_Command_Write
 29573  0198A6                     
 29574                           ;main.c: 787:             Display_Character('<');
 29575  0198A6  0E3C               	movlw	60
 29576  0198A8  ECAD  F0CE         	call	_Display_Character
 29577                           
 29578                           ;main.c: 788:             break;
 29579  0198AC  EF88  F0CC         	goto	l1478
 29580  0198B0                     l10355:
 29581                           
 29582                           ;main.c: 791:         {;main.c: 792:             Command_Write(0b10111100);
 29583  0198B0  0EBC               	movlw	188
 29584  0198B2  EC4C  F0D3         	call	_Command_Write
 29585                           
 29586                           ;main.c: 793:             Command_Write(0b01111000);
 29587  0198B6  0E78               	movlw	120
 29588  0198B8  EC4C  F0D3         	call	_Command_Write
 29589  0198BC                     
 29590                           ;main.c: 794:             Display_Character('<');
 29591  0198BC  0E3C               	movlw	60
 29592  0198BE  ECAD  F0CE         	call	_Display_Character
 29593                           
 29594                           ;main.c: 795:             break;
 29595  0198C2  EF88  F0CC         	goto	l1478
 29596  0198C6                     l10359:
 29597                           
 29598                           ;main.c: 798:             Command_Write(0b10111110);
 29599  0198C6  0EBE               	movlw	190
 29600  0198C8  EC4C  F0D3         	call	_Command_Write
 29601                           
 29602                           ;main.c: 799:             Command_Write(0b01111000);
 29603  0198CC  0E78               	movlw	120
 29604  0198CE  EC4C  F0D3         	call	_Command_Write
 29605  0198D2                     
 29606                           ;main.c: 800:             Display_Character('<');
 29607  0198D2  0E3C               	movlw	60
 29608  0198D4  ECAD  F0CE         	call	_Display_Character
 29609                           
 29610                           ;main.c: 801:             break;
 29611  0198D8  EF88  F0CC         	goto	l1478
 29612  0198DC                     l10365:
 29613  0198DC  C1E3  F008         	movff	_menu_select,??_Cursor_drawing
 29614  0198E0  C1E4  F009         	movff	_menu_select+1,??_Cursor_drawing+1
 29615                           
 29616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29617                           ; Switch size 1, requested type "simple"
 29618                           ; Number of cases is 1, Range of values is 0 to 0
 29619                           ; switch strategies available:
 29620                           ; Name         Instructions Cycles
 29621                           ; simple_byte            4     3 (average)
 29622                           ;	Chosen strategy is simple_byte
 29623  0198E4  5009               	movf	(??_Cursor_drawing+1)^0,w,c
 29624  0198E6  0A00               	xorlw	0	; case 0
 29625  0198E8  B4D8               	btfsc	status,2,c
 29626  0198EA  EF79  F0CC         	goto	l11879
 29627  0198EE  EF88  F0CC         	goto	l1478
 29628  0198F2                     l11879:
 29629                           
 29630                           ; Switch size 1, requested type "simple"
 29631                           ; Number of cases is 3, Range of values is 1 to 3
 29632                           ; switch strategies available:
 29633                           ; Name         Instructions Cycles
 29634                           ; simple_byte           10     6 (average)
 29635                           ;	Chosen strategy is simple_byte
 29636  0198F2  5008               	movf	??_Cursor_drawing^0,w,c
 29637  0198F4  0A01               	xorlw	1	; case 1
 29638  0198F6  B4D8               	btfsc	status,2,c
 29639  0198F8  EF4D  F0CC         	goto	l10351
 29640  0198FC  0A03               	xorlw	3	; case 2
 29641  0198FE  B4D8               	btfsc	status,2,c
 29642  019900  EF58  F0CC         	goto	l10355
 29643  019904  0A01               	xorlw	1	; case 3
 29644  019906  B4D8               	btfsc	status,2,c
 29645  019908  EF63  F0CC         	goto	l10359
 29646  01990C  EF88  F0CC         	goto	l1478
 29647  019910                     l1478:
 29648  019910  0012               	return		;funcret
 29649  019912                     __end_of_Cursor_drawing:
 29650                           	callstack 0
 29651                           
 29652 ;; *************** function _Auto_Boud *****************
 29653 ;; Defined at:
 29654 ;;		line 658 in file "main.c"
 29655 ;; Parameters:    Size  Location     Type
 29656 ;;		None
 29657 ;; Auto vars:     Size  Location     Type
 29658 ;;		None
 29659 ;; Return value:  Size  Location     Type
 29660 ;;                  1    wreg      void 
 29661 ;; Registers used:
 29662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29663 ;; Tracked objects:
 29664 ;;		On entry : 0/0
 29665 ;;		On exit  : 0/0
 29666 ;;		Unchanged: 0/0
 29667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29672 ;;Total ram usage:        0 bytes
 29673 ;; Hardware stack levels used:    1
 29674 ;; Hardware stack levels required when called:    3
 29675 ;; This function calls:
 29676 ;;		_Auto_Boud_Setup
 29677 ;;		_Command_Write
 29678 ;;		_Display_Message
 29679 ;;		_GLCD_Clear
 29680 ;;		_Select_Page
 29681 ;; This function is called by:
 29682 ;;		_Menu_Logic
 29683 ;; This function uses a non-reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text115
 29687  018658                     __ptext115:
 29688                           	callstack 0
 29689  018658                     _Auto_Boud:
 29690                           	callstack 24
 29691  018658                     
 29692                           ;main.c: 659:     GLCD_Clear();
 29693  018658  EC4B  F0CD         	call	_GLCD_Clear	;wreg free
 29694                           
 29695                           ;main.c: 660:     Select_Page(0);
 29696  01865C  0E00               	movlw	0
 29697  01865E  6E02               	movwf	(Select_Page@select+1)^0,c
 29698  018660  0E00               	movlw	0
 29699  018662  6E01               	movwf	Select_Page@select^0,c
 29700  018664  EC3F  F0D2         	call	_Select_Page	;wreg free
 29701  018668                     
 29702                           ;main.c: 661:     Command_Write(0b10111000);
 29703  018668  0EB8               	movlw	184
 29704  01866A  EC4C  F0D3         	call	_Command_Write
 29705  01866E                     
 29706                           ;main.c: 662:     Command_Write(0b01000000);
 29707  01866E  0E40               	movlw	64
 29708  018670  EC4C  F0D3         	call	_Command_Write
 29709  018674                     
 29710                           ;main.c: 663:     Display_Message("Please send");
 29711  018674  0E21               	movlw	low STR_70
 29712  018676  6E08               	movwf	Display_Message@message^0,c
 29713  018678  0EFF               	movlw	high STR_70
 29714  01867A  6E09               	movwf	(Display_Message@message+1)^0,c
 29715  01867C  EC74  F0CE         	call	_Display_Message	;wreg free
 29716  018680                     
 29717                           ;main.c: 664:     Command_Write(0b10111001);
 29718  018680  0EB9               	movlw	185
 29719  018682  EC4C  F0D3         	call	_Command_Write
 29720  018686                     
 29721                           ;main.c: 665:     Command_Write(0b01000000);
 29722  018686  0E40               	movlw	64
 29723  018688  EC4C  F0D3         	call	_Command_Write
 29724  01868C                     
 29725                           ;main.c: 666:     Display_Message("Three");
 29726  01868C  0EC4               	movlw	low STR_71
 29727  01868E  6E08               	movwf	Display_Message@message^0,c
 29728  018690  0EFF               	movlw	high STR_71
 29729  018692  6E09               	movwf	(Display_Message@message+1)^0,c
 29730  018694  EC74  F0CE         	call	_Display_Message	;wreg free
 29731  018698                     
 29732                           ;main.c: 667:     Command_Write(0b10111010);
 29733  018698  0EBA               	movlw	186
 29734  01869A  EC4C  F0D3         	call	_Command_Write
 29735  01869E                     
 29736                           ;main.c: 668:     Command_Write(0b01000000);
 29737  01869E  0E40               	movlw	64
 29738  0186A0  EC4C  F0D3         	call	_Command_Write
 29739  0186A4                     
 29740                           ;main.c: 669:     Display_Message("Consecutive");
 29741  0186A4  0E2D               	movlw	low STR_72
 29742  0186A6  6E08               	movwf	Display_Message@message^0,c
 29743  0186A8  0EFF               	movlw	high STR_72
 29744  0186AA  6E09               	movwf	(Display_Message@message+1)^0,c
 29745  0186AC  EC74  F0CE         	call	_Display_Message	;wreg free
 29746  0186B0                     
 29747                           ;main.c: 670:     Command_Write(0b10111011);
 29748  0186B0  0EBB               	movlw	187
 29749  0186B2  EC4C  F0D3         	call	_Command_Write
 29750  0186B6                     
 29751                           ;main.c: 671:     Command_Write(0b01000000);
 29752  0186B6  0E40               	movlw	64
 29753  0186B8  EC4C  F0D3         	call	_Command_Write
 29754  0186BC                     
 29755                           ;main.c: 672:     Display_Message("U characters");
 29756  0186BC  0E14               	movlw	low STR_73
 29757  0186BE  6E08               	movwf	Display_Message@message^0,c
 29758  0186C0  0EFF               	movlw	high STR_73
 29759  0186C2  6E09               	movwf	(Display_Message@message+1)^0,c
 29760  0186C4  EC74  F0CE         	call	_Display_Message	;wreg free
 29761                           
 29762                           ;main.c: 674:     if (Auto_Boud_Setup() == 1) {
 29763  0186C8  ECA9  F0C9         	call	_Auto_Boud_Setup	;wreg free
 29764  0186CC  0407               	decf	?_Auto_Boud_Setup^0,w,c
 29765  0186CE  1008               	iorwf	(?_Auto_Boud_Setup+1)^0,w,c
 29766  0186D0  A4D8               	btfss	status,2,c
 29767  0186D2  EF6D  F0C3         	goto	u13011
 29768  0186D6  EF6F  F0C3         	goto	u13010
 29769  0186DA                     u13011:
 29770  0186DA  EF82  F0C3         	goto	l11045
 29771  0186DE                     u13010:
 29772  0186DE                     
 29773                           ;main.c: 675:         Command_Write(0b10111101);
 29774  0186DE  0EBD               	movlw	189
 29775  0186E0  EC4C  F0D3         	call	_Command_Write
 29776                           
 29777                           ;main.c: 676:         Command_Write(0b01000000);
 29778  0186E4  0E40               	movlw	64
 29779  0186E6  EC4C  F0D3         	call	_Command_Write
 29780  0186EA                     
 29781                           ;main.c: 677:         Display_Message("Complete");
 29782  0186EA  0E6F               	movlw	low STR_74
 29783  0186EC  6E08               	movwf	Display_Message@message^0,c
 29784  0186EE  0EFF               	movlw	high STR_74
 29785  0186F0  6E09               	movwf	(Display_Message@message+1)^0,c
 29786  0186F2  EC74  F0CE         	call	_Display_Message	;wreg free
 29787  0186F6                     
 29788                           ;main.c: 678:         autoBaud = 1;
 29789  0186F6  0E00               	movlw	0
 29790  0186F8  0101               	movlb	1	; () banked
 29791  0186FA  6F2A               	movwf	(_autoBaud+1)& (0+255),b
 29792  0186FC  0E01               	movlw	1
 29793  0186FE  6F29               	movwf	_autoBaud& (0+255),b
 29794                           
 29795                           ;main.c: 679:     } else {
 29796  018700  EF93  F0C3         	goto	l1449
 29797  018704                     l11045:
 29798                           
 29799                           ;main.c: 680:         Command_Write(0b10111101);
 29800  018704  0EBD               	movlw	189
 29801  018706  EC4C  F0D3         	call	_Command_Write
 29802                           
 29803                           ;main.c: 681:         Command_Write(0b01000000);
 29804  01870A  0E40               	movlw	64
 29805  01870C  EC4C  F0D3         	call	_Command_Write
 29806  018710                     
 29807                           ;main.c: 682:         Display_Message("Error");
 29808  018710  0ECA               	movlw	low STR_13
 29809  018712  6E08               	movwf	Display_Message@message^0,c
 29810  018714  0EFF               	movlw	high STR_13
 29811  018716  6E09               	movwf	(Display_Message@message+1)^0,c
 29812  018718  EC74  F0CE         	call	_Display_Message	;wreg free
 29813  01871C                     
 29814                           ;main.c: 683:         autoBaud = 0;
 29815  01871C  0E00               	movlw	0
 29816  01871E  0101               	movlb	1	; () banked
 29817  018720  6F2A               	movwf	(_autoBaud+1)& (0+255),b
 29818  018722  0E00               	movlw	0
 29819  018724  6F29               	movwf	_autoBaud& (0+255),b
 29820  018726                     l1449:
 29821  018726  A0CB               	btfss	203,0,c	;volatile
 29822  018728  EF98  F0C3         	goto	u13021
 29823  01872C  EF9A  F0C3         	goto	u13020
 29824  018730                     u13021:
 29825  018730  EF93  F0C3         	goto	l1449
 29826  018734                     u13020:
 29827  018734  0012               	return		;funcret
 29828  018736                     __end_of_Auto_Boud:
 29829                           	callstack 0
 29830                           
 29831 ;; *************** function _GLCD_Clear *****************
 29832 ;; Defined at:
 29833 ;;		line 185 in file "Display.c"
 29834 ;; Parameters:    Size  Location     Type
 29835 ;;		None
 29836 ;; Auto vars:     Size  Location     Type
 29837 ;;  line            1    3[COMRAM] unsigned char 
 29838 ;;  cursor          1    2[COMRAM] unsigned char 
 29839 ;; Return value:  Size  Location     Type
 29840 ;;                  1    wreg      void 
 29841 ;; Registers used:
 29842 ;;		wreg, status,2, status,0, cstack
 29843 ;; Tracked objects:
 29844 ;;		On entry : 0/0
 29845 ;;		On exit  : 0/0
 29846 ;;		Unchanged: 0/0
 29847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29852 ;;Total ram usage:        2 bytes
 29853 ;; Hardware stack levels used:    1
 29854 ;; Hardware stack levels required when called:    1
 29855 ;; This function calls:
 29856 ;;		_Command_Write
 29857 ;;		_Data_Write
 29858 ;;		_Select_Page
 29859 ;; This function is called by:
 29860 ;;		_Menu
 29861 ;;		_Settings_Menu
 29862 ;;		_UART_Command_Mapper
 29863 ;;		_UART_Print
 29864 ;;		_UART_Start
 29865 ;;		_UART_Settings
 29866 ;;		_Baud_Rate_Settings
 29867 ;;		_Baud_rate_Change
 29868 ;;		_Maximum_Error_Select
 29869 ;;		_Minimum_Error_Select
 29870 ;;		_Error_select_range
 29871 ;;		_Error_Settings
 29872 ;;		_Continous_Transmission_Length
 29873 ;;		_Transmission_Settings
 29874 ;;		_Auto_Boud
 29875 ;;		_Cursor_Position
 29876 ;;		_main
 29877 ;;		_Error_Message
 29878 ;; This function uses a non-reentrant model
 29879 ;;
 29880                           
 29881                           	psect	text116
 29882  019A96                     __ptext116:
 29883                           	callstack 0
 29884  019A96                     _GLCD_Clear:
 29885                           	callstack 28
 29886  019A96                     
 29887                           ;Display.c: 186:     uint8_t line, cursor;;Display.c: 188:     for (line = 0; line < 8; 
      +                          line++) {
 29888  019A96  0E00               	movlw	0
 29889  019A98  6E04               	movwf	GLCD_Clear@line^0,c
 29890  019A9A                     l10187:
 29891                           
 29892                           ;Display.c: 189:         Select_Page(0);
 29893  019A9A  0E00               	movlw	0
 29894  019A9C  6E02               	movwf	(Select_Page@select+1)^0,c
 29895  019A9E  0E00               	movlw	0
 29896  019AA0  6E01               	movwf	Select_Page@select^0,c
 29897  019AA2  EC3F  F0D2         	call	_Select_Page	;wreg free
 29898  019AA6                     
 29899                           ;Display.c: 190:         Command_Write(0x40);
 29900  019AA6  0E40               	movlw	64
 29901  019AA8  EC4C  F0D3         	call	_Command_Write
 29902  019AAC                     
 29903                           ;Display.c: 191:         Command_Write(0xB8 + line);
 29904  019AAC  5004               	movf	GLCD_Clear@line^0,w,c
 29905  019AAE  0FB8               	addlw	184
 29906  019AB0  EC4C  F0D3         	call	_Command_Write
 29907  019AB4                     
 29908                           ;Display.c: 192:         for (cursor = 0; cursor < 128; cursor++) {
 29909  019AB4  0E00               	movlw	0
 29910  019AB6  6E03               	movwf	GLCD_Clear@cursor^0,c
 29911  019AB8                     l10199:
 29912                           
 29913                           ;Display.c: 193:             if (cursor == 64) {
 29914  019AB8  0E40               	movlw	64
 29915  019ABA  1803               	xorwf	GLCD_Clear@cursor^0,w,c
 29916  019ABC  A4D8               	btfss	status,2,c
 29917  019ABE  EF63  F0CD         	goto	u12391
 29918  019AC2  EF65  F0CD         	goto	u12390
 29919  019AC6                     u12391:
 29920  019AC6  EF72  F0CD         	goto	l1172
 29921  019ACA                     u12390:
 29922  019ACA                     
 29923                           ;Display.c: 194:                 Select_Page(1);
 29924  019ACA  0E00               	movlw	0
 29925  019ACC  6E02               	movwf	(Select_Page@select+1)^0,c
 29926  019ACE  0E01               	movlw	1
 29927  019AD0  6E01               	movwf	Select_Page@select^0,c
 29928  019AD2  EC3F  F0D2         	call	_Select_Page	;wreg free
 29929  019AD6                     
 29930                           ;Display.c: 195:                 Command_Write(0x40);
 29931  019AD6  0E40               	movlw	64
 29932  019AD8  EC4C  F0D3         	call	_Command_Write
 29933  019ADC                     
 29934                           ;Display.c: 196:                 Command_Write(0xB8 + line);
 29935  019ADC  5004               	movf	GLCD_Clear@line^0,w,c
 29936  019ADE  0FB8               	addlw	184
 29937  019AE0  EC4C  F0D3         	call	_Command_Write
 29938  019AE4                     l1172:
 29939                           
 29940                           ;Display.c: 198:             Data_Write(0x00);
 29941  019AE4  0E00               	movlw	0
 29942  019AE6  EC3B  F0D3         	call	_Data_Write
 29943  019AEA                     
 29944                           ;Display.c: 199:         }
 29945  019AEA  2A03               	incf	GLCD_Clear@cursor^0,f,c
 29946  019AEC  0E7F               	movlw	127
 29947  019AEE  6403               	cpfsgt	GLCD_Clear@cursor^0,c
 29948  019AF0  EF7C  F0CD         	goto	u12401
 29949  019AF4  EF7E  F0CD         	goto	u12400
 29950  019AF8                     u12401:
 29951  019AF8  EF5C  F0CD         	goto	l10199
 29952  019AFC                     u12400:
 29953  019AFC                     
 29954                           ;Display.c: 200:     }
 29955  019AFC  2A04               	incf	GLCD_Clear@line^0,f,c
 29956  019AFE  0E07               	movlw	7
 29957  019B00  6404               	cpfsgt	GLCD_Clear@line^0,c
 29958  019B02  EF85  F0CD         	goto	u12411
 29959  019B06  EF87  F0CD         	goto	u12410
 29960  019B0A                     u12411:
 29961  019B0A  EF4D  F0CD         	goto	l10187
 29962  019B0E                     u12410:
 29963  019B0E  0012               	return		;funcret
 29964  019B10                     __end_of_GLCD_Clear:
 29965                           	callstack 0
 29966                           
 29967 ;; *************** function _Display_Message *****************
 29968 ;; Defined at:
 29969 ;;		line 177 in file "Display.c"
 29970 ;; Parameters:    Size  Location     Type
 29971 ;;  message         2    7[COMRAM] PTR unsigned char 
 29972 ;;		 -> STR_75(6), STR_74(9), STR_73(13), STR_72(12), 
 29973 ;;		 -> STR_71(6), STR_70(12), STR_69(7), STR_68(11), 
 29974 ;;		 -> STR_67(11), STR_66(9), STR_65(13), Transmission_Settings@SDloggingChar(1), 
 29975 ;;		 -> Transmission_Settings@ContinuousChar(1), STR_62(7), STR_61(13), STR_59(14), 
 29976 ;;		 -> STR_58(12), STR_57(9), STR_56(6), Error_Settings@errorcheckChar(1), 
 29977 ;;		 -> STR_54(8), STR_53(8), STR_52(9), STR_51(6), 
 29978 ;;		 -> STR_50(6), STR_49(8), STR_47(6), STR_46(8), 
 29979 ;;		 -> STR_44(5), STR_43(5), STR_41(4), STR_40(5), 
 29980 ;;		 -> STR_39(6), STR_38(7), STR_37(9), STR_36(10), 
 29981 ;;		 -> numberDisplayed(7), Toggle_Select@Char(1), STR_32(7), STR_31(10), 
 29982 ;;		 -> STR_30(9), STR_29(5), Baud_Rate_Settings@autoBaudChar(1), STR_27(10), 
 29983 ;;		 -> STR_26(13), STR_25(9), STR_24(5), STR_23(13), 
 29984 ;;		 -> STR_22(6), STR_21(5), STR_20(9), STR_19(7), 
 29985 ;;		 -> STR_18(8), STR_17(7), STR_16(13), STR_15(6), 
 29986 ;;		 -> STR_14(7), STR_13(6), STR_12(9), STR_11(6), 
 29987 ;;		 -> STR_10(5), STR_9(5), 
 29988 ;; Auto vars:     Size  Location     Type
 29989 ;;  i               2   12[COMRAM] int 
 29990 ;;  data            1   11[COMRAM] unsigned char 
 29991 ;; Return value:  Size  Location     Type
 29992 ;;                  1    wreg      void 
 29993 ;; Registers used:
 29994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29995 ;; Tracked objects:
 29996 ;;		On entry : 0/0
 29997 ;;		On exit  : 0/0
 29998 ;;		Unchanged: 0/0
 29999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30001 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30003 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30004 ;;Total ram usage:        7 bytes
 30005 ;; Hardware stack levels used:    1
 30006 ;; Hardware stack levels required when called:    2
 30007 ;; This function calls:
 30008 ;;		_Display_Character
 30009 ;;		_strlen
 30010 ;; This function is called by:
 30011 ;;		_Menu
 30012 ;;		_Settings_Menu
 30013 ;;		_UART_Clear_Line
 30014 ;;		_UART_Settings
 30015 ;;		_Baud_Rate_Settings
 30016 ;;		_Toggle_Select
 30017 ;;		_Number_Update
 30018 ;;		_Baud_rate_Change
 30019 ;;		_Maximum_Error_Select
 30020 ;;		_Minimum_Error_Select
 30021 ;;		_Error_select_range
 30022 ;;		_Error_Settings
 30023 ;;		_Continous_Transmission_Length
 30024 ;;		_Transmission_Settings
 30025 ;;		_Auto_Boud
 30026 ;;		_Error_Message
 30027 ;; This function uses a non-reentrant model
 30028 ;;
 30029                           
 30030                           	psect	text117
 30031  019CE8                     __ptext117:
 30032                           	callstack 0
 30033  019CE8                     _Display_Message:
 30034                           	callstack 27
 30035  019CE8                     
 30036                           ;Display.c: 178:     char data;;Display.c: 179:     for (int i = 0; i < strlen(message);
      +                           i++) {
 30037  019CE8  0E00               	movlw	0
 30038  019CEA  6E0E               	movwf	(Display_Message@i+1)^0,c
 30039  019CEC  0E00               	movlw	0
 30040  019CEE  6E0D               	movwf	Display_Message@i^0,c
 30041  019CF0  EF9B  F0CE         	goto	l10147
 30042  019CF4                     l10141:
 30043                           
 30044                           ;Display.c: 180:         data = message[i];
 30045  019CF4  500D               	movf	Display_Message@i^0,w,c
 30046  019CF6  2408               	addwf	Display_Message@message^0,w,c
 30047  019CF8  6E0A               	movwf	??_Display_Message^0,c
 30048  019CFA  500E               	movf	(Display_Message@i+1)^0,w,c
 30049  019CFC  2009               	addwfc	(Display_Message@message+1)^0,w,c
 30050  019CFE  6E0B               	movwf	(??_Display_Message+1)^0,c
 30051  019D00  0060  F02B  FFF6   	movff	??_Display_Message,tblptrl
 30052  019D06  0060  F02F  FFF7   	movff	??_Display_Message+1,tblptrh
 30053  019D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 30054  019D0E  6EF8               	movwf	tblptru,c
 30055  019D10  0E1F               	movlw	(high __ramtop+-1)
 30056  019D12  64F7               	cpfsgt	tblptrh,c
 30057  019D14  D003               	bra	u12317
 30058  019D16  0008               	tblrd		*
 30059  019D18  50F5               	movf	tablat,w,c
 30060  019D1A  D007               	bra	u12310
 30061  019D1C                     u12317:
 30062  019D1C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30063  019D22  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30064  019D28  50EF               	movf	indf0,w,c
 30065  019D2A                     u12310:
 30066  019D2A  6E0C               	movwf	Display_Message@data^0,c
 30067  019D2C                     
 30068                           ;Display.c: 181:         Display_Character(data);
 30069  019D2C  500C               	movf	Display_Message@data^0,w,c
 30070  019D2E  ECAD  F0CE         	call	_Display_Character
 30071  019D32                     
 30072                           ;Display.c: 182:     }
 30073  019D32  4A0D               	infsnz	Display_Message@i^0,f,c
 30074  019D34  2A0E               	incf	(Display_Message@i+1)^0,f,c
 30075  019D36                     l10147:
 30076  019D36  C008  F001         	movff	Display_Message@message,strlen@s
 30077  019D3A  C009  F002         	movff	Display_Message@message+1,strlen@s+1
 30078  019D3E  EC9C  F0D0         	call	_strlen	;wreg free
 30079  019D42  5001               	movf	?_strlen^0,w,c
 30080  019D44  5C0D               	subwf	Display_Message@i^0,w,c
 30081  019D46  5002               	movf	(?_strlen+1)^0,w,c
 30082  019D48  580E               	subwfb	(Display_Message@i+1)^0,w,c
 30083  019D4A  A0D8               	btfss	status,0,c
 30084  019D4C  EFAA  F0CE         	goto	u12321
 30085  019D50  EFAC  F0CE         	goto	u12320
 30086  019D54                     u12321:
 30087  019D54  EF7A  F0CE         	goto	l10141
 30088  019D58                     u12320:
 30089  019D58  0012               	return		;funcret
 30090  019D5A                     __end_of_Display_Message:
 30091                           	callstack 0
 30092                           
 30093 ;; *************** function _strlen *****************
 30094 ;; Defined at:
 30095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 30096 ;; Parameters:    Size  Location     Type
 30097 ;;  s               2    0[COMRAM] PTR const unsigned char 
 30098 ;;		 -> dbuf(32), STR_75(6), STR_74(9), STR_73(13), 
 30099 ;;		 -> STR_72(12), STR_71(6), STR_70(12), STR_69(7), 
 30100 ;;		 -> STR_68(11), STR_67(11), STR_66(9), STR_65(13), 
 30101 ;;		 -> Transmission_Settings@SDloggingChar(1), Transmission_Settings@ContinuousChar(1), STR_62(7), STR_61(13), 
 30102 ;;		 -> STR_59(14), STR_58(12), STR_57(9), STR_56(6), 
 30103 ;;		 -> Error_Settings@errorcheckChar(1), STR_54(8), STR_53(8), STR_52(9), 
 30104 ;;		 -> STR_51(6), STR_50(6), STR_49(8), STR_47(6), 
 30105 ;;		 -> STR_46(8), STR_44(5), STR_43(5), STR_41(4), 
 30106 ;;		 -> STR_40(5), STR_39(6), STR_38(7), STR_37(9), 
 30107 ;;		 -> STR_36(10), numberDisplayed(7), Toggle_Select@Char(1), STR_32(7), 
 30108 ;;		 -> STR_31(10), STR_30(9), STR_29(5), Baud_Rate_Settings@autoBaudChar(1), 
 30109 ;;		 -> STR_27(10), STR_26(13), STR_25(9), STR_24(5), 
 30110 ;;		 -> STR_23(13), STR_22(6), STR_21(5), STR_20(9), 
 30111 ;;		 -> STR_19(7), STR_18(8), STR_17(7), STR_16(13), 
 30112 ;;		 -> STR_15(6), STR_14(7), STR_13(6), STR_12(9), 
 30113 ;;		 -> STR_11(6), STR_10(5), STR_9(5), 
 30114 ;; Auto vars:     Size  Location     Type
 30115 ;;  a               2    2[COMRAM] PTR const unsigned char 
 30116 ;;		 -> dbuf(32), STR_75(6), STR_74(9), STR_73(13), 
 30117 ;;		 -> STR_72(12), STR_71(6), STR_70(12), STR_69(7), 
 30118 ;;		 -> STR_68(11), STR_67(11), STR_66(9), STR_65(13), 
 30119 ;;		 -> Transmission_Settings@SDloggingChar(1), Transmission_Settings@ContinuousChar(1), STR_62(7), STR_61(13), 
 30120 ;;		 -> STR_59(14), STR_58(12), STR_57(9), STR_56(6), 
 30121 ;;		 -> Error_Settings@errorcheckChar(1), STR_54(8), STR_53(8), STR_52(9), 
 30122 ;;		 -> STR_51(6), STR_50(6), STR_49(8), STR_47(6), 
 30123 ;;		 -> STR_46(8), STR_44(5), STR_43(5), STR_41(4), 
 30124 ;;		 -> STR_40(5), STR_39(6), STR_38(7), STR_37(9), 
 30125 ;;		 -> STR_36(10), numberDisplayed(7), Toggle_Select@Char(1), STR_32(7), 
 30126 ;;		 -> STR_31(10), STR_30(9), STR_29(5), Baud_Rate_Settings@autoBaudChar(1), 
 30127 ;;		 -> STR_27(10), STR_26(13), STR_25(9), STR_24(5), 
 30128 ;;		 -> STR_23(13), STR_22(6), STR_21(5), STR_20(9), 
 30129 ;;		 -> STR_19(7), STR_18(8), STR_17(7), STR_16(13), 
 30130 ;;		 -> STR_15(6), STR_14(7), STR_13(6), STR_12(9), 
 30131 ;;		 -> STR_11(6), STR_10(5), STR_9(5), 
 30132 ;; Return value:  Size  Location     Type
 30133 ;;                  2    0[COMRAM] unsigned int 
 30134 ;; Registers used:
 30135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 30136 ;; Tracked objects:
 30137 ;;		On entry : 0/0
 30138 ;;		On exit  : 0/0
 30139 ;;		Unchanged: 0/0
 30140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30145 ;;Total ram usage:        4 bytes
 30146 ;; Hardware stack levels used:    1
 30147 ;; This function calls:
 30148 ;;		Nothing
 30149 ;; This function is called by:
 30150 ;;		_Display_Message
 30151 ;;		_pad
 30152 ;; This function uses a non-reentrant model
 30153 ;;
 30154                           
 30155                           	psect	text118
 30156  01A138                     __ptext118:
 30157                           	callstack 0
 30158  01A138                     _strlen:
 30159                           	callstack 28
 30160  01A138  C001  F003         	movff	strlen@s,strlen@a
 30161  01A13C  C002  F004         	movff	strlen@s+1,strlen@a+1
 30162  01A140  EFA4  F0D0         	goto	l8917
 30163  01A144                     l8915:
 30164  01A144  4A01               	infsnz	strlen@s^0,f,c
 30165  01A146  2A02               	incf	(strlen@s+1)^0,f,c
 30166  01A148                     l8917:
 30167  01A148  0060  F007  FFF6   	movff	strlen@s,tblptrl
 30168  01A14E  0060  F00B  FFF7   	movff	strlen@s+1,tblptrh
 30169  01A154  0E00               	movlw	low (__mediumconst shr (0+16))
 30170  01A156  6EF8               	movwf	tblptru,c
 30171  01A158  0E1F               	movlw	(high __ramtop+-1)
 30172  01A15A  64F7               	cpfsgt	tblptrh,c
 30173  01A15C  D003               	bra	u10177
 30174  01A15E  0008               	tblrd		*
 30175  01A160  50F5               	movf	tablat,w,c
 30176  01A162  D007               	bra	u10170
 30177  01A164                     u10177:
 30178  01A164  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30179  01A16A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30180  01A170  50EF               	movf	indf0,w,c
 30181  01A172                     u10170:
 30182  01A172  0900               	iorlw	0
 30183  01A174  A4D8               	btfss	status,2,c
 30184  01A176  EFBF  F0D0         	goto	u10181
 30185  01A17A  EFC1  F0D0         	goto	u10180
 30186  01A17E                     u10181:
 30187  01A17E  EFA2  F0D0         	goto	l8915
 30188  01A182                     u10180:
 30189  01A182  5003               	movf	strlen@a^0,w,c
 30190  01A184  5C01               	subwf	strlen@s^0,w,c
 30191  01A186  6E01               	movwf	?_strlen^0,c
 30192  01A188  5004               	movf	(strlen@a+1)^0,w,c
 30193  01A18A  5802               	subwfb	(strlen@s+1)^0,w,c
 30194  01A18C  6E02               	movwf	(?_strlen+1)^0,c
 30195  01A18E  0012               	return		;funcret
 30196  01A190                     __end_of_strlen:
 30197                           	callstack 0
 30198                           
 30199 ;; *************** function _Auto_Boud_Setup *****************
 30200 ;; Defined at:
 30201 ;;		line 644 in file "main.c"
 30202 ;; Parameters:    Size  Location     Type
 30203 ;;		None
 30204 ;; Auto vars:     Size  Location     Type
 30205 ;;  i               2    9[COMRAM] int 
 30206 ;;  syncChar        1    8[COMRAM] unsigned char 
 30207 ;; Return value:  Size  Location     Type
 30208 ;;                  2    6[COMRAM] int 
 30209 ;; Registers used:
 30210 ;;		wreg, status,2, status,0, cstack
 30211 ;; Tracked objects:
 30212 ;;		On entry : 0/0
 30213 ;;		On exit  : 0/0
 30214 ;;		Unchanged: 0/0
 30215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30217 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30219 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30220 ;;Total ram usage:        5 bytes
 30221 ;; Hardware stack levels used:    1
 30222 ;; Hardware stack levels required when called:    1
 30223 ;; This function calls:
 30224 ;;		_UART1_Initialize
 30225 ;;		_UART1_Read
 30226 ;; This function is called by:
 30227 ;;		_Auto_Boud
 30228 ;; This function uses a non-reentrant model
 30229 ;;
 30230                           
 30231                           	psect	text119
 30232  019352                     __ptext119:
 30233                           	callstack 0
 30234  019352                     _Auto_Boud_Setup:
 30235                           	callstack 25
 30236  019352                     
 30237                           ;main.c: 645:     char syncChar;;main.c: 646:     commStart = 1;
 30238  019352  0E00               	movlw	0
 30239  019354  0101               	movlb	1	; () banked
 30240  019356  6F32               	movwf	(_commStart+1)& (0+255),b
 30241  019358  0E01               	movlw	1
 30242  01935A  6F31               	movwf	_commStart& (0+255),b
 30243  01935C                     
 30244                           ; BSR set to: 1
 30245                           ;main.c: 647:     UART1_Initialize(baudRate, autoBaud);
 30246  01935C  C1DC  F001         	movff	_baudRate,UART1_Initialize@baudRate
 30247  019360  C1DD  F002         	movff	_baudRate+1,UART1_Initialize@baudRate+1
 30248  019364  C1DE  F003         	movff	_baudRate+2,UART1_Initialize@baudRate+2
 30249  019368  C1DF  F004         	movff	_baudRate+3,UART1_Initialize@baudRate+3
 30250  01936C  C129  F005         	movff	_autoBaud,UART1_Initialize@autoBaud
 30251  019370  C12A  F006         	movff	_autoBaud+1,UART1_Initialize@autoBaud+1
 30252  019374  ECD9  F0D1         	call	_UART1_Initialize	;wreg free
 30253  019378                     
 30254                           ;main.c: 648:     for (int i = 0; i < 3; i++) {
 30255  019378  0E00               	movlw	0
 30256  01937A  6E0B               	movwf	(Auto_Boud_Setup@i+1)^0,c
 30257  01937C  0E00               	movlw	0
 30258  01937E  6E0A               	movwf	Auto_Boud_Setup@i^0,c
 30259  019380                     l10527:
 30260                           
 30261                           ;main.c: 649:         syncChar = UART1_Read();
 30262  019380  EC8F  F0D3         	call	_UART1_Read	;wreg free
 30263  019384  6E09               	movwf	Auto_Boud_Setup@syncChar^0,c
 30264  019386                     
 30265                           ;main.c: 650:         if (syncChar == 'U') {
 30266  019386  0E55               	movlw	85
 30267  019388  1809               	xorwf	Auto_Boud_Setup@syncChar^0,w,c
 30268  01938A  A4D8               	btfss	status,2,c
 30269  01938C  EFCA  F0C9         	goto	u12801
 30270  019390  EFCC  F0C9         	goto	u12800
 30271  019394                     u12801:
 30272  019394  EFD2  F0C9         	goto	l10537
 30273  019398                     u12800:
 30274  019398                     
 30275                           ;main.c: 651:             return 1;
 30276  019398  0E00               	movlw	0
 30277  01939A  6E08               	movwf	(?_Auto_Boud_Setup+1)^0,c
 30278  01939C  0E01               	movlw	1
 30279  01939E  6E07               	movwf	?_Auto_Boud_Setup^0,c
 30280  0193A0  EFFB  F0C9         	goto	l1442
 30281  0193A4                     l10537:
 30282  0193A4  0E55               	movlw	85
 30283  0193A6  1809               	xorwf	Auto_Boud_Setup@syncChar^0,w,c
 30284  0193A8  B4D8               	btfsc	status,2,c
 30285  0193AA  EFD9  F0C9         	goto	u12811
 30286  0193AE  EFDB  F0C9         	goto	u12810
 30287  0193B2                     u12811:
 30288  0193B2  EFEB  F0C9         	goto	l10545
 30289  0193B6                     u12810:
 30290  0193B6  0E03               	movlw	3
 30291  0193B8  180A               	xorwf	Auto_Boud_Setup@i^0,w,c
 30292  0193BA  100B               	iorwf	(Auto_Boud_Setup@i+1)^0,w,c
 30293  0193BC  A4D8               	btfss	status,2,c
 30294  0193BE  EFE3  F0C9         	goto	u12821
 30295  0193C2  EFE5  F0C9         	goto	u12820
 30296  0193C6                     u12821:
 30297  0193C6  EFEB  F0C9         	goto	l10545
 30298  0193CA                     u12820:
 30299  0193CA                     
 30300                           ;main.c: 653:             return 0;
 30301  0193CA  0E00               	movlw	0
 30302  0193CC  6E08               	movwf	(?_Auto_Boud_Setup+1)^0,c
 30303  0193CE  0E00               	movlw	0
 30304  0193D0  6E07               	movwf	?_Auto_Boud_Setup^0,c
 30305  0193D2  EFFB  F0C9         	goto	l1442
 30306  0193D6                     l10545:
 30307                           
 30308                           ;main.c: 655:     }
 30309  0193D6  4A0A               	infsnz	Auto_Boud_Setup@i^0,f,c
 30310  0193D8  2A0B               	incf	(Auto_Boud_Setup@i+1)^0,f,c
 30311  0193DA  BE0B               	btfsc	(Auto_Boud_Setup@i+1)^0,7,c
 30312  0193DC  EFF9  F0C9         	goto	u12831
 30313  0193E0  500B               	movf	(Auto_Boud_Setup@i+1)^0,w,c
 30314  0193E2  E109               	bnz	u12830
 30315  0193E4  0E03               	movlw	3
 30316  0193E6  5C0A               	subwf	Auto_Boud_Setup@i^0,w,c
 30317  0193E8  A0D8               	btfss	status,0,c
 30318  0193EA  EFF9  F0C9         	goto	u12831
 30319  0193EE  EFFB  F0C9         	goto	u12830
 30320  0193F2                     u12831:
 30321  0193F2  EFC0  F0C9         	goto	l10527
 30322  0193F6                     u12830:
 30323  0193F6                     l1442:
 30324  0193F6  0012               	return		;funcret
 30325  0193F8                     __end_of_Auto_Boud_Setup:
 30326                           	callstack 0
 30327                           
 30328 ;; *************** function _UART1_Read *****************
 30329 ;; Defined at:
 30330 ;;		line 22 in file "UART.c"
 30331 ;; Parameters:    Size  Location     Type
 30332 ;;		None
 30333 ;; Auto vars:     Size  Location     Type
 30334 ;;		None
 30335 ;; Return value:  Size  Location     Type
 30336 ;;                  1    wreg      unsigned char 
 30337 ;; Registers used:
 30338 ;;		wreg, status,2
 30339 ;; Tracked objects:
 30340 ;;		On entry : 0/0
 30341 ;;		On exit  : 0/0
 30342 ;;		Unchanged: 0/0
 30343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30348 ;;Total ram usage:        0 bytes
 30349 ;; Hardware stack levels used:    1
 30350 ;; This function calls:
 30351 ;;		Nothing
 30352 ;; This function is called by:
 30353 ;;		_UART_Message
 30354 ;;		_UART_Line
 30355 ;;		_UART_Cursor
 30356 ;;		_UART_Page
 30357 ;;		_UART_Message_Lenght
 30358 ;;		_UART_Check_Command
 30359 ;;		_UART_Check_Comm_Start
 30360 ;;		_Auto_Boud_Setup
 30361 ;; This function uses a non-reentrant model
 30362 ;;
 30363                           
 30364                           	psect	text120
 30365  01A71E                     __ptext120:
 30366                           	callstack 0
 30367  01A71E                     _UART1_Read:
 30368                           	callstack 24
 30369  01A71E                     l1123:
 30370                           
 30371                           ;UART.c: 24:     while(!PIR3bits.U1RXIF)
 30372  01A71E  0139               	movlb	57	; () banked
 30373  01A720  A7A3               	btfss	163,3,b	;volatile
 30374  01A722  EF95  F0D3         	goto	u12291
 30375  01A726  EF97  F0D3         	goto	u12290
 30376  01A72A                     u12291:
 30377  01A72A  EF8F  F0D3         	goto	l1123
 30378  01A72E                     u12290:
 30379  01A72E                     
 30380                           ; BSR set to: 57
 30381                           ;UART.c: 27:     return U1RXB;
 30382  01A72E  013D               	movlb	61	; () banked
 30383  01A730  51E8               	movf	232,w,b	;volatile
 30384  01A732                     
 30385                           ; BSR set to: 61
 30386  01A732  0012               	return		;funcret
 30387  01A734                     __end_of_UART1_Read:
 30388                           	callstack 0
 30389                           
 30390 ;; *************** function _UART1_Initialize *****************
 30391 ;; Defined at:
 30392 ;;		line 3 in file "UART.c"
 30393 ;; Parameters:    Size  Location     Type
 30394 ;;  baudRate        4    0[COMRAM] long 
 30395 ;;  autoBaud        2    4[COMRAM] int 
 30396 ;; Auto vars:     Size  Location     Type
 30397 ;;		None
 30398 ;; Return value:  Size  Location     Type
 30399 ;;                  1    wreg      void 
 30400 ;; Registers used:
 30401 ;;		wreg, status,2, status,0
 30402 ;; Tracked objects:
 30403 ;;		On entry : 0/0
 30404 ;;		On exit  : 0/0
 30405 ;;		Unchanged: 0/0
 30406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30407 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30411 ;;Total ram usage:        6 bytes
 30412 ;; Hardware stack levels used:    1
 30413 ;; This function calls:
 30414 ;;		Nothing
 30415 ;; This function is called by:
 30416 ;;		_UART_Start
 30417 ;;		_Auto_Boud_Setup
 30418 ;; This function uses a non-reentrant model
 30419 ;;
 30420                           
 30421                           	psect	text121
 30422  01A3B2                     __ptext121:
 30423                           	callstack 0
 30424  01A3B2                     _UART1_Initialize:
 30425                           	callstack 26
 30426  01A3B2                     
 30427                           ;UART.c: 3: void UART1_Initialize(long baudRate, int autoBaud);UART.c: 4: {;UART.c: 6:  
      +                             U1CON0 = 0x90;
 30428  01A3B2  0E90               	movlw	144
 30429  01A3B4  013D               	movlb	61	; () banked
 30430  01A3B6  6FF2               	movwf	242,b	;volatile
 30431                           
 30432                           ;UART.c: 9:     U1CON1 = 0x80;
 30433  01A3B8  0E80               	movlw	128
 30434  01A3BA  6FF3               	movwf	243,b	;volatile
 30435  01A3BC                     
 30436                           ; BSR set to: 61
 30437                           ;UART.c: 11:     if (autoBaud == 0) {
 30438  01A3BC  5005               	movf	UART1_Initialize@autoBaud^0,w,c
 30439  01A3BE  1006               	iorwf	(UART1_Initialize@autoBaud+1)^0,w,c
 30440  01A3C0  A4D8               	btfss	status,2,c
 30441  01A3C2  EFE5  F0D1         	goto	u12431
 30442  01A3C6  EFE7  F0D1         	goto	u12430
 30443  01A3CA                     u12431:
 30444  01A3CA  EFF1  F0D1         	goto	l10269
 30445  01A3CE                     u12430:
 30446  01A3CE                     
 30447                           ; BSR set to: 61
 30448                           ;UART.c: 12:         U1BRGL = baudRate;
 30449  01A3CE  0060  F007  FDF5   	movff	UART1_Initialize@baudRate,15861	;volatile
 30450                           
 30451                           ;UART.c: 13:         U1BRGH = baudRate >> 8;
 30452  01A3D4  0060  F00B  FDF6   	movff	UART1_Initialize@baudRate+1,15862	;volatile
 30453  01A3DA                     
 30454                           ; BSR set to: 61
 30455                           ;UART.c: 15:         U1CON0 = 0x90;
 30456  01A3DA  0E90               	movlw	144
 30457  01A3DC  6FF2               	movwf	242,b	;volatile
 30458                           
 30459                           ;UART.c: 16:     } else if (autoBaud == 1) {
 30460  01A3DE  EFFC  F0D1         	goto	l1120
 30461  01A3E2                     l10269:
 30462                           
 30463                           ; BSR set to: 61
 30464  01A3E2  0405               	decf	UART1_Initialize@autoBaud^0,w,c
 30465  01A3E4  1006               	iorwf	(UART1_Initialize@autoBaud+1)^0,w,c
 30466  01A3E6  A4D8               	btfss	status,2,c
 30467  01A3E8  EFF8  F0D1         	goto	u12441
 30468  01A3EC  EFFA  F0D1         	goto	u12440
 30469  01A3F0                     u12441:
 30470  01A3F0  EFFC  F0D1         	goto	l1120
 30471  01A3F4                     u12440:
 30472  01A3F4                     
 30473                           ; BSR set to: 61
 30474                           ;UART.c: 18:         U1CON0 = 0xD0;
 30475  01A3F4  0ED0               	movlw	208
 30476  01A3F6  6FF2               	movwf	242,b	;volatile
 30477  01A3F8                     l1120:
 30478                           
 30479                           ; BSR set to: 61
 30480  01A3F8  0012               	return		;funcret
 30481  01A3FA                     __end_of_UART1_Initialize:
 30482                           	callstack 0
 30483                           
 30484 ;; *************** function _Cursor_delete *****************
 30485 ;; Defined at:
 30486 ;;		line 805 in file "main.c"
 30487 ;; Parameters:    Size  Location     Type
 30488 ;;		None
 30489 ;; Auto vars:     Size  Location     Type
 30490 ;;		None
 30491 ;; Return value:  Size  Location     Type
 30492 ;;                  1    wreg      void 
 30493 ;; Registers used:
 30494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30495 ;; Tracked objects:
 30496 ;;		On entry : 0/0
 30497 ;;		On exit  : 0/0
 30498 ;;		Unchanged: 0/0
 30499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30504 ;;Total ram usage:        0 bytes
 30505 ;; Hardware stack levels used:    1
 30506 ;; Hardware stack levels required when called:    2
 30507 ;; This function calls:
 30508 ;;		_Command_Write
 30509 ;;		_Display_Character
 30510 ;;		_Select_Page
 30511 ;; This function is called by:
 30512 ;;		_Cursor_Position
 30513 ;; This function uses a non-reentrant model
 30514 ;;
 30515                           
 30516                           	psect	text122
 30517  019B10                     __ptext122:
 30518                           	callstack 0
 30519  019B10                     _Cursor_delete:
 30520                           	callstack 26
 30521  019B10                     
 30522                           ;main.c: 806:     Select_Page(1);
 30523  019B10  0E00               	movlw	0
 30524  019B12  6E02               	movwf	(Select_Page@select+1)^0,c
 30525  019B14  0E01               	movlw	1
 30526  019B16  6E01               	movwf	Select_Page@select^0,c
 30527  019B18  EC3F  F0D2         	call	_Select_Page	;wreg free
 30528  019B1C                     
 30529                           ;main.c: 807:     Command_Write(0b10111010);
 30530  019B1C  0EBA               	movlw	186
 30531  019B1E  EC4C  F0D3         	call	_Command_Write
 30532  019B22                     
 30533                           ;main.c: 808:     Command_Write(0b01111000);
 30534  019B22  0E78               	movlw	120
 30535  019B24  EC4C  F0D3         	call	_Command_Write
 30536  019B28                     
 30537                           ;main.c: 809:     Display_Character(' ');
 30538  019B28  0E20               	movlw	32
 30539  019B2A  ECAD  F0CE         	call	_Display_Character
 30540  019B2E                     
 30541                           ;main.c: 810:     Command_Write(0b10111011);
 30542  019B2E  0EBB               	movlw	187
 30543  019B30  EC4C  F0D3         	call	_Command_Write
 30544  019B34                     
 30545                           ;main.c: 811:     Command_Write(0b01111000);
 30546  019B34  0E78               	movlw	120
 30547  019B36  EC4C  F0D3         	call	_Command_Write
 30548  019B3A                     
 30549                           ;main.c: 812:     Display_Character(' ');
 30550  019B3A  0E20               	movlw	32
 30551  019B3C  ECAD  F0CE         	call	_Display_Character
 30552  019B40                     
 30553                           ;main.c: 813:     Command_Write(0b10111100);
 30554  019B40  0EBC               	movlw	188
 30555  019B42  EC4C  F0D3         	call	_Command_Write
 30556  019B46                     
 30557                           ;main.c: 814:     Command_Write(0b01111000);
 30558  019B46  0E78               	movlw	120
 30559  019B48  EC4C  F0D3         	call	_Command_Write
 30560  019B4C                     
 30561                           ;main.c: 815:     Display_Character(' ');
 30562  019B4C  0E20               	movlw	32
 30563  019B4E  ECAD  F0CE         	call	_Display_Character
 30564  019B52                     
 30565                           ;main.c: 816:     Command_Write(0b10111101);
 30566  019B52  0EBD               	movlw	189
 30567  019B54  EC4C  F0D3         	call	_Command_Write
 30568  019B58                     
 30569                           ;main.c: 817:     Command_Write(0b01111000);
 30570  019B58  0E78               	movlw	120
 30571  019B5A  EC4C  F0D3         	call	_Command_Write
 30572  019B5E                     
 30573                           ;main.c: 818:     Display_Character(' ');
 30574  019B5E  0E20               	movlw	32
 30575  019B60  ECAD  F0CE         	call	_Display_Character
 30576  019B64                     
 30577                           ;main.c: 819:     Command_Write(0b10111110);
 30578  019B64  0EBE               	movlw	190
 30579  019B66  EC4C  F0D3         	call	_Command_Write
 30580  019B6A                     
 30581                           ;main.c: 820:     Command_Write(0b01111000);
 30582  019B6A  0E78               	movlw	120
 30583  019B6C  EC4C  F0D3         	call	_Command_Write
 30584  019B70                     
 30585                           ;main.c: 821:     Display_Character(' ');
 30586  019B70  0E20               	movlw	32
 30587  019B72  ECAD  F0CE         	call	_Display_Character
 30588  019B76                     
 30589                           ;main.c: 822:     Command_Write(0b10111111);
 30590  019B76  0EBF               	movlw	191
 30591  019B78  EC4C  F0D3         	call	_Command_Write
 30592  019B7C                     
 30593                           ;main.c: 823:     Command_Write(0b01111000);
 30594  019B7C  0E78               	movlw	120
 30595  019B7E  EC4C  F0D3         	call	_Command_Write
 30596  019B82                     
 30597                           ;main.c: 824:     Display_Character(' ');
 30598  019B82  0E20               	movlw	32
 30599  019B84  ECAD  F0CE         	call	_Display_Character
 30600  019B88  0012               	return		;funcret
 30601  019B8A                     __end_of_Cursor_delete:
 30602                           	callstack 0
 30603                           
 30604 ;; *************** function _Display_Character *****************
 30605 ;; Defined at:
 30606 ;;		line 166 in file "Display.c"
 30607 ;; Parameters:    Size  Location     Type
 30608 ;;  ASCII           1    wreg     unsigned char 
 30609 ;; Auto vars:     Size  Location     Type
 30610 ;;  ASCII           1    4[COMRAM] unsigned char 
 30611 ;;  i               2    5[COMRAM] int 
 30612 ;;  dat             1    3[COMRAM] unsigned char 
 30613 ;; Return value:  Size  Location     Type
 30614 ;;                  1    wreg      void 
 30615 ;; Registers used:
 30616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30617 ;; Tracked objects:
 30618 ;;		On entry : 0/0
 30619 ;;		On exit  : 0/0
 30620 ;;		Unchanged: 0/0
 30621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30625 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30626 ;;Total ram usage:        6 bytes
 30627 ;; Hardware stack levels used:    1
 30628 ;; Hardware stack levels required when called:    1
 30629 ;; This function calls:
 30630 ;;		_Data_Write
 30631 ;; This function is called by:
 30632 ;;		_Display_Message
 30633 ;;		_Error_Check
 30634 ;;		_UART_Message
 30635 ;;		_Transmission_Settings
 30636 ;;		_Cursor_drawing
 30637 ;;		_Cursor_delete
 30638 ;; This function uses a non-reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text123
 30642  019D5A                     __ptext123:
 30643                           	callstack 0
 30644  019D5A                     _Display_Character:
 30645                           	callstack 27
 30646                           
 30647                           ;incstack = 0
 30648                           ;Display_Character@ASCII stored from wreg
 30649  019D5A  6E05               	movwf	Display_Character@ASCII^0,c
 30650  019D5C                     
 30651                           ;Display.c: 167:     char dat;;Display.c: 168:     ASCII = ASCII - 32;
 30652  019D5C  5005               	movf	Display_Character@ASCII^0,w,c
 30653  019D5E  0FE0               	addlw	224
 30654  019D60  6E05               	movwf	Display_Character@ASCII^0,c
 30655  019D62                     
 30656                           ;Display.c: 169:     for (int i = 0; i < 5; i++)
 30657  019D62  0E00               	movlw	0
 30658  019D64  6E07               	movwf	(Display_Character@i+1)^0,c
 30659  019D66  0E00               	movlw	0
 30660  019D68  6E06               	movwf	Display_Character@i^0,c
 30661  019D6A                     l9997:
 30662                           
 30663                           ;Display.c: 170:     {;Display.c: 171:         dat = Character_map[ASCII][i];
 30664  019D6A  5005               	movf	Display_Character@ASCII^0,w,c
 30665  019D6C  0D05               	mullw	5
 30666  019D6E  0EDD               	movlw	low _Character_map
 30667  019D70  6E02               	movwf	??_Display_Character^0,c
 30668  019D72  0EFB               	movlw	high _Character_map
 30669  019D74  6E03               	movwf	(??_Display_Character+1)^0,c
 30670  019D76  50F3               	movf	243,w,c
 30671  019D78  2602               	addwf	??_Display_Character^0,f,c
 30672  019D7A  50F4               	movf	244,w,c
 30673  019D7C  2203               	addwfc	(??_Display_Character+1)^0,f,c
 30674  019D7E  5006               	movf	Display_Character@i^0,w,c
 30675  019D80  2602               	addwf	??_Display_Character^0,f,c
 30676  019D82  5007               	movf	(Display_Character@i+1)^0,w,c
 30677  019D84  2203               	addwfc	(??_Display_Character+1)^0,f,c
 30678  019D86  0060  F00B  FFF6   	movff	??_Display_Character,tblptrl
 30679  019D8C  0060  F00F  FFF7   	movff	??_Display_Character+1,tblptrh
 30680  019D92                     	if	0	;tblptru may be non-zero
 30681  019D92                     	endif
 30682  019D92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30683  019D92  0E00               	movlw	low (__mediumconst shr (0+16))
 30684  019D94  6EF8               	movwf	tblptru,c
 30685  019D96                     	endif
 30686  019D96  0008               	tblrd		*
 30687  019D98  006F FFD4  F004    	movff	tablat,Display_Character@dat
 30688  019D9E                     
 30689                           ;Display.c: 173:         Data_Write(dat);
 30690  019D9E  5004               	movf	Display_Character@dat^0,w,c
 30691  019DA0  EC3B  F0D3         	call	_Data_Write
 30692  019DA4                     
 30693                           ;Display.c: 174:     }
 30694  019DA4  4A06               	infsnz	Display_Character@i^0,f,c
 30695  019DA6  2A07               	incf	(Display_Character@i+1)^0,f,c
 30696  019DA8  BE07               	btfsc	(Display_Character@i+1)^0,7,c
 30697  019DAA  EFE0  F0CE         	goto	u12131
 30698  019DAE  5007               	movf	(Display_Character@i+1)^0,w,c
 30699  019DB0  E109               	bnz	u12130
 30700  019DB2  0E05               	movlw	5
 30701  019DB4  5C06               	subwf	Display_Character@i^0,w,c
 30702  019DB6  A0D8               	btfss	status,0,c
 30703  019DB8  EFE0  F0CE         	goto	u12131
 30704  019DBC  EFE2  F0CE         	goto	u12130
 30705  019DC0                     u12131:
 30706  019DC0  EFB5  F0CE         	goto	l9997
 30707  019DC4                     u12130:
 30708  019DC4  0012               	return		;funcret
 30709  019DC6                     __end_of_Display_Character:
 30710                           	callstack 0
 30711                           
 30712 ;; *************** function _Data_Write *****************
 30713 ;; Defined at:
 30714 ;;		line 156 in file "Display.c"
 30715 ;; Parameters:    Size  Location     Type
 30716 ;;  dat             1    wreg     unsigned char 
 30717 ;; Auto vars:     Size  Location     Type
 30718 ;;  dat             1    0[COMRAM] unsigned char 
 30719 ;; Return value:  Size  Location     Type
 30720 ;;                  1    wreg      void 
 30721 ;; Registers used:
 30722 ;;		wreg
 30723 ;; Tracked objects:
 30724 ;;		On entry : 0/0
 30725 ;;		On exit  : 0/0
 30726 ;;		Unchanged: 0/0
 30727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30732 ;;Total ram usage:        1 bytes
 30733 ;; Hardware stack levels used:    1
 30734 ;; This function calls:
 30735 ;;		Nothing
 30736 ;; This function is called by:
 30737 ;;		_Display_Character
 30738 ;;		_GLCD_Clear
 30739 ;; This function uses a non-reentrant model
 30740 ;;
 30741                           
 30742                           	psect	text124
 30743  01A676                     __ptext124:
 30744                           	callstack 0
 30745  01A676                     _Data_Write:
 30746                           	callstack 28
 30747                           
 30748                           ;incstack = 0
 30749                           ;Data_Write@dat stored from wreg
 30750  01A676  6E01               	movwf	Data_Write@dat^0,c
 30751  01A678                     
 30752                           ;Display.c: 157:     PORTD = dat;
 30753  01A678  0060  F007  FFCD   	movff	Data_Write@dat,16333	;volatile
 30754  01A67E                     
 30755                           ;Display.c: 158:     PORTAbits.RA3 = 1;
 30756  01A67E  86CA               	bsf	202,3,c	;volatile
 30757  01A680                     
 30758                           ;Display.c: 159:     PORTAbits.RA4 = 0;
 30759  01A680  98CA               	bcf	202,4,c	;volatile
 30760  01A682                     
 30761                           ;Display.c: 160:     PORTAbits.RA0 = 1;
 30762  01A682  80CA               	bsf	202,0,c	;volatile
 30763  01A684                     
 30764                           ;Display.c: 161:     _delay((unsigned long)((2)*(64000000/4000000.0)));
 30765  01A684  0E0A               	movlw	10
 30766  01A686                     u14197:
 30767  01A686  2EE8               	decfsz	wreg,f,c
 30768  01A688  D7FE               	bra	u14197
 30769  01A68A  D000               	nop2	
 30770  01A68C                     
 30771                           ;Display.c: 162:     PORTAbits.RA0 = 0;
 30772  01A68C  90CA               	bcf	202,0,c	;volatile
 30773  01A68E                     
 30774                           ;Display.c: 163:     _delay((unsigned long)((20)*(64000000/4000000.0)));
 30775  01A68E  0E6A               	movlw	106
 30776  01A690                     u14207:
 30777  01A690  2EE8               	decfsz	wreg,f,c
 30778  01A692  D7FE               	bra	u14207
 30779  01A694  D000               	nop2	
 30780  01A696  0012               	return		;funcret
 30781  01A698                     __end_of_Data_Write:
 30782                           	callstack 0
 30783                           
 30784 ;; *************** function _GLCD_Initialise *****************
 30785 ;; Defined at:
 30786 ;;		line 111 in file "Display.c"
 30787 ;; Parameters:    Size  Location     Type
 30788 ;;		None
 30789 ;; Auto vars:     Size  Location     Type
 30790 ;;		None
 30791 ;; Return value:  Size  Location     Type
 30792 ;;                  1    wreg      void 
 30793 ;; Registers used:
 30794 ;;		wreg, status,2, status,0, cstack
 30795 ;; Tracked objects:
 30796 ;;		On entry : 0/0
 30797 ;;		On exit  : 0/0
 30798 ;;		Unchanged: 0/0
 30799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30804 ;;Total ram usage:        0 bytes
 30805 ;; Hardware stack levels used:    1
 30806 ;; Hardware stack levels required when called:    1
 30807 ;; This function calls:
 30808 ;;		_Command_Write
 30809 ;;		_Select_Page
 30810 ;; This function is called by:
 30811 ;;		_main
 30812 ;; This function uses a non-reentrant model
 30813 ;;
 30814                           
 30815                           	psect	text125
 30816  01A0DE                     __ptext125:
 30817                           	callstack 0
 30818  01A0DE                     _GLCD_Initialise:
 30819                           	callstack 29
 30820  01A0DE                     
 30821                           ;Display.c: 114:     Select_Page(0);
 30822  01A0DE  0E00               	movlw	0
 30823  01A0E0  6E02               	movwf	(Select_Page@select+1)^0,c
 30824  01A0E2  0E00               	movlw	0
 30825  01A0E4  6E01               	movwf	Select_Page@select^0,c
 30826  01A0E6  EC3F  F0D2         	call	_Select_Page	;wreg free
 30827  01A0EA                     
 30828                           ;Display.c: 115:     Command_Write(0x3f);
 30829  01A0EA  0E3F               	movlw	63
 30830  01A0EC  EC4C  F0D3         	call	_Command_Write
 30831  01A0F0                     
 30832                           ;Display.c: 116:     Select_Page(1);
 30833  01A0F0  0E00               	movlw	0
 30834  01A0F2  6E02               	movwf	(Select_Page@select+1)^0,c
 30835  01A0F4  0E01               	movlw	1
 30836  01A0F6  6E01               	movwf	Select_Page@select^0,c
 30837  01A0F8  EC3F  F0D2         	call	_Select_Page	;wreg free
 30838                           
 30839                           ;Display.c: 117:     Command_Write(0x3f);
 30840  01A0FC  0E3F               	movlw	63
 30841  01A0FE  EC4C  F0D3         	call	_Command_Write
 30842  01A102                     
 30843                           ;Display.c: 118:     _delay((unsigned long)((2)*(64000000/4000000.0)));
 30844  01A102  0E0A               	movlw	10
 30845  01A104                     u14217:
 30846  01A104  2EE8               	decfsz	wreg,f,c
 30847  01A106  D7FE               	bra	u14217
 30848  01A108  D000               	nop2	
 30849  01A10A                     
 30850                           ;Display.c: 121:     Select_Page(0);
 30851  01A10A  0E00               	movlw	0
 30852  01A10C  6E02               	movwf	(Select_Page@select+1)^0,c
 30853  01A10E  0E00               	movlw	0
 30854  01A110  6E01               	movwf	Select_Page@select^0,c
 30855  01A112  EC3F  F0D2         	call	_Select_Page	;wreg free
 30856  01A116                     
 30857                           ;Display.c: 122:     Command_Write(0xc0);
 30858  01A116  0EC0               	movlw	192
 30859  01A118  EC4C  F0D3         	call	_Command_Write
 30860  01A11C                     
 30861                           ;Display.c: 123:     Select_Page(1);
 30862  01A11C  0E00               	movlw	0
 30863  01A11E  6E02               	movwf	(Select_Page@select+1)^0,c
 30864  01A120  0E01               	movlw	1
 30865  01A122  6E01               	movwf	Select_Page@select^0,c
 30866  01A124  EC3F  F0D2         	call	_Select_Page	;wreg free
 30867  01A128                     
 30868                           ;Display.c: 124:     Command_Write(0xc0);
 30869  01A128  0EC0               	movlw	192
 30870  01A12A  EC4C  F0D3         	call	_Command_Write
 30871  01A12E                     
 30872                           ;Display.c: 125:     _delay((unsigned long)((2)*(64000000/4000000.0)));
 30873  01A12E  0E0A               	movlw	10
 30874  01A130                     u14227:
 30875  01A130  2EE8               	decfsz	wreg,f,c
 30876  01A132  D7FE               	bra	u14227
 30877  01A134  D000               	nop2	
 30878  01A136  0012               	return		;funcret
 30879  01A138                     __end_of_GLCD_Initialise:
 30880                           	callstack 0
 30881                           
 30882 ;; *************** function _Select_Page *****************
 30883 ;; Defined at:
 30884 ;;		line 128 in file "Display.c"
 30885 ;; Parameters:    Size  Location     Type
 30886 ;;  select          2    0[COMRAM] int 
 30887 ;; Auto vars:     Size  Location     Type
 30888 ;;		None
 30889 ;; Return value:  Size  Location     Type
 30890 ;;                  1    wreg      void 
 30891 ;; Registers used:
 30892 ;;		wreg, status,2, status,0
 30893 ;; Tracked objects:
 30894 ;;		On entry : 0/0
 30895 ;;		On exit  : 0/0
 30896 ;;		Unchanged: 0/0
 30897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30902 ;;Total ram usage:        2 bytes
 30903 ;; Hardware stack levels used:    1
 30904 ;; This function calls:
 30905 ;;		Nothing
 30906 ;; This function is called by:
 30907 ;;		_GLCD_Initialise
 30908 ;;		_GLCD_Clear
 30909 ;;		_Menu
 30910 ;;		_Settings_Menu
 30911 ;;		_UART_Page
 30912 ;;		_UART_Print
 30913 ;;		_UART_Settings
 30914 ;;		_Baud_Rate_Settings
 30915 ;;		_Toggle_Select
 30916 ;;		_Number_Update
 30917 ;;		_Baud_rate_Change
 30918 ;;		_Maximum_Error_Select
 30919 ;;		_Minimum_Error_Select
 30920 ;;		_Error_select_range
 30921 ;;		_Error_Settings
 30922 ;;		_Continous_Transmission_Length
 30923 ;;		_Transmission_Settings
 30924 ;;		_Auto_Boud
 30925 ;;		_Cursor_drawing
 30926 ;;		_Cursor_delete
 30927 ;;		_Error_Message
 30928 ;; This function uses a non-reentrant model
 30929 ;;
 30930                           
 30931                           	psect	text126
 30932  01A47E                     __ptext126:
 30933                           	callstack 0
 30934  01A47E                     _Select_Page:
 30935                           	callstack 29
 30936  01A47E                     
 30937                           ;Display.c: 128: void Select_Page(int select);Display.c: 129: {;Display.c: 130:     if (
      +                          select == 1) {
 30938  01A47E  0401               	decf	Select_Page@select^0,w,c
 30939  01A480  1002               	iorwf	(Select_Page@select+1)^0,w,c
 30940  01A482  A4D8               	btfss	status,2,c
 30941  01A484  EF46  F0D2         	goto	u12301
 30942  01A488  EF48  F0D2         	goto	u12300
 30943  01A48C                     u12301:
 30944  01A48C  EF54  F0D2         	goto	l1146
 30945  01A490                     u12300:
 30946  01A490                     
 30947                           ;Display.c: 131:         PORTAbits.RA1 = 0;
 30948  01A490  92CA               	bcf	202,1,c	;volatile
 30949  01A492                     
 30950                           ;Display.c: 132:         _delay((unsigned long)((2)*(64000000/4000000.0)));
 30951  01A492  0E0A               	movlw	10
 30952  01A494                     u14237:
 30953  01A494  2EE8               	decfsz	wreg,f,c
 30954  01A496  D7FE               	bra	u14237
 30955  01A498  D000               	nop2	
 30956  01A49A                     
 30957                           ;Display.c: 133:         PORTAbits.RA2 = 1;
 30958  01A49A  84CA               	bsf	202,2,c	;volatile
 30959                           
 30960                           ;Display.c: 134:         _delay((unsigned long)((2)*(64000000/4000000.0)));
 30961  01A49C  0E0A               	movlw	10
 30962  01A49E                     u14247:
 30963  01A49E  2EE8               	decfsz	wreg,f,c
 30964  01A4A0  D7FE               	bra	u14247
 30965  01A4A2  D000               	nop2	
 30966                           
 30967                           ;Display.c: 135:     } else {
 30968  01A4A4  EF5E  F0D2         	goto	l1148
 30969  01A4A8                     l1146:
 30970                           
 30971                           ;Display.c: 136:         PORTAbits.RA1 = 1;
 30972  01A4A8  82CA               	bsf	202,1,c	;volatile
 30973  01A4AA                     
 30974                           ;Display.c: 137:         _delay((unsigned long)((2)*(64000000/4000000.0)));
 30975  01A4AA  0E0A               	movlw	10
 30976  01A4AC                     u14257:
 30977  01A4AC  2EE8               	decfsz	wreg,f,c
 30978  01A4AE  D7FE               	bra	u14257
 30979  01A4B0  D000               	nop2	
 30980  01A4B2                     
 30981                           ;Display.c: 138:         PORTAbits.RA2 = 0;
 30982  01A4B2  94CA               	bcf	202,2,c	;volatile
 30983                           
 30984                           ;Display.c: 139:         _delay((unsigned long)((2)*(64000000/4000000.0)));
 30985  01A4B4  0E0A               	movlw	10
 30986  01A4B6                     u14267:
 30987  01A4B6  2EE8               	decfsz	wreg,f,c
 30988  01A4B8  D7FE               	bra	u14267
 30989  01A4BA  D000               	nop2	
 30990  01A4BC                     l1148:
 30991  01A4BC  0012               	return		;funcret
 30992  01A4BE                     __end_of_Select_Page:
 30993                           	callstack 0
 30994                           
 30995 ;; *************** function _Command_Write *****************
 30996 ;; Defined at:
 30997 ;;		line 144 in file "Display.c"
 30998 ;; Parameters:    Size  Location     Type
 30999 ;;  cmd             1    wreg     unsigned char 
 31000 ;; Auto vars:     Size  Location     Type
 31001 ;;  cmd             1    0[COMRAM] unsigned char 
 31002 ;; Return value:  Size  Location     Type
 31003 ;;                  1    wreg      void 
 31004 ;; Registers used:
 31005 ;;		wreg
 31006 ;; Tracked objects:
 31007 ;;		On entry : 0/0
 31008 ;;		On exit  : 0/0
 31009 ;;		Unchanged: 0/0
 31010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31015 ;;Total ram usage:        1 bytes
 31016 ;; Hardware stack levels used:    1
 31017 ;; This function calls:
 31018 ;;		Nothing
 31019 ;; This function is called by:
 31020 ;;		_GLCD_Initialise
 31021 ;;		_GLCD_Clear
 31022 ;;		_Menu
 31023 ;;		_Settings_Menu
 31024 ;;		_UART_Line
 31025 ;;		_UART_Cursor
 31026 ;;		_UART_Clear_Line
 31027 ;;		_UART_Print
 31028 ;;		_UART_Settings
 31029 ;;		_Baud_Rate_Settings
 31030 ;;		_Toggle_Select
 31031 ;;		_Number_Update
 31032 ;;		_Baud_rate_Change
 31033 ;;		_Maximum_Error_Select
 31034 ;;		_Minimum_Error_Select
 31035 ;;		_Error_select_range
 31036 ;;		_Error_Settings
 31037 ;;		_Continous_Transmission_Length
 31038 ;;		_Transmission_Settings
 31039 ;;		_Auto_Boud
 31040 ;;		_Cursor_drawing
 31041 ;;		_Cursor_delete
 31042 ;;		_Error_Message
 31043 ;; This function uses a non-reentrant model
 31044 ;;
 31045                           
 31046                           	psect	text127
 31047  01A698                     __ptext127:
 31048                           	callstack 0
 31049  01A698                     _Command_Write:
 31050                           	callstack 28
 31051                           
 31052                           ;incstack = 0
 31053                           ;Command_Write@cmd stored from wreg
 31054  01A698  6E01               	movwf	Command_Write@cmd^0,c
 31055  01A69A                     
 31056                           ;Display.c: 145:     PORTD = cmd;
 31057  01A69A  0060  F007  FFCD   	movff	Command_Write@cmd,16333	;volatile
 31058  01A6A0                     
 31059                           ;Display.c: 146:     PORTAbits.RA3 = 0;
 31060  01A6A0  96CA               	bcf	202,3,c	;volatile
 31061  01A6A2                     
 31062                           ;Display.c: 147:     PORTAbits.RA4 = 0;
 31063  01A6A2  98CA               	bcf	202,4,c	;volatile
 31064  01A6A4                     
 31065                           ;Display.c: 148:     PORTAbits.RA0 = 1;
 31066  01A6A4  80CA               	bsf	202,0,c	;volatile
 31067  01A6A6                     
 31068                           ;Display.c: 149:     _delay((unsigned long)((2)*(64000000/4000000.0)));
 31069  01A6A6  0E0A               	movlw	10
 31070  01A6A8                     u14277:
 31071  01A6A8  2EE8               	decfsz	wreg,f,c
 31072  01A6AA  D7FE               	bra	u14277
 31073  01A6AC  D000               	nop2	
 31074  01A6AE                     
 31075                           ;Display.c: 150:     PORTAbits.RA0 = 0;
 31076  01A6AE  90CA               	bcf	202,0,c	;volatile
 31077  01A6B0                     
 31078                           ;Display.c: 151:     _delay((unsigned long)((20)*(64000000/4000000.0)));
 31079  01A6B0  0E6A               	movlw	106
 31080  01A6B2                     u14287:
 31081  01A6B2  2EE8               	decfsz	wreg,f,c
 31082  01A6B4  D7FE               	bra	u14287
 31083  01A6B6  D000               	nop2	
 31084  01A6B8  0012               	return		;funcret
 31085  01A6BA                     __end_of_Command_Write:
 31086                           	callstack 0
 31087                           
 31088                           	psect	text128
 31089  000000                     __ptext128:
 31090                           	callstack 0
 31091  000000                     
 31092                           	psect	rparam
 31093  0000                     
 31094                           	psect	idloc
 31095                           
 31096                           ;Config register IDLOC0 @ 0x200000
 31097                           ;	unspecified, using default values
 31098  200000                     	org	2097152
 31099  200000  0FFF               	dw	4095
 31100                           
 31101                           ;Config register IDLOC1 @ 0x200002
 31102                           ;	unspecified, using default values
 31103  200002                     	org	2097154
 31104  200002  0FFF               	dw	4095
 31105                           
 31106                           ;Config register IDLOC2 @ 0x200004
 31107                           ;	unspecified, using default values
 31108  200004                     	org	2097156
 31109  200004  0FFF               	dw	4095
 31110                           
 31111                           ;Config register IDLOC3 @ 0x200006
 31112                           ;	unspecified, using default values
 31113  200006                     	org	2097158
 31114  200006  0FFF               	dw	4095
 31115                           
 31116                           ;Config register IDLOC4 @ 0x200008
 31117                           ;	unspecified, using default values
 31118  200008                     	org	2097160
 31119  200008  0FFF               	dw	4095
 31120                           
 31121                           ;Config register IDLOC5 @ 0x20000A
 31122                           ;	unspecified, using default values
 31123  20000A                     	org	2097162
 31124  20000A  0FFF               	dw	4095
 31125                           
 31126                           ;Config register IDLOC6 @ 0x20000C
 31127                           ;	unspecified, using default values
 31128  20000C                     	org	2097164
 31129  20000C  0FFF               	dw	4095
 31130                           
 31131                           ;Config register IDLOC7 @ 0x20000E
 31132                           ;	unspecified, using default values
 31133  20000E                     	org	2097166
 31134  20000E  0FFF               	dw	4095
 31135                           
 31136                           	psect	config
 31137                           
 31138                           ;Config register CONFIG1L @ 0x300000
 31139                           ;	External Oscillator Selection
 31140                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 31141                           ;	Reset Oscillator Selection
 31142                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 31143  300000                     	org	3145728
 31144  300000  8A                 	db	138
 31145                           
 31146                           ;Config register CONFIG1H @ 0x300001
 31147                           ;	Clock out Enable bit
 31148                           ;	CLKOUTEN = ON, CLKOUT function is enabled
 31149                           ;	PRLOCKED One-Way Set Enable bit
 31150                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 31151                           ;	Clock Switch Enable bit
 31152                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 31153                           ;	Fail-Safe Clock Monitor Enable bit
 31154                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 31155  300001                     	org	3145729
 31156  300001  FE                 	db	254
 31157                           
 31158                           ;Config register CONFIG2L @ 0x300002
 31159                           ;	MCLR Enable bit
 31160                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 31161                           ;	Power-up timer selection bits
 31162                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 31163                           ;	Multi-vector enable bit
 31164                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 31165                           ;	IVTLOCK bit One-way set enable bit
 31166                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 31167                           ;	Low Power BOR Enable bit
 31168                           ;	LPBOREN = OFF, ULPBOR disabled
 31169                           ;	Brown-out Reset Enable bits
 31170                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 31171  300002                     	org	3145730
 31172  300002  F7                 	db	247
 31173                           
 31174                           ;Config register CONFIG2H @ 0x300003
 31175                           ;	Brown-out Reset Voltage Selection bits
 31176                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 31177                           ;	ZCD Disable bit
 31178                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 31179                           ;	PPSLOCK bit One-Way Set Enable bit
 31180                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 31181                           ;	Stack Full/Underflow Reset Enable bit
 31182                           ;	STVREN = ON, Stack full/underflow will cause Reset
 31183                           ;	Debugger Enable bit
 31184                           ;	DEBUG = OFF, Background debugger disabled
 31185                           ;	Extended Instruction Set Enable bit
 31186                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 31187  300003                     	org	3145731
 31188  300003  FF                 	db	255
 31189                           
 31190                           ;Config register CONFIG3L @ 0x300004
 31191                           ;	WDT Period selection bits
 31192                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 31193                           ;	WDT operating mode
 31194                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 31195  300004                     	org	3145732
 31196  300004  9F                 	db	159
 31197                           
 31198                           ;Config register CONFIG3H @ 0x300005
 31199                           ;	WDT Window Select bits
 31200                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 31201                           ;	WDT input clock selector
 31202                           ;	WDTCCS = SC, Software Control
 31203  300005                     	org	3145733
 31204  300005  FF                 	db	255
 31205                           
 31206                           ;Config register CONFIG4L @ 0x300006
 31207                           ;	Boot Block Size selection bits
 31208                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 31209                           ;	Boot Block enable bit
 31210                           ;	BBEN = OFF, Boot block disabled
 31211                           ;	Storage Area Flash enable bit
 31212                           ;	SAFEN = OFF, SAF disabled
 31213                           ;	Application Block write protection bit
 31214                           ;	WRTAPP = OFF, Application Block not write protected
 31215  300006                     	org	3145734
 31216  300006  FF                 	db	255
 31217                           
 31218                           ;Config register CONFIG4H @ 0x300007
 31219                           ;	Configuration Register Write Protection bit
 31220                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 31221                           ;	Boot Block Write Protection bit
 31222                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 31223                           ;	Data EEPROM Write Protection bit
 31224                           ;	WRTD = OFF, Data EEPROM not write-protected
 31225                           ;	SAF Write protection bit
 31226                           ;	WRTSAF = OFF, SAF not Write Protected
 31227                           ;	Low Voltage Programming Enable bit
 31228                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 31229  300007                     	org	3145735
 31230  300007  FF                 	db	255
 31231                           
 31232                           ;Config register CONFIG5L @ 0x300008
 31233                           ;	PFM and Data EEPROM Code Protection bit
 31234                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 31235  300008                     	org	3145736
 31236  300008  FF                 	db	255
 31237                           
 31238                           ;Config register CONFIG5H @ 0x300009
 31239                           ;	unspecified, using default values
 31240  300009                     	org	3145737
 31241  300009  FF                 	db	255
 31242                           tosu	equ	0x3FFF
 31243                           tosh	equ	0x3FFE
 31244                           tosl	equ	0x3FFD
 31245                           stkptr	equ	0x3FFC
 31246                           pclatu	equ	0x3FFB
 31247                           pclath	equ	0x3FFA
 31248                           pcl	equ	0x3FF9
 31249                           tblptru	equ	0x3FF8
 31250                           tblptrh	equ	0x3FF7
 31251                           tblptrl	equ	0x3FF6
 31252                           tablat	equ	0x3FF5
 31253                           prodh	equ	0x3FF4
 31254                           prodl	equ	0x3FF3
 31255                           indf0	equ	0x3FEF
 31256                           postinc0	equ	0x3FEE
 31257                           postdec0	equ	0x3FED
 31258                           preinc0	equ	0x3FEC
 31259                           plusw0	equ	0x3FEB
 31260                           fsr0h	equ	0x3FEA
 31261                           fsr0l	equ	0x3FE9
 31262                           wreg	equ	0x3FE8
 31263                           indf1	equ	0x3FE7
 31264                           postinc1	equ	0x3FE6
 31265                           postdec1	equ	0x3FE5
 31266                           preinc1	equ	0x3FE4
 31267                           plusw1	equ	0x3FE3
 31268                           fsr1h	equ	0x3FE2
 31269                           fsr1l	equ	0x3FE1
 31270                           bsr	equ	0x3FE0
 31271                           indf2	equ	0x3FDF
 31272                           postinc2	equ	0x3FDE
 31273                           postdec2	equ	0x3FDD
 31274                           preinc2	equ	0x3FDC
 31275                           plusw2	equ	0x3FDB
 31276                           fsr2h	equ	0x3FDA
 31277                           fsr2l	equ	0x3FD9
 31278                           status	equ	0x3FD8

Data Sizes:
    Strings     290
    Constant    768
    Data        20
    BSS         1239
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK1           256     81     231
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    f_open@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_chdir@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    file.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    S35$4$0	PTR void  size(2) Largest target is 0

    S35$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(3) Largest target is 0

    S35$3$0	PTR void  size(2) Largest target is 563
		 -> savedMessage(BANK1[12]), file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), 
		 -> NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), STR_75(CODE[6]), STR_74(CODE[9]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[6]), STR_70(CODE[12]), STR_69(CODE[7]), 
		 -> STR_68(CODE[11]), STR_67(CODE[11]), STR_66(CODE[9]), STR_65(CODE[13]), 
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), STR_62(CODE[7]), STR_61(CODE[13]), 
		 -> STR_59(CODE[14]), STR_58(CODE[12]), STR_57(CODE[9]), STR_56(CODE[6]), 
		 -> Error_Settings@errorcheckChar(BANK0[1]), STR_54(CODE[8]), STR_53(CODE[8]), STR_52(CODE[9]), 
		 -> STR_51(CODE[6]), STR_50(CODE[6]), STR_49(CODE[8]), STR_47(CODE[6]), 
		 -> STR_46(CODE[8]), STR_44(CODE[5]), STR_43(CODE[5]), STR_41(CODE[4]), 
		 -> STR_40(CODE[5]), STR_39(CODE[6]), STR_38(CODE[7]), STR_37(CODE[9]), 
		 -> STR_36(CODE[10]), numberDisplayed(BANK1[7]), Toggle_Select@Char(BANK0[1]), STR_32(CODE[7]), 
		 -> STR_31(CODE[10]), STR_30(CODE[9]), STR_29(CODE[5]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 
		 -> STR_27(CODE[10]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[5]), 
		 -> STR_23(CODE[13]), STR_22(CODE[6]), STR_21(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[7]), STR_18(CODE[8]), STR_17(CODE[7]), STR_16(CODE[13]), 
		 -> STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[9]), 
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), STR_75(CODE[6]), STR_74(CODE[9]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[6]), STR_70(CODE[12]), STR_69(CODE[7]), 
		 -> STR_68(CODE[11]), STR_67(CODE[11]), STR_66(CODE[9]), STR_65(CODE[13]), 
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), STR_62(CODE[7]), STR_61(CODE[13]), 
		 -> STR_59(CODE[14]), STR_58(CODE[12]), STR_57(CODE[9]), STR_56(CODE[6]), 
		 -> Error_Settings@errorcheckChar(BANK0[1]), STR_54(CODE[8]), STR_53(CODE[8]), STR_52(CODE[9]), 
		 -> STR_51(CODE[6]), STR_50(CODE[6]), STR_49(CODE[8]), STR_47(CODE[6]), 
		 -> STR_46(CODE[8]), STR_44(CODE[5]), STR_43(CODE[5]), STR_41(CODE[4]), 
		 -> STR_40(CODE[5]), STR_39(CODE[6]), STR_38(CODE[7]), STR_37(CODE[9]), 
		 -> STR_36(CODE[10]), numberDisplayed(BANK1[7]), Toggle_Select@Char(BANK0[1]), STR_32(CODE[7]), 
		 -> STR_31(CODE[10]), STR_30(CODE[9]), STR_29(CODE[5]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 
		 -> STR_27(CODE[10]), STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[5]), 
		 -> STR_23(CODE[13]), STR_22(CODE[6]), STR_21(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[7]), STR_18(CODE[8]), STR_17(CODE[7]), STR_16(CODE[13]), 
		 -> STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[9]), 
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 12
		 -> savedMessage(BANK1[12]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 12
		 -> savedMessage(BANK1[12]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 12
		 -> messageStr(BANK1[12]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 12
		 -> messageStr(BANK1[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), Error_Settings@errorcheckChar(BANK0[1]), numberDisplayed(BANK1[7]), 
		 -> Toggle_Select@Char(BANK0[1]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_64(CODE[3]), STR_63(CODE[3]), STR_60(CODE[3]), STR_55(CODE[3]), 
		 -> STR_48(CODE[3]), STR_45(CODE[3]), STR_42(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_64(CODE[3]), STR_63(CODE[3]), STR_60(CODE[3]), STR_55(CODE[3]), 
		 -> STR_48(CODE[3]), STR_45(CODE[3]), STR_42(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_64(CODE[3]), STR_63(CODE[3]), STR_60(CODE[3]), STR_55(CODE[3]), 
		 -> STR_48(CODE[3]), STR_45(CODE[3]), STR_42(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), Error_Settings@errorcheckChar(BANK0[1]), numberDisplayed(BANK1[7]), 
		 -> Toggle_Select@Char(BANK0[1]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S3438_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 7
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), Error_Settings@errorcheckChar(BANK0[1]), numberDisplayed(BANK1[7]), 
		 -> Toggle_Select@Char(BANK0[1]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> Transmission_Settings@SDloggingChar(BANK0[1]), Transmission_Settings@ContinuousChar(BANK0[1]), Error_Settings@errorcheckChar(BANK0[1]), numberDisplayed(BANK1[7]), 
		 -> Toggle_Select@Char(BANK0[1]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), messageStr(BANK1[12]), savedMessage(BANK1[12]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    memset@s	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), messageStr(BANK1[12]), savedMessage(BANK1[12]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> messageStr(BANK1[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 12
		 -> savedMessage(BANK1[12]), 

    file.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    file.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    Display_Message@message	PTR unsigned char  size(2) Largest target is 14
		 -> STR_75(CODE[6]), STR_74(CODE[9]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[6]), STR_70(CODE[12]), STR_69(CODE[7]), STR_68(CODE[11]), 
		 -> STR_67(CODE[11]), STR_66(CODE[9]), STR_65(CODE[13]), Transmission_Settings@SDloggingChar(BANK0[1]), 
		 -> Transmission_Settings@ContinuousChar(BANK0[1]), STR_62(CODE[7]), STR_61(CODE[13]), STR_59(CODE[14]), 
		 -> STR_58(CODE[12]), STR_57(CODE[9]), STR_56(CODE[6]), Error_Settings@errorcheckChar(BANK0[1]), 
		 -> STR_54(CODE[8]), STR_53(CODE[8]), STR_52(CODE[9]), STR_51(CODE[6]), 
		 -> STR_50(CODE[6]), STR_49(CODE[8]), STR_47(CODE[6]), STR_46(CODE[8]), 
		 -> STR_44(CODE[5]), STR_43(CODE[5]), STR_41(CODE[4]), STR_40(CODE[5]), 
		 -> STR_39(CODE[6]), STR_38(CODE[7]), STR_37(CODE[9]), STR_36(CODE[10]), 
		 -> numberDisplayed(BANK1[7]), Toggle_Select@Char(BANK0[1]), STR_32(CODE[7]), STR_31(CODE[10]), 
		 -> STR_30(CODE[9]), STR_29(CODE[5]), Baud_Rate_Settings@autoBaudChar(BANK0[1]), STR_27(CODE[10]), 
		 -> STR_26(CODE[13]), STR_25(CODE[9]), STR_24(CODE[5]), STR_23(CODE[13]), 
		 -> STR_22(CODE[6]), STR_21(CODE[5]), STR_20(CODE[9]), STR_19(CODE[7]), 
		 -> STR_18(CODE[8]), STR_17(CODE[7]), STR_16(CODE[13]), STR_15(CODE[6]), 
		 -> STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[9]), STR_11(CODE[6]), 
		 -> STR_10(CODE[5]), STR_9(CODE[5]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    SD_SPI_AsyncWriteTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> savedMessage(BANK1[12]), file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorWrite@info(COMRAM[13]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), messageStr(BANK1[12]), savedMessage(BANK1[12]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    SD_SPI_AsyncReadTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> savedMessage(BANK1[12]), file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), 
		 -> NULL(NULL[0]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorRead@info(COMRAM[13]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> savedMessage(BANK1[12]), file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), 
		 -> NULL(NULL[0]), 

    S1461SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> savedMessage(BANK1[12]), file(BIGRAM[546]), drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), 
		 -> NULL(NULL[0]), 

    ioInfo.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), savedMessage(BANK1[12]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), Save_Data@newLine(BANK0[3]), NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> Save_Data@actualLength(BANK0[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 12
		 -> savedMessage(BANK1[12]), Save_Data@newLine(BANK0[3]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 12
		 -> savedMessage(BANK1[12]), Save_Data@newLine(BANK0[3]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    S250$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    validate$979	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK0[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK0[2]), f_read@fs(COMRAM[2]), 

    validate@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    FatFs	PTR struct .[1] size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_open@path(BANK0[2]), f_mount@path(BANK0[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_chdir@fs(COMRAM[2]), f_open@fs(BANK1[2]), f_mount@fs(BANK0[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_open@path(BANK0[2]), f_mount@path(BANK0[2]), 
		 -> f_mount@rp(BANK0[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_76(CODE[3]), STR_8(CODE[8]), STR_7(CODE[3]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    S233$dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_open@dj(BANK1[40]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    S226$fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 
		 -> STR_6(CODE[6]), STR_4(CODE[4]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 
		 -> STR_6(CODE[6]), STR_4(CODE[4]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), NULL(NULL[0]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), NULL(NULL[0]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 42
		 -> savedMessage(BANK1[12]), Save_Data@newLine(BANK0[3]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 42
		 -> savedMessage(BANK1[12]), Save_Data@newLine(BANK0[3]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> file.buf(BIGRAM[512]), file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> file.buf(BIGRAM[512]), file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 

    S35$spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S35$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    S35$readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    S35$writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    S35$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S35$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S35$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S35$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S35$spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    S35$spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMRAM

    _UART_Page->_Select_Page
    _f_sync->_move_window
    _validate->_disk_status
    _sync_fs->_sync_window
    _f_open->_move_window
    _st_clust->_st_word
    _ld_clust->_ld_word
    _dir_find->_move_window
    _create_name->_mem_set
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _put_fat->_move_window
    _get_fat->_move_window
    _find_volume->_move_window
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open
    _Error_Check->_atoi
    _atoi->_isspace
    _UART_Line->_Command_Write
    _UART_Cursor->_Command_Write
    _UART_Clear_Line->_Display_Message
    _UART_Settings->_Display_Message
    _Transmission_Settings->_sprintf
    _Toggle_Select->_sprintf
    _Settings_Menu->_Display_Message
    _Minimum_Error_Select->_sprintf
    _Maximum_Error_Select->_sprintf
    _Error_select_range->_Display_Message
    _Error_Settings->_sprintf
    _Continous_Transmission_Length->_sprintf
    _Baud_rate_Change->_sprintf
    _Number_Update->_sprintf
    _Baud_Rate_Settings->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Cursor_drawing->_Display_Character
    _Auto_Boud->_Display_Message
    _GLCD_Clear->_Select_Page
    _Display_Message->_Display_Character
    _Auto_Boud_Setup->_UART1_Initialize
    _Cursor_delete->_Display_Character
    _Display_Character->_Data_Write
    _GLCD_Initialise->_Select_Page

Critical Paths under _main in BANK0

    _f_close->_f_sync
    _UART_Start->_UART_Print
    _UART_Print->_UART_Message
    _UART_Check_Command->_UART_Command_Mapper
    _UART_Command_Mapper->_UART_Message
    _Logging_Check->_Save_Data
    _Save_Data->_f_open
    _f_write->_create_chain
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _f_open->_follow_path
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_mount->_find_volume
    _find_volume->_check_fs
    _check_fs->_move_window
    _move_window->_sync_window
    _Transmission_Settings->_sprintf
    _Toggle_Select->_sprintf
    _Minimum_Error_Select->_Number_Select
    _Maximum_Error_Select->_Number_Select
    _Error_Settings->_sprintf
    _Continous_Transmission_Length->_Number_Select
    _Baud_rate_Change->_Number_Select
    _Number_Select->_Number_Update
    _Number_Update->_sprintf
    _Baud_Rate_Settings->_sprintf

Critical Paths under _main in BANK1

    _Menu->_Cursor_Position
    _Cursor_Position->_Menu_Logic
    _UART_Start->_UART_Check_Command
    _UART_Print->_UART_Message
    _UART_Check_Command->_UART_Command_Mapper
    _UART_Command_Mapper->_UART_Message
    _Save_Data->_f_open

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1658455
                         _GLCD_Clear
                    _GLCD_Initialise
                               _Menu
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Menu                                                 0     0      0 1650131
                      _Command_Write
                    _Cursor_Position
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
 ---------------------------------------------------------------------------------
 (2) _Cursor_Position                                      2     2      0 1636202
                                             79 BANK1      2     2      0
                      _Cursor_delete
                     _Cursor_drawing
                         _GLCD_Clear
                         _Menu_Logic
                            _f_close
                            _f_mount
 ---------------------------------------------------------------------------------
 (3) _f_close                                              5     3      2   45133
                                             35 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _Menu_Logic                                           2     2      0 1531332
                                             77 BANK1      2     2      0
                          _Auto_Boud
                 _Baud_Rate_Settings
                   _Baud_rate_Change
      _Continous_Transmission_Length
                     _Error_Settings
                 _Error_select_range
               _Maximum_Error_Select
               _Minimum_Error_Select
                      _Settings_Menu
                      _Toggle_Select
              _Transmission_Settings
                      _UART_Settings
                         _UART_Start
 ---------------------------------------------------------------------------------
 (4) _UART_Start                                           0     0      0 1199748
                         _GLCD_Clear
                   _UART1_Initialize
              _UART_Check_Comm_Start
                 _UART_Check_Command
                         _UART_Print
 ---------------------------------------------------------------------------------
 (5) _UART_Print                                           2     2      0  594682
                                            159 BANK0      1     1      0
                      _Command_Write
                         _GLCD_Clear
                        _Select_Page
                       _UART_Message
 ---------------------------------------------------------------------------------
 (5) _UART_Check_Command                                   3     3      0  600399
                                             74 BANK1      3     3      0
                         _UART1_Read
                _UART_Command_Mapper
 ---------------------------------------------------------------------------------
 (6) _UART_Command_Mapper                                  3     3      0  600264
                                            159 BANK0      1     1      0
                                             72 BANK1      2     2      0
                         _GLCD_Clear
                    _UART_Clear_Line
                        _UART_Cursor
                          _UART_Line
                       _UART_Message
                _UART_Message_Lenght
                          _UART_Page
 ---------------------------------------------------------------------------------
 (7) _UART_Page                                            3     3      0    4073
                                              2 COMRAM     3     3      0
                        _Select_Page
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (7) _UART_Message_Lenght                                  1     1      0       0
                                              0 COMRAM     1     1      0
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (6) _UART_Message                                         8     8      0  586200
                                            154 BANK0      5     5      0
                                             69 BANK1      3     3      0
                  _Display_Character
                        _Error_Check
                      _Logging_Check
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (7) _Logging_Check                                        0     0      0  584258
                          _Save_Data
                             _memset
                             _strcpy
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     248
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _Save_Data                                            5     5      0  582607
                                            149 BANK0      5     5      0
              _SD_SPI_IsMediaPresent
                            _f_mount
                             _f_open
                             _f_sync
                            _f_write
                             _memset
 ---------------------------------------------------------------------------------
 (9) _f_write                                             43    35      8   61470
                                             84 BANK0     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (4) _f_sync                                              11     9      2   44013
                                             24 BANK0     11     9      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (4) _validate                                            11     7      4     902
                                              4 COMRAM    11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (5) _sync_fs                                             11     9      2   16879
                                             90 COMRAM     3     1      2
                                             16 BANK0      8     8      0
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _disk_ioctl                                           7     4      3     197
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (9) _f_open                                              82    77      5  428603
                                            136 BANK0     13     8      5
                                              0 BANK1     69    69      0
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (5) _st_clust                                             9     1      8    1417
                                              4 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (10) _remove_chain                                       25    15     10   41683
                                             55 BANK0     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (10) _follow_path                                        14    10      4  149763
                                            122 BANK0     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (10) _ld_clust                                           12     8      4    1700
                                              7 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (11) _dir_find                                            8     6      2  121232
                                            114 BANK0      8     6      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (11) _create_name                                        24    20      4    3099
                                              8 COMRAM    24    20      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (12) _dbc_2nd                                             3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _dbc_1st                                             3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _chk_chr                                             6     2      4     241
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _dir_register                                        5     3      2  138455
                                            126 BANK0      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _mem_cpy                                            10     4      6     820
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _dir_alloc                                          12     8      4  120399
                                            114 BANK0     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (11) _dir_sdi                                            30    24      6   22776
                                             49 BANK0     30    24      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (12) _dir_next                                           30    26      4   81471
                                             84 BANK0     30    26      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (13) _dir_clear                                          18    12      6   16132
                                             90 COMRAM     2     2      0
                                             16 BANK0     16    10      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _mem_set                                              8     2      6    1230
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (10) _clst2sect                                          12     6      6    1839
                                             12 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (10) _create_chain                                       29    23      6   42673
                                             55 BANK0     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (11) _put_fat                                            33    23     10   21196
                                             22 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (6) _st_word                                              4     0      4     851
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _st_dword                                             6     0      6    1551
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (11) _get_fat                                            27    21      6   19637
                                             22 BANK0     27    21      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _f_mount                                             12     7      5   47025
                                            100 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (4) _find_volume                                         71    66      5   45590
                                             29 BANK0     71    66      5
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1016
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     657
                                              0 COMRAM    15    13      2
 ---------------------------------------------------------------------------------
 (5) _disk_status                                          4     4      0      48
                                              0 COMRAM     4     4      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disk_initialize                                      4     4      0    4559
                                             83 COMRAM     4     4      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_MediaInitialize                              50    50      0    4512
                                             33 COMRAM    50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     816
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) _SD_SPI_DelayMilliseconds                             3     3      0      67
                                              1 COMRAM     3     3      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (5) _check_fs                                             7     1      6   18055
                                             22 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   15685
                                             90 COMRAM     5     5      0
                                             16 BANK0      6     0      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2    6535
                                             87 COMRAM     3     1      2
                                              0 BANK0     16    16      0
                         _disk_write
 ---------------------------------------------------------------------------------
 (7) _disk_write                                          12     4      8    5997
                                             75 COMRAM    12     4      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (8) _SD_SPI_SectorWrite                                  27    19      8    4060
                                             48 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (9) _SD_SPI_AsyncWriteTasks                              15    13      2    3265
                                             33 COMRAM    15    13      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (6) _disk_read                                           12     4      8    6646
                                             72 COMRAM    12     4      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (7) _SD_SPI_SectorRead                                   27    19      8    5393
                                             45 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (9) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SD_SPI_AsyncReadTasks                               12    10      2    4602
                                             33 COMRAM    12    10      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (9) _memset                                              12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) _SPI1_ExchangeBlock                                  6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _SD_SendCmd                                         22    16      6    2465
                                             11 COMRAM    22    16      6
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (11) _memcpy                                             11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (10) _SPI1_ExchangeByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _SDSLOW_open                                          0     0      0     110
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (9) _SDFAST_open                                          0     0      0     110
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (10) _SPI1_Open                                           2     2      0     110
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _mem_cmp                                             14     8      6     844
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1002
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     260
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _Error_Check                                          7     7      0    1693
                                             22 COMRAM     7     7      0
                  _Display_Character
                               _atoi
 ---------------------------------------------------------------------------------
 (8) _atoi                                                15    13      2    1468
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (9) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     703
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _UART_Line                                            1     1      0      45
                                              1 COMRAM     1     1      0
                      _Command_Write
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (7) _UART_Cursor                                          1     1      0      45
                                              1 COMRAM     1     1      0
                      _Command_Write
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (7) _UART_Clear_Line                                      0     0      0    5627
                      _Command_Write
                    _Display_Message
 ---------------------------------------------------------------------------------
 (5) _UART_Check_Comm_Start                                1     1      0      23
                                              0 COMRAM     1     1      0
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (4) _UART_Settings                                        0     0      0   18159
                      _Command_Write
                     _Cursor_drawing
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
 ---------------------------------------------------------------------------------
 (4) _Transmission_Settings                                2     2      0   26469
                                             10 BANK0      2     2      0
                      _Command_Write
                     _Cursor_drawing
                  _Display_Character
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Toggle_Select                                        6     3      3   18587
                                             10 BANK0      6     3      3
                      _Command_Write
                    _Display_Message
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Settings_Menu                                        0     0      0   18159
                      _Command_Write
                     _Cursor_drawing
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
 ---------------------------------------------------------------------------------
 (4) _Minimum_Error_Select                                 0     0      0   41117
                      _Command_Write
                    _Display_Message
                         _GLCD_Clear
                      _Number_Select
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Maximum_Error_Select                                 0     0      0   41117
                      _Command_Write
                    _Display_Message
                         _GLCD_Clear
                      _Number_Select
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Error_select_range                                   0     0      0   18159
                      _Command_Write
                     _Cursor_drawing
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
 ---------------------------------------------------------------------------------
 (4) _Error_Settings                                       1     1      0   26261
                                             10 BANK0      1     1      0
                      _Command_Write
                     _Cursor_drawing
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Continous_Transmission_Length                        0     0      0   41117
                      _Command_Write
                    _Display_Message
                         _GLCD_Clear
                      _Number_Select
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Baud_rate_Change                                     4     4      0   41744
                                             26 BANK0      4     4      0
                      _Command_Write
                    _Display_Message
                         _GLCD_Clear
                      _Number_Select
                        _Select_Page
                            ___aldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (5) _Number_Select                                       12     4      8   19136
                                             14 BANK0     12     4      8
                      _Number_Update
 ---------------------------------------------------------------------------------
 (6) _Number_Update                                        4     0      4   18035
                                             10 BANK0      4     0      4
                      _Command_Write
                    _Display_Message
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Baud_Rate_Settings                                   1     1      0   26261
                                             10 BANK0      1     1      0
                      _Command_Write
                     _Cursor_drawing
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             18    10      8    8052
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    6181
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           42    36      6    5827
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                36    26     10    4434
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (9) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _Cursor_drawing                                       2     2      0    4230
                                              7 COMRAM     2     2      0
                      _Command_Write
                  _Display_Character
                        _Select_Page
 ---------------------------------------------------------------------------------
 (4) _Auto_Boud                                            0     0      0   14434
                    _Auto_Boud_Setup
                      _Command_Write
                    _Display_Message
                         _GLCD_Clear
                        _Select_Page
 ---------------------------------------------------------------------------------
 (2) _GLCD_Clear                                           2     2      0    4252
                                              2 COMRAM     2     2      0
                      _Command_Write
                         _Data_Write
                        _Select_Page
 ---------------------------------------------------------------------------------
 (2) _Display_Message                                      7     5      2    5605
                                              7 COMRAM     7     5      2
                  _Display_Character
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Auto_Boud_Setup                                      5     3      2     505
                                              6 COMRAM     5     3      2
                   _UART1_Initialize
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (7) _UART1_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_Initialize                                     6     0      6     392
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Cursor_delete                                        0     0      0    4230
                      _Command_Write
                  _Display_Character
                        _Select_Page
 ---------------------------------------------------------------------------------
 (3) _Display_Character                                    6     6      0     158
                                              1 COMRAM     6     6      0
                         _Data_Write
 ---------------------------------------------------------------------------------
 (3) _Data_Write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Initialise                                      0     0      0    4072
                      _Command_Write
                        _Select_Page
 ---------------------------------------------------------------------------------
 (2) _Select_Page                                          2     0      2    4050
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Command_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCD_Clear
     _Command_Write
     _Data_Write
     _Select_Page
   _GLCD_Initialise
     _Command_Write
     _Select_Page
   _Menu
     _Command_Write
     _Cursor_Position
       _Cursor_delete
         _Command_Write
         _Display_Character
           _Data_Write
         _Select_Page
       _Cursor_drawing
         _Command_Write
         _Display_Character
           _Data_Write
         _Select_Page
       _GLCD_Clear
         _Command_Write
         _Data_Write
         _Select_Page
       _Menu_Logic
         _Auto_Boud
           _Auto_Boud_Setup
             _UART1_Initialize
             _UART1_Read
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
         _Baud_Rate_Settings
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Baud_rate_Change
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Number_Select
             _Number_Update
               _Command_Write
               _Display_Message
                 _Display_Character
                   _Data_Write
                 _strlen
               _Select_Page
               _sprintf
                 _vfprintf
                   _vfpfcnvrt
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                         _fputs
                           _fputc
                             _putch
                         _strlen
                     _fputc
                       _putch
           _Select_Page
           ___aldiv
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Continous_Transmission_Length
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Number_Select
             _Number_Update
               _Command_Write
               _Display_Message
                 _Display_Character
                   _Data_Write
                 _strlen
               _Select_Page
               _sprintf
                 _vfprintf
                   _vfpfcnvrt
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                         _fputs
                           _fputc
                             _putch
                         _strlen
                     _fputc
                       _putch
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Error_Settings
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Error_select_range
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
         _Maximum_Error_Select
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Number_Select
             _Number_Update
               _Command_Write
               _Display_Message
                 _Display_Character
                   _Data_Write
                 _strlen
               _Select_Page
               _sprintf
                 _vfprintf
                   _vfpfcnvrt
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                         _fputs
                           _fputc
                             _putch
                         _strlen
                     _fputc
                       _putch
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Minimum_Error_Select
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Number_Select
             _Number_Update
               _Command_Write
               _Display_Message
                 _Display_Character
                   _Data_Write
                 _strlen
               _Select_Page
               _sprintf
                 _vfprintf
                   _vfpfcnvrt
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                         _fputs
                           _fputc
                             _putch
                         _strlen
                     _fputc
                       _putch
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Settings_Menu
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
         _Toggle_Select
           _Command_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _Transmission_Settings
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Character
             _Data_Write
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _fputc
                   _putch
         _UART_Settings
           _Command_Write
           _Cursor_drawing
             _Command_Write
             _Display_Character
               _Data_Write
             _Select_Page
           _Display_Message
             _Display_Character
               _Data_Write
             _strlen
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _Select_Page
         _UART_Start
           _GLCD_Clear
             _Command_Write
             _Data_Write
             _Select_Page
           _UART1_Initialize
           _UART_Check_Comm_Start
             _UART1_Read
           _UART_Check_Command
             _UART1_Read
             _UART_Command_Mapper
               _GLCD_Clear
                 _Command_Write
                 _Data_Write
                 _Select_Page
               _UART_Clear_Line
                 _Command_Write
                 _Display_Message
                   _Display_Character
                     _Data_Write
                   _strlen
               _UART_Cursor
                 _Command_Write
                 _UART1_Read
               _UART_Line
                 _Command_Write
                 _UART1_Read
               _UART_Message
                 _Display_Character
                   _Data_Write
                 _Error_Check
                   _Display_Character
                     _Data_Write
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                 _Logging_Check
                   _Save_Data
                     _SD_SPI_IsMediaPresent
                     _f_mount
                       _find_volume
                         ___lldiv
                         ___lmul
                         _check_fs
                           _ld_word
                           _mem_cmp
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _disk_initialize
                           _SD_SPI_MediaInitialize
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_DelayMilliseconds *
                               _SPI1_ExchangeByte *
                             _SD_SendCmd *
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_Close *
                             _SPI1_ExchangeByte *
                             ___lmul *
                         _disk_status
                           _SD_SPI_IsMediaInitialized
                           _SD_SPI_IsMediaPresent
                           _SD_SPI_IsWriteProtected
                         _get_ldnumber
                         _ld_dword
                         _ld_word
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _get_ldnumber
                     _f_open
                       _clst2sect
                         ___lmul
                       _dir_register
                         _dir_alloc
                           _dir_next
                             _clst2sect
                               ___lmul
                             _create_chain
                               _get_fat
                                 _ld_dword
                                 _ld_word
                                 _move_window
                                   _disk_read
                                     _SD_SPI_SectorRead
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncReadTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                         _memset *
                                       _SPI1_Close *
                                   _sync_window
                                     _disk_write
                                       _SD_SPI_SectorWrite
                                         _SDFAST_open *
                                           _SPI1_Open
                                         _SDSLOW_open *
                                           _SPI1_Open
                                         _SD_SPI_AsyncWriteTasks *
                                           _SD_SendCmd
                                             _SPI1_ExchangeByte *
                                             _memcpy *
                                           _SPI1_ExchangeBlock *
                                           _SPI1_ExchangeByte *
                                         _SPI1_Close *
                               _put_fat
                                 _ld_dword
                                 _move_window
                                   _disk_read
                                     _SD_SPI_SectorRead
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncReadTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                         _memset *
                                       _SPI1_Close *
                                   _sync_window
                                     _disk_write
                                       _SD_SPI_SectorWrite
                                         _SDFAST_open *
                                           _SPI1_Open
                                         _SDSLOW_open *
                                           _SPI1_Open
                                         _SD_SPI_AsyncWriteTasks *
                                           _SD_SendCmd
                                             _SPI1_ExchangeByte *
                                             _memcpy *
                                           _SPI1_ExchangeBlock *
                                           _SPI1_ExchangeByte *
                                         _SPI1_Close *
                                 _st_dword
                                 _st_word
                             _dir_clear
                               _clst2sect
                                 ___lmul
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                               _mem_set
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                           _dir_sdi
                             _clst2sect
                               ___lmul
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _mem_cpy
                         _mem_set
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _disk_read
                         _SD_SPI_SectorRead
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncReadTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                             _memset *
                           _SPI1_Close *
                       _find_volume
                         ___lldiv
                         ___lmul
                         _check_fs
                           _ld_word
                           _mem_cmp
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _disk_initialize
                           _SD_SPI_MediaInitialize
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_DelayMilliseconds *
                               _SPI1_ExchangeByte *
                             _SD_SendCmd *
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_Close *
                             _SPI1_ExchangeByte *
                             ___lmul *
                         _disk_status
                           _SD_SPI_IsMediaInitialized
                           _SD_SPI_IsMediaPresent
                           _SD_SPI_IsWriteProtected
                         _get_ldnumber
                         _ld_dword
                         _ld_word
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _follow_path
                         _create_name
                           _chk_chr
                           _dbc_1st
                           _dbc_2nd
                           _mem_set
                         _dir_find
                           _dir_next
                             _clst2sect
                               ___lmul
                             _create_chain
                               _get_fat
                                 _ld_dword
                                 _ld_word
                                 _move_window
                                   _disk_read
                                     _SD_SPI_SectorRead
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncReadTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                         _memset *
                                       _SPI1_Close *
                                   _sync_window
                                     _disk_write
                                       _SD_SPI_SectorWrite
                                         _SDFAST_open *
                                           _SPI1_Open
                                         _SDSLOW_open *
                                           _SPI1_Open
                                         _SD_SPI_AsyncWriteTasks *
                                           _SD_SendCmd
                                             _SPI1_ExchangeByte *
                                             _memcpy *
                                           _SPI1_ExchangeBlock *
                                           _SPI1_ExchangeByte *
                                         _SPI1_Close *
                               _put_fat
                                 _ld_dword
                                 _move_window
                                   _disk_read
                                     _SD_SPI_SectorRead
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncReadTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                         _memset *
                                       _SPI1_Close *
                                   _sync_window
                                     _disk_write
                                       _SD_SPI_SectorWrite
                                         _SDFAST_open *
                                           _SPI1_Open
                                         _SDSLOW_open *
                                           _SPI1_Open
                                         _SD_SPI_AsyncWriteTasks *
                                           _SD_SendCmd
                                             _SPI1_ExchangeByte *
                                             _memcpy *
                                           _SPI1_ExchangeBlock *
                                           _SPI1_ExchangeByte *
                                         _SPI1_Close *
                                 _st_dword
                                 _st_word
                             _dir_clear
                               _clst2sect
                                 ___lmul
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                               _mem_set
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                           _dir_sdi
                             _clst2sect
                               ___lmul
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                           _mem_cmp
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _dir_sdi
                           _clst2sect
                             ___lmul
                           _get_fat
                             _ld_dword
                             _ld_word
                             _move_window
                               _disk_read
                                 _SD_SPI_SectorRead
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncReadTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                     _memset *
                                   _SPI1_Close *
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                         _ld_clust
                           _ld_word
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _ld_clust
                         _ld_word
                       _ld_dword
                       _mem_set
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                       _remove_chain
                         _get_fat
                           _ld_dword
                           _ld_word
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _put_fat
                           _ld_dword
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                           _st_dword
                           _st_word
                       _st_clust
                         _st_word
                       _st_dword
                     _f_sync
                       _disk_write
                         _SD_SPI_SectorWrite
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncWriteTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                           _SPI1_Close *
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                       _st_clust
                         _st_word
                       _st_dword
                       _st_word
                       _sync_fs
                         _disk_ioctl
                         _disk_write
                           _SD_SPI_SectorWrite
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncWriteTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                             _SPI1_Close *
                         _mem_set
                         _st_dword
                         _st_word
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                       _validate
                         _disk_status
                           _SD_SPI_IsMediaInitialized
                           _SD_SPI_IsMediaPresent
                           _SD_SPI_IsWriteProtected
                     _f_write
                       _clst2sect
                         ___lmul
                       _create_chain
                         _get_fat
                           _ld_dword
                           _ld_word
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                         _put_fat
                           _ld_dword
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                           _st_dword
                           _st_word
                       _disk_read
                         _SD_SPI_SectorRead
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncReadTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                             _memset *
                           _SPI1_Close *
                       _disk_write
                         _SD_SPI_SectorWrite
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncWriteTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                           _SPI1_Close *
                       _mem_cpy
                       _validate
                         _disk_status
                           _SD_SPI_IsMediaInitialized
                           _SD_SPI_IsMediaPresent
                           _SD_SPI_IsWriteProtected
                     _memset
                   _memset
                   _strcpy
                 _UART1_Read
               _UART_Message_Lenght
                 _UART1_Read
               _UART_Page
                 _Select_Page
                 _UART1_Read
           _UART_Print
             _Command_Write
             _GLCD_Clear
               _Command_Write
               _Data_Write
               _Select_Page
             _Select_Page
             _UART_Message
               _Display_Character
                 _Data_Write
               _Error_Check
                 _Display_Character
                   _Data_Write
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
               _Logging_Check
                 _Save_Data
                   _SD_SPI_IsMediaPresent
                   _f_mount
                     _find_volume
                       ___lldiv
                       ___lmul
                       _check_fs
                         _ld_word
                         _mem_cmp
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _disk_initialize
                         _SD_SPI_MediaInitialize
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_DelayMilliseconds *
                             _SPI1_ExchangeByte *
                           _SD_SendCmd *
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_Close *
                           _SPI1_ExchangeByte *
                           ___lmul *
                       _disk_status
                         _SD_SPI_IsMediaInitialized
                         _SD_SPI_IsMediaPresent
                         _SD_SPI_IsWriteProtected
                       _get_ldnumber
                       _ld_dword
                       _ld_word
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                     _get_ldnumber
                   _f_open
                     _clst2sect
                       ___lmul
                     _dir_register
                       _dir_alloc
                         _dir_next
                           _clst2sect
                             ___lmul
                           _create_chain
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                             _put_fat
                               _ld_dword
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                               _st_dword
                               _st_word
                           _dir_clear
                             _clst2sect
                               ___lmul
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                             _mem_set
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                           _get_fat
                             _ld_dword
                             _ld_word
                             _move_window
                               _disk_read
                                 _SD_SPI_SectorRead
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncReadTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                     _memset *
                                   _SPI1_Close *
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                         _dir_sdi
                           _clst2sect
                             ___lmul
                           _get_fat
                             _ld_dword
                             _ld_word
                             _move_window
                               _disk_read
                                 _SD_SPI_SectorRead
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncReadTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                     _memset *
                                   _SPI1_Close *
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _mem_cpy
                       _mem_set
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                     _disk_read
                       _SD_SPI_SectorRead
                         _SDFAST_open *
                           _SPI1_Open
                         _SDSLOW_open *
                           _SPI1_Open
                         _SD_SPI_AsyncReadTasks *
                           _SD_SendCmd
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_ExchangeBlock *
                           _SPI1_ExchangeByte *
                           _memset *
                         _SPI1_Close *
                     _find_volume
                       ___lldiv
                       ___lmul
                       _check_fs
                         _ld_word
                         _mem_cmp
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _disk_initialize
                         _SD_SPI_MediaInitialize
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_DelayMilliseconds *
                             _SPI1_ExchangeByte *
                           _SD_SendCmd *
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_Close *
                           _SPI1_ExchangeByte *
                           ___lmul *
                       _disk_status
                         _SD_SPI_IsMediaInitialized
                         _SD_SPI_IsMediaPresent
                         _SD_SPI_IsWriteProtected
                       _get_ldnumber
                       _ld_dword
                       _ld_word
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                     _follow_path
                       _create_name
                         _chk_chr
                         _dbc_1st
                         _dbc_2nd
                         _mem_set
                       _dir_find
                         _dir_next
                           _clst2sect
                             ___lmul
                           _create_chain
                             _get_fat
                               _ld_dword
                               _ld_word
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                             _put_fat
                               _ld_dword
                               _move_window
                                 _disk_read
                                   _SD_SPI_SectorRead
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncReadTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                       _memset *
                                     _SPI1_Close *
                                 _sync_window
                                   _disk_write
                                     _SD_SPI_SectorWrite
                                       _SDFAST_open *
                                         _SPI1_Open
                                       _SDSLOW_open *
                                         _SPI1_Open
                                       _SD_SPI_AsyncWriteTasks *
                                         _SD_SendCmd
                                           _SPI1_ExchangeByte *
                                           _memcpy *
                                         _SPI1_ExchangeBlock *
                                         _SPI1_ExchangeByte *
                                       _SPI1_Close *
                               _st_dword
                               _st_word
                           _dir_clear
                             _clst2sect
                               ___lmul
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                             _mem_set
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                           _get_fat
                             _ld_dword
                             _ld_word
                             _move_window
                               _disk_read
                                 _SD_SPI_SectorRead
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncReadTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                     _memset *
                                   _SPI1_Close *
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                         _dir_sdi
                           _clst2sect
                             ___lmul
                           _get_fat
                             _ld_dword
                             _ld_word
                             _move_window
                               _disk_read
                                 _SD_SPI_SectorRead
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncReadTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                     _memset *
                                   _SPI1_Close *
                               _sync_window
                                 _disk_write
                                   _SD_SPI_SectorWrite
                                     _SDFAST_open *
                                       _SPI1_Open
                                     _SDSLOW_open *
                                       _SPI1_Open
                                     _SD_SPI_AsyncWriteTasks *
                                       _SD_SendCmd
                                         _SPI1_ExchangeByte *
                                         _memcpy *
                                       _SPI1_ExchangeBlock *
                                       _SPI1_ExchangeByte *
                                     _SPI1_Close *
                         _mem_cmp
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _dir_sdi
                         _clst2sect
                           ___lmul
                         _get_fat
                           _ld_dword
                           _ld_word
                           _move_window
                             _disk_read
                               _SD_SPI_SectorRead
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncReadTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                   _memset *
                                 _SPI1_Close *
                             _sync_window
                               _disk_write
                                 _SD_SPI_SectorWrite
                                   _SDFAST_open *
                                     _SPI1_Open
                                   _SDSLOW_open *
                                     _SPI1_Open
                                   _SD_SPI_AsyncWriteTasks *
                                     _SD_SendCmd
                                       _SPI1_ExchangeByte *
                                       _memcpy *
                                     _SPI1_ExchangeBlock *
                                     _SPI1_ExchangeByte *
                                   _SPI1_Close *
                       _ld_clust
                         _ld_word
                     _get_fat
                       _ld_dword
                       _ld_word
                       _move_window
                         _disk_read
                           _SD_SPI_SectorRead
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncReadTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                               _memset *
                             _SPI1_Close *
                         _sync_window
                           _disk_write
                             _SD_SPI_SectorWrite
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncWriteTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                               _SPI1_Close *
                     _ld_clust
                       _ld_word
                     _ld_dword
                     _mem_set
                     _move_window
                       _disk_read
                         _SD_SPI_SectorRead
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncReadTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                             _memset *
                           _SPI1_Close *
                       _sync_window
                         _disk_write
                           _SD_SPI_SectorWrite
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncWriteTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                             _SPI1_Close *
                     _remove_chain
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _put_fat
                         _ld_dword
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                         _st_dword
                         _st_word
                     _st_clust
                       _st_word
                     _st_dword
                   _f_sync
                     _disk_write
                       _SD_SPI_SectorWrite
                         _SDFAST_open *
                           _SPI1_Open
                         _SDSLOW_open *
                           _SPI1_Open
                         _SD_SPI_AsyncWriteTasks *
                           _SD_SendCmd
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_ExchangeBlock *
                           _SPI1_ExchangeByte *
                         _SPI1_Close *
                     _move_window
                       _disk_read
                         _SD_SPI_SectorRead
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncReadTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                             _memset *
                           _SPI1_Close *
                       _sync_window
                         _disk_write
                           _SD_SPI_SectorWrite
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncWriteTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                             _SPI1_Close *
                     _st_clust
                       _st_word
                     _st_dword
                     _st_word
                     _sync_fs
                       _disk_ioctl
                       _disk_write
                         _SD_SPI_SectorWrite
                           _SDFAST_open *
                             _SPI1_Open
                           _SDSLOW_open *
                             _SPI1_Open
                           _SD_SPI_AsyncWriteTasks *
                             _SD_SendCmd
                               _SPI1_ExchangeByte *
                               _memcpy *
                             _SPI1_ExchangeBlock *
                             _SPI1_ExchangeByte *
                           _SPI1_Close *
                       _mem_set
                       _st_dword
                       _st_word
                       _sync_window
                         _disk_write
                           _SD_SPI_SectorWrite
                             _SDFAST_open *
                               _SPI1_Open
                             _SDSLOW_open *
                               _SPI1_Open
                             _SD_SPI_AsyncWriteTasks *
                               _SD_SendCmd
                                 _SPI1_ExchangeByte *
                                 _memcpy *
                               _SPI1_ExchangeBlock *
                               _SPI1_ExchangeByte *
                             _SPI1_Close *
                     _validate
                       _disk_status
                         _SD_SPI_IsMediaInitialized
                         _SD_SPI_IsMediaPresent
                         _SD_SPI_IsWriteProtected
                   _f_write
                     _clst2sect
                       ___lmul
                     _create_chain
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                       _put_fat
                         _ld_dword
                         _move_window
                           _disk_read
                             _SD_SPI_SectorRead
                               _SDFAST_open *
                                 _SPI1_Open
                               _SDSLOW_open *
                                 _SPI1_Open
                               _SD_SPI_AsyncReadTasks *
                                 _SD_SendCmd
                                   _SPI1_ExchangeByte *
                                   _memcpy *
                                 _SPI1_ExchangeBlock *
                                 _SPI1_ExchangeByte *
                                 _memset *
                               _SPI1_Close *
                           _sync_window
                             _disk_write
                               _SD_SPI_SectorWrite
                                 _SDFAST_open *
                                   _SPI1_Open
                                 _SDSLOW_open *
                                   _SPI1_Open
                                 _SD_SPI_AsyncWriteTasks *
                                   _SD_SendCmd
                                     _SPI1_ExchangeByte *
                                     _memcpy *
                                   _SPI1_ExchangeBlock *
                                   _SPI1_ExchangeByte *
                                 _SPI1_Close *
                         _st_dword
                         _st_word
                     _disk_read
                       _SD_SPI_SectorRead
                         _SDFAST_open *
                           _SPI1_Open
                         _SDSLOW_open *
                           _SPI1_Open
                         _SD_SPI_AsyncReadTasks *
                           _SD_SendCmd
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_ExchangeBlock *
                           _SPI1_ExchangeByte *
                           _memset *
                         _SPI1_Close *
                     _disk_write
                       _SD_SPI_SectorWrite
                         _SDFAST_open *
                           _SPI1_Open
                         _SDSLOW_open *
                           _SPI1_Open
                         _SD_SPI_AsyncWriteTasks *
                           _SD_SendCmd
                             _SPI1_ExchangeByte *
                             _memcpy *
                           _SPI1_ExchangeBlock *
                           _SPI1_ExchangeByte *
                         _SPI1_Close *
                     _mem_cpy
                     _validate
                       _disk_status
                         _SD_SPI_IsMediaInitialized
                         _SD_SPI_IsMediaPresent
                         _SD_SPI_IsWriteProtected
                   _memset
                 _memset
                 _strcpy
               _UART1_Read
       _f_close
         _f_sync
           _disk_write
             _SD_SPI_SectorWrite
               _SDFAST_open *
                 _SPI1_Open
               _SDSLOW_open *
                 _SPI1_Open
               _SD_SPI_AsyncWriteTasks *
                 _SD_SendCmd
                   _SPI1_ExchangeByte *
                   _memcpy *
                 _SPI1_ExchangeBlock *
                 _SPI1_ExchangeByte *
               _SPI1_Close *
           _move_window
             _disk_read
               _SD_SPI_SectorRead
                 _SDFAST_open *
                   _SPI1_Open
                 _SDSLOW_open *
                   _SPI1_Open
                 _SD_SPI_AsyncReadTasks *
                   _SD_SendCmd
                     _SPI1_ExchangeByte *
                     _memcpy *
                   _SPI1_ExchangeBlock *
                   _SPI1_ExchangeByte *
                   _memset *
                 _SPI1_Close *
             _sync_window
               _disk_write
                 _SD_SPI_SectorWrite
                   _SDFAST_open *
                     _SPI1_Open
                   _SDSLOW_open *
                     _SPI1_Open
                   _SD_SPI_AsyncWriteTasks *
                     _SD_SendCmd
                       _SPI1_ExchangeByte *
                       _memcpy *
                     _SPI1_ExchangeBlock *
                     _SPI1_ExchangeByte *
                   _SPI1_Close *
           _st_clust
             _st_word
           _st_dword
           _st_word
           _sync_fs
             _disk_ioctl
             _disk_write
               _SD_SPI_SectorWrite
                 _SDFAST_open *
                   _SPI1_Open
                 _SDSLOW_open *
                   _SPI1_Open
                 _SD_SPI_AsyncWriteTasks *
                   _SD_SendCmd
                     _SPI1_ExchangeByte *
                     _memcpy *
                   _SPI1_ExchangeBlock *
                   _SPI1_ExchangeByte *
                 _SPI1_Close *
             _mem_set
             _st_dword
             _st_word
             _sync_window
               _disk_write
                 _SD_SPI_SectorWrite
                   _SDFAST_open *
                     _SPI1_Open
                   _SDSLOW_open *
                     _SPI1_Open
                   _SD_SPI_AsyncWriteTasks *
                     _SD_SendCmd
                       _SPI1_ExchangeByte *
                       _memcpy *
                     _SPI1_ExchangeBlock *
                     _SPI1_ExchangeByte *
                   _SPI1_Close *
           _validate
             _disk_status
               _SD_SPI_IsMediaInitialized
               _SD_SPI_IsMediaPresent
               _SD_SPI_IsWriteProtected
         _validate
           _disk_status
             _SD_SPI_IsMediaInitialized
             _SD_SPI_IsMediaPresent
             _SD_SPI_IsWriteProtected
       _f_mount
         _find_volume
           ___lldiv
           ___lmul
           _check_fs
             _ld_word
             _mem_cmp
             _move_window
               _disk_read
                 _SD_SPI_SectorRead
                   _SDFAST_open *
                     _SPI1_Open
                   _SDSLOW_open *
                     _SPI1_Open
                   _SD_SPI_AsyncReadTasks *
                     _SD_SendCmd
                       _SPI1_ExchangeByte *
                       _memcpy *
                     _SPI1_ExchangeBlock *
                     _SPI1_ExchangeByte *
                     _memset *
                   _SPI1_Close *
               _sync_window
                 _disk_write
                   _SD_SPI_SectorWrite
                     _SDFAST_open *
                       _SPI1_Open
                     _SDSLOW_open *
                       _SPI1_Open
                     _SD_SPI_AsyncWriteTasks *
                       _SD_SendCmd
                         _SPI1_ExchangeByte *
                         _memcpy *
                       _SPI1_ExchangeBlock *
                       _SPI1_ExchangeByte *
                     _SPI1_Close *
           _disk_initialize
             _SD_SPI_MediaInitialize
               _SDFAST_open *
                 _SPI1_Open
               _SDSLOW_open *
                 _SPI1_Open
               _SD_SPI_DelayMilliseconds *
                 _SPI1_ExchangeByte *
               _SD_SendCmd *
                 _SPI1_ExchangeByte *
                 _memcpy *
               _SPI1_Close *
               _SPI1_ExchangeByte *
               ___lmul *
           _disk_status
             _SD_SPI_IsMediaInitialized
             _SD_SPI_IsMediaPresent
             _SD_SPI_IsWriteProtected
           _get_ldnumber
           _ld_dword
           _ld_word
           _move_window
             _disk_read
               _SD_SPI_SectorRead
                 _SDFAST_open *
                   _SPI1_Open
                 _SDSLOW_open *
                   _SPI1_Open
                 _SD_SPI_AsyncReadTasks *
                   _SD_SendCmd
                     _SPI1_ExchangeByte *
                     _memcpy *
                   _SPI1_ExchangeBlock *
                   _SPI1_ExchangeByte *
                   _memset *
                 _SPI1_Close *
             _sync_window
               _disk_write
                 _SD_SPI_SectorWrite
                   _SDFAST_open *
                     _SPI1_Open
                   _SDSLOW_open *
                     _SPI1_Open
                   _SD_SPI_AsyncWriteTasks *
                     _SD_SendCmd
                       _SPI1_ExchangeByte *
                       _memcpy *
                     _SPI1_ExchangeBlock *
                     _SPI1_ExchangeByte *
                   _SPI1_Close *
         _get_ldnumber
     _Display_Message
       _Display_Character
         _Data_Write
       _strlen
     _GLCD_Clear
       _Command_Write
       _Data_Write
       _Select_Page
     _Select_Page
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     455      69       13.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     51      E7       7       90.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E6      58        0.0%
DATA                 0      0     63B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 11 18:03:31 2021

                SD_SPI_SectorWrite@result 003B                         _SPI1_ExchangeByte A652  
                             get_fat@clst 0078                  SD_SPI_SectorWrite@status 003C  
           SD_SPI_MediaInitialize@timeout 0052                        _SPI1_ExchangeBlock 9EFE  
                            create_name@c 0020                              create_name@d 0015  
                            create_name@i 001A                              create_name@p 0018  
                        get_ldnumber@path 0001            SD_SPI_MediaInitialize@response 004D  
                                      l25 A7B8                                        l28 A7C0  
                                      l60 92A6                                        l63 A59C  
                                      l72 9FC2                                        l57 A4F8  
                                      l66 9A18                                        l83 95BC  
                                      l84 95C4                                        l92 9BFE  
                                      l77 A530                                        l96 A7B0  
                      ?_SPI1_ExchangeByte 0001                       UART_Message@message 01C9  
                     ___wmul@multiplicand 0003                            ??_dir_register 0060  
                 ??_SD_SPI_IsMediaPresent 0001                          disk_write@sector 004E  
                           create_name@dp 0009                             create_name@ni 0016  
                           create_name@si 001E                            create_chain@cs 00B0  
                          create_chain@fs 00AE                                       l100 A7A6  
                                     l103 6C6C                                       l200 2D74  
                                     l120 666E                                       l114 8ECA  
                                     l130 4EBA                                       l108 6C6E  
                                     l132 4AEE                                       l124 8A9C  
                                     l221 3190                                       l117 666C  
                                     l150 3230                                       l222 31D0  
                                     l230 7B78                                       l127 4AE2  
                                     l311 6FC0                                       l303 9994  
                                     l400 75E0                                       l224 31C8  
                                     l145 4ECA                                       l321 8396  
                                     l331 4174                                       l307 A2D6  
                                     l500 16A6                                       l253 55CC  
                                     l501 1692                                       l406 7A20  
                                     l166 36A6                                       l247 5702  
                                     l175 621A                                       l416 0D4C  
                                     l280 4998                                       l272 4A6E  
                                     l169 3750                                       l450 062C  
                                     l602 A082                                       l515 1D8C  
                                     l507 18B0                                       l380 5F1E  
                                     l461 0AD4                                       l509 188C  
                                     l198 31E0                                       l391 75EE  
                                     l456 07A6                                       l472 8142  
                                     l560 158A                                       l482 856E  
                                     l298 775A                                       l378 5F34  
                                     l299 775C                                       l387 5FE0  
                                     l708 806A                                       l717 8020  
                                     l709 7FE4                                       l725 7F3A  
                                     l477 8176                 SD_SPI_AsyncReadTasks@info 0022  
                                     l734 7EF0                                       l726 7EB4  
                                     l750 A024                                       l742 A7CA  
                                     l494 1D8C                                       l670 A5A4  
                                     l478 8190                                       l823 5320  
                                     l639 9A94                                       l671 A5CE  
                                     l567 13C4                                       l648 A1E2  
                                     l568 10C4                                       l825 4F22  
                                     l657 9CE6                                       l489 1DB4  
                                     l666 9C72                                       l907 458A  
                                     l739 A71C                                       l916 45EA  
                                     l756 2572                                       l596 6444  
                                     l589 1544                                       l918 4600  
                                     l862 2C10                                       l766 1EB8  
                                     l696 A7CE                                       l793 213C  
                                     l890 2B16                                       l883 2A40  
                                     l796 21AA                                       l899 4178  
                     ?_SPI1_ExchangeBlock 0001                                       _abs A43E  
                                     _pad 9126                       ??_SPI1_ExchangeByte 0001  
                            disk_read@res 0054                            ??_create_chain 009D  
                                     tosl 003FFD                                       wreg 003FE8  
                 SPI1_ExchangeBlock@block 0001                SD_SPI_AsyncReadTasks@bData 002D  
                          create_name@sfn 001C                           create_chain@ncl 00AA  
                         create_chain@obj 0097                           create_chain@scl 00A6  
                         create_chain@res 00A5                               ld_clust@dir 000A  
                          fp__SDFAST_open 0000                                      l1013 9350  
                                    l1120 A3F8                                      l1032 A79C  
                                    l1123 A71E                                      l1035 A704  
                                    ?_abs 0013                                      l1126 A732  
                                    l1302 A78E                                      l1062 A6D2  
                                    l1151 A6B8                                      l1143 A136  
                                    l1311 A650                                      l1072 A660  
                                    l1080 9F20                                      l1305 A6EC  
                                    l1146 A4A8                                      l1154 A696  
                                    l2202 715E                                      l1066 8656  
                                    l1074 A670                                      l1403 5A42  
                                    l1075 A674                                      l1148 A4BC  
                                    l1172 9AE4                                      l1500 A62A  
                                    l1084 9F60                                      l1308 A76E  
                                    l1165 9D58                                      l1173 9B0E  
                                    l1421 8C4A                                      l2205 A568  
                                    l2213 A234                                      l1069 A7C6  
                                    l1261 8486                                      l1333 9EDA  
                                    l1341 90F0                                      l2310 9E90  
                                    l2222 A0DC                                      l1326 905E  
                                    l1334 9EFC                                      l1159 9DC4  
                                    l2311 9E98                                      l1415 8D20  
                                    l1511 9E1E                                      l2304 6AA8  
                                    l1424 9800                                      l1512 9E2E  
                                    l1409 7E0A                                      l1433 8DF6  
                                    l1353 A600                                      l1337 9116  
                                    l1442 93F6                                      l2330 8B74  
                                    l2226 72EE                                      l1290 A320  
                                    l1362 9522                                      l1266 95CA  
                                    l2315 A474                                      l1371 89C4  
                                    l1427 88EA                                      l1452 8734  
                                    l1436 7CC2                                      l1348 9124  
                                    l2341 A7D0                                      l1365 9530  
                                    l1614 7476                                      l2318 A47C  
                                    l1278 9772                                      l1286 8F96  
                                    l1534 949A                                      l1470 3CBC  
                                    l2271 91EA                                      l2239 A286  
                                    l1527 948A                                      l1368 96E4  
                                    l1296 9888                                      l1481 9B88  
                                    l2353 A18E                                      l1449 8726  
                                    l1377 8810                                      l2338 A43C  
                                    l2266 916C                                      l1386 6E20  
                                    l1627 78C0                                      l1299 A77E  
                                    l2347 A3B0                                      l1396 5A32  
                                    l1492 6894                                      l2269 91AE  
                                    l2277 5AE4                                      l1389 58A6  
                                    l1485 6678                                      l1478 9910  
                                    l2279 5AEC                                      l2199 7156  
                                    l1488 6782                                      l2297 5D26  
                                    l1489 67E8                                      l1497 A758  
                                    l1579 829C                                      ?_pad 0011  
                                    l7121 A0BE                                      l7113 A084  
                                    l7201 45B8                                      l8001 2E6C  
                                    l7131 8582                                      l7115 A098  
                                    l7123 A0C2                                      l7203 45EC  
                                    l7211 9F10                                      l8011 2EF8  
                                    l8003 2E84                                      l7141 864E  
                                    l7133 85EC                                      l7125 A654  
                                    l7117 A0A8                                      l7213 9F30  
                                    l7301 285C                                      l8101 9FDC  
                                    l8021 2F68                                      l8013 2F22  
                                    l8005 2EA4                                      l6501 92A8  
                                    l8111 958A                                      l7135 85F0  
                                    l7223 A7BA                                      l7127 A65A  
                                    l7119 A0AC                                      l7151 4196  
                                    l7215 9F42                                      l7207 9EFE  
                                    l7311 28E0                                      l7303 288A  
                                    l8103 A00A                                      l8023 2F74  
                                    l8015 2F32                                      l8007 2EBA  
                                    l6511 932A                                      l6503 92C4  
                                    l8113 958E                                      l8105 9532  
                                    l7137 8616                                      l7145 8654  
                                    l7129 8572                                      l7161 4296  
                                    l7153 41DE                                      l7209 9F0A  
                                    l7217 9F46                                      l7401 2B70  
                                    l7313 28F0                                      l7305 28CA  
                                    l7241 25CA                                      l7233 257E  
                                    l8041 302A                                      l8025 2F9E  
                                    l8033 2FCC                                      l8009 2EDE  
                                    l8017 2F42                                      l8121 9B8E  
                                    l6521 A6EE                                      l6513 9330  
                                    l6505 9324                                      l8115 9592  
                                    l8107 9542                                      l7139 864C  
                                    l7219 A7B2                                      l7171 435C  
                                    l7163 42E4                                      l7155 420C  
                                    l7403 2B72                                      l7331 2988  
                                    l7323 2906                                      l7307 28DA  
                                    l7251 264C                                      l7243 25CE  
                                    l7235 258C                                      l7227 2574  
                                    l8051 30A2                                      l8043 304A  
                                    l8035 2FF8                                      l8027 2FAE  
                                    l8019 2F58                                      l8211 5650  
                                    l8123 9B92                                      l8131 A7A8  
                                    l9003 60A2                                      l6515 9332  
                                    l6507 9326                                      l6523 A6BA  
                                    l8117 95AA                                      l8109 9542  
                                    l7181 43BA                                      l7173 4362  
                                    l7165 42F6                                      l7157 423A  
                                    l7149 417A                                      l7501 4EE4  
                                    l7405 2BA0                                      l7341 2A2C  
                                    l7333 2998                                      l7325 291E  
                                    l7261 26BC                                      l7253 265C  
                                    l7245 2604                                      l7237 25A8  
                                    l7229 2578                                      l8061 312C  
                                    l8053 30B2                                      l8301 4968  
                                    l8205 55BC                                      l8125 9BB6  
                                    l8133 A7A8                                      l8141 A79E  
                                    l9101 5ED4                                      l9005 60CE  
                                    l6517 9334                                      l6509 9328  
                                    l6525 A6D0                                      l7191 446A  
                                    l7183 43EE                                      l7175 4372  
                                    l7167 4324                                      l7159 4268  
                                    l7423 7160                                      l7511 4F6A  
                                    l7503 4F00                                      l7407 2BB0  
                                    l7351 2A70                                      l7335 29AE  
                                    l7327 2928                                      l7263 26CC  
                                    l7271 26E2                                      l7247 261A  
                                    l7255 2672                                      l7239 25C2  
                                    l7415 2BBA                                      l8063 317A  
                                    l8055 30C8                                      l8039 3014  
                                    l8071 7A3E                                      l8311 4A00  
                                    l8223 4602                                      l8207 55EA  
                                    l8151 5322                                      l8127 9BE6  
                                    l8119 9B8A                                      l8143 A79E  
                                    l9111 5F16                                      l9103 5EE6  
                                    l9031 616A                                      l9023 6126  
                                    l9015 6104                                      l6519 9336  
                                    l7193 447A                                      l7185 4420  
                                    l7177 4384                                      l7169 432C  
                                    l7441 7272                                      l7433 71C8  
                                    l7601 5220                                      l7513 4F6E  
                                    l7505 4F10                                      l7353 2A80  
                                    l7337 29BE                                      l7329 2956  
                                    l7281 2720                                      l7273 26F2  
                                    l7265 26DC                                      l7257 2684  
                                    l7249 2626                                      l8065 31A4  
                                    l8057 30F8                                      l8049 3072  
                                    l8081 7AB6                                      l8313 4A24  
                                    l8233 467A                                      l8225 461A  
                                    l8217 5676                                      l8209 562C  
                                    l8161 5352                                      l9121 5F64  
                                    l9113 5F2C                                      l9105 5EF4  
                                    l9033 61B8                                      l9025 6156  
                                    l9017 6120                                      l9009 60EA  
                                    l9041 A288                                      l7195 4490  
                                    l7187 4430                                      l7179 43B6  
                                    l7451 72D8                                      l7435 7228  
                                    l7427 717E                                      l7611 5268  
                                    l7603 524E                                      l7531 4FE0  
                                    l7523 4FBA                                      l7515 4F94  
                                    l7507 4F3C                                      l7339 29D0  
                                    l7371 2A9E                                      l7291 27CE  
                                    l7283 2752                                      l7259 2696  
                                    l8411 2078                                      l8403 2046  
                                    l8331 1DB6                                      l8323 A706  
                                    l9211 0254                                      l9203 01CE  
                                    l9131 0028                                      l8067 31B4  
                                    l8059 3108                                      l8091 7B04  
                                    l8083 7AC4                                      l8075 7A44  
                                    l8315 4A6C                                      l8243 4696  
                                    l8227 4658                                      l8219 5700  
                                    l8171 53E4                                      l8163 5380  
                                    l8155 533A                                      l9051 82D0  
                                    l9123 5FDE                                      l9035 61DE  
                                    l9043 A2A0                                      l7189 4460  
                                    l7197 4498                                      l7453 72DC  
                                    l7445 728C                                      l7429 7190  
                                    l7621 52C4                                      l7613 5278  
                                    l7605 525E                                      l7541 5054  
                                    l7533 4FF8                                      l7525 4FCC  
                                    l7517 4FA4                                      l7509 4F40  
                                    l7381 2AD4                                      l7349 2A42  
                                    l7293 27D6                                      l7285 2780  
                                    l7277 26F8                                      l7461 7E34  
                                    l7701 6BC0                                      l8501 2498  
                                    l8421 20C6                                      l8413 209E  
                                    l8405 204A                                      l8341 1E18  
                                    l8333 1DD4                                      l9221 02B0  
                                    l9213 028E                                      l9205 0204  
                                    l9141 006E                                      l9133 0038  
                                    l8093 7B4E                                      l8085 7ACC  
                                    l8077 7A70                                      l8069 7A22  
                                    l8309 49BE                                      l8261 4854  
                                    l8245 46C4                                      l8237 467A  
                                    l8173 5400                                      l9061 8382  
                                    l9053 82E0                                      l9117 5F46  
                                    l9109 5F06                                      l9037 6218  
                                    l9045 A2BE                                      l7199 44CA  
                                    l7447 72C0                                      l7439 7242  
                                    l7615 528E                                      l7543 5064  
                                    l7535 5002                                      l7519 4FB4  
                                    l7455 A7C2                                      l7711 9C7E  
                                    l7383 2B06                                      l7359 2A8A  
                                    l7295 2812                                      l7287 2798  
                                    l7279 270E                                      l7471 7EB6  
                                    l7463 7E56                                      l7703 6BDE  
                                    l8511 250C                                      l8503 24D0  
                                    l8431 2100                                      l8423 20C8  
                                    l8415 20AC                                      l8407 205E  
                                    l8351 1E58                                      l8343 1E1E  
                                    l8335 1DD6                                      l8319 A7CC  
                                    l8327 A7C8                                      l9231 0336  
                                    l9223 02B6                                      l9207 0220  
                                    l9151 00AA                                      l9127 0000  
                                    l8087 7AD8                                      l8079 7A96  
                                    l8271 487C                                      l8247 46FC  
                                    l8255 477C                                      l8239 4690  
                                    l8191 5550                                      l8167 5386  
                                    l8159 533A                                      l9055 8314  
                                    l9063 8394                                      l9047 829E  
                                    l9071 5D64                                      l7449 72D2  
                                    l7617 5290                                      l7537 5032  
                                    l7721 9CE4                                      l7713 9CB2  
                                    l7385 2B18                                      l7377 2AB2  
                                    l7297 2826                                      l7289 27B0  
                                    l7481 7EEC                                      l7473 7EC4  
                                    l7465 7E72                                      l7457 7E0C  
                                    l7641 9C46                                      l7705 6C68  
                                    l8097 9FC6                                      l8513 2510  
                                    l8505 24E6                                      l8441 213E  
                                    l8433 2110                                      l8425 20CE  
                                    l8417 20B6                                      l8409 2072  
                                    l8361 1EBA                                      l8353 1E5E  
                                    l8345 1E26                                      l8337 1E12  
                                    l9401 0D34                                      l9321 0740  
                                    l9313 06D4                                      l9305 065E  
                                    l9233 033A                                      l9225 02EE  
                                    l9209 0234                                      l9217 0296  
                                    l9153 00C0                                      l9145 0074  
                                    l9137 003E                                      l9129 0014  
                                    l7801 A502                                      l8089 7AE2  
                                    l8281 48D0                                      l8273 48A6  
                                    l8265 485A                                      l8257 47F8  
                                    l8249 4764                                      l8193 556E  
                                    l8185 54A6                                      l8177 5424  
                                    l8169 53CE                                      l9057 8324  
                                    l9049 82B6                                      l8601 994C  
                                    l9081 5E0C                                      l9073 5D88  
                                    l8531 8ACC                                      l7731 A4F0  
                                    l7619 52BE                                      l7571 50FE  
                                    l7539 5042                                      l7627 52CA  
                                    l7715 9CBA                                      l7387 2B46  
                                    l7379 2ACA                                      l7299 282E  
                                    l7483 7EF2                                      l7475 7ED4  
                                    l7467 7EAE                                      l7459 7E1C  
                                    l7635 9C02                                      l8099 9FD6  
                                    l8515 253C                                      l8507 24F8  
                                    l8451 21B4                                      l8443 216A  
                                    l8435 2122                                      l8427 20D4  
                                    l8419 20C0                                      l8371 1F36  
                                    l8363 1EE8                                      l8355 1E84  
                                    l8347 1E28                                      l9331 0786  
                                    l9323 0744                                      l9315 0724  
                                    l9307 06B2                                      l9243 037C  
                                    l9235 034A                                      l9227 0304  
                                    l9219 029E                                      l9171 011A  
                                    l9163 00F2                                      l9155 00CE  
                                    l9147 008C                                      l9139 005C  
                                    l7811 8A14                                      l7803 A514  
                                    l8283 4910                                      l8275 48B8  
                                    l8267 4876                                      l8259 4838  
                                    l8179 543A                                      l8187 54DA  
                                    l9059 8350                                      l8611 6E5C  
                                    l8603 9984                                      l9091 5E90  
                                    l9075 5DBE                                      l9083 5E22  
                                    l9067 5D28                                      l9411 8082  
                                    l6595 A790                                      l9501 7870  
                                    l8533 8AEA                                      l8525 8A9E  
                                    l7581 51DC                                      l7573 5118  
                                    l7565 5092                                      l7549 506A  
                                    l7493 4ECC                                      l7661 7F86  
                                    l7709 9C76                                      l7485 7F1E  
                                    l7637 9C0A                                      l7645 9C4E  
                                    l8509 24FA                                      l8461 2214  
                                    l8453 21DA                                      l8437 2134  
                                    l8429 20FA                                      l8373 1F3C  
                                    l8365 1EEA                                      l8357 1E94  
                                    l8349 1E56                                      l9341 0892  
                                    l9333 07A2                                      l9325 0762  
                                    l9261 0410                                      l9245 038C  
                                    l9229 0310                                      l9237 0364  
                                    l9181 0154                                      l9173 0130  
                                    l9157 00DE                                      l9149 008E  
                                    l7821 4A88                                      l7741 A56A  
                                    l7901 335C                                      l7805 A518  
                                    l8285 4928                                      l8197 5574  
                                    l8189 5524                                      l8541 9F84  
                                    l8701 3E8A                                      l8613 6E6C  
                                    l9085 5E44                                      l9077 5DC4  
                                    l9069 5D40                                      l9421 8152  
                                    l9413 80A0                                      l9431 72F4  
                                    l9503 7880                                      l8535 8B20  
                                    l8527 8AB0                                      l9511 9136  
                                    l7583 51EC                                      l7575 5154  
                                    l7567 50AA                                      l7559 507E  
                                    l7495 4ED0                                      l7671 7FF4  
                                    l7663 7FA2                                      l7655 7F3C  
                                    l7719 9CC2                                      l7399 2B5A  
                                    l7479 7EDC                                      l7487 7F22  
                                    l7647 9C70                                      l7639 9C3E  
                                    l8519 2542                                      l8463 221A  
                                    l8471 224C                                      l8455 21E0  
                                    l8439 213A                                      l8391 1FEE  
                                    l8375 1F3E                                      l8367 1F00  
                                    l8383 1F6E                                      l8359 1EA6  
                                    l7735 91EC                                      l9343 08A4  
                                    l9327 0766                                      l9263 0436  
                                    l9255 03BA                                      l9239 0376  
                                    l9191 0196                                      l9175 013E  
                                    l9159 00EC                                      l9167 00F8  
                                    l7823 4AA4                                      l7751 9996  
                                    l7743 A57C                                      l7911 3418  
                                    l7903 336C                                      l7815 8A28  
                                    l7807 89C6                                      l8295 4948  
                                    l8199 558E                                      l8543 9FA2  
                                    l8711 3F1A                                      l8703 3E9C  
                                    l8631 6F26                                      l8623 6EBC  
                                    l8607 6E22                                      l9095 5EA4  
                                    l9087 5E54                                      l9079 5DE8  
                                    l9423 815E                                      l9415 80D4  
                                    l9407 806C                                      l9441 7354  
                                    l9433 7302                                      l9505 78A0  
                                    l8529 8AC2                                      l9521 918C  
                                    l9513 914A                                      l7729 A4BE  
                                    l7577 5168                                      l7569 50C2  
                                    l7681 8022                                      l7673 8004  
                                    l7665 7FDE                                      l7657 7F4C  
                                    l7489 7F38                                      l8481 2292  
                                    l8465 221C                                      l8457 21F0  
                                    l8449 21AC                                      l8385 1F94  
                                    l8369 1F26                                      l8801 74D2  
                                    l7737 9296                                      l9329 0782  
                                    l9273 0492                                      l9265 0454  
                                    l9257 03DA                                      l9249 0392  
                                    l9169 0108                                      l7841 4C34  
                                    l7833 4B7C                                      l7825 4ACE  
                                    l7761 99DE                                      l7753 99A8  
                                    l7745 A580                                      l7921 3522  
                                    l7913 3426                                      l7905 33D0  
                                    l7809 89D2                                      l8289 492E  
                                    l8545 9FA6                                      l8713 3F2C  
                                    l8705 3EB2                                      l8633 6F4C  
                                    l8625 6EE4                                      l8617 6E74  
                                    l8609 6E3A                                      l9097 5EB4  
                                    l9089 5E78                                      l9601 1656  
                                    l8553 A5AA                                      l9425 818E  
                                    l9417 8110                                      l9409 8070  
                                    l9451 739E                                      l9443 7358  
                                    l9435 7322                                      l9531 A43E  
                                    l9523 9190                                      l9515 9158  
                                    l7579 51C4                                      l7595 51F8  
                                    l7499 4ED6                                      l7683 804E  
                                    l7659 7F64                                      l7691 6AAA  
                                    l7771 8DFC                                      l8491 22CA  
                                    l8483 22A2                                      l8459 2202  
                                    l8387 1FCA                                      l8811 7506  
                                    l9371 0A9E                                      l9355 08EE  
                                    l9339 07BA                                      l9275 04D0  
                                    l9267 0470                                      l9259 03F0  
                                    l9187 0166                                      l9179 0144  
                                    l7851 4CCA                                      l7843 4C7C  
                                    l7835 4BBC                                      l7827 4AF6  
                                    l7819 4A70                                      l7763 99F0  
                                    l7755 99AC                                      l7747 A586  
                                    l7931 3604                                      l7915 3466  
                                    l8571 7642                                      l8563 75F0  
                                    l8547 9FAA                                      l8539 9F62  
                                    l8731 3FCA                                      l8723 3F6C  
                                    l8715 3F42                                      l8707 3EB6  
                                    l8651 3CFE                                      l8627 6EF4  
                                    l8619 6EA8                                      l9099 5EC4  
                                    l9611 16B8                                      l9603 1668  
                                    l8555 A5CC                                      l9419 813E  
                                    l9461 740E                                      l9453 73AC  
                                    l9445 7364                                      l9437 7326  
                                    l9429 72F0                                      l9533 A458  
                                    l9525 91BE                                      l9517 9164  
                                    l9509 9126                                      l7597 5208  
                                    l7677 800C                                      l7669 7FE6  
                                    l7685 8052                                      l7693 6AAE  
                                    l7781 8E9E                                      l7773 8E2E  
                                    l8493 22D4                                      l8485 22B4  
                                    l8477 2254                                      l8397 1FF6  
                                    l8389 1FD8                                      l8821 759A  
                                    l8813 750E                                      l8805 74D2  
                                    l9381 0B84                                      l9365 0990  
                                    l9357 0924                                      l9349 08CA  
                                    l9293 05D8                                      l9285 0578  
                                    l9277 04FC                                      l9197 01AC  
                                    l9189 0176                                      l9541 84B4  
                                    l7861 4E18                                      l7845 4C8A  
                                    l7837 4BC0                                      l7829 4B08  
                                    l7765 99F4                                      l7757 99BA  
                                    l7749 A598                                      l7925 3536  
                                    l7917 3492                                      l7909 33E4  
                                    l8581 76F4                                      l8573 7676  
                                    l8565 7608                                      l8733 3FEE  
                                    l8717 3F56                                      l8725 3F80  
                                    l8709 3EE6                                      l8661 3D6E  
                                    l8653 3D0E                                      l8645 3CBE  
                                    l8637 6F92                                      l8629 6EFC  
                                    l9701 1C18                                      l9621 1766  
                                    l9613 16C8                                      l9605 1670  
                                    l8549 A5A0                                      l9463 7420  
                                    l9455 73BE                                      l9447 7382  
                                    l9439 7334                                      l9527 91D2  
                                    l9519 9178                                      l7599 521E  
                                    l7687 8068                                      l7679 801C  
                                    l7695 6ACA                                      l7783 8EA2  
                                    l7775 8E3C                                      l8831 78C2  
                                    l7791 9DD6                                      l8495 22EA  
                                    l8487 22B8                                      l8479 2290  
                                    l8399 2032                                      l8903 A1BE  
                                    l8823 75B4                                      l8815 7530  
                                    l8807 74E2                                      l9391 0C28  
                                    l9383 0B96                                      l9367 09F0  
                                    l9359 096E                                      l9295 05F6  
                                    l9287 05A2                                      l9279 051A  
                                    l9199 01B4                                      l9551 84FA  
                                    l9535 8488                                      l7855 4D44  
                                    l7847 4C9A                                      l7767 9A02  
                                    l7759 99CC                                      l7927 357C  
                                    l7919 34B8                                      l7943 3710  
                                    l8591 7744                                      l8567 762A  
                                    l8743 403C                                      l8735 3FF2  
                                    l8727 3F90                                      l8671 3DC6  
                                    l8663 3D80                                      l8655 3D16  
                                    l8647 3CD6                                      l8639 6FAC  
                                    l9711 1D26                                      l9703 1C2A  
                                    l9631 17F4                                      l9623 1778  
                                    l9615 170E                                      l9607 1688  
                                    l8913 A138                                      l9457 73EC  
                                    l9449 738A                                      l9465 7426  
                                    l9481 7794                                      l9473 775E  
                                    l7697 6B24                                      l7777 8E4C  
                                    l7785 8EC8                                      l7769 8DF8  
                                    l8841 794C                                      l8833 78F0  
                                    l7793 9DE4                                      l8497 2376  
                                    l8489 22BA                                      l8905 A1E0  
                                    l8825 75BC                                      l8817 7552  
                                    l8809 74F4                                      l9393 0C5E  
                                    l9385 0BB8                                      l9377 0B30  
                                    l9369 0A02                                      l9297 060C  
                                    l9553 850C                                      l9545 84BA  
                                    l9537 8490                                      l7857 4D96  
                                    l7849 4CBA                                      l7865 4E7C  
                                    l7937 3618                                      l7929 3592  
                                    l7881 3238                                      l7945 374E  
                                    l7873 31E2                                      l7961 2C66  
                                    l8593 7756                                      l8585 7714  
                                    l8577 768A                                      l8569 763A  
                                    l8761 40B8                                      l8745 404E  
                                    l8737 400A                                      l8729 3FB2  
                                    l8681 3E12                                      l8673 3DD8  
                                    l8665 3D9A                                      l8657 3D46  
                                    l8649 3CE2                                      l9713 1D82  
                                    l9705 1C66                                      l9641 189C  
                                    l9633 1814                                      l9625 178E  
                                    l9617 1720                                      l9609 16A0  
                                    l9801 123C                                      l9721 0D4E  
                                    l8915 A144                                      l9467 7436  
                                    l9459 740C                                      l9491 77FC  
                                    l9483 77A2                                      l9475 7762  
                                    l8931 9432                                      l8923 93F8  
                                    l7699 6B34                                      l7779 8E94  
                                    l8851 79AE                                      l8835 791C  
                                    l7795 9DF4                                      l8499 243E  
                                    l8827 75D4                                      l8819 7576  
                                    l9395 0C94                                      l9387 0BEE  
                                    l9379 0B74                                      l9299 0646  
                                    l9563 8550                                      l9555 851C  
                                    l9547 84D8                                      l9539 84A4  
                                    l7939 36FA                                      l7891 32F6  
                                    l7883 324A                                      l7875 31E8  
                                    l7971 2D02                                      l7963 2C7C  
                                    l7955 2C12                                      l8587 771C  
                                    l8579 76C0                                      l8763 40CA  
                                    l8755 4094                                      l8747 4052  
                                    l8683 3E22                                      l8675 3DE8  
                                    l8667 3DAC                                      l8659 3D6A  
                                    l9715 1D9E                                      l9707 1CAA  
                                    l9651 1908                                      l9643 18AC  
                                    l9627 17B2                                      l9619 1744  
                                    l9635 1864                                      l9571 15A0  
                                    l9803 1260                                      l9811 12DC  
                                    l9731 0DB6                                      l9723 0D56  
                                    l9901 A68C                                      l8917 A148  
                                    l9469 7456                                      l9493 780A  
                                    l9485 77C2                                      l9477 7770  
                                    l8941 947A                                      l8933 9440  
                                    l8925 9408                                      l8853 79E0  
                                    l8845 7952                                      l7797 9DFE  
                                    l7789 9DC6                                      l9389 0C00  
                                    l9397 0D02                                      l9565 856C  
                                    l9557 853A                                      l9549 84EA  
                                    l7893 32FA                                      l7885 32AE  
                                    l7877 3202                                      l7965 2CA6  
                                    l7957 2C2A                                      l8589 7734  
                                    l8781 4156                                      l8773 410C  
                                    l8757 40A4                                      l8749 406C  
                                    l8765 40D2                                      l8685 3E2E  
                                    l8669 3DB4                                      l8693 3E4E  
                                    l8597 9912                                      l9717 1DB2  
                                    l9709 1CB2                                      l9661 19E4  
                                    l9645 18C2                                      l9653 1920  
                                    l9637 1876                                      l9629 17E4  
                                    l9581 15AA                                      l9813 130C  
                                    l9821 139E                                      l9805 12A2  
                                    l9741 0E5E                                      l9725 0D6A  
                                    l9903 A68E                                      l8919 A182  
                                    l9495 7838                                      l9487 77E0  
                                    l9479 7790                                      l8951 A41C  
                                    l9911 A1E4                                      l8943 9484  
                                    l8935 944A                                      l8927 941E  
                                    l8863 7A1E                                      l8847 7972  
                                    l8839 7922                                      l8871 9A38  
                                    l8791 747C                                      l9399 0D14  
                                    l9559 854A                                      l7895 3308  
                                    l7991 2DCA                                      l7975 2D16  
                                    l7983 2D84                                      l7959 2C42  
                                    l7967 2CBA                                      l7799 A4FA  
                                    l8783 415E                                      l8775 412A  
                                    l8767 40F6                                      l8759 40B4  
                                    l8695 3E72                                      l8687 3E36  
                                    l8679 3DEE                                      l8599 992E  
                                    l9671 1A4E                                      l9663 19F6  
                                    l9655 1932                                      l9647 18D2  
                                    l9639 1884                                      l9591 1608  
                                    l9583 15C6                                      l9575 15A6  
                                    l9823 13FC                                      l9815 1342  
                                    l9831 1484                                      l9751 0F5E  
                                    l9743 0E98                                      l9727 0D82  
                                    l9497 7858                                      l9489 77E8  
                                    l8945 A3FA                                      l9905 A602  
                                    l9913 A1E8                                      l8937 9468  
                                    l8929 9426                                      l8857 79E6  
                                    l8849 7990                                      l8873 9A40  
                                    l8793 749C                                      l7897 3312  
                                    l7889 32C2                                      l7993 2DEE  
                                    l7985 2DA6                                      l7977 2D32  
                                    l7969 2CE6                                      l8777 413A  
                                    l8697 3E76                                      l8689 3E48  
                                    l9681 1B1E                                      l9673 1A5E  
                                    l9665 1A06                                      l9657 19A4  
                                    l9649 18D4                                      l9593 1616  
                                    l9585 15D6                                      l9569 158C  
                                    l8961 649E                                      l8953 6446  
                                    l9841 14F8                                      l9833 148C  
                                    l9825 1412                                      l9817 1388  
                                    l9809 12B8                                      l9761 1000  
                                    l9753 0F74                                      l9745 0F06  
                                    l9737 0DD4                                      l9729 0D92  
                                    l9499 786A                                      l8947 A406  
                                    l9931 5A8C                                      l9907 A622  
                                    l9923 A532                                      l9915 A1FC  
                                    l8939 9478                                      l8875 9A54  
                                    l8883 9A70                                      l8867 9A1C  
                                    l8795 74AE                                      l7899 334A  
                                    l7995 2E06                                      l7979 2D46  
                                    l8779 414A                                      l9691 1BAE  
                                    l9683 1B46                                      l9675 1A80  
                                    l9667 1A1A                                      l9659 19BC  
                                    l9595 161A                                      l9587 15DE  
                                    l9579 15A6                                      l8971 6668  
                                    l8963 657E                                      l8955 6454  
                                    l9851 621C                                      l9843 1520  
                                    l9835 14A0                                      l9827 141A  
                                    l9763 1016                                      l9755 0FA4  
                                    l9747 0F18                                      l9739 0E3A  
                                    l8949 A418                                      l9941 5AF4  
                                    l9933 5AAC                                      l9917 A22A  
                                    l8893 A192                                      l8885 9A92  
                                    l8877 9A56                                      l8869 9A24  
                                    l8797 74B6                                      l8789 7478  
                                    l7997 2E30                                      l7989 2DBA  
                                    l8981 6016                                      l9693 1BB2  
                                    l9685 1B72                                      l9677 1AB0  
                                    l9669 1A2E                                      l9597 1632  
                                    l9589 15F8                                      l8965 65E0  
                                    l8957 6464                                      l9861 62D2  
                                    l9853 6234                                      l9837 14A8  
                                    l9829 1472                                      l9773 105A  
                                    l9757 0FE4                                      l9749 0F3A  
                                    l9845 1568                                      l9951 5B2A  
                                    l9943 5B06                                      l9935 5ABC  
                                    l9927 5A44                                      l9919 A22E  
                                    l8895 A19A                                      l8879 9A6A  
                                    l8799 74CE                                      l7999 2E40  
                                    l8983 6040                                      l8975 5FE2  
                                    l9687 1B8E                                      l9695 1BC2  
                                    l9679 1AFA                                      l9599 1644  
                                    l8967 662A                                      l8959 6482  
                                    l9871 631E                                      l9855 6244  
                                    l9839 14C2                                      l9783 114E  
                                    l9775 10A0                                      l9767 102A  
                                    l9847 157A                                      STR_1 FEDD  
                                    STR_2 FEDD                                      l9953 5B30  
                                    l9961 5C22                                      l9945 5B14  
                                    l9937 5ABE                                      l9929 5A64  
                                    l8897 A1AE                                      l8977 5FE2  
                                    l9697 1BD4                                      l9689 1B92  
                                    l8969 663A                                      l9881 63F6  
                                    l9873 632E                                      l9865 62D8  
                                    l9857 625E                                      l9793 11CC  
                                    l9777 10DE                                      l9785 1160  
                                    l9769 1046                                      STR_3 FFF5  
                                    STR_4 FFF5                                      l9891 A678  
                                    l9963 5C3C                                      l9971 5C9E  
                                    l9955 5BB2                                      l9947 5B1A  
                                    l9939 5AD8                                      l8899 A1B6  
                                    l8995 605C                                      l8987 6046  
                                    l8979 5FFA                                      l9699 1BF2  
                                    l9883 6422                                      l9875 6356  
                                    l9859 6278                                      l9867 62EA  
                                    l9795 11DC                                      l9787 11A0  
                                    l9779 1138                                      STR_5 FFD6  
                                    STR_6 FFD6                                      l9893 A67E  
                                    l9981 5CE4                                      l9973 5CB0  
                                    l9965 5C5A                                      l9957 5BB8  
                                    l9949 5B22                                      l8997 608C  
                                    l9885 6432                                      l9877 639E  
                                    l9869 62EA                                      l9797 11FC  
                                    l9789 11B8                                      STR_7 FFF9  
                                    STR_8 FF81                                      l9895 A680  
                                    l9991 9D62                                      l9983 5CEC  
                                    l9975 5CC0                                      l9967 5C74  
                                    l9959 5BBE                                      l8999 609C  
                                    l9879 63D4                                      l9887 6442  
                                    l9799 120E                                      STR_9 FFF0  
                                    l9897 A682                                      l9977 5CC6  
                                    l9985 5CFE                                      l9969 5C8E  
                                    l9899 A684                                      l9979 5CD8  
                                    l9997 9D6A                                      l9989 9D5C  
                                    l9999 9D9E                                _Data_Write A676  
                                    _LATA 003FBA                                      _LATB 003FBB  
                                    _LATC 003FBC                                      _LATD 003FBD  
                                    _LATE 003FBE                                      u7000 8582  
                                    u7001 857E                                      u7100 4372  
                                    u7101 436E                                      u7110 4384  
                                    u7111 4380                                      u7120 43B6  
                                    u7121 43B2                                      u7018 41A8  
                                    u8010 8068                                      u7019 41DE  
                                    u8011 8064                                      u7140 4420  
                                    u7028 41F0                                      u7300 25EE  
                                    u8020 6ACA                                      u8100 9DE4  
                                    u7141 441C                                      u7029 420C  
                                    u8021 6AC6                                      u8101 9DE0  
                                    u7070 42F6                                      u7038 421E  
                                    u7310 261A                                      u8030 6B24  
                                    u8110 9E1E                                      u7071 42F2  
                                    u7039 423A                                      u7311 2616  
                                    u8031 6B20                                      u8111 9E1A  
                                    u7240 45EA                                      u7208 450C  
                                    u7160 447A                                      u7048 424C  
                                    u8008 8034                                      u8040 6BC0  
                                    u8200 4C8A                                      u8120 A530  
                                    u9000 48B8                                      u7241 45E6  
                                    u7209 4528                                      u7161 4476  
                                    u7049 4268                                      u8009 804E  
                                    u7321 2642                                      u7305 25E4  
                                    u8041 6BBC                                      u8201 4C86  
                                    u8121 A52C                                      u9001 48B4  
                                    u7218 453C                                      u7170 4490  
                                    u7138 43CC                                      u7058 427A  
                                    u7330 265C                                      u8050 6BDE  
                                    u8130 8A14                                      u9010 4928  
                                    u7251 45F6                                      u7219 4558  
                                    u7171 448C                                      u7139 43E8  
                                    u7059 4296                                      u7331 2658  
                                    u8051 6BDA                                      u8131 8A10  
                                    u9011 4924                                      u7228 456C  
                                    u7180 44CA                                      u7068 42A8  
                                    u7260 9F30                                      u8060 9CB2  
                                    u7340 2684                                      u8220 4D40  
                                    u8140 4AA4                                      u9020 4944  
                                    u7229 4588                                      u7181 44C6  
                                    u7069 42E4                                      u7261 9F2C  
                                    u8061 9CAE                                      u7341 2680  
                                    u9101 1E7A                                      u8221 4D3C  
                                    u8141 4AA0                                      u9021 4940  
                                    u7238 459C                                      u7158 4442  
                                    u7270 9F60                                      u7510 2998  
                                    u7430 2826                                      u8070 8E2E  
                                    u9110 1E94                                      u8230 4DE2  
                                    u8150 4ACE                                      u8310 33E0  
                                    u9030 4964                                      u7239 45B8  
                                    u7159 445E                                      u7271 9F5C  
                                    u7511 2994                                      u7431 2822  
                                    u8071 8E2A                                      u9111 1E90  
                                    u8215 4CA6                                      u8151 4ACA  
                                    u8311 33DC                                      u9031 4960  
                                    u7088 4308                                      u7520 29AE  
                                    u7408 2732                                      u8080 8E4C  
                                    u9200 1FD8                                      u9120 1EA6  
                                    u8240 4E14                                      u8320 3426  
                                    u8400 2D02                                      u9040 4994  
                                    u7089 4324                                      u7521 29AA  
                                    u7409 274E                                      u7361 26B2  
                                    u7281 259E                                      u8081 8E48  
                                    u9201 1FD4                                      u9121 1EA2  
                                    u8241 4E10                                      u8321 3422  
                                    u8305 33A4                                      u8401 2CFE  
                                    u9041 4990                                      u7098 433E  
                                    u7530 29D0                                      u7418 2764  
                                    u7370 26CC                                      u7290 25C2  
                                    u8090 8E94                                      u9130 1EB8  
                                    u9050 A71A                                      u8170 4B78  
                                    u8330 3486                                      u8250 3202  
                                    u8410 2D32                                      u7099 435A  
                                    u7531 29CC                                      u7419 2780  
                                    u7371 26C8                                      u7355 2686  
                                    u7291 25BE                                      u8091 8E90  
                                    u9211 2028                                      u9131 1EB4  
                                    u9051 A714                                      u8235 4DD8  
                                    u8171 4B74                                      u8251 31FE  
                                    u8411 2D2E                                      u7620 717A  
                                    u7508 2968                                      u7428 27F8  
                                    u7380 270E                                      u7700 7ED4  
                                    u9300 2134                                      u9220 2042  
                                    u9060 A71C                                      u8340 3532  
                                    u8260 322C                                      u8500 2F22  
                                    u8420 2D70                                      u7621 7176  
                                    u7509 2984                                      u7429 2812  
                                    u7381 270A                                      u7701 7ED0  
                                    u9301 2130                                      u9221 203E  
                                    u8165 4B40                                      u8341 352E  
                                    u8261 3228                                      u8501 2F1E  
                                    u8421 2D6C                                      u7198 44DC  
                                    u7630 71C4                                      u7470 28CA  
                                    u7390 2720                                      u7710 7EEC  
                                    u9230 205E                                      u8190 4C30  
                                    u8350 35DE                                      u8510 2F58  
                                    u8430 2DA6                                      u7199 44F8  
                                    u7631 71C0                                      u7471 28C6  
                                    u7391 271C                                      u7711 7EE8  
                                    u9231 205A                                      u9151 1F1C  
                                    u8191 4C2C                                      u8335 347C  
                                    u8511 2F54                                      u8431 2DA2  
                                    u7640 723E                                      u7800 4FA4  
                                    u7608 2B2A                                      u7480 291E  
                                    u7448 2840                                      u9400 22A2  
                                    u9240 2072                                      u9160 1F36  
                                    u9080 1E12                                      u8360 3614  
                                    u8280 32BE                                      u8600 3108  
                                    u8520 2F9E                                      u8440 2DEE  
                                    u7641 723A                                      u7801 4FA0  
                                    u7609 2B46                                      u7481 291A  
                                    u7449 285C                                      u9401 229E  
                                    u9241 206E                                      u9161 1F32  
                                    u9081 1E0E                                      u8185 4BF8  
                                    u8361 3610                                      u8281 32BA  
                                    u8601 3104                                      u8521 2F9A  
                                    u8441 2DEA                                      u7650 7288  
                                    u7810 4FF8                                      u7618 2B84  
                                    u7570 2ACA                                      u7458 286E  
                                    u7730 7F38                                      u9410 22B4  
                                    u9330 21A6                                      u8290 3308  
                                    u8610 317A                                      u8530 2FC8  
                                    u8450 2E30                                      u8370 2C42  
                                    u7651 7284                                      u7811 4FF4  
                                    u7619 2BA0                                      u7571 2AC6  
                                    u7459 288A                                      u7731 7F34  
                                    u9411 22B0                                      u9331 21A2  
                                    u9251 2094                                      u8355 35D4  
                                    u8291 3304                                      u8275 3282  
                                    u8611 3176                                      u8531 2FC4  
                                    u8451 2E2C                                      u8371 2C3E  
                                    u8700 957C                                      u7660 72EE  
                                    u7900 51DC                                      u7548 29E2  
                                    u7468 289C                                      u9420 22CA  
                                    u9260 20AC                                      u9148 1ECC  
                                    u8620 31B4                                      u8540 3010  
                                    u8460 2E84                                      u8380 2C7C  
                                    u7661 72EA                                      u7901 51D8  
                                    u7741 4EF6                                      u7549 29FE  
                                    u7469 28B8                                      u9421 22C6  
                                    u9341 21D0                                      u9261 20A8  
                                    u9181 1F8A                                      u9149 1EE8  
                                    u8621 31B0                                      u8541 300C  
                                    u8461 2E80                                      u8381 2C78  
                                    u8710 95AA                                      u7910 5208  
                                    u7830 5042                                      u7750 4F10  
                                    u7590 2B16                                      u7558 2A10  
                                    u9430 22EA                                      u9350 21F0  
                                    u9318 2150                                      u9190 1FCA  
                                    u9078 1DE8                                      u8550 302A  
                                    u8470 2EA0                                      u8390 2CA6  
                                    u8630 7A3E                                      u8711 95A6  
                                    u7911 5204                                      u7831 503E  
                                    u7751 4F0C                                      u7591 2B12  
                                    u7559 2A2C                                      u9431 22E6  
                                    u9351 21EC                                      u9319 216A  
                                    u9271 20F0                                      u9191 1FC6  
                                    u9079 1E02                                      u8551 3026  
                                    u8471 2E9C                                      u8391 2CA2  
                                    u8631 7A3A                                      u9520 8AB0  
                                    u8720 95BC                                      u7840 5054  
                                    u7568 2A54                                      u7728 7F04  
                                    u9360 2202                                      u9328 217C  
                                    u9280 2110                                      u8560 3046  
                                    u8480 2EBA                                      u8640 7B04  
                                    u8800 547E                                      u9600 76C0  
                                    u9521 8AAC                                      u8721 95B8  
                                    u7841 5050                                      u7569 2A70  
                                    u7729 7F1E                                      u9361 21FE  
                                    u9329 2196                                      u9281 210C  
                                    u8561 3042                                      u8481 2EB6  
                                    u8641 7B00                                      u9601 76BC  
                                    u9530 8AC2                                      u7850 50AA  
                                    u7770 4F3C                                      u7498 293A  
                                    u7690 7EAE                                      u9450 23EC  
                                    u9370 2214                                      u9290 2122  
                                    u9178 1F50                                      u9098 1E3A  
                                    u8570 306E                                      u8490 2EF8  
                                    u8650 7B4E                                      u8810 54A2  
                                    u9610 76F4                                      u8730 9BB6  
                                    u9531 8ABE                                      u8707 956E  
                                    u7851 50A6                                      u7771 4F38  
                                    u7499 2956                                      u7691 7EAA  
                                    u7675 7E3E                                      u9371 2210  
                                    u9291 211E                                      u9179 1F6A  
                                    u9099 1E56                                      u8571 306A  
                                    u8491 2EF4                                      u8651 7B4A  
                                    u8811 549E                                      u9611 76F0  
                                    u8731 9BB2                                      u9540 8AEA  
                                    u6980 A0DC                                      u7828 5014  
                                    u7588 2AE6                                      u7940 9C3E  
                                    u9508 2522                                      u8580 30B2  
                                    u8660 7B76                                      u8900 4690  
                                    u9620 7710                                      u8740 9BE6  
                                    u9700 6F8E                                      u9541 8AE6  
                                    u6981 A0D8                                      u7829 5030  
                                    u7781 4F5C                                      u7765 4F12  
                                    u7589 2B02                                      u7941 9C3A  
                                    u9509 253C                                      u9445 234A  
                                    u8581 30AE                                      u8661 7B70  
                                    u8901 468C                                      u8805 5474  
                                    u9621 770C                                      u8741 9BE2  
                                    u9701 6F8A                                      u9550 8B20  
                                    u6990 A670                                      u7870 5168  
                                    u9518 2554                                      u8590 30C8  
                                    u8670 7B78                                      u8910 46C4  
                                    u8830 556E                                      u8750 5352  
                                    u9630 7744                                      u9710 6FBC  
                                    u9551 8B1C                                      u6991 A66C  
                                    u7871 5164                                      u7791 4F8A  
                                    u9519 256E                                      u9455 23E2  
                                    u8591 30C4                                      u8911 46C0  
                                    u8831 556A                                      u8751 534E  
                                    u9631 7740                                      u9711 6FB8  
                                    u7928 5232                                      u7688 7E84  
                                    u8920 46FC                                      u8840 558E  
                                    u8760 5380                                      u9640 7756  
                                    u9560 9F84                                      u9800 3E9C  
                                    u9720 3D46                                      u7929 524E  
                                    u7689 7E9E                                      u9465 2412  
                                    u8921 46F8                                      u8841 558A  
                                    u8825 5500                                      u8761 537C  
                                    u9641 7752                                      u9561 9F80  
                                    u9801 3E98                                      u9721 3D42  
                                    u7938 52A2                                      u7970 7FDE  
                                    u8690 A024                                      u9490 250C  
                                    u9474 2434                                      u8930 4740  
                                    u8850 55B8                                      u8770 53E4  
                                    u9570 9FC2                                      u9810 3EAE  
                                    u9730 3D80                                      u9650 994C  
                                    u7939 52BE                                      u7971 7FDA  
                                    u7955 7F6E                                      u8691 A020  
                                    u9491 2508                                      u9475 2430  
                                    u8851 55B4                                      u8771 53E0  
                                    u9571 9FBE                                      u9811 3EAA  
                                    u9731 3D7C                                      u9651 9948  
                                    u7868 513A                                      u7980 8004  
                                    u9484 2472                                      u9388 222E  
                                    u8940 4764                                      u8860 55EA  
                                    u8780 5400                                      u9580 763A  
                                    u9900 400A                                      u9820 3EE6  
                                    u9740 3D96                                      u9660 6E6C  
                                    u7869 5154                                      u7981 8000  
                                    u9485 246C                                      u9389 2248  
                                    u8941 4760                                      u8861 55E6  
                                    u8781 53FC                                      u9581 7636  
                                    u9901 4006                                      u9821 3EE2  
                                    u9741 3D92                                      u9661 6E68  
                                    u7990 801C                                      u9398 2272  
                                    u8950 47C4                                      u8870 5672  
                                    u8790 543A                                      u9590 7686  
                                    u9910 4038                                      u9830 3F16  
                                    u9750 3DC6                                      u9670 6EB8  
                                    u7991 8018                                      u9399 228E  
                                    u8935 4736                                      u8871 566E  
                                    u8791 5436                                      u9591 7682  
                                    u9911 4034                                      u9831 3F12  
                                    u9751 3DC2                                      u9671 6EB4  
                                    u7888 517A                                      u7968 7FB4  
                                    u8688 9FEE                                      u8960 47F8  
                                    u8880 5696                                      u9920 4090  
                                    u9840 3F2C                                      u9760 3DD8  
                                    u9680 6EF4                                      u7889 5196  
                                    u7969 7FCE                                      u8689 A00A  
                                    u8961 47F4                                      u9921 408C  
                                    u9841 3F28                                      u9761 3DD4  
                                    u9681 6EF0                                      u7898 51A8  
                                    u8970 4854                                      u8890 467A  
                                    u9930 40A4                                      u9850 3F42  
                                    u9770 3DE8                                      u9690 6F4C  
                                    u7899 51C4                                      u8971 4850  
                                    u8955 47BA                                      u8891 4676  
                                    u9931 40A0                                      u9851 3F3E  
                                    u9771 3DE4                                      u9691 6F48  
                                    u8980 4876                                      u9940 40B4  
                                    u9860 3F56                                      u9780 3E22  
                                    u8981 4872                                      u8885 568C  
                                    u9941 40B0                                      u9861 3F52  
                                    u9781 3E1E                                      u8990 48A6  
                                    u9950 4108                                      u9870 3F68  
                                    u9790 3E86                                      u8991 48A2  
                                    u9951 4104                                      u9871 3F64  
                                    u9791 3E82                                      u9960 412A  
                                    u9880 3F90                                      u9961 4126  
                                    u9881 3F8C                                      u9970 414A  
                                    u9890 3FCA                                      u9971 4146  
                                    u9891 3FC6                                      u9980 74AE  
                                    u9981 74AA                                      u9990 74E2  
                                    u9991 74DE                                      _WPUA 003A41  
                                    _WPUB 003A51                                      _WPUC 003A61  
                                    _WPUD 003A71                                      _WPUE 003A81  
                                    _Fsid 0137                                      _Menu 95C6  
                                    abs@a 0013         SD_SPI_MediaInitialize@CSDResponse 002D  
                                    _dbuf 013F                                      _file 1DDE  
                                    _atoi 6FC2                                      _main A748  
                                    _dtoa 5A44                              find_volume@i 00BF  
                                    _prec 0125                                      _nout 0121  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr0h 003FEA                                      fsr1h 003FE2  
                                    indf0 003FEF                                      fsr2h 003FDA  
                                    fsr0l 003FE9                                      indf1 003FE7  
                                    indf2 003FDF                                      fsr1l 003FE1  
                                    pad@w 001A                                      fsr2l 003FD9  
                    ??_SPI1_ExchangeBlock 0005                               ld_dword@ptr 0001  
                           disk_ioctl@cmd 0001                             disk_read@buff 0049  
                           disk_read@pdrv 0053                                      prodh 003FF4  
                                    prodl 003FF3                            ??_get_ldnumber 0003  
              __size_of_Display_Character 006C                                      start FFFC  
               __end_of_SPI1_ExchangeByte A676                           Save_Data@F16661 01E0  
                            ?_follow_path 00DA                              ___param_bank 000000  
            __end_of_Maximum_Error_Select 8D22              __end_of_Minimum_Error_Select 8C4C  
                             ?_UART1_Read 0001                           create_name@path 000B  
                        create_chain@clst 0099                                     ??_abs 0015  
                                   ??_pad 0017                       __size_of_GLCD_Clear 007A  
                     __end_of_Command_map FEDD                             ??_Error_Check 0017  
                             _sync_window 6AAA            __size_of_OSCILLATOR_Initialize 0018  
                        Display_Message@i 000D                                     ?_Menu 0001  
                            ?_SDFAST_open 0001                   __end_of_GLCD_Initialise A138  
           __end_of_OSCILLATOR_Initialize A706                                     l10001 9DA4  
                                   l10003 9DA8                                     l10011 83BC  
                                   l10101 6A92                                     l10021 6FD6  
                                   l10013 83E6                                     l10005 8398  
                                   l10031 7038                                     l10023 6FDA  
                                   l10015 8410                                     l10007 83A4  
                                   l10121 A4AA                                     l10113 A47E  
                                   l10201 9ACA                                     l11001 7C8E  
                                   l10041 7064                                     l10025 6FDE  
                                   l10017 846A                                     l10131 A6A4  
                                   l10123 A4B2                                     l10115 A490  
                                   l10107 A71E                                     l10211 9AFC  
                                   l10203 9AD6                                     l11011 7CBE  
                                   l11003 7C9A                                     l10051 7116  
                                   l10043 709A                                     l10035 703E  
                                   l10027 6FFC                                     l10019 6FC2  
                                   l10133 A6A6                                     l10125 A69A  
                                   l10117 A492                                     l10109 A72E  
                                   l10141 9CF4                                     l10213 9AFE  
                                   l10205 9ADC                                     l11021 8680  
                                   l11013 8658                                     l11005 7CA6  
                                   l10053 7128                                     l10037 7054  
                                   l10029 7034                                     l10061 A36A  
                                   l10221 982A                                     l11101 387A  
                                   l10135 A6AE                                     l10127 A6A0  
                                   l10119 A49A                                     l10143 9D2C  
                                   l10207 9AEA                                     l11031 86A4  
                                   l11023 8686                                     l11015 8668  
                                   l10071 68EA                                     l10311 6CAC  
                                   l10303 6C70                                     l11007 7CAC  
                                   l10231 A770                                     l10055 713A  
                                   l10047 70D6                                     l10039 705C  
                                   l10151 8EE0                                     l10063 A37A  
                                   l10223 9830                                     l10215 9802  
                                   l11111 38C8                                     l11103 3882  
                                   l10137 A6B0                                     l10129 A6A2  
                                   l10145 9D32                                     l10209 9AEC  
                                   l11041 86EA                                     l11033 86B0  
                                   l11025 868C                                     l11017 866E  
                                   l10073 68EE                                     l10065 6896  
                                   l10321 6D14                                     l10313 6CB8  
                                   l10305 6C94                                     l11009 7CB2  
                                   l10233 A776                                     l10161 8F7A  
                                   l10153 8EF4                                     l10217 9810  
                                   l10225 9836                                     l10241 A75C  
                                   l10401 907A                                     l11201 3BC6  
                                   l11121 3912                                     l11113 38D6  
                                   l11105 389C                                     l10147 9D36  
                                   l10139 9CE8                                     l11043 86F6  
                                   l11035 86B6                                     l11027 8698  
                                   l11019 8674                                     l10083 69E2  
                                   l10075 691E                                     l10067 68C6  
                                   l10251 A248                                     l10331 6D68  
                                   l10323 6D20                                     l10315 6CDA  
                                   l10307 6CA0                                     l10243 A62C  
                                   l10235 A780                                     l10163 8F90  
                                   l10155 8F2E                                     l10171 A304  
                                   l10227 9880                                     l10219 9818  
                                   l10403 9080                                     l11211 3C32  
                                   l11203 3BE0                                     l11123 3926  
                                   l11131 395A                                     l11115 38DE  
                                   l11107 38A0                                     l11051 A026  
                                   l10261 A3B2                                     l10181 9A96  
                                   l11045 8704                                     l11037 86BC  
                                   l11029 869E                                     l10085 6A12  
                                   l10093 6A44                                     l10077 694E  
                                   l10069 68D8                                     l10173 9E30  
                                   l10253 A250                                     l10341 6DD6  
                                   l10333 6D8C                                     l10325 6D2C  
                                   l10317 6CE6                                     l10309 6CA6  
                                   l10501 597C                                     l10245 A63E  
                                   l10237 A786                                     l10157 8F5A  
                                   l10149 8ECC                                     l10165 A2D8  
                                   l10229 9884                                     l10421 90C2  
                                   l10405 908A                                     l11221 3C9E  
                                   l11213 3C4C                                     l11205 3BFA  
                                   l11133 3970                                     l11141 39C4  
                                   l11125 3934                                     l11117 38F8  
                                   l11109 38B6                                     l11053 A036  
                                   l11301 67C2                                     l11231 9B28  
                                   l10271 A3F4                                     l10263 A3BC  
                                   l10191 9AAC                                     l11047 8710  
                                   l11039 86DE                                     l10351 989A  
                                   l10095 6A56                                     l10087 6A24  
                                   l10079 69AA                                     l10175 9E38  
                                   l10255 A258                                     l10343 6DE2  
                                   l10335 6D98                                     l10327 6D50  
                                   l10319 6CF2                                     l10511 5A00  
                                   l10503 598C                                     l10247 A644  
                                   l10159 8F74                                     l10167 A2EC  
                                   l10239 A6D4                                     l10423 90C6  
                                   l10415 90A6                                     l10407 908E  
                                   l11223 3CB8                                     l11207 3C10  
                                   l11215 3C66                                     l11151 3A1E  
                                   l11143 39DA                                     l11135 3982  
                                   l11127 393C                                     l11119 38FC  
                                   l11071 378A                                     l11063 3752  
                                   l11055 A046                                     l11311 680C  
                                   l11303 67C6                                     l11241 9B46  
                                   l11233 9B2E                                     l11225 9B10  
                                   l10265 A3CE                                     l10521 9378  
                                   l10193 9AB4                                     l11049 871C  
                                   l10361 98D2                                     l10353 98A6  
                                   l10089 6A38                                     l10177 9E46  
                                   l10257 A274                                     l10249 A236  
                                   l10345 6E08                                     l10337 6DA4  
                                   l10329 6D5C                                     l10513 5A10  
                                   l10505 59A4                                     l10601 970E  
                                   l10441 A5E8                                     l10169 A300  
                                   l10281 8FB8                                     l10273 8F9C  
                                   l10433 9102                                     l10417 90B2  
                                   l10409 90A2                                     l11217 3C7C  
                                   l11209 3C24                                     l11161 3A72  
                                   l11145 39EE                                     l11153 3A22  
                                   l11137 3990                                     l11129 3956  
                                   l11081 37E2                                     l11073 3798  
                                   l11065 3760                                     l11057 A05E  
                                   l11313 6828                                     l11305 67CA  
                                   l11321 6850                                     l11331 A0DE  
                                   l11251 9B64                                     l11243 9B4C  
                                   l11235 9B34                                     l11227 9B1C  
                                   l10267 A3DA                                     l10531 9398  
                                   l10187 9A9A                                     l10355 98B0  
                                   l10099 6A62                                     l10179 9E6C  
                                   l10347 6E14                                     l10339 6DCA  
                                   l10507 59C2                                     l10515 5A24  
                                   l10451 5720                                     l10611 9744  
                                   l10603 971A                                     l10443 A5F6  
                                   l10291 8FE4                                     l10283 8FC0  
                                   l10275 8FA0                                     l10371 9E9A  
                                   l10435 9106                                     l10427 90D8  
                                   l10419 90B8                                     l11219 3C90  
                                   l11171 3AC8                                     l11155 3A38  
                                   l11163 3A76                                     l11147 39FC  
                                   l11139 39AA                                     l11091 3824  
                                   l11075 37AC                                     l11083 37E6  
                                   l11067 3774                                     l11059 A06E  
                                   l11323 685E                                     l11315 682E  
                                   l11307 67CE                                     l11341 A116  
                                   l11333 A0EA                                     l11261 9B82  
                                   l11253 9B6A                                     l11245 9B52  
                                   l11237 9B3A                                     l11229 9B22  
                                   l10269 A3E2                                     l10541 93CA  
                                   l10517 9352                                     l10189 9AA6  
                                   l10357 98BC                                     l10365 98DC  
                                   l10349 988A                                     l10701 8984  
                                   l10509 59E2                                     l10461 578C  
                                   l10453 5726                                     l10445 5704  
                                   l10621 976E                                     l10613 974A  
                                   l10605 9720                                     l10437 A5D0  
                                   l10285 8FC8                                     l10277 8FA8  
                                   l10381 9ED0                                     l10373 9EA2  
                                   l10429 90DC                                     l11181 3B1C  
                                   l11165 3A8C                                     l11173 3ACC  
                                   l11157 3A4A                                     l11149 3A04  
                                   l11093 383E                                     l11085 37FC  
                                   l11077 37C0                                     l11069 3786  
                                   l11325 6862                                     l11317 6832  
                                   l11309 67FE                                     l11343 A11C  
                                   l11335 A0F0                                     l11255 9B70  
                                   l11247 9B58                                     l11239 9B40  
                                   l10527 9380                                     l10519 935C  
                                   l10199 9AB8                                     l10359 98C6  
                                   l10711 89AE                                     l10703 898A  
                                   l10463 57AA                                     l10471 5814  
                                   l10455 5742                                     l10447 570E  
                                   l10551 8196                                     l10615 9756  
                                   l10607 9732                                     l10439 A5D6  
                                   l10287 8FD0                                     l10279 8FB0  
                                   l10295 8FF0                                     l10391 9064  
                                   l10631 94EE                                     l10623 949C  
                                   l11191 3B72                                     l11183 3B36  
                                   l11175 3AE2                                     l11167 3AA0  
                                   l11159 3A58                                     l11087 380E  
                                   l11095 3842                                     l11079 37C8  
                                   l11327 686C                                     l11319 6836  
                                   l11271 66B2                                     l11263 6670  
                                   l11351 95D6                                     l11345 A128  
                                   l11337 A102                                     l11257 9B76  
                                   l11249 9B5E                                     l10545 93D6  
                                   l10537 93A4                                     l10529 9386  
                                   l10713 89B4                                     l10705 8990  
                                   l10473 5832                                     l10465 57CA  
                                   l10457 5768                                     l10481 5898  
                                   l10561 81D6                                     l10553 81A4  
                                   l10801 8CC6                                     l10617 975C  
                                   l10609 973E                                     l10721 8752  
                                   l10641 9658                                     l10289 8FD8  
                                   l10385 9EDA                                     l10393 9068  
                                   l10633 9500                                     l10625 94C0  
                                   l11193 3B8C                                     l11177 3AF4  
                                   l11185 3B3A                                     l11169 3AAE  
                                   l11097 3858                                     l11089 381C  
                                   l11329 687A                                     l11281 66F8  
                                   l11273 66D0                                     l11265 6686  
                                   l11361 9600                                     l11353 95DC  
                                   l11347 A12E                                     l11339 A10A  
                                   l11259 9B7C                                     l10547 93DA  
                                   l10539 93B6                                     l10715 89C0  
                                   l10707 899C                                     l10491 58F8  
                                   l10475 5852                                     l10467 57F0  
                                   l10459 5774                                     l10571 8214  
                                   l10563 81DA                                     l10555 81B4  
                                   l10803 8CCC                                     l10811 8B76  
                                   l10619 9762                                     l10723 875E  
                                   l10731 879A                                     l10651 968C  
                                   l10643 9668                                     l10387 9EE0  
                                   l10379 9EAA                                     l10627 94D4  
                                   l10635 9508                                     l11187 3B50  
                                   l11195 3B90                                     l11179 3B02  
                                   l11099 386C                                     l11291 6760  
                                   l11275 66EC                                     l11283 6712  
                                   l11267 668A                                     l11371 9636  
                                   l11363 9612                                     l11355 95E2  
                                   l10709 89A8                                     l10493 5908  
                                   l10485 58B8                                     l10477 5878  
                                   l10469 57FC                                     l10581 825C  
                                   l10573 8222                                     l10565 81EA  
                                   l10557 81B8                                     l10549 8192  
                                   l10901 88AA                                     l10805 8CD8  
                                   l10821 8BBA                                     l10813 8B7A  
                                   l10741 87D0                                     l10733 87AC  
                                   l10725 8768                                     l10717 8736  
                                   l10661 96BC                                     l10653 9692  
                                   l10645 966E                                     l10389 9060  
                                   l10637 951A                                     l10629 94E6  
                                   l11197 3BA6                                     l11189 3B64  
                                   l11293 6764                                     l11285 6720  
                                   l11277 66F0                                     l11269 66A4  
                                   l11373 963C                                     l11365 961E  
                                   l11357 95EE                                     l11349 95C6  
                                   l10671 88EC                                     l10495 5920  
                                   l10487 58BE                                     l10479 5884  
                                   l10583 8266                                     l10575 822C  
                                   l10567 8200                                     l10559 81C6  
                                   l10751 7CC4                                     l10911 88D4  
                                   l10903 88B0                                     l10807 8D0E  
                                   l10831 8BF0                                     l10823 8BC6  
                                   l10815 8BA2                                     l10735 87B4  
                                   l10727 876E                                     l10719 874A  
                                   l10663 96C8                                     l10655 96A4  
                                   l10647 9674                                     l10399 906E  
                                   l10639 9522                                     l11199 3BB8  
                                   l11295 6768                                     l11287 673E  
                                   l11279 66F4                                     l11375 9642  
                                   l11367 9624                                     l11359 95FA  
                                   l10681 8924                                     l10673 8908  
                                   l10497 593E                                     l10489 58DA  
                                   l10577 824A                                     l10569 8208  
                                   l10585 826C                                     l10761 7D08  
                                   l10753 7CC8                                     l10921 8D4E  
                                   l10913 88DA                                     l10905 88B6  
                                   l10841 9774                                     l10809 8D1C  
                                   l10833 8BF6                                     l10825 8BCC  
                                   l10817 8BAE                                     l10593 96E6  
                                   l10737 87C0                                     l10745 87F0  
                                   l10729 878A                                     l10665 96CE  
                                   l10657 96B0                                     l10649 9680  
                                   l11297 6798                                     l11289 675A  
                                   l11377 964E                                     l11369 962A  
                                   l11561 A74C                                     l10691 8954  
                                   l10683 8930                                     l10675 890C  
                                   l10499 595E                                     l10587 827C  
                                   l10579 825A                                     l10771 7D3E  
                                   l10763 7D14                                     l10755 7CF0  
                                   l10931 8D78                                     l10923 8D5A  
                                   l10915 88E6                                     l10907 88C2  
                                   l10851 97A8                                     l10843 9784  
                                   l10835 8C02                                     l10827 8BD2  
                                   l10819 8BB4                                     l10595 96F6  
                                   l10747 8808                                     l10739 87CA  
                                   l10667 96D4                                     l10659 96B6  
                                   l11299 67A6                                     l11563 A750  
                                   l10693 8960                                     l10685 893C  
                                   l10677 8918                                     l10589 828C  
                                   l10773 7D44                                     l10765 7D1A  
                                   l10757 7CFC                                     l10941 8DAE  
                                   l10933 8D7E                                     l10925 8D60  
                                   l10917 8D22                                     l10909 88CE  
                                   l10861 97D8                                     l10853 97AE  
                                   l10845 978A                                     l10781 8C4C  
                                   l10829 8BEA                                     l10837 8C38  
                                   l10597 96FC                                     l10669 96E0  
                                   l11565 A754                                     l10695 8966  
                                   l10687 8942                                     l10679 891E  
                                   l10775 7D50                                     l10767 7D20  
                                   l10759 7D02                                     l10935 8D96  
                                   l10927 8D66                                     l10943 8DE4  
                                   l10919 8D26                                     l10871 8812  
                                   l10863 97E4                                     l10855 97C0  
                                   l10847 9790                                     l10791 8C90  
                                   l10783 8C50                                     l10839 8C46  
                                   l10599 9702                                     l10951 7BB6  
                                   l11559 A748                                     l10697 896C  
                                   l10689 8948                                     l10769 7D38  
                                   l10777 7D86                                     l10945 8DF2  
                                   l10937 8D9C                                     l10929 8D72  
                                   l10881 884A                                     l10873 882E  
                                   l10865 97EA                                     l10857 97CC  
                                   l10849 979C                                     l10793 8C9C  
                                   l10785 8C78                                     l10961 7BE6  
                                   l10953 7BC2                                     l10699 8978  
                                   l10779 7D94                                     l10939 8DA2  
                                   l10891 887A                                     l10883 8856  
                                   l10875 8832                                     l10867 97F0  
                                   l10859 97D2                                     l10795 8CA2  
                                   l10787 8C84                                     l10971 7C10  
                                   l10963 7BEC                                     l10955 7BC8  
                                   l10947 7B7A                                     l10893 8886  
                                   l10885 8862                                     l10877 883E  
                                   l10869 97FC                                     l10797 8CA8  
                                   l10789 8C8A                                     l10981 7C3A  
                                   l10973 7C16                                     l10965 7BF2  
                                   l10957 7BCE                                     l10949 7BB2  
                                   l11861 3730                                     l10895 888C  
                                   l10887 8868                                     l10879 8844  
                                   l10799 8CC0                                     l10991 7C64  
                                   l10983 7C46                                     l10975 7C22  
                                   l10967 7BFE                                     l10959 7BDA  
                                   l11871 2BDA                                     l11863 4E9C  
                                   l10897 8892                                     l10889 886E  
                                   l10993 7C6A                                     l10985 7C4C  
                                   l10977 7C2E                                     l10969 7C0A  
                                   l11873 9CD6                                     l11865 9A84  
                                   l11857 9008                                     l10899 889E  
                                   l10995 7C76                                     l10987 7C52  
                                   l10979 7C34                                     l11875 52EA  
                                   l11867 A1D2                                     l11859 A5BE  
                                   l10997 7C82                                     l10989 7C5E  
                                   l11877 7084                                     l11869 9C62  
                                   l11879 98F2                                     l10999 7C88  
                             ?_SPI1_Close 0001                           __end_of___aldiv 829E  
                         __end_of___aodiv 7478                                     ?_atoi 0008  
                  __size_of_Cursor_delete 007A                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 78C2  
                                   STR_10 FFEB                                     STR_11 FFD0  
                                   STR_20 FF78                                     STR_12 FF78  
                                   STR_21 FFDC                                     STR_13 FFCA  
                                   STR_22 FFCA                                     STR_30 FF78  
                                   STR_14 FFA8                                     STR_31 FF5B  
                                   STR_23 FEFA                                     STR_40 FF02  
                                   STR_24 FFDC                                     STR_32 FFBD  
                                   STR_16 FF07                                     STR_41 FF03  
                                   STR_33 FFFC                                     STR_25 FF78  
                                   STR_17 FFA1                                     STR_42 FFFC  
                                   STR_34 FFFC                                     STR_50 FEF4  
                                   STR_26 FF07                                     STR_18 FF89  
                                   STR_35 FFFC                                     STR_43 FFE1  
                                   STR_51 FFCA                                     STR_19 FFB6  
                                   STR_27 FF65                                     STR_36 FEFD  
                                   STR_60 FFFC                                     STR_52 FF78  
                                   STR_28 FFFC                                     STR_44 FFE6  
                                   STR_37 FEFE                                     STR_45 FFFC  
                                   STR_53 FF99                                     STR_61 FF07  
                                   STR_29 FFE1                                     STR_38 FF00  
                                   STR_54 FF91                                     STR_62 FFAF  
                                   STR_46 FF99                                     STR_70 FF21  
                                   STR_39 FF01                                     STR_63 FFFC  
                                   STR_55 FFFC                                     STR_47 FEF4  
                                   STR_71 FFC4                                     STR_64 FFFC  
                                   STR_48 FFFC                                     STR_56 FFCA  
                                   STR_72 FF2D                                     STR_65 FF07  
                                   STR_57 FF78                                     STR_49 FF91  
                                   STR_73 FF14                                     STR_66 FF78  
                                   STR_74 FF6F                                     STR_58 FF39  
                                   STR_75 FFCA                                     STR_67 FF50  
                                   STR_59 FEEC                                     STR_76 FFF9  
                                   STR_68 FF45                                     STR_69 FFAF  
                         __end_of_dbc_2nd A7A8          SPI1_Open@spi1UniqueConfiguration 0002  
                         __end_of_dbc_1st A7B2                       Toggle_Select@number 006A  
                                   u10000 74F4                                     u10001 74F0  
                                   u10010 7506                           __end_of___lldiv 949C  
                                   u10011 7502                                     u10100 79AE  
                                   u10020 7530                                     u10101 79AA  
                                   u10021 752C                                     u10110 79E0  
                                   u10030 7552                                     u10111 79DC  
                                   u10031 754E                                     u10200 9440  
                                   u10120 7A1A                                     u10040 7576  
                                   u11000 0C94                                     u10201 943C  
                                   u10121 7A16                                     u10041 7572  
                                   u11001 0C90                                     u10210 9468  
                                   u10130 9A38                                     u10050 75B4  
                                   u11010 8082                                     u10211 9464  
                                   u10131 9A34                                     u10051 75B0  
                                   u11011 807E                                     u11100 7382  
                                   u10220 A43C                                     u10060 791C  
                                   u10140 9A54                                     u10300 609C  
                                   u11020 80A0                                     u11101 737E  
                                   u10221 A438                                     u10061 7918  
                                   u10141 9A50                                     u10301 6098  
                                   u11021 809C                                     u11110 73AC  
                                   u10070 794C                                     u10150 9A6A  
                                   u10310 60E6                                     u10230 6464  
                                   u11030 80D4                                     u11111 73A8  
                                   u10071 7948                                     u10151 9A66  
                                   u10311 60E2                                     u10231 6460  
                                   u11031 80D0                                     u11120 73EC  
                                   u11200 9136                                     u12000 5A8C  
                                   u10080 7972                                     u10160 A1AE  
                                   u10400 5D64                                     u10320 6100  
                                   u10240 6482                                     u11040 8110  
                                   u11121 73E8                                     u11201 9132  
                                   u12001 5A88                                     u10081 796E  
                                   u10161 A1AA                                     u10401 5D60  
                                   u10321 60FC                                     u10241 647E  
                                   u11041 810C                                     u10170 A172  
                                   u11130 7436                                     u11210 9158  
                                   u12010 5ABC                                     u10090 7990  
                                   u10410 5D88                                     u10330 6120  
                                   u10250 649E                                     u11050 813E  
                                   u11131 7432                                     u11211 9154  
                                   u12011 5AB8                                     u10091 798C  
                                   u10411 5D84                                     u10331 611C  
                                   u10251 649A                                     u11051 813A  
                                   u10180 A182                                     u11140 7770  
                                   u11220 91AE                                     u12100 5CB0  
                                   u12020 5AD8                                     u10500 5F2C  
                                   u10420 5DE8                                     u10340 6166  
                                   u11300 15D6                                     u10260 6668  
                                   u11060 8152                                     u10181 A17E  
                                   u11141 776C                                     u11221 91AA  
                                   u12101 5CAC                                     u12021 5AD4  
                                   u10501 5F28                                     u10421 5DE4  
                                   u10341 6162                                     u11301 15D2  
                                   u10261 6664                                     u11061 814E  
                                   u11070 7302                                     u11150 77A2  
                                   u11230 91BE                                     u12110 5CC0  
                                   u12030 5B06                                     u10190 941E  
                                   u10510 5F42                                     u10430 5E0C  
                                   u10350 61B8                                     u10270 6016  
                                   u11310 1608                                     u11071 72FE  
                                   u11151 779E                                     u11231 91BA  
                                   u12111 5CBC                                     u12031 5B02  
                                   u10191 941A                                     u10511 5F3E  
                                   u10431 5E08                                     u10351 61B4  
                                   u10271 6012                                     u11311 1604  
                                   u11080 7334                                     u11160 77E0  
                                   u11240 A458                                     u12120 5CD8  
                                   u12040 5B14                                     u13000 8DF2  
                                   u12200 7110                                     u10600 0154  
                                   u10520 5F60                                     u10440 5E44  
                                   u10360 6218                                     u10280 6040  
                                   u11400 178E                                     u11320 1616  
                                   u10177 A164                                     u11081 7330  
                                   u11161 77DC                                     u11241 A454  
                                   u12121 5CD4                                     u12041 5B10  
                                   u13001 8DEE                                     u12201 710A  
                                   u10601 0150                                     u10521 5F5C  
                                   u10441 5E40                                     u10361 6214  
                                   u10281 603C                                     u11401 178A  
                                   u11321 1612                                     u12130 9DC4  
                                   u13010 86DE                                     u11170 780A  
                                   u12050 5C3C                                     u12210 7112  
                                   u10610 0162                                     u10530 0038  
                                   u11250 84B4                                     u10450 5EA0  
                                   u10290 605C                                     u10370 A2BE  
                                   u11410 17F4                                     u11330 1632  
                                   u12131 9DC0                                     u13011 86DA  
                                   u11091 735E                                     u11171 7806  
                                   u12051 5C38                                     u10611 015E  
                                   u10531 0034                                     u11251 84B0  
                                   u10451 5E9C                                     u10291 6058  
                                   u10371 A2BA                                     u11411 17F0  
                                   u11331 162E                                     u12300 A490  
                                   u13020 8734                                     u11180 7838  
                                   u12060 5C5A                                     u12220 7128  
                                   u10700 038C                                     u10620 01A8  
                                   u10540 006E                                     u11260 84EA  
                                   u10380 82E0                                     u10460 5ED4  
                                   u11500 1A80                                     u11420 1876  
                                   u11340 1644                                     u12140 83B8  
                                   u13100 37C0                                     u12301 A48C  
                                   u13021 8730                                     u11181 7834  
                                   u12061 5C56                                     u12221 7124  
                                   u10701 0388                                     u10621 01A4  
                                   u10541 006A                                     u11261 84E6  
                                   u10381 82DC                                     u10461 5ED0  
                                   u11501 1A7C                                     u11421 1872  
                                   u11341 1640                                     u12141 83B4  
                                   u13101 37BC                                     u12310 9D2A  
                                   u11190 7880                                     u12070 5C74  
                                   u12230 713A                                     u10710 03B6  
                                   u10630 01CA                                     u10550 00AA  
                                   u11270 850C                                     u10390 8324  
                                   u10470 5EE6                                     u11430 1884  
                                   u11350 1656                                     u12150 83E6  
                                   u13110 37FC                                     u13030 A046  
                                   u11191 787C                                     u12071 5C70  
                                   u12231 7136                                     u10711 03B2  
                                   u10631 01C6                                     u10551 00A6  
                                   u11271 8508                                     u10391 8320  
                                   u10471 5EE2                                     u11431 1880  
                                   u11351 1652                                     u12151 83E2  
                                   u13111 37F8                                     u13031 A042  
                                   u12320 9D58                                     u12400 9AFC  
                                   u12080 5C8E                                     u10720 03F0  
                                   u10640 0220                                     u10560 00CE  
                                   u11280 854A                                     u10480 5EF4  
                                   u11600 1D82                                     u11520 1B8E  
                                   u11440 189C                                     u11360 1688  
                                   u12160 8410                                     u12240 A3B0  
                                   u13200 3912                                     u13120 380E  
                                   u13040 A06E                                     u12321 9D54  
                                   u12401 9AF8                                     u12081 5C8A  
                                   u10721 03EC                                     u10641 021C  
                                   u10561 00CA                                     u11281 8546  
                                   u10481 5EF0                                     u11601 1D7E  
                                   u11521 1B8A                                     u11441 1898  
                                   u11361 1684                                     u12161 840C  
                                   u12241 A3AC                                     u13201 390E  
                                   u13121 380A                                     u13041 A06A  
                                   u12410 9B0E                                     u12090 5C9E  
                                   u12250 68C6                                     u12170 6FFC  
                                   u12330 8EE0                                     u10810 06D0  
                                   u10730 0470                                     u10650 02B0  
                                   u10570 00DE                                     u10490 5F02  
                                   u11610 1D9E                                     u11530 1BAE  
                                   u11450 18AC                                     u11370 16A0  
                                   u11290 15A0                                     u13210 3926  
                                   u13130 381C                                     u13050 3760  
                                   u12411 9B0A                                     u12091 5C9A  
                                   u12251 68C2                                     u12171 6FF8  
                                   u12331 8EDC                                     u10811 06CC  
                                   u10731 046C                                     u10651 02AC  
                                   u10571 00DA                                     u10491 5EFE  
                                   u11611 1D9A                                     u11531 1BAA  
                                   u11515 1ADA                                     u11451 18A8  
                                   u11371 169C                                     u11291 159C  
                                   u13211 3922                                     u13131 3818  
                                   u13051 375C                                     u12260 691E  
                                   u12500 6E08                                     u12180 7034  
                                   u12340 8F2E                                     u10820 073C  
                                   u10740 048E                                     u10660 0304  
                                   u10580 00EC                                     u11540 1BD4  
                                   u11460 18C2                                     u11380 16B8  
                                   u11700 0F74                                     u11620 0D92  
                                   u12420 9880                                     u13300 3A4A  
                                   u13220 3934                                     u13140 3858  
                                   u13060 3774                                     u12317 9D1C  
                                   u12261 691A                                     u12501 6E04  
                                   u12181 7030                                     u12341 8F2A  
                                   u10821 0738                                     u10805 067A  
                                   u10741 048A                                     u10661 0300  
                                   u10581 00E8                                     u11541 1BD0  
                                   u11461 18BE                                     u11381 16B4  
                                   u11701 0F70                                     u11621 0D8E  
                                   u12421 987C                                     u13301 3A46  
                                   u13221 3930                                     u13141 3854  
                                   u13061 3770                                     u12430 A3CE  
                                   u12270 694E                                     u12190 7050  
                                   u12350 8F5A                                     u10910 098C  
                                   u10830 0762                                     u10750 051A  
                                   u10670 034A                                     u10590 013E  
                                   u11550 1BF2                                     u11470 18D2  
                                   u11390 16C8                                     u11710 0FFC  
                                   u11630 0DB2                                     u12510 9ED0  
                                   u13310 3A58                                     u13230 3970  
                                   u13150 386C                                     u13070 3786  
                                   u12431 A3CA                                     u12271 694A  
                                   u12191 704C                                     u12351 8F56  
                                   u10911 0988                                     u10831 075E  
                                   u10751 0516                                     u10671 0346  
                                   u10591 013A                                     u11551 1BEE  
                                   u11471 18CE                                     u11391 16C4  
                                   u11711 0FF8                                     u11631 0DAE  
                                   u12511 9ECC                                     u13311 3A54  
                                   u13231 396C                                     u13151 3868  
                                   u14007 37D4                                     u13071 3782  
                                   u12440 A3F4                                     u12280 6A12  
                                   u12600 571C                                     u12360 8F74  
                                   u10920 0A02                                     u10840 0782  
                                   u10760 0574                                     u10680 0364  
                                   u11560 1C2A                                     u11480 1932  
                                   u11800 123C                                     u11720 1016  
                                   u11640 0DD0                                     u12520 9EFC  
                                   u13400 3B72                                     u13320 3A8C  
                                   u13240 3982                                     u13160 387A  
                                   u13080 3798                                     u12441 A3F0  
                                   u12281 6A0E                                     u12601 5718  
                                   u12361 8F70                                     u10921 09FE  
                                   u10905 094A                                     u10841 077E  
                                   u10761 0570                                     u10681 0360  
                                   u11561 1C26                                     u11481 192E  
                                   u11801 1238                                     u11721 1012  
                                   u11641 0DCC                                     u12521 9EF8  
                                   u13401 3B6E                                     u13321 3A88  
                                   u13241 397E                                     u13161 3876  
                                   u14017 3830                                     u13081 3794  
                                   u12290 A72E                                     u12450 6CDA  
                                   u12610 5742                                     u10930 0AFC  
                                   u10850 07A2                                     u10770 05D4  
                                   u10690 0376                                     u11570 1C66  
                                   u11490 1A5E                                     u11810 12A2  
                                   u11730 1046                                     u11650 0E3A  
                                   u12370 A2EC                                     u12530 90A2  
                                   u13410 3BA6                                     u13330 3AA0  
                                   u13250 3990                                     u13170 38B6  
                                   u13090 37AC                                     u12291 A72A  
                                   u12451 6CD6                                     u12611 573E  
                                   u10851 079E                                     u10771 05D0  
                                   u10691 0372                                     u11571 1C62  
                                   u11491 1A5A                                     u11811 129E  
                                   u11731 1042                                     u11651 0E36  
                                   u12371 A2E8                                     u12531 909E  
                                   u13411 3BA2                                     u14107 3B7E  
                                   u13331 3A9C                                     u13251 398C  
                                   u13171 38B2                                     u14027 388E  
                                   u13091 37A8                                     u12380 9E90  
                                   u12460 6D14                                     u12700 58B4  
                                   u12620 5768                                     u10940 0B2C  
                                   u10860 07B6                                     u10780 060C  
                                   u11580 1CAA                                     u11900 625E  
                                   u11740 10A0                                     u11660 0E98  
                                   u12540 90D4                                     u13420 3BB8  
                                   u13340 3AAE                                     u13260 39DA  
                                   u13180 38C8                                     u13500 6686  
                                   u12381 9E8C                                     u12461 6D10  
                                   u12701 58B0                                     u12621 5764  
                                   u10941 0B28                                     u10861 07B2  
                                   u10781 0608                                     u11581 1CA6  
                                   u11901 625A                                     u11741 109C  
                                   u11661 0E94                                     u12541 90D0  
                                   u14117 3BD2                                     u13421 3BB4  
                                   u13341 3AAA                                     u13261 39D6  
                                   u14037 38EA                                     u13181 38C4  
                                   u13501 6682                                     u12390 9ACA  
                                   u12470 6D50                                     u12710 58DA  
                                   u12630 57AA                                     u10950 0B96  
                                   u10870 08A4                                     u10790 065A  
                                   u11590 1CD4                                     u11910 6278  
                                   u11830 130C                                     u11750 10DE  
                                   u11670 0ECC                                     u12550 90EC  
                                   u13430 3BC6                                     u13350 3AE2  
                                   u13270 39EE                                     u13190 38D6  
                                   u13510 66B2                                     u14207 A690  
                                   u12391 9AC6                                     u12471 6D4C  
                                   u12711 58D6                                     u12631 57A6  
                                   u10951 0B92                                     u10935 0AF2  
                                   u10871 08A0                                     u10791 0656  
                                   u11911 6274                                     u11831 1308  
                                   u11751 10DA                                     u12551 90E8  
                                   u14127 3C3E                                     u13431 3BC2  
                                   u13351 3ADE                                     u13271 39EA  
                                   u14047 3948                                     u13191 38D2  
                                   u13511 66AE                                     u12800 9398  
                                   u12480 6D8C                                     u12720 58F8  
                                   u12640 57CA                                     u10960 0BB8  
                                   u10880 08C6                                     u11920 62D2  
                                   u11840 1342                                     u11760 1138  
                                   u11680 0F18                                     u12560 90FE  
                                   u13440 3C10                                     u13360 3AF4  
                                   u13280 39FC                                     u13600 67FE  
                                   u13520 66D0                                     u14217 A104  
                                   u12801 9394                                     u12481 6D88  
                                   u12721 58F4                                     u12641 57C6  
                                   u10961 0BB4                                     u10881 08C2  
                                   u11921 62CE                                     u11841 133E  
                                   u11825 12C2                                     u11761 1134  
                                   u11681 0F14                                     u12561 90FA  
                                   u14137 3CAA                                     u13441 3C0C  
                                   u13361 3AF0                                     u13281 39F8  
                                   u14057 399C                                     u13601 67FA  
                                   u13521 66CC                                     u12810 93B6  
                                   u12490 6DCA                                     u12730 593E  
                                   u12650 57F0                                     u10970 0BEE  
                                   u10890 08EA                                     u11930 632E  
                                   u11850 1388                                     u11770 11B8  
                                   u11690 0F3A                                     u12570 9116  
                                   u13450 3C24                                     u13370 3B02  
                                   u13290 3A38                                     u13610 680C  
                                   u13530 66EC                                     u14227 A130  
                                   u12811 93B2                                     u12491 6DC6  
                                   u12731 593A                                     u12651 57EC  
                                   u14147 87FC                                     u10971 0BEA  
                                   u10891 08E6                                     u11595 1CC8  
                                   u11931 632A                                     u11851 1384  
                                   u11771 11B4                                     u11691 0F36  
                                   u11675 0EC2                                     u12571 9112  
                                   u13451 3C20                                     u13371 3AFE  
                                   u13291 3A34                                     u14067 3A10  
                                   u13611 6808                                     u13531 66E8  
                                   u12820 93CA                                     u12740 595E  
                                   u12660 5832                                     u11940 A1FC  
                                   u10980 0C28                                     u11860 1412  
                                   u12580 9124                                     u12900 94D4  
                                   u13460 3C32                                     u13380 3B50  
                                   u13620 6828                                     u13540 6720  
                                   u14237 A494                                     u12821 93C6  
                                   u12741 595A                                     u12661 582E  
                                   u14157 5780                                     u11941 A1F8  
                                   u10981 0C24                                     u11861 140E  
                                   u12581 9120                                     u12901 94D0  
                                   u13461 3C2E                                     u13381 3B4C  
                                   u14077 3A64                                     u13621 6824  
                                   u13541 671C                                     u12830 93F6  
                                   u12750 597C                                     u12670 5852  
                                   u12590 A5E8                                     u11950 A22A  
                                   u10990 0C5E                                     u11870 14F8  
                                   u11790 120E                                     u12910 94E6  
                                   u13470 3C7C                                     u13390 3B64  
                                   u13630 685E                                     u13550 673E  
                                   u14247 A49E                                     u12831 93F2  
                                   u12751 5978                                     u12671 584E  
                                   u14167 5808                                     u12591 A5E4  
                                   u11951 A226                                     u10991 0C5A  
                                   u11871 14F4                                     u11791 120A  
                                   u12911 94E2                                     u13471 3C78  
                                   u13391 3B60                                     u14087 3ABA  
                                   u13631 685A                                     u13551 673A  
                                   u12760 59C2                                     u12680 5878  
                                   u12840 81A4                                     u11960 A562  
                                   u11880 157A                                     u12920 9500  
                                   u13480 3C90                                     u13560 675A  
                                   u14257 A4AC                                     u12761 59BE  
                                   u14177 5914                                     u12681 5874  
                                   u12841 81A0                                     u11961 A55C  
                                   u11881 1576                                     u11785 11E8  
                                   u12921 94FC                                     u13481 3C8C  
                                   u14097 3B0E                                     u13561 6756  
                                   u12770 59E2                                     u12690 58A6  
                                   u12850 81C6                                     u11970 A564  
                                   u11890 6244                                     u12930 951A  
                                   u13490 3C9E                                     u13570 6798  
                                   u14267 A4B6                                     u12771 59DE  
                                   u14187 5998                                     u12691 58A2  
                                   u12851 81C2                                     u11891 6240  
                                   u12931 9516                                     u13491 3C9A  
                                   u13571 6794                                     u11980 5A74  
                                   u12780 5A00                                     u12860 8200  
                                   u12940 9530                                     u13580 67A6  
                                   u14277 A6A8                                     u14197 A686  
                                   u11981 5A6E                                     u12781 59FC  
                                   u12861 81FC                                     u12941 952C  
                                   u13581 67A2                                     u11990 5A76  
                                   u12790 5A32                                     u12870 8222  
                                   u12950 874A                                     u13590 67C2  
                                   u14287 A6B2                                     u12791 5A2E  
                                   u12871 821E                                     u12951 8746  
                                   u13591 67BE                                     u12880 824A  
                                   u12960 87AC                                     u12881 8246  
                                   u12961 87A8                                     u12890 827C  
                                   u12970 7D94                                     u12891 8278  
                                   u12971 7D90                                     u12980 8D1C  
                                   u12981 8D18                                     u12990 8C46  
                                   u12991 8C42                                     u13957 6696  
                                   u13967 6704                                     u13977 6774  
                                   u13987 67DA                                     u13997 6842  
                                   _U1RXB 003DE8                                     _OSCEN 0039DD  
                            vfpfcnvrt@fmt 0042                                     _PORTD 003FCD  
                                   _TRISA 003FC2                                     _TRISB 003FC3  
                                   _TRISC 003FC4                                     _TRISD 003FC5  
                                   _TRISE 003FC6                           __end_of_f_close A084  
                                   _FatFs 0139                           __end_of_chk_chr 9C00  
                                   _SDlog 012F             SD_SPI_SectorRead@sector_count 0034  
                                   _ExCvt FDB8                        __size_of_SPI1_Open 00E8  
                     ___lmul@multiplicand 0005                           __end_of_f_mount 8570  
                             ?_UART_Print 0001                               ?_UART_Start 0001  
                         __end_of_dir_sdi 5704                     _SD_SPI_AsyncReadTasks 4ECC  
                         __end_of_f_write 158C                        __size_of_UART_Page 001A  
                         __end_of_get_fat 4ECC                        __size_of_UART_Line 0010  
                ??_SD_SPI_AsyncWriteTasks 0024                   __size_of_Error_Settings 00DA  
                         __end_of_ld_word A4FA                                     _flags 0127  
                         __end_of_mem_cmp 95C6                           __end_of_mem_cpy 9FC4  
                         __end_of_mem_set A532                                     _drive 1BAB  
                                   _fputc 8A9E                             find_volume@br 008A  
                           find_volume@fs 00C2                                     _fputs A3FA  
                         __end_of_isdigit A56A                             find_volume@pt 00A4  
                  ?_UART_Check_Comm_Start 0001                                     atoi@n 0015  
                                   pad@fp 0011                                     atoi@s 0008  
                                   _width 0123                                     _putch A7D0  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                         __end_of_isspace A236                        Display_Character@i 0006  
                          disk_ioctl@buff 0002                                     pclath 003FFA  
                          disk_read@count 004F                                     tablat 003FF5  
                          disk_ioctl@pdrv 0006                                     plusw0 003FEB  
                                   plusw1 003FE3                                     plusw2 003FDB  
                          fp__SDSLOW_open 0000                           __end_of_put_fat 3752  
                                   status 003FD8                           __end_of_st_word A59E  
                         __end_of_sprintf A288                           __end_of_sync_fs 6670  
                           get_ldnumber@i 0007                  __size_of_SPI1_Initialize 001A  
                           disk_write@res 0057                               ?_SD_SendCmd 000C  
             __size_of_UART_Check_Command 0064                           __initialization A322  
                            __end_of_Menu 9658                       disk_initialize@pdrv 0056  
                     disk_initialize@stat 0057                              __end_of_atoi 7160  
                            __end_of_main A75C                              __end_of_dtoa 5D28  
             __size_of_Error_select_range 008E                                _Menu_Logic 3752  
            __size_of_UART_Message_Lenght 0014                                    ??_Menu 0060  
                                  ??_atoi 000A                                    ??_main 0060  
                                  ??_dtoa 0026                             __activetblptr 000003  
         ??_Continous_Transmission_Length 0060                              ?_SDSLOW_open 0001  
                           ??_Select_Page 0003                       __end_of_Error_Check 8F98  
                        _UART1_Initialize A3B2                    __size_of_Logging_Check 004A  
                 ??_Transmission_Settings 0060                   _SD_SPI_IsWriteProtected A7C8  
                                  ?_fputc 0001                                    ?_fputs 000A  
                           SD_SendCmd@cmd 001C                        __size_of_Auto_Boud 00DE  
                                  _ANSELA 003A40                                    ?_putch 0001  
                                  _ANSELB 003A50                                    _ANSELC 003A60  
                                  _ANSELD 003A70                                    _ANSELE 003A80  
                                  _RB1I2C 003A5A                                    _RB2I2C 003A5B  
                                  _RD0I2C 003A7A                               ?_Data_Write 0001  
                                  _U1CON0 003DF2                                    _U1CON1 003DF3  
                                  _RC3I2C 003A6A                                    _RD1I2C 003A7B  
                                  _RC4I2C 003A6B                       __size_of_UART1_Read 0016  
                                  _U1BRGH 003DF6                                    _U1BRGL 003DF5  
                 __size_of_Cursor_drawing 0088                        SD_SPI_SectorRead@i 003A  
                  Number_Select@longPress 0078                     __end_of_Number_Select 5A44  
                                  _RC3PPS 003A13                                    _RC5PPS 003A15  
                                  _ODCONA 003A42                                    _ODCONB 003A52  
                                  _ODCONC 003A62                                    _ODCOND 003A72  
                                  _ODCONE 003A82                                    _INLVLA 003A44  
                                  _INLVLB 003A54                                    _INLVLC 003A64  
                                  _INLVLD 003A74                                    _INLVLE 003A84  
                   __end_of_Number_Update 6E22                                    _OSCFRQ 0039DF  
         SD_SPI_AsyncWriteTasks@data_byte 013C                             _Cursor_delete 9B10  
                    __end_of_dir_register 8398                          __end_of_check_fs 7A22  
                     __size_of_SPI1_Close 0006                   ?_SD_SPI_MediaInitialize 0001  
            __size_of_UART_Command_Mapper 00C8                              ?_UART_Cursor 0001  
                    __size_of_create_name 04B8                  __size_of_disk_initialize 0054  
                             _Command_map FED3                __size_of_SPI1_ExchangeByte 0024  
                        __end_of_dir_find 6FC2                         __end_of_SPI1_Open 8658  
                        __end_of_dir_next 4A70                              ?_move_window 0070  
                    __end_of_create_chain 31E2                              vfprintf@cfmt 0056  
                       __end_of_UART_Page A6EE                         __end_of_UART_Line A780  
                        __end_of_ld_clust 9996                       __size_of_UART_Print 00C6  
                        __end_of_ld_dword 92A8                       __size_of_UART_Start 0096  
                                  ___lmul 9DC6                      __size_of_find_volume 0D4E  
                               ??___aldiv 0009                        __size_of_Save_Data 00F0  
                               ??___aodiv 0011                      __size_of_disk_status 007C  
                               ??___aomod 0011                                    ___wmul A602  
                               ??_dbc_2nd 0003                                 ??_dbc_1st 0003  
                               ??___lldiv 0009                                    _f_open 158C  
                                  _ioInfo 0100                                    _f_sync 621C  
                                  _length 0115                                    _memcpy A084  
                                  _memset 7160                                 ??_f_close 0060  
                          find_volume@fmt 00C1                                    clear_0 A34C  
                                  clear_1 A35E                            find_volume@rfs 007F  
                               ??_chk_chr 0005                            find_volume@vol 00AA  
                 SD_SendCmd@address_bytes 0016                           _numberDisplayed 0177  
                __size_of_Auto_Boud_Setup 00A6                                 ??_f_mount 0060  
                        ?_GLCD_Initialise 0001                                    pad@buf 0013  
                               ??_dir_sdi 0097                                 ??_f_write 00BC  
                               ??_get_fat 007C                 __size_of_Baud_rate_Change 0148  
                                  dtoa@fp 001C                                    _strcpy A36A  
                                  _strlen A138                                 ??_ld_word 0003  
    SD_SPI_DelayMilliseconds@milliseconds 0004              UART_Check_Comm_Start@message 0001  
                               ??_mem_cmp 0007                                 ??_mem_cpy 0007  
                                  fputc@c 0001                                 ??_mem_set 0007  
                        __end_of_validate 8192                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003        __size_of_SD_SPI_IsMediaInitialized 0018  
                  ?_SD_SPI_AsyncReadTasks 0022                          Save_Data@newLine 00F5  
                    __end_of_get_ldnumber 75F0                ?_SD_SPI_IsMediaInitialized 0001  
                         _Display_Message 9CE8                              __mediumconst FBDC  
                               ??_isspace 0003                           disk_read@sector 004B  
                     __size_of_SD_SendCmd 048C                                    tblptrh 003FF7  
                                  tblptrl 003FF6                                    tblptru 003FF8  
                        __end_of_st_clust A2D8                          __end_of_st_dword 9A1A  
                                  putch@c 0001           __size_of_SD_SPI_AsyncWriteTasks 069E  
                        __end_of_vfprintf 9E9A                                 ??_put_fat 0080  
                            ??_GLCD_Clear 0003                                 ??_st_word 0005  
                    _Maximum_Error_Select 8C4C                                 ??_sprintf 0060  
                    _Minimum_Error_Select 8B76                                 ??_sync_fs 0070  
                     __end_of_Select_Page A4BE        SD_SPI_AsyncWriteTasks@WriteTimeout 0119  
                UART1_Initialize@baudRate 0001                    Display_Message@message 0008  
                          ?_Cursor_delete 0001                         _SYSTEM_Initialize A790  
          __end_of_SD_SPI_MediaInitialize 2574                                __accesstop 0060  
                 __end_of__initialization A364                            get_ldnumber@tc 000B  
                          disk_write@buff 004C                            get_ldnumber@tp 000E  
                          get_ldnumber@tt 0009                            _SPI1_ReadBlock 000000  
                   __end_of_UART_Settings 96E6                            disk_write@pdrv 0056  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
              __end_of_Baud_Rate_Settings 89C6                             _Logging_Check A2D8  
                UART1_Initialize@autoBaud 0005                             __end_of_ExCvt FE38  
                          __pcstackCOMRAM 0001                              __pidataBANK1 A734  
                     ??_SYSTEM_Initialize 0001                        _SD_SPI_SectorWrite 7E0C  
                   __end_of_Settings_Menu 9774                               ?_Menu_Logic 0001  
                           __end_of_fputc 8B76                       UART_Check_Command@i 01CD  
                       __end_of_Auto_Boud 8736                      __size_of_follow_path 02BA  
                           __end_of_fputs A43E                         ??_SPI1_Initialize 0001  
                           __end_of_putch A7D2                        __end_of_GLCD_Clear 9B10  
                             _Error_Check 8ECC                       __size_of_Data_Write 0022  
                          _sdmmc_cmdtable FE38                     SPI1_ExchangeByte@data 0001  
                     ?_SD_SPI_SectorWrite 0031            __size_of_SD_SPI_IsMediaPresent 0004  
                      _spi1_configuration FEC4             __end_of_SD_SPI_IsMediaPresent A7D0  
               ??_SD_SPI_IsWriteProtected 0001                      __size_of_SDFAST_open 0008  
                      __size_of_dir_clear 0158                        __size_of_dir_alloc 016E  
                      __size_of_clst2sect 00D8                        __size_of_disk_read 0074  
                          _Error_Settings 8812         __end_of_SD_SPI_IsMediaInitialized A71E  
           SD_SPI_AsyncWriteTasks@command 013B                     ?_Maximum_Error_Select 0001  
                   ?_Minimum_Error_Select 0001                                   ??_fputc 0005  
                       __end_of_Save_Data 8488                 __end_of_SYSTEM_Initialize A79E  
                                 ??_fputs 000E                     __end_of_Command_Write A6BA  
                                 ??_putch 0001                                __pbssBANK1 0100  
              UART_Command_Mapper@message 00FF                  __size_of_Cursor_Position 0226  
                        _mediaInformation 01D3                      ??_SD_SPI_SectorWrite 0039  
                          _SPI1_WriteByte 000000                     __end_of_Toggle_Select 8812  
                          ?_Logging_Check 0001                 UART_Check_Command@message 01CC  
                  _SD_SPI_AsyncWriteTasks 2574                                   ?___lmul 0001  
                            ??_UART1_Read 0001                                   ?___wmul 0001  
                                 ?_f_open 00E8                    __end_of_sdmmc_cmdtable FE88  
                __size_of_UART_Clear_Line 0026                                   ?_f_sync 0078  
                       ??_disk_initialize 0054                                   ?_memcpy 0001  
                                 ?_memset 0001                              ?_sync_window 0058  
                          ___lmul@product 0009                   __end_of_Display_Message 9D5A  
                            ??_SPI1_Close 0001                                   ?_strcpy 0001  
                                 ?_strlen 0001                    __end_of_Error_Settings 88EC  
       SD_SPI_AsyncReadTasks@blockCounter 0135                                   _U1RXPPS 003AE5  
                               ?_check_fs 0076                               _Select_Page A47E  
                              _disk_ioctl A59E         __size_of_SD_SPI_DelayMilliseconds 0062  
                 ??_UART_Check_Comm_Start 0001                 ?_SD_SPI_DelayMilliseconds 0001  
                            ??_UART_Print 0060                              ??_UART_Start 0060  
                                 _OSCCON1 0039D9                                   _OSCCON3 0039DB  
                          follow_path@res 00E7                                _disk_write 9C00  
                      __size_of_vfpfcnvrt 0214                                   _SPI1CLK 003D1C  
                       ??_Auto_Boud_Setup 0009                      __size_of_SDSLOW_open 0008  
                                 _SPI1RXB 003D10                                   _SPI1TXB 003D11  
              SD_SPI_AsyncWriteTasks@info 0022                                   _OSCTUNE 0039DE  
                                 _SLRCONA 003A43                                   _SLRCONB 003A53  
                                 _SLRCONC 003A63                                   _SLRCOND 003A73  
                                 _SLRCONE 003A83                            remove_chain@fs 00AE  
                               ?_dir_find 00D2                                 ?_dir_next 00B4  
         SD_SPI_SectorRead@sector_address 002E                     __size_of_dir_register 00FA  
                         ??_Cursor_delete 0008                       SD_SPI_SectorWrite@i 003D  
                               ?_ld_clust 0008                            _Cursor_drawing 988A  
                               ?_ld_dword 0001                       _UART_Message_Lenght A75C  
                     __size_of_Menu_Logic 056C                        __end_of_UART1_Read A734  
                           _Character_map FBDD                             ?_remove_chain 0097  
                   __size_of_create_chain 05D0                             ?_UART_Message 0001  
             __size_of_SPI1_ExchangeBlock 0064                                   _CurrVol 013E  
                            ??_SD_SendCmd 0012                        __end_of_SPI1_Close A7C8  
                   _Baud_rate_Change$3996 007A                         __end_of_dir_clear 7B7A  
                       __end_of_dir_alloc 775E                                   __Hparam 0000  
                       __end_of_clst2sect 8A9E                                   __Lparam 0000  
                __end_of_UART1_Initialize A3FA                                 ?_validate 0005  
                     Number_Select@number 006E                         __end_of_disk_read 9CE8  
                    __size_of_UART_Cursor 0010                              _f_write$1263 00C8  
                                 ___aldiv 8192                                   ___aodiv 72F0  
                              f_close@res 0087                                   ___aomod 775E  
                      __end_of_UART_Print 9126                           __size_of___lmul 006A  
                               ?_st_clust 0005                        __end_of_UART_Start 9532  
                                 _dbc_2nd A79E                                   _dbc_1st A7A8  
                               ?_st_dword 0001                                   ___lldiv 93F8  
                         __size_of___wmul 002A                      __size_of_move_window 00D4  
                              _errorCheck 012B                                check_fs@fs 0076  
                               ?_vfprintf 0050                      ?_UART_Message_Lenght 0001  
                         __size_of_f_open 082A                           __size_of_f_sync 022A  
                                 _f_close A026                            GLCD_Clear@line 0004  
                   __size_of_get_ldnumber 0178                                   __pcinit A322  
                                 _chk_chr 9B8A                           __size_of_memcpy 005A  
                         __size_of_memset 0190                                   __ramtop 2000  
                                 _f_mount 8488                                   __ptext0 A748  
                                 __ptext1 A790                                   __ptext2 A6BA  
                                 __ptext3 92A8                                   __ptext4 A6EE  
                                 __ptext5 95C6                                   __ptext6 6670  
                                 __ptext7 A026                                   __ptext8 3752  
                                 __ptext9 949C                                   _dir_sdi 5322  
                        _Baud_rate_Change 7CC4                                   _f_write 0D4E  
                             validate@obj 0005                                   _get_fat 4A70  
                             validate@res 000F                               validate@rfs 0007  
                              chk_chr@chr 0003                              _dir_register 829E  
                              chk_chr@str 0001                           __size_of_strcpy 0048  
                         __size_of_strlen 0058                                   _ld_word A4BE  
                     _UART_Command_Mapper 8F98                                   _mem_cmp 9532  
                                 _mem_cpy 9F62                     _OSCILLATOR_Initialize A6EE  
                                 _mem_set A4FA                              __size_of_abs 0040  
                            __size_of_pad 00C6                           ?_Error_Settings 0001  
                                 _isdigit A532                                _messageStr 015F  
                              ??_check_fs 007C                           find_volume@mode 0081  
                         find_volume@path 007D                     SD_SPI_SectorRead@info 003C  
                        ___aldiv@dividend 0001                           find_volume@nrsv 00AC  
                    fp__SPI1_ExchangeByte 0000                           find_volume@stat 00B2  
                ??_PIN_MANAGER_Initialize 0001                                   _isspace A1E4  
                  ??_Maximum_Error_Select 0060                    ??_Minimum_Error_Select 0060  
                          UART_Print@line 00FF                    __end_of_Cursor_drawing 9912  
                            _create_chain 2C12                        __end_of_SD_SendCmd 4602  
                                 atoi@neg 000E                                ??_dir_find 00D4  
                                 _put_fat 31E2                                ??_dir_next 00B8  
                                 _st_word A56A                __size_of_SYSTEM_Initialize 000E  
                                 _sprintf A236            __size_of_Transmission_Settings 014A  
                              ??_ld_clust 000C                                   _sync_fs 6446  
                              ??_ld_dword 0005             __end_of_Transmission_Settings 7CC4  
                            ??_Data_Write 0001                      end_of_initialization A364  
                    Display_Character@dat 0004                                f_open@clst 0198  
                              f_open@mode 00EC                                f_open@path 00EA  
                          ??_remove_chain 00A1                            ??_UART_Message 00FA  
                                 memcpy@d 0007                                   memcpy@n 0005  
                                 memcpy@s 0009                                   fputc@fp 0003  
                                 memset@c 0003                                   memset@k 0009  
                                 memset@n 0005                                   memset@s 000B  
                                 fputs@fp 000C                           ??_Logging_Check 0060  
              __end_of_UART_Check_Command 9EFE                         __end_of_spiMaster FEC4  
                         disk_status@pdrv 0003                      ?_UART_Command_Mapper 0001  
                         disk_status@stat 0004                           ___lldiv@divisor 0005  
                              f_mount@cfs 00CC                                f_mount@res 00C9  
                              f_mount@opt 00C8                                f_mount@vol 00CE  
                   Error_Check@messageInt 001C                __end_of_Error_select_range 9802  
                         ___lldiv@counter 000D                              _get_ldnumber 7478  
                              ??_validate 0009                         __end_of_vfpfcnvrt 6AAA  
                       ??_Cursor_Position 01D1                                 _SPI1TCNTL 003D12  
                        ___aldiv@quotient 000B                                   postdec1 003FE5  
                                 postdec2 003FDD                                   postinc0 003FEE  
                                 postinc1 003FE6                                   postinc2 003FDE  
                              ??_st_clust 000D                            move_window@res 005F  
                   ??_UART_Message_Lenght 0001                                ??_st_dword 0007  
                              ??_vfprintf 0056                                 _SPI1_Open 8570  
                              dir_clear@n 007E                                dir_alloc@n 00DB  
                                 strcpy@d 0007                                   strlen@a 0003  
                                 strcpy@s 0005                                   strlen@s 0001  
                        remove_chain@clst 0099                                 _UART_Page A6D4  
                               _UART_Line A770                                dir_find@dp 00D2  
                              dir_find@fs 00D6                          ?_Display_Message 0008  
                 ??_SD_SPI_AsyncReadTasks 0024                                 _PORTAbits 003FCA  
                               _PORTBbits 003FCB                        __end_of_Data_Write A698  
                         _create_name$811 0011                           _create_name$816 0013  
        SD_SPI_SectorWrite@sector_address 0031                                dir_sdi@csz 00A5  
                              dir_sdi@ofs 0093                                dir_next@dp 00B4  
            SD_SPI_MediaInitialize@c_size 0049                                dir_next@fs 00CC  
                       ??_UART_Clear_Line 000F                               ?_disk_ioctl 0001  
      SD_SPI_AsyncWriteTasks@blockCounter 0133                                f_write@btw 00B8  
                              f_write@res 00CC               ??_SD_SPI_IsMediaInitialized 0001  
                             ?_disk_write 004C                                 _TRISCbits 003FC4  
                         ?_Cursor_drawing 0001                                get_fat@obj 0076  
                              get_fat@val 0087                           get_ldnumber@vol 000C  
                         disk_write@count 0052                    SPI1_ExchangeBlock@data 0005  
                           ??_create_name 000D                                ld_clust@cl 0010  
                              ld_clust@fs 0008                     ??_UART_Command_Mapper 01CA  
                         _SPI1_Initialize A6BA                             ??_find_volume 0082  
                              ld_dword@rv 000A                             ??_disk_status 0001  
      Transmission_Settings@SDloggingChar 006B                              ??_Menu_Logic 01CF  
                              ?_SPI1_Open 0001                            __end_of___lmul 9E30  
                             vfpfcnvrt@ap 0044                               st_clust@dir 0007  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul A62C                                ?_UART_Page 0001  
                            ?_Error_Check 0001                                ?_UART_Line 0001  
                          __end_of_f_open 1DB6                          Number_Select@max 0072  
                 Auto_Boud_Setup@syncChar 0009                            __end_of_f_sync 6446  
                  __size_of_Number_Select 0340                            __end_of_memcpy A0DE  
                  ?_OSCILLATOR_Initialize 0001                    __size_of_Number_Update 01B2  
                          __end_of_memset 72F0                        _Baud_Rate_Settings 88EC  
                              ld_word@ptr 0001                                 _Auto_Boud 8658  
                    __size_of_sync_window 01C6                            __end_of_strcpy A3B2  
                          __end_of_strlen A190                       start_initialization A322  
                             st_dword@val 0003                               st_dword@ptr 0001  
                           fp__SPI1_Close 0000           __size_of_PIN_MANAGER_Initialize 00AA  
                             __end_of_abs A47E                               __end_of_pad 91EC  
                     ?_Baud_Rate_Settings 0001                  __size_of_GLCD_Initialise 005A  
                              mem_cmp@cnt 0005                                mem_cmp@dst 0001  
                              mem_cmp@src 0003                                mem_cpy@cnt 0005  
                             put_fat@clst 0078                                mem_cpy@dst 0001  
                              mem_cpy@src 0003                        __end_of_Menu_Logic 3CBE  
                               _Save_Data 8398                           _disk_initialize A190  
                 ?_SD_SPI_AsyncWriteTasks 0022                                mem_set@cnt 0005  
                              mem_set@dst 0001                                mem_set@val 0003  
               _SD_SPI_IsMediaInitialized A706                             ??_follow_path 00DE  
                     __size_of_disk_ioctl 0032                         Select_Page@select 0001  
                     __end_of_create_name 4176                               vfprintf@fmt 0052  
                    ??_Baud_Rate_Settings 0060                       __size_of_disk_write 0074  
        __end_of_SD_SPI_DelayMilliseconds A026                                  ??___lmul 0009  
                        Auto_Boud_Setup@i 000A                                  ??___wmul 0005  
                                ??_f_open 00ED                                  ??_f_sync 0060  
                             __pdataBANK1 01D3                           _Auto_Boud_Setup 9352  
                     __end_of_find_volume 0D4E                       __end_of_disk_status 9A96  
                                ??_memcpy 0007                                  ??_memset 0007  
                        Command_Write@cmd 0001                             ??_SDFAST_open 0003  
                      SD_SendCmd@response 001D                                memset@dest 0001  
                    __end_of_remove_chain 621C                      __end_of_UART_Message 988A  
                                ??_strcpy 0005                                  ??_strlen 0003  
                              ?_Auto_Boud 0001                    __size_of_UART_Settings 008E  
                             __pbssBIGRAM 1BAB                              ?_Select_Page 0001  
                           _SPI1_ReadByte 000000            SD_SPI_AsyncWriteTasks@response 0028  
                           __pcstackBANK0 0060                             __pcstackBANK1 0182  
                        ___aodiv@dividend 0001                     _SD_SPI_IsMediaPresent A7CC  
                       _SD_SPI_SectorRead 7F3C            __size_of_UART_Check_Comm_Start 0032  
                       __size_of_check_fs 0160             __end_of_UART_Check_Comm_Start A602  
                 __end_of_SPI1_Initialize A6D4                              check_fs@sect 0078  
                      ?_SD_SPI_SectorRead 002E                           _SPI1_WriteBlock 000000  
                       __size_of_dir_find 01A0                    __size_of_Settings_Menu 008E  
                       __size_of_dir_next 046E                             _Number_Select 5704  
          __end_of_SD_SPI_AsyncWriteTasks 2C12                         __size_of_ld_clust 0084  
                           _Number_Update 6C70                         __size_of_ld_dword 00BC  
                              ?_Save_Data 0001                  __end_of_Baud_rate_Change 7E0C  
                     Display_Message@data 000C       Transmission_Settings@ContinuousChar 006A  
             __size_of_SD_SPI_SectorWrite 0130                                 _atoi$3402 0010  
                               _atoi$3403 0014                                 _atoi$3404 0012  
                        GLCD_Clear@cursor 0003                       ??_SD_SPI_SectorRead 0036  
         SD_SPI_DelayMilliseconds@timeout 0002                           _find_volume$947 009A  
                         _find_volume$948 009E                    _PIN_MANAGER_Initialize 92A8  
                           UART_Page@page 0004                                 _dtoa$3507 002E  
                       ?_UART1_Initialize 0001                             __pmediumconst FBDC  
                                ?___aldiv 0001                                  ?___aodiv 0001  
                           UART_Line@line 0002                                  ?___aomod 0001  
                               __ptext100 5704                                 __ptext101 6C70  
                               __ptext110 A7D0                                 __ptext102 88EC  
                        ___aodiv@quotient 0013                                 __ptext111 A43E  
                               __ptext103 A236                                 __ptext120 A71E  
                               __ptext112 775E                                 __ptext104 9E30  
                               __ptext121 A3B2                                 __ptext113 72F0  
                               __ptext105 6896                                 __ptext122 9B10  
                               __ptext114 988A                                 __ptext106 5A44  
                               __ptext123 9D5A                                 __ptext115 8658  
                               __ptext107 9126                                 __ptext124 A676  
                               __ptext116 9A96                                 __ptext108 A3FA  
                               __ptext125 A0DE                                 __ptext117 9CE8  
                               __ptext109 8A9E                                 __ptext126 A47E  
                               __ptext118 A138                                 __ptext127 A698  
                               __ptext119 9352                                 __ptext128 0000  
                               _dir_clear 7A22                                  ?_dbc_2nd 0001  
                               _dir_alloc 75F0                                  ?_dbc_1st 0001  
                                ?___lldiv 0001                         __size_of_validate 0126  
                               _clst2sect 89C6                        ??_UART1_Initialize 0007  
                             ??_SPI1_Open 0001                          ??_Error_Settings 0060  
                ?_SD_SPI_IsWriteProtected 0001                    __size_of_Command_Write 0022  
                             ??_UART_Page 0003                                  ?_f_close 0083  
                             ??_UART_Line 0002                                 _disk_read 9C74  
                                ?_chk_chr 0001                                 _commStart 0131  
                           follow_path@dp 00DA                             follow_path@fs 00E4  
                           follow_path@ns 00E6                         __size_of_st_clust 0050  
                     __end_of_follow_path 5FE2                                  ?_f_mount 00C4  
                       __size_of_st_dword 0084                                  ?_dir_sdi 0091  
                                ?_f_write 00B4                         __size_of_vfprintf 006A  
                                ?_get_fat 0076                       UART_Cursor@position 0002  
                           UART_Message@i 01C7                             ??_SDSLOW_open 0003  
                                ?_ld_word 0001                                  ?_mem_cmp 0001  
                                ?_mem_cpy 0001                                  ?_mem_set 0001  
               __end_of_SD_SPI_SectorRead 806C                                  ?_isdigit 0001  
                  __size_of_Toggle_Select 00DC                                  ?_isspace 0001  
                     __end_of_SDFAST_open A7BA                  ??_SD_SPI_MediaInitialize 0022  
                               f_close@fp 0083                                 f_close@fs 0085  
                                ?_put_fat 0076                                  ?_st_word 0001  
                 __end_of_disk_initialize A1E4                                  ?_sprintf 0058  
                          __size_of_fputc 00D8                            __size_of_fputs 0044  
                                ?_sync_fs 005B                               _get_fat$427 0085  
                               _menu_page 01E5                            __size_of_putch 0002  
                       find_volume@fasize 00B7                            ?_Number_Select 006E  
SD_SPI_AsyncWriteTasks@preEraseBlockCount 002D                           _Cursor_Position 6670  
                   __end_of_Cursor_delete 9B8A                __end_of_SPI1_ExchangeBlock 9F62  
   __end_of_Continous_Transmission_Length 8DF8    __size_of_Continous_Transmission_Length 00D6  
           _Continous_Transmission_Length 8D22                            ?_Number_Update 006A  
                         ___aldiv@divisor 0005                   SD_SPI_SectorRead@buffer 0032  
                         ___aldiv@counter 0009                               _create_name 3CBE  
                          ___wmul@product 0005                                  _LATAbits 003FBA  
                       ??_GLCD_Initialise 0003                         find_volume@szbfat 00A0  
                               f_open@bcs 018C                                 f_open@ofs 0194  
                           ??_UART_Cursor 0002                                 f_open@res 019E  
                       find_volume@sysect 00A6                             _UART_Settings 9658  
                 SD_SPI_SectorRead@result 0038                   SD_SPI_SectorRead@status 0039  
          SD_SPI_SectorWrite@sector_count 0037                              _SPI1CON0bits 003D14  
                 __end_of_Auto_Boud_Setup 93F8                               _find_volume 0000  
                             _disk_status 9A1A                             ??_move_window 005B  
                               f_mount@fs 00C4                                 f_mount@rp 00CA  
                         follow_path@path 00DC                                  _PIR2bits 0039A2  
                                _SPI1BAUD 003D19                                  _PIR3bits 0039A3  
                                _SPI1CON0 003D14                                  _SPI1CON1 003D15  
                                _SPI1CON2 003D16             SD_SPI_AsyncReadTasks@response 0028  
                               _spiMaster FE88                             move_window@fs 0070  
                         _UART_Clear_Line A62C                                ?_dir_clear 0070  
                               dir_find@c 00D8                                ?_dir_alloc 00D2  
                         remove_chain@obj 0097                           remove_chain@res 00AD  
                         remove_chain@nxt 00A9                                ?_clst2sect 000D  
                               f_sync@dir 007F                                 f_sync@res 007E  
                               dir_sdi@dp 0091                                 dir_sdi@fs 00AD  
                           _Settings_Menu 96E6                                ?_disk_read 0049  
                               _vfpfcnvrt 6896                                 f_write@cc 00D1  
                      _UART_Check_Command 9E9A                                 f_write@bw 00BA  
                               f_write@fp 00B4                                 f_write@fs 00DD  
             SD_SPI_MediaInitialize@count 0048               SD_SPI_MediaInitialize@index 0046  
                               get_fat@bc 008D                                 get_fat@fs 008F  
                               get_fat@wc 008B                  _SD_SPI_DelayMilliseconds 9FC4  
                        ??_Cursor_drawing 0008                         ___wmul@multiplier 0001  
                             ??_Auto_Boud 000F            __size_of_SD_SPI_AsyncReadTasks 0456  
                      _Error_select_range 9774             __end_of_SD_SPI_AsyncReadTasks 5322  
                    __size_of_Error_Check 00CC                              ??_disk_ioctl 0004  
                  ?_SD_SPI_IsMediaPresent 0001                       ?_UART_Check_Command 0001  
                            ??_disk_write 0054                         Toggle_Select@Char 006F  
                  Display_Character@ASCII 0005                              _isspace$3420 0007  
                       Toggle_Select@line 006C                       ?_Error_select_range 0001  
                              st_clust@cl 0009             __size_of_Maximum_Error_Select 00D6  
                              st_clust@fs 0005                          ?_SPI1_Initialize 0001  
           __size_of_Minimum_Error_Select 00D6                         ___lmul@multiplier 0001  
                     __end_of_SDSLOW_open A7C2                                 copy_data0 A336  
                               ld_word@rv 0006                            _baudRateSelect 017E  
                           _Command_Write A698                       Number_Update@number 006A  
                       SD_SendCmd@address 000C                     _Transmission_Settings 7B7A  
                             ??_Save_Data 0060                            ?_UART_Settings 0001  
                              put_fat@res 0096                                put_fat@val 007C  
                       move_window@sector 0072               __end_of_UART_Message_Lenght A770  
                         dir_next@stretch 00B6                     __end_of_Logging_Check A322  
                           _Toggle_Select 8736                      ??_UART_Check_Command 0060  
                                __Hrparam 0000                              _savedMessage 016B  
                               memcpy@tmp 000B           __end_of_SD_SPI_IsWriteProtected A7CC  
                              vfprintf@ap 0054                                  __Lrparam 0000  
                              vfprintf@fp 0050                               _follow_path 5D28  
                      __end_of_disk_ioctl A5D0                      ??_Error_select_range 000F  
                   __size_of_remove_chain 023A                     __size_of_UART_Message 0088  
                      __end_of_disk_write 9C74                         SD_SendCmd@timeout 001A  
                          ?_Settings_Menu 0001                   ??_OSCILLATOR_Initialize 0001  
                     __end_of_UART_Cursor A790                                st_word@val 0003  
                              st_word@ptr 0001                          __size_of___aldiv 010C  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of_dbc_2nd 000A                          __size_of_dbc_1st 000A  
                        __size_of___lldiv 00A4                                ?_vfpfcnvrt 0040  
                     __end_of_move_window 8ECC                               _SDFAST_open A7B2  
                         ___aodiv@divisor 0009                          __size_of_f_close 005E  
                        __size_of_chk_chr 0076                           ___aodiv@counter 0011  
                        __size_of_f_mount 00E8                          __size_of_dir_sdi 03E2  
                        __size_of_f_write 083E                                  _baudRate 01DC  
                        __size_of_get_fat 045C                                  dbc_2nd@c 0003  
              __size_of_SD_SPI_SectorRead 0130                                sprintf@fmt 005A  
                                dbc_1st@c 0003               _SD_SPI_MediaInitialize$3995 0041  
                        __size_of_ld_word 003C                                  _check_fs 78C2  
                   SD_SendCmd@longTimeout 0012                          __size_of_mem_cmp 0094  
                        __size_of_mem_cpy 0062                          __size_of_mem_set 0038  
                 __end_of_Cursor_Position 6896                          __size_of_isdigit 0038  
                         dir_register@res 00E2                             dir_clear@ibuf 0076  
                           dir_clear@clst 0072                  __size_of_Display_Message 0072  
                        __size_of_isspace 0052                             dir_clear@sect 0078  
                    __size_of_Select_Page 0040           __size_of_SD_SPI_MediaInitialize 07BE  
                                __ptext10 9060                                  __ptext11 9E9A  
                                __ptext20 621C                                  __ptext12 8F98  
                                __ptext21 806C                                  __ptext13 A6D4  
                                __ptext30 3CBE                                  __ptext22 6446  
                                __ptext14 A75C                                  __ptext31 A79E  
                                __ptext23 A59E                                  __ptext15 9802  
                                __ptext40 A4FA                                  __ptext32 A7A8  
                                __ptext24 158C                                  __ptext16 A2D8  
                                __ptext41 89C6                                  __ptext33 9B8A  
                                __ptext25 A288                                  __ptext17 A36A  
                                __ptext50 7478                                  __ptext42 2C12  
                                __ptext34 829E                                  __ptext26 5FE2  
                                __ptext18 8398                                  __ptext51 9A1A  
                                __ptext43 31E2                                  __ptext35 9F62  
                                __ptext27 5D28                                  __ptext19 0D4E  
                                __ptext60 8DF8                                  __ptext52 A7C8  
                                __ptext44 A56A                                  __ptext36 75F0  
                                __ptext28 9912                                  __ptext61 6AAA  
                                __ptext53 A7CC                                  __ptext45 9996  
                                __ptext37 5322                                  __ptext29 6E22  
                                __ptext70 9EFE                                  __ptext62 9C00  
                                __ptext54 A706                                  __ptext46 4A70  
                                __ptext38 4602                                  __ptext71 4176  
                                __ptext63 7E0C                                  __ptext55 A190  
                                __ptext47 8488                                  __ptext39 7A22  
                                __ptext80 8ECC                                  __ptext72 A084  
                                __ptext64 2574                                  __ptext56 1DB6  
                                __ptext48 0000                                  __ptext81 6FC2  
                                __ptext73 A652                                  __ptext65 9C74  
                                __ptext57 9DC6                                  __ptext49 91EC  
                                __ptext90 7B7A                                  __ptext82 A1E4  
                                __ptext74 A7B2                                  __ptext66 7F3C  
                                __ptext58 9FC4                                  __ptext91 8736  
                                __ptext83 A532                                  __ptext75 A7BA  
                                __ptext67 A7C2                                  __ptext59 78C2  
                                __ptext92 96E6                                  __ptext84 A602  
                                __ptext76 8570                                  __ptext68 4ECC  
                                _dir_find 6E22                                  __ptext93 8B76  
                                __ptext85 A770                                  __ptext77 9532  
                                __ptext69 7160                                  __ptext94 8C4C  
                                __ptext86 A780                                  __ptext78 A4BE  
                                __ptext95 9774                                  __ptext87 A62C  
                                __ptext79 93F8                                  __ptext96 8812  
                                __ptext88 A5D0                                  __ptext97 8D22  
                                __ptext89 9658                                  __ptext98 7CC4  
                                __ptext99 8192                           ??_Number_Select 0076  
                                _dir_next 4602               __end_of_UART_Command_Mapper 9060  
                              _GLCD_Clear 9A96                             dir_alloc@nent 00D4  
                        ?_disk_initialize 0001                           ??_Number_Update 0060  
                          ?_Command_Write 0001                                  _ld_clust 9912  
                        __size_of_put_fat 0570                              _validate$979 000D  
                                _ld_dword 91EC                            sync_window@res 005A  
                        __size_of_st_word 0034                                  _autoBaud 0129  
                        __size_of_sprintf 0052                               _menu_select 01E3  
                        __size_of_sync_fs 022A                                strcpy@dest 0001  
                           __size_of_Menu 0092                                  _errorMax 0111  
                                _errorMin 010D                             __size_of_atoi 019E  
                           __size_of_main 0014                             __size_of_dtoa 02E4  
                              sync_fs@res 005D                              _remove_chain 5FE2  
                            _UART_Message 9802                   __end_of_UART_Clear_Line A652  
                        find_volume@bsect 00BB                          find_volume@nclst 00B3  
                          ?_Toggle_Select 006A                     fp__SPI1_ExchangeBlock 0000  
 SD_SPI_AsyncReadTasks@longTimeoutCounter 011D                          find_volume@tsect 00AE  
                                f_open@dj 019F                                  f_open@cl 0190  
                                f_open@fp 00E8                                  f_open@fs 019C  
                                f_open@dw 0182                                  f_open@sc 0186  
            Error_Settings@errorcheckChar 006A            ?_Continous_Transmission_Length 0001  
                        ?_Auto_Boud_Setup 0007                                  _validate 806C  
                       _Display_Character 9D5A                                  f_sync@fp 0078  
                                f_sync@fs 0081                               ??_dir_clear 005B  
                             ??_dir_alloc 00D6                                  _st_clust A288  
                                _st_dword 9996                        ?_Display_Character 0001  
                             ??_clst2sect 0013                                  _vfprintf 9E30  
                           ??_sync_window 0060                               ??_disk_read 0051  
             SPI1_ExchangeBlock@blockSize 0003                          ___aomod@dividend 0001  
                     ??_Display_Character 0002                               _SDSLOW_open A7BA  
                                mem_cmp@d 0009                                  mem_cmp@r 000D  
                                mem_cmp@s 000B                                 put_fat@bc 0094  
                                mem_cpy@d 0007                                 put_fat@fs 0076  
                                mem_cpy@s 0009                                  mem_set@d 0007  
                                memcpy@d1 0001                                  memcpy@s1 0003  
                                isdigit@c 0001                             clst2sect@clst 000F  
                   __end_of_Character_map FDB8                                 sprintf@ap 0062  
                  ?_Transmission_Settings 0001                           ??_UART_Settings 000F  
          Baud_Rate_Settings@autoBaudChar 006A                            dir_register@dp 00DE  
                          dir_register@fs 00E0                              dir_clear@szb 007C  
                                isspace@c 0001                          ___lldiv@dividend 0001  
                 ?_PIN_MANAGER_Initialize 0001                              dir_alloc@res 00DD  
                           sync_window@fs 0058      SD_SPI_AsyncReadTasks@SingleBlockRead 013D  
                       ?_Baud_rate_Change 0001                               f_mount@path 00C6  
                               strcpy@src 0003                 __end_of_Display_Character 9DC6  
                               sync_fs@fs 005B                               _UART_Cursor A780  
                      ??_Baud_rate_Change 0060                               _move_window 8DF8  
                  _SD_SPI_MediaInitialize 1DB6                           ??_Settings_Menu 000F  
             __size_of_Baud_Rate_Settings 00DA                                _SPI1SCKPPS 003ADE  
                              _SPI1SDIPPS 003ADF                                _UART1_Read A71E  
                         ___aomod@divisor 0009                               ??_vfpfcnvrt 0046  
                         ___aomod@counter 0011                                  put_fat@p 0092  
                              _SPI1_Close A7C2         SD_SPI_MediaInitialize@c_size_mult 0045  
                           ?_dir_register 00DE           SD_SPI_MediaInitialize@block_len 0047  
                                sprintf@f 0064                                  sprintf@s 0058  
                             dir_clear@fs 0070                               dir_alloc@dp 00D2  
                             dir_alloc@fs 00D9                          ___lldiv@quotient 0009  
                     __end_of_sync_window 6C70                               dir_find@res 00D9  
                       remove_chain@pclst 009D                 __size_of_UART1_Initialize 0048  
                        ?_Cursor_Position 0001                                _UART_Print 9060  
                            ___aldiv@sign 000A                     Save_Data@actualLength 00F8  
                         _GLCD_Initialise A0DE                                _UART_Start 949C  
                           ?_create_chain 0097                           ??_Command_Write 0001  
                            dir_next@clst 00CE                               ?_GLCD_Clear 0001  
        __size_of_SD_SPI_IsWriteProtected 0004                    _ContinuousTransmission 012D  
                             clst2sect@fs 000D                              ___aodiv@sign 0012  
                             dir_sdi@clst 00A9                __end_of_SD_SPI_SectorWrite 7F3C  
          __end_of_PIN_MANAGER_Initialize 9352                             Data_Write@dat 0001  
                   _UART_Check_Comm_Start A5D0                              ?_create_name 0009  
                         ??_Toggle_Select 006D                               dir_next@ofs 00C8  
                       ??_Display_Message 000A                              f_write@csect 00CF  
                        ?_UART_Clear_Line 0001                              f_write@wbuff 00CD  
                             f_write@buff 00B6                               f_write@clst 00D7  
                              _SD_SendCmd 4176                              ___aomod@sign 0012  
                             f_write@sect 00D3                              ?_find_volume 007D  
                             f_write@wcnt 00DB                             ?_get_ldnumber 0001  
                SD_SPI_SectorWrite@buffer 0035                              ?_disk_status 0001  
                             _put_fat$456 008E                               _put_fat$457 0090  
              __end_of_spi1_configuration FED3                ??_SD_SPI_DelayMilliseconds 0002  
                  SD_SPI_SectorWrite@info 003F  
